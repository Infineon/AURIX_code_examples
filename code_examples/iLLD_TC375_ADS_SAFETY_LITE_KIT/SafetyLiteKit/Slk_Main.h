/**********************************************************************************************************************
 * \file Slk_Main.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef SAFETYLITEKIT_SLK_MAIN_H_
#define SAFETYLITEKIT_SLK_MAIN_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "SafetyLiteKit/Analog_Acquisition/Slk_AA_Global.h"
#include "SafetyLiteKit/Avoid_Detect_CCF/Slk_DieTemp.h"
#include "SafetyLiteKit/Digital_Acquisition_Actuation/Slk_DA_Global.h"
#include "SafetyLiteKit/Safe_Computation/Cpu/Slk_CPU_Trap_Recognition.h"
#include "SafetyLiteKit/Smu/SMU.h"
#include "SafetyLiteKit/Sw_StartUp/Slk_Ssw.h"
#include "Ifx_types.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
typedef struct
{
    boolean             goToStandbyMode;
    boolean             triggerStmAlarm;
    boolean             triggerSwReset;
    SlkResetType        swResetResetType;
    boolean             stopCpuWatchdogService;
    boolean             stopSafetyWatchdogService;
    boolean             triggerSmuAlarm;
    uint8               triggerSmuAlarmGroup;
    uint8               triggerSmuAlarmNumber;
} SlkRunTaskType;

 /* status of safety lite Kit */
typedef struct
 {
    SswStatusType           sswStatus;
    SlkResetCode            resetCode;
    boolean                 wakeupFromStandby;
    SmuExecutionStatusType  smuStatus;
    boolean                 unlockConfig;
    SmuAlarmPendingType     smuAlarmPending;
    SlkRunTaskType          slkRunTask;
    SmuStatusType           regMonitorTestAllFB;
    boolean                 slkInitDone;
    DieTempStatusType       dieTempStatus;
    float32                 timeDiffQspiClockPlaus;
    boolean                 portLoopbackAlarmOnOff;
    boolean                 portRedundancyAlarmOnOff;
    SlkAnalogAcquisitionMode  analogAcqFucSelect;
    SlkDigitalAcqActFucSelection digitalAcqActFucSelect;
    provokeTraps             provokeTrapsSelect;
 } SlkStatus;

 IFX_EXTERN SlkStatus  g_SlkStatus;        /* global variable for safety lit kit status */

/* Application information */
typedef struct
{
        uint32 TickCount_1ms;           /* TickCount 1ms */
} App_Cpu;

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void initSafetyLiteKit(void);
void runSlkStmIsr(IfxCpu_ResourceCpu cpuIndex, App_Cpu *lcl_AppCpu);
void initCpuSafety(void);
void initAnalogAcquisition(void);
void initDigitalAcquistionActuation(void);

#endif /* SAFETYLITEKIT_SLK_MAIN_H_ */
