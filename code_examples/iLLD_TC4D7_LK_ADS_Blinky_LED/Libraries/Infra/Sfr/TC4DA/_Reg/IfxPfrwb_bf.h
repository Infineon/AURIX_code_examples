/**
 * \file IfxPfrwb_bf.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_NVM_PFRWB/V0.2.2.1.2
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Pfrwb_Registers_BitfieldsMask Bitfields mask and offset
 * \ingroup IfxSfr_Pfrwb_Registers
 * 
 */
#ifndef IFXPFRWB_BF_H
#define IFXPFRWB_BF_H 1

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Pfrwb_Registers_BitfieldsMask
 * \{  */
/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.MARSEL */
#define IFX_PFRWB_UR_FLASHCON2_MARSEL_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.MARSEL */
#define IFX_PFRWB_UR_FLASHCON2_MARSEL_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.MARSEL */
#define IFX_PFRWB_UR_FLASHCON2_MARSEL_OFF (0u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.HMAR */
#define IFX_PFRWB_UR_FLASHCON2_HMAR_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.HMAR */
#define IFX_PFRWB_UR_FLASHCON2_HMAR_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.HMAR */
#define IFX_PFRWB_UR_FLASHCON2_HMAR_OFF (2u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.ECCCORDIS */
#define IFX_PFRWB_UR_FLASHCON2_ECCCORDIS_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.ECCCORDIS */
#define IFX_PFRWB_UR_FLASHCON2_ECCCORDIS_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.ECCCORDIS */
#define IFX_PFRWB_UR_FLASHCON2_ECCCORDIS_OFF (8u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.MASKUECC */
#define IFX_PFRWB_UR_FLASHCON2_MASKUECC_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.MASKUECC */
#define IFX_PFRWB_UR_FLASHCON2_MASKUECC_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.MASKUECC */
#define IFX_PFRWB_UR_FLASHCON2_MASKUECC_OFF (10u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.TDISUDATA */
#define IFX_PFRWB_UR_FLASHCON2_TDISUDATA_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.TDISUDATA */
#define IFX_PFRWB_UR_FLASHCON2_TDISUDATA_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.TDISUDATA */
#define IFX_PFRWB_UR_FLASHCON2_TDISUDATA_OFF (12u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.RECDIS */
#define IFX_PFRWB_UR_FLASHCON2_RECDIS_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.RECDIS */
#define IFX_PFRWB_UR_FLASHCON2_RECDIS_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.RECDIS */
#define IFX_PFRWB_UR_FLASHCON2_RECDIS_OFF (16u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.ECCSCLR */
#define IFX_PFRWB_UR_FLASHCON2_ECCSCLR_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.ECCSCLR */
#define IFX_PFRWB_UR_FLASHCON2_ECCSCLR_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.ECCSCLR */
#define IFX_PFRWB_UR_FLASHCON2_ECCSCLR_OFF (24u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.SBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_SBABCLR_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.SBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_SBABCLR_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.SBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_SBABCLR_OFF (26u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.DBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_DBABCLR_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.DBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_DBABCLR_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.DBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_DBABCLR_OFF (28u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON2_Bits.UBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_UBABCLR_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON2_Bits.UBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_UBABCLR_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON2_Bits.UBABCLR */
#define IFX_PFRWB_UR_FLASHCON2_UBABCLR_OFF (30u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.ECCERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_ECCERRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.ECCERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_ECCERRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.ECCERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_ECCERRINJ_OFF (0u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.EDCERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_EDCERRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.EDCERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_EDCERRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.EDCERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_EDCERRINJ_OFF (1u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.SBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_SBABERRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.SBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_SBABERRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.SBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_SBABERRINJ_OFF (2u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.DBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_DBABERRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.DBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_DBABERRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.DBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_DBABERRINJ_OFF (3u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.UBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_UBABERRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.UBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_UBABERRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.UBABERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_UBABERRINJ_OFF (4u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.SBERERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_SBERERRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.SBERERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_SBERERRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.SBERERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_SBERERRINJ_OFF (5u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.DBERERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_DBERERRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.DBERERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_DBERERRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.DBERERRINJ */
#define IFX_PFRWB_UR_FLASHCON3_DBERERRINJ_OFF (6u)

/** \brief Length for Ifx_PFRWB_UR_FLASHCON3_Bits.MISRERRRINJ */
#define IFX_PFRWB_UR_FLASHCON3_MISRERRRINJ_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_FLASHCON3_Bits.MISRERRRINJ */
#define IFX_PFRWB_UR_FLASHCON3_MISRERRRINJ_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_FLASHCON3_Bits.MISRERRRINJ */
#define IFX_PFRWB_UR_FLASHCON3_MISRERRRINJ_OFF (7u)

/** \brief Length for Ifx_PFRWB_UR_ECCR_Bits.RCODE */
#define IFX_PFRWB_UR_ECCR_RCODE_LEN (22u)

/** \brief Mask for Ifx_PFRWB_UR_ECCR_Bits.RCODE */
#define IFX_PFRWB_UR_ECCR_RCODE_MSK (0x3fffffu)

/** \brief Offset for Ifx_PFRWB_UR_ECCR_Bits.RCODE */
#define IFX_PFRWB_UR_ECCR_RCODE_OFF (0u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.SBER */
#define IFX_PFRWB_UR_ECCS_SBER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.SBER */
#define IFX_PFRWB_UR_ECCS_SBER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.SBER */
#define IFX_PFRWB_UR_ECCS_SBER_OFF (0u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.DBER */
#define IFX_PFRWB_UR_ECCS_DBER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.DBER */
#define IFX_PFRWB_UR_ECCS_DBER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.DBER */
#define IFX_PFRWB_UR_ECCS_DBER_OFF (1u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.UCER */
#define IFX_PFRWB_UR_ECCS_UCER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.UCER */
#define IFX_PFRWB_UR_ECCS_UCER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.UCER */
#define IFX_PFRWB_UR_ECCS_UCER_OFF (3u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.ALL0 */
#define IFX_PFRWB_UR_ECCS_ALL0_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.ALL0 */
#define IFX_PFRWB_UR_ECCS_ALL0_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.ALL0 */
#define IFX_PFRWB_UR_ECCS_ALL0_OFF (4u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.ALL1 */
#define IFX_PFRWB_UR_ECCS_ALL1_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.ALL1 */
#define IFX_PFRWB_UR_ECCS_ALL1_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.ALL1 */
#define IFX_PFRWB_UR_ECCS_ALL1_OFF (5u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.ANER */
#define IFX_PFRWB_UR_ECCS_ANER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.ANER */
#define IFX_PFRWB_UR_ECCS_ANER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.ANER */
#define IFX_PFRWB_UR_ECCS_ANER_OFF (8u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.ASBER */
#define IFX_PFRWB_UR_ECCS_ASBER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.ASBER */
#define IFX_PFRWB_UR_ECCS_ASBER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.ASBER */
#define IFX_PFRWB_UR_ECCS_ASBER_OFF (16u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.ADBER */
#define IFX_PFRWB_UR_ECCS_ADBER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.ADBER */
#define IFX_PFRWB_UR_ECCS_ADBER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.ADBER */
#define IFX_PFRWB_UR_ECCS_ADBER_OFF (17u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.AUCER */
#define IFX_PFRWB_UR_ECCS_AUCER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.AUCER */
#define IFX_PFRWB_UR_ECCS_AUCER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.AUCER */
#define IFX_PFRWB_UR_ECCS_AUCER_OFF (19u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.AALL0 */
#define IFX_PFRWB_UR_ECCS_AALL0_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.AALL0 */
#define IFX_PFRWB_UR_ECCS_AALL0_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.AALL0 */
#define IFX_PFRWB_UR_ECCS_AALL0_OFF (20u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.AALL1 */
#define IFX_PFRWB_UR_ECCS_AALL1_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.AALL1 */
#define IFX_PFRWB_UR_ECCS_AALL1_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.AALL1 */
#define IFX_PFRWB_UR_ECCS_AALL1_OFF (21u)

/** \brief Length for Ifx_PFRWB_UR_ECCS_Bits.AANER */
#define IFX_PFRWB_UR_ECCS_AANER_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_ECCS_Bits.AANER */
#define IFX_PFRWB_UR_ECCS_AANER_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_ECCS_Bits.AANER */
#define IFX_PFRWB_UR_ECCS_AANER_OFF (24u)

/** \brief Length for Ifx_PFRWB_UR_SBABX_Bits.ADDR */
#define IFX_PFRWB_UR_SBABX_ADDR_LEN (16u)

/** \brief Mask for Ifx_PFRWB_UR_SBABX_Bits.ADDR */
#define IFX_PFRWB_UR_SBABX_ADDR_MSK (0xffffu)

/** \brief Offset for Ifx_PFRWB_UR_SBABX_Bits.ADDR */
#define IFX_PFRWB_UR_SBABX_ADDR_OFF (5u)

/** \brief Length for Ifx_PFRWB_UR_SBABX_Bits.ECF */
#define IFX_PFRWB_UR_SBABX_ECF_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_SBABX_Bits.ECF */
#define IFX_PFRWB_UR_SBABX_ECF_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_SBABX_Bits.ECF */
#define IFX_PFRWB_UR_SBABX_ECF_OFF (27u)

/** \brief Length for Ifx_PFRWB_UR_SBABX_Bits.VLD */
#define IFX_PFRWB_UR_SBABX_VLD_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_SBABX_Bits.VLD */
#define IFX_PFRWB_UR_SBABX_VLD_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_SBABX_Bits.VLD */
#define IFX_PFRWB_UR_SBABX_VLD_OFF (31u)

/** \brief Length for Ifx_PFRWB_UR_DBABX_Bits.ADDR */
#define IFX_PFRWB_UR_DBABX_ADDR_LEN (16u)

/** \brief Mask for Ifx_PFRWB_UR_DBABX_Bits.ADDR */
#define IFX_PFRWB_UR_DBABX_ADDR_MSK (0xffffu)

/** \brief Offset for Ifx_PFRWB_UR_DBABX_Bits.ADDR */
#define IFX_PFRWB_UR_DBABX_ADDR_OFF (5u)

/** \brief Length for Ifx_PFRWB_UR_DBABX_Bits.ECF */
#define IFX_PFRWB_UR_DBABX_ECF_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_DBABX_Bits.ECF */
#define IFX_PFRWB_UR_DBABX_ECF_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_DBABX_Bits.ECF */
#define IFX_PFRWB_UR_DBABX_ECF_OFF (27u)

/** \brief Length for Ifx_PFRWB_UR_DBABX_Bits.VLD */
#define IFX_PFRWB_UR_DBABX_VLD_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_DBABX_Bits.VLD */
#define IFX_PFRWB_UR_DBABX_VLD_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_DBABX_Bits.VLD */
#define IFX_PFRWB_UR_DBABX_VLD_OFF (31u)

/** \brief Length for Ifx_PFRWB_UR_UBABX_Bits.ADDR */
#define IFX_PFRWB_UR_UBABX_ADDR_LEN (16u)

/** \brief Mask for Ifx_PFRWB_UR_UBABX_Bits.ADDR */
#define IFX_PFRWB_UR_UBABX_ADDR_MSK (0xffffu)

/** \brief Offset for Ifx_PFRWB_UR_UBABX_Bits.ADDR */
#define IFX_PFRWB_UR_UBABX_ADDR_OFF (5u)

/** \brief Length for Ifx_PFRWB_UR_UBABX_Bits.ECF */
#define IFX_PFRWB_UR_UBABX_ECF_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_UBABX_Bits.ECF */
#define IFX_PFRWB_UR_UBABX_ECF_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_UBABX_Bits.ECF */
#define IFX_PFRWB_UR_UBABX_ECF_OFF (27u)

/** \brief Length for Ifx_PFRWB_UR_UBABX_Bits.VLD */
#define IFX_PFRWB_UR_UBABX_VLD_LEN (1u)

/** \brief Mask for Ifx_PFRWB_UR_UBABX_Bits.VLD */
#define IFX_PFRWB_UR_UBABX_VLD_MSK (0x1u)

/** \brief Offset for Ifx_PFRWB_UR_UBABX_Bits.VLD */
#define IFX_PFRWB_UR_UBABX_VLD_OFF (31u)

/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXPFRWB_BF_H */
