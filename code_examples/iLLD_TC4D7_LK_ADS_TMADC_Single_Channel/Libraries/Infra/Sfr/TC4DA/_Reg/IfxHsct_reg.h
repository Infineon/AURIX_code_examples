/**
 * \file IfxHsct_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_HSSL/V0.2.1.1.4
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Hsct_Registers_Cfg Hsct address
 * \ingroup IfxSfr_Hsct_Registers
 * 
 * \defgroup IfxSfr_Hsct_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Hsct_Registers_Cfg
 *
 * \defgroup IfxSfr_Hsct_Registers_Cfg_Hsct0 2-HSCT0
 * \ingroup IfxSfr_Hsct_Registers_Cfg
 *
 * \defgroup IfxSfr_Hsct_Registers_Cfg_Hsct1 2-HSCT1
 * \ingroup IfxSfr_Hsct_Registers_Cfg
 *
 *
 */
#ifndef IFXHSCT_REG_H
#define IFXHSCT_REG_H 1
/******************************************************************************/
#include "IfxHsct_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Hsct_Registers_Cfg_BaseAddress
 * \{  */

/** \brief HSCT object */
#define MODULE_HSCT0 /*lint --e(923, 9078)*/ ((*(Ifx_HSCT*)0xF4490000u))
#define MODULE_HSCT1 /*lint --e(923, 9078)*/ ((*(Ifx_HSCT*)0xF44B0000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Hsct_Registers_Cfg_Hsct0
 * \{  */
/** \brief 0, Clock Control Register */
#define HSCT0_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_CLC*)0xF4490000u)

/** \brief 4, OCDS Control and Status Register */
#define HSCT0_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_OCS*)0xF4490004u)

/** \brief 8, Module Identification Register */
#define HSCT0_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ID*)0xF4490008u)

/** \brief C, Reset Control Register A */
#define HSCT0_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_RST_CTRLA*)0xF449000Cu)

/** \brief 10, Reset Control Register B */
#define HSCT0_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_RST_CTRLB*)0xF4490010u)

/** \brief 14, Reset Status Register */
#define HSCT0_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_RST_STAT*)0xF4490014u)

/** \brief 20, Register Endinit */
#define HSCT0_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_PROT*)0xF4490020u)

/** \brief 24, PROT Register Safe Endinit */
#define HSCT0_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_PROT*)0xF4490024u)

/** \brief 40, Write access enable register A */
#define HSCT0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_WRA*)0xF4490040u)

/** \brief 44, Write access enable register B */
#define HSCT0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_WRB_FPI*)0xF4490044u)

/** \brief 48, Read access enable register A */
#define HSCT0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_RDA*)0xF4490048u)

/** \brief 4C, Read access enable register B */
#define HSCT0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_RDB_FPI*)0xF449004Cu)

/** \brief 50, VM access enable register */
#define HSCT0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_VM*)0xF4490050u)

/** \brief 54, PRS access enable register */
#define HSCT0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_PRS*)0xF4490054u)

/** \brief 60, Initialization Register */
#define HSCT0_INIT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_INIT*)0xF4490060u)

/** \brief 64, Interface Control Register */
#define HSCT0_IFCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IFCTRL*)0xF4490064u)

/** \brief 6C, Clear To Send Control Register */
#define HSCT0_CTSCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_CTSCTRL*)0xF449006Cu)

/** \brief 70, Transmission Disable Register */
#define HSCT0_DISABLE /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_DISABLE*)0xF4490070u)

/** \brief 74, Status Register */
#define HSCT0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_STAT*)0xF4490074u)

/** \brief 78, Interface Status Register */
#define HSCT0_IFSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IFSTAT*)0xF4490078u)

/** \brief 7C, Configuration Physical Layer Register */
#define HSCT0_CONFIGPHY /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_CONFIGPHY*)0xF449007Cu)

/** \brief 80, STATPHY */
#define HSCT0_STATPHY /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_STATPHY*)0xF4490080u)

/** \brief 84, Interrupt register */
#define HSCT0_IRQ /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IRQ*)0xF4490084u)

/** \brief 88, Interrupt Enable Register */
#define HSCT0_IRQEN /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IRQEN*)0xF4490088u)

/** \brief 8C, Interrupt Clear Register */
#define HSCT0_IRQCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IRQCLR*)0xF449008Cu)

/** \brief 90, Unsolicited Status Message Received */
#define HSCT0_USMR /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_USMR*)0xF4490090u)

/** \brief 94, Unsolicited Status Message Send */
#define HSCT0_USMS /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_USMS*)0xF4490094u)

/** \brief 98, Test Control Register */
#define HSCT0_TESTCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_TESTCTRL*)0xF4490098u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Hsct_Registers_Cfg_Hsct1
 * \{  */
/** \brief 0, Clock Control Register */
#define HSCT1_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_CLC*)0xF44B0000u)

/** \brief 4, OCDS Control and Status Register */
#define HSCT1_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_OCS*)0xF44B0004u)

/** \brief 8, Module Identification Register */
#define HSCT1_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ID*)0xF44B0008u)

/** \brief C, Reset Control Register A */
#define HSCT1_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_RST_CTRLA*)0xF44B000Cu)

/** \brief 10, Reset Control Register B */
#define HSCT1_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_RST_CTRLB*)0xF44B0010u)

/** \brief 14, Reset Status Register */
#define HSCT1_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_RST_STAT*)0xF44B0014u)

/** \brief 20, Register Endinit */
#define HSCT1_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_PROT*)0xF44B0020u)

/** \brief 24, PROT Register Safe Endinit */
#define HSCT1_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_PROT*)0xF44B0024u)

/** \brief 40, Write access enable register A */
#define HSCT1_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_WRA*)0xF44B0040u)

/** \brief 44, Write access enable register B */
#define HSCT1_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_WRB_FPI*)0xF44B0044u)

/** \brief 48, Read access enable register A */
#define HSCT1_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_RDA*)0xF44B0048u)

/** \brief 4C, Read access enable register B */
#define HSCT1_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_RDB_FPI*)0xF44B004Cu)

/** \brief 50, VM access enable register */
#define HSCT1_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_VM*)0xF44B0050u)

/** \brief 54, PRS access enable register */
#define HSCT1_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_ACCEN_PRS*)0xF44B0054u)

/** \brief 60, Initialization Register */
#define HSCT1_INIT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_INIT*)0xF44B0060u)

/** \brief 64, Interface Control Register */
#define HSCT1_IFCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IFCTRL*)0xF44B0064u)

/** \brief 6C, Clear To Send Control Register */
#define HSCT1_CTSCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_CTSCTRL*)0xF44B006Cu)

/** \brief 70, Transmission Disable Register */
#define HSCT1_DISABLE /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_DISABLE*)0xF44B0070u)

/** \brief 74, Status Register */
#define HSCT1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_STAT*)0xF44B0074u)

/** \brief 78, Interface Status Register */
#define HSCT1_IFSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IFSTAT*)0xF44B0078u)

/** \brief 7C, Configuration Physical Layer Register */
#define HSCT1_CONFIGPHY /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_CONFIGPHY*)0xF44B007Cu)

/** \brief 80, STATPHY */
#define HSCT1_STATPHY /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_STATPHY*)0xF44B0080u)

/** \brief 84, Interrupt register */
#define HSCT1_IRQ /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IRQ*)0xF44B0084u)

/** \brief 88, Interrupt Enable Register */
#define HSCT1_IRQEN /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IRQEN*)0xF44B0088u)

/** \brief 8C, Interrupt Clear Register */
#define HSCT1_IRQCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_IRQCLR*)0xF44B008Cu)

/** \brief 90, Unsolicited Status Message Received */
#define HSCT1_USMR /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_USMR*)0xF44B0090u)

/** \brief 94, Unsolicited Status Message Send */
#define HSCT1_USMS /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_USMS*)0xF44B0094u)

/** \brief 98, Test Control Register */
#define HSCT1_TESTCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_HSCT_TESTCTRL*)0xF44B0098u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXHSCT_REG_H */
