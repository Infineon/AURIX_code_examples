/**
 * \file IfxSent_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_SENT/V0.2.2.1.1
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Sent_Registers_Cfg Sent address
 * \ingroup IfxSfr_Sent_Registers
 * 
 * \defgroup IfxSfr_Sent_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Sent_Registers_Cfg
 *
 * \defgroup IfxSfr_Sent_Registers_Cfg_Sent0 2-SENT0
 * \ingroup IfxSfr_Sent_Registers_Cfg
 *
 * \defgroup IfxSfr_Sent_Registers_Cfg_Sent1 2-SENT1
 * \ingroup IfxSfr_Sent_Registers_Cfg
 *
 *
 */
#ifndef IFXSENT_REG_H
#define IFXSENT_REG_H 1
/******************************************************************************/
#include "IfxSent_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Sent_Registers_Cfg_BaseAddress
 * \{  */

/** \brief SENT object */
#define MODULE_SENT0 /*lint --e(923, 9078)*/ ((*(Ifx_SENT*)0xF4403000u))
#define MODULE_SENT1 /*lint --e(923, 9078)*/ ((*(Ifx_SENT*)0xF4404000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Sent_Registers_Cfg_Sent0
 * \{  */
/** \brief 0, Clock control register */
#define SENT0_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CLC*)0xF4403000u)

/** \brief 4, OCDS control and status register */
#define SENT0_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_OCS*)0xF4403004u)

/** \brief 8, Module identification register */
#define SENT0_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ID*)0xF4403008u)

/** \brief C, Reset control register A */
#define SENT0_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RST_CTRLA*)0xF440300Cu)

/** \brief 10, Reset control register B */
#define SENT0_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RST_CTRLB*)0xF4403010u)

/** \brief 14, Reset status register */
#define SENT0_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RST_STAT*)0xF4403014u)

/** \brief 18, PROT register endinit */
#define SENT0_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_PROT*)0xF4403018u)

/** \brief 1C, PROT register safe endinit */
#define SENT0_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_PROT*)0xF440301Cu)

/** \brief 20, Write access enable register A */
#define SENT0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_WRA*)0xF4403020u)

/** \brief 24, Write access enable register B */
#define SENT0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_WRB_FPI*)0xF4403024u)

/** \brief 28, Read access enable register A */
#define SENT0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_RDA*)0xF4403028u)

/** \brief 2C, Read access enable register B */
#define SENT0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_RDB_FPI*)0xF440302Cu)

/** \brief 30, VM access enable register */
#define SENT0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_VM*)0xF4403030u)

/** \brief 34, PRS access enable register */
#define SENT0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_PRS*)0xF4403034u)

/** \brief 40, SENT Fractional divider register */
#define SENT0_FDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_FDR*)0xF4403040u)

/** \brief 44, Interrupt overview register */
#define SENT0_INTOV /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_INTOV*)0xF4403044u)

/** \brief 48, Module time stamp register */
#define SENT0_TSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_TSR*)0xF4403048u)

/** \brief 4C, Time stamp predivider register */
#define SENT0_TPD /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_TPD*)0xF440304Cu)

/** \brief 80, Receive data register 0 */
#define SENT0_RDR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4403080u)

/** \brief 84, Receive data register 1 */
#define SENT0_RDR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4403084u)

/** \brief 88, Receive data register 2 */
#define SENT0_RDR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4403088u)

/** \brief 8C, Receive data register 3 */
#define SENT0_RDR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF440308Cu)

/** \brief 90, Receive data register 4 */
#define SENT0_RDR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4403090u)

/** \brief 94, Receive data register 5 */
#define SENT0_RDR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4403094u)

/** \brief 98, Receive data register 6 */
#define SENT0_RDR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4403098u)

/** \brief 9C, Receive data register 7 */
#define SENT0_RDR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF440309Cu)

/** \brief A0, Receive data register 8 */
#define SENT0_RDR8 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44030A0u)

/** \brief A4, Receive data register 9 */
#define SENT0_RDR9 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44030A4u)

/** \brief A8, Receive data register 10 */
#define SENT0_RDR10 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44030A8u)

/** \brief AC, Receive data register 11 */
#define SENT0_RDR11 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44030ACu)

/** \brief B0, Receive data register 12 */
#define SENT0_RDR12 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44030B0u)

/** \brief B4, Receive data register 13 */
#define SENT0_RDR13 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44030B4u)

/** \brief B8, Receive data register 14 */
#define SENT0_RDR14 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44030B8u)

/** \brief 100, Channel pre divider register 0 */
#define SENT0_CH0_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403100u)
/** Alias (User Manual Name) for SENT0_CH0_CPDR */
#define SENT0_CPDR0 (SENT0_CH0_CPDR)

/** \brief 104, Channel fractional divider register 0 */
#define SENT0_CH0_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403104u)
/** Alias (User Manual Name) for SENT0_CH0_CFDR */
#define SENT0_CFDR0 (SENT0_CH0_CFDR)

/** \brief 108, Receiver control register 0 */
#define SENT0_CH0_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403108u)
/** Alias (User Manual Name) for SENT0_CH0_RCR */
#define SENT0_RCR0 (SENT0_CH0_RCR)

/** \brief 10C, Receive status register 0 */
#define SENT0_CH0_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440310Cu)
/** Alias (User Manual Name) for SENT0_CH0_RSR */
#define SENT0_RSR0 (SENT0_CH0_RSR)

/** \brief 110, Serial data and status register 0 */
#define SENT0_CH0_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403110u)
/** Alias (User Manual Name) for SENT0_CH0_SDS */
#define SENT0_SDS0 (SENT0_CH0_SDS)

/** \brief 114, Input and output control register 0 */
#define SENT0_CH0_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403114u)
/** Alias (User Manual Name) for SENT0_CH0_IOCR */
#define SENT0_IOCR0 (SENT0_CH0_IOCR)

/** \brief 118, SPC control register 0 */
#define SENT0_CH0_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403118u)
/** Alias (User Manual Name) for SENT0_CH0_SCR */
#define SENT0_SCR0 (SENT0_CH0_SCR)

/** \brief 11C, Receive data view register 0 */
#define SENT0_CH0_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440311Cu)
/** Alias (User Manual Name) for SENT0_CH0_VIEW */
#define SENT0_VIEW0 (SENT0_CH0_VIEW)

/** \brief 120, Interrupt status register 0 */
#define SENT0_CH0_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403120u)
/** Alias (User Manual Name) for SENT0_CH0_INTSTAT */
#define SENT0_INTSTAT0 (SENT0_CH0_INTSTAT)

/** \brief 124, Interrupt set register 0 */
#define SENT0_CH0_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403124u)
/** Alias (User Manual Name) for SENT0_CH0_INTSET */
#define SENT0_INTSET0 (SENT0_CH0_INTSET)

/** \brief 128, Interrupt clear register 0 */
#define SENT0_CH0_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403128u)
/** Alias (User Manual Name) for SENT0_CH0_INTCLR */
#define SENT0_INTCLR0 (SENT0_CH0_INTCLR)

/** \brief 12C, Interrupt enable register 0 */
#define SENT0_CH0_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440312Cu)
/** Alias (User Manual Name) for SENT0_CH0_INTEN */
#define SENT0_INTEN0 (SENT0_CH0_INTEN)

/** \brief 130, Interrupt node pointer register 0 */
#define SENT0_CH0_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403130u)
/** Alias (User Manual Name) for SENT0_CH0_INP */
#define SENT0_INP0 (SENT0_CH0_INP)

/** \brief 134, Watch dog timer register 0 */
#define SENT0_CH0_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403134u)
/** Alias (User Manual Name) for SENT0_CH0_WDT */
#define SENT0_WDT0 (SENT0_CH0_WDT)

/** \brief 140, Channel pre divider register 1 */
#define SENT0_CH1_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403140u)
/** Alias (User Manual Name) for SENT0_CH1_CPDR */
#define SENT0_CPDR1 (SENT0_CH1_CPDR)

/** \brief 144, Channel fractional divider register 1 */
#define SENT0_CH1_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403144u)
/** Alias (User Manual Name) for SENT0_CH1_CFDR */
#define SENT0_CFDR1 (SENT0_CH1_CFDR)

/** \brief 148, Receiver control register 1 */
#define SENT0_CH1_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403148u)
/** Alias (User Manual Name) for SENT0_CH1_RCR */
#define SENT0_RCR1 (SENT0_CH1_RCR)

/** \brief 14C, Receive status register 1 */
#define SENT0_CH1_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440314Cu)
/** Alias (User Manual Name) for SENT0_CH1_RSR */
#define SENT0_RSR1 (SENT0_CH1_RSR)

/** \brief 150, Serial data and status register 1 */
#define SENT0_CH1_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403150u)
/** Alias (User Manual Name) for SENT0_CH1_SDS */
#define SENT0_SDS1 (SENT0_CH1_SDS)

/** \brief 154, Input and output control register 1 */
#define SENT0_CH1_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403154u)
/** Alias (User Manual Name) for SENT0_CH1_IOCR */
#define SENT0_IOCR1 (SENT0_CH1_IOCR)

/** \brief 158, SPC control register 1 */
#define SENT0_CH1_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403158u)
/** Alias (User Manual Name) for SENT0_CH1_SCR */
#define SENT0_SCR1 (SENT0_CH1_SCR)

/** \brief 15C, Receive data view register 1 */
#define SENT0_CH1_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440315Cu)
/** Alias (User Manual Name) for SENT0_CH1_VIEW */
#define SENT0_VIEW1 (SENT0_CH1_VIEW)

/** \brief 160, Interrupt status register 1 */
#define SENT0_CH1_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403160u)
/** Alias (User Manual Name) for SENT0_CH1_INTSTAT */
#define SENT0_INTSTAT1 (SENT0_CH1_INTSTAT)

/** \brief 164, Interrupt set register 1 */
#define SENT0_CH1_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403164u)
/** Alias (User Manual Name) for SENT0_CH1_INTSET */
#define SENT0_INTSET1 (SENT0_CH1_INTSET)

/** \brief 168, Interrupt clear register 1 */
#define SENT0_CH1_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403168u)
/** Alias (User Manual Name) for SENT0_CH1_INTCLR */
#define SENT0_INTCLR1 (SENT0_CH1_INTCLR)

/** \brief 16C, Interrupt enable register 1 */
#define SENT0_CH1_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440316Cu)
/** Alias (User Manual Name) for SENT0_CH1_INTEN */
#define SENT0_INTEN1 (SENT0_CH1_INTEN)

/** \brief 170, Interrupt node pointer register 1 */
#define SENT0_CH1_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403170u)
/** Alias (User Manual Name) for SENT0_CH1_INP */
#define SENT0_INP1 (SENT0_CH1_INP)

/** \brief 174, Watch dog timer register 1 */
#define SENT0_CH1_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403174u)
/** Alias (User Manual Name) for SENT0_CH1_WDT */
#define SENT0_WDT1 (SENT0_CH1_WDT)

/** \brief 180, Channel pre divider register 2 */
#define SENT0_CH2_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403180u)
/** Alias (User Manual Name) for SENT0_CH2_CPDR */
#define SENT0_CPDR2 (SENT0_CH2_CPDR)

/** \brief 184, Channel fractional divider register 2 */
#define SENT0_CH2_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403184u)
/** Alias (User Manual Name) for SENT0_CH2_CFDR */
#define SENT0_CFDR2 (SENT0_CH2_CFDR)

/** \brief 188, Receiver control register 2 */
#define SENT0_CH2_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403188u)
/** Alias (User Manual Name) for SENT0_CH2_RCR */
#define SENT0_RCR2 (SENT0_CH2_RCR)

/** \brief 18C, Receive status register 2 */
#define SENT0_CH2_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440318Cu)
/** Alias (User Manual Name) for SENT0_CH2_RSR */
#define SENT0_RSR2 (SENT0_CH2_RSR)

/** \brief 190, Serial data and status register 2 */
#define SENT0_CH2_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403190u)
/** Alias (User Manual Name) for SENT0_CH2_SDS */
#define SENT0_SDS2 (SENT0_CH2_SDS)

/** \brief 194, Input and output control register 2 */
#define SENT0_CH2_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403194u)
/** Alias (User Manual Name) for SENT0_CH2_IOCR */
#define SENT0_IOCR2 (SENT0_CH2_IOCR)

/** \brief 198, SPC control register 2 */
#define SENT0_CH2_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403198u)
/** Alias (User Manual Name) for SENT0_CH2_SCR */
#define SENT0_SCR2 (SENT0_CH2_SCR)

/** \brief 19C, Receive data view register 2 */
#define SENT0_CH2_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440319Cu)
/** Alias (User Manual Name) for SENT0_CH2_VIEW */
#define SENT0_VIEW2 (SENT0_CH2_VIEW)

/** \brief 1A0, Interrupt status register 2 */
#define SENT0_CH2_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44031A0u)
/** Alias (User Manual Name) for SENT0_CH2_INTSTAT */
#define SENT0_INTSTAT2 (SENT0_CH2_INTSTAT)

/** \brief 1A4, Interrupt set register 2 */
#define SENT0_CH2_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44031A4u)
/** Alias (User Manual Name) for SENT0_CH2_INTSET */
#define SENT0_INTSET2 (SENT0_CH2_INTSET)

/** \brief 1A8, Interrupt clear register 2 */
#define SENT0_CH2_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44031A8u)
/** Alias (User Manual Name) for SENT0_CH2_INTCLR */
#define SENT0_INTCLR2 (SENT0_CH2_INTCLR)

/** \brief 1AC, Interrupt enable register 2 */
#define SENT0_CH2_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44031ACu)
/** Alias (User Manual Name) for SENT0_CH2_INTEN */
#define SENT0_INTEN2 (SENT0_CH2_INTEN)

/** \brief 1B0, Interrupt node pointer register 2 */
#define SENT0_CH2_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44031B0u)
/** Alias (User Manual Name) for SENT0_CH2_INP */
#define SENT0_INP2 (SENT0_CH2_INP)

/** \brief 1B4, Watch dog timer register 2 */
#define SENT0_CH2_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44031B4u)
/** Alias (User Manual Name) for SENT0_CH2_WDT */
#define SENT0_WDT2 (SENT0_CH2_WDT)

/** \brief 1C0, Channel pre divider register 3 */
#define SENT0_CH3_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF44031C0u)
/** Alias (User Manual Name) for SENT0_CH3_CPDR */
#define SENT0_CPDR3 (SENT0_CH3_CPDR)

/** \brief 1C4, Channel fractional divider register 3 */
#define SENT0_CH3_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF44031C4u)
/** Alias (User Manual Name) for SENT0_CH3_CFDR */
#define SENT0_CFDR3 (SENT0_CH3_CFDR)

/** \brief 1C8, Receiver control register 3 */
#define SENT0_CH3_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF44031C8u)
/** Alias (User Manual Name) for SENT0_CH3_RCR */
#define SENT0_RCR3 (SENT0_CH3_RCR)

/** \brief 1CC, Receive status register 3 */
#define SENT0_CH3_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF44031CCu)
/** Alias (User Manual Name) for SENT0_CH3_RSR */
#define SENT0_RSR3 (SENT0_CH3_RSR)

/** \brief 1D0, Serial data and status register 3 */
#define SENT0_CH3_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF44031D0u)
/** Alias (User Manual Name) for SENT0_CH3_SDS */
#define SENT0_SDS3 (SENT0_CH3_SDS)

/** \brief 1D4, Input and output control register 3 */
#define SENT0_CH3_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF44031D4u)
/** Alias (User Manual Name) for SENT0_CH3_IOCR */
#define SENT0_IOCR3 (SENT0_CH3_IOCR)

/** \brief 1D8, SPC control register 3 */
#define SENT0_CH3_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF44031D8u)
/** Alias (User Manual Name) for SENT0_CH3_SCR */
#define SENT0_SCR3 (SENT0_CH3_SCR)

/** \brief 1DC, Receive data view register 3 */
#define SENT0_CH3_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF44031DCu)
/** Alias (User Manual Name) for SENT0_CH3_VIEW */
#define SENT0_VIEW3 (SENT0_CH3_VIEW)

/** \brief 1E0, Interrupt status register 3 */
#define SENT0_CH3_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44031E0u)
/** Alias (User Manual Name) for SENT0_CH3_INTSTAT */
#define SENT0_INTSTAT3 (SENT0_CH3_INTSTAT)

/** \brief 1E4, Interrupt set register 3 */
#define SENT0_CH3_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44031E4u)
/** Alias (User Manual Name) for SENT0_CH3_INTSET */
#define SENT0_INTSET3 (SENT0_CH3_INTSET)

/** \brief 1E8, Interrupt clear register 3 */
#define SENT0_CH3_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44031E8u)
/** Alias (User Manual Name) for SENT0_CH3_INTCLR */
#define SENT0_INTCLR3 (SENT0_CH3_INTCLR)

/** \brief 1EC, Interrupt enable register 3 */
#define SENT0_CH3_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44031ECu)
/** Alias (User Manual Name) for SENT0_CH3_INTEN */
#define SENT0_INTEN3 (SENT0_CH3_INTEN)

/** \brief 1F0, Interrupt node pointer register 3 */
#define SENT0_CH3_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44031F0u)
/** Alias (User Manual Name) for SENT0_CH3_INP */
#define SENT0_INP3 (SENT0_CH3_INP)

/** \brief 1F4, Watch dog timer register 3 */
#define SENT0_CH3_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44031F4u)
/** Alias (User Manual Name) for SENT0_CH3_WDT */
#define SENT0_WDT3 (SENT0_CH3_WDT)

/** \brief 200, Channel pre divider register 4 */
#define SENT0_CH4_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403200u)
/** Alias (User Manual Name) for SENT0_CH4_CPDR */
#define SENT0_CPDR4 (SENT0_CH4_CPDR)

/** \brief 204, Channel fractional divider register 4 */
#define SENT0_CH4_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403204u)
/** Alias (User Manual Name) for SENT0_CH4_CFDR */
#define SENT0_CFDR4 (SENT0_CH4_CFDR)

/** \brief 208, Receiver control register 4 */
#define SENT0_CH4_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403208u)
/** Alias (User Manual Name) for SENT0_CH4_RCR */
#define SENT0_RCR4 (SENT0_CH4_RCR)

/** \brief 20C, Receive status register 4 */
#define SENT0_CH4_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440320Cu)
/** Alias (User Manual Name) for SENT0_CH4_RSR */
#define SENT0_RSR4 (SENT0_CH4_RSR)

/** \brief 210, Serial data and status register 4 */
#define SENT0_CH4_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403210u)
/** Alias (User Manual Name) for SENT0_CH4_SDS */
#define SENT0_SDS4 (SENT0_CH4_SDS)

/** \brief 214, Input and output control register 4 */
#define SENT0_CH4_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403214u)
/** Alias (User Manual Name) for SENT0_CH4_IOCR */
#define SENT0_IOCR4 (SENT0_CH4_IOCR)

/** \brief 218, SPC control register 4 */
#define SENT0_CH4_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403218u)
/** Alias (User Manual Name) for SENT0_CH4_SCR */
#define SENT0_SCR4 (SENT0_CH4_SCR)

/** \brief 21C, Receive data view register 4 */
#define SENT0_CH4_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440321Cu)
/** Alias (User Manual Name) for SENT0_CH4_VIEW */
#define SENT0_VIEW4 (SENT0_CH4_VIEW)

/** \brief 220, Interrupt status register 4 */
#define SENT0_CH4_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403220u)
/** Alias (User Manual Name) for SENT0_CH4_INTSTAT */
#define SENT0_INTSTAT4 (SENT0_CH4_INTSTAT)

/** \brief 224, Interrupt set register 4 */
#define SENT0_CH4_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403224u)
/** Alias (User Manual Name) for SENT0_CH4_INTSET */
#define SENT0_INTSET4 (SENT0_CH4_INTSET)

/** \brief 228, Interrupt clear register 4 */
#define SENT0_CH4_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403228u)
/** Alias (User Manual Name) for SENT0_CH4_INTCLR */
#define SENT0_INTCLR4 (SENT0_CH4_INTCLR)

/** \brief 22C, Interrupt enable register 4 */
#define SENT0_CH4_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440322Cu)
/** Alias (User Manual Name) for SENT0_CH4_INTEN */
#define SENT0_INTEN4 (SENT0_CH4_INTEN)

/** \brief 230, Interrupt node pointer register 4 */
#define SENT0_CH4_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403230u)
/** Alias (User Manual Name) for SENT0_CH4_INP */
#define SENT0_INP4 (SENT0_CH4_INP)

/** \brief 234, Watch dog timer register 4 */
#define SENT0_CH4_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403234u)
/** Alias (User Manual Name) for SENT0_CH4_WDT */
#define SENT0_WDT4 (SENT0_CH4_WDT)

/** \brief 240, Channel pre divider register 5 */
#define SENT0_CH5_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403240u)
/** Alias (User Manual Name) for SENT0_CH5_CPDR */
#define SENT0_CPDR5 (SENT0_CH5_CPDR)

/** \brief 244, Channel fractional divider register 5 */
#define SENT0_CH5_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403244u)
/** Alias (User Manual Name) for SENT0_CH5_CFDR */
#define SENT0_CFDR5 (SENT0_CH5_CFDR)

/** \brief 248, Receiver control register 5 */
#define SENT0_CH5_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403248u)
/** Alias (User Manual Name) for SENT0_CH5_RCR */
#define SENT0_RCR5 (SENT0_CH5_RCR)

/** \brief 24C, Receive status register 5 */
#define SENT0_CH5_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440324Cu)
/** Alias (User Manual Name) for SENT0_CH5_RSR */
#define SENT0_RSR5 (SENT0_CH5_RSR)

/** \brief 250, Serial data and status register 5 */
#define SENT0_CH5_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403250u)
/** Alias (User Manual Name) for SENT0_CH5_SDS */
#define SENT0_SDS5 (SENT0_CH5_SDS)

/** \brief 254, Input and output control register 5 */
#define SENT0_CH5_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403254u)
/** Alias (User Manual Name) for SENT0_CH5_IOCR */
#define SENT0_IOCR5 (SENT0_CH5_IOCR)

/** \brief 258, SPC control register 5 */
#define SENT0_CH5_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403258u)
/** Alias (User Manual Name) for SENT0_CH5_SCR */
#define SENT0_SCR5 (SENT0_CH5_SCR)

/** \brief 25C, Receive data view register 5 */
#define SENT0_CH5_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440325Cu)
/** Alias (User Manual Name) for SENT0_CH5_VIEW */
#define SENT0_VIEW5 (SENT0_CH5_VIEW)

/** \brief 260, Interrupt status register 5 */
#define SENT0_CH5_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403260u)
/** Alias (User Manual Name) for SENT0_CH5_INTSTAT */
#define SENT0_INTSTAT5 (SENT0_CH5_INTSTAT)

/** \brief 264, Interrupt set register 5 */
#define SENT0_CH5_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403264u)
/** Alias (User Manual Name) for SENT0_CH5_INTSET */
#define SENT0_INTSET5 (SENT0_CH5_INTSET)

/** \brief 268, Interrupt clear register 5 */
#define SENT0_CH5_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403268u)
/** Alias (User Manual Name) for SENT0_CH5_INTCLR */
#define SENT0_INTCLR5 (SENT0_CH5_INTCLR)

/** \brief 26C, Interrupt enable register 5 */
#define SENT0_CH5_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440326Cu)
/** Alias (User Manual Name) for SENT0_CH5_INTEN */
#define SENT0_INTEN5 (SENT0_CH5_INTEN)

/** \brief 270, Interrupt node pointer register 5 */
#define SENT0_CH5_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403270u)
/** Alias (User Manual Name) for SENT0_CH5_INP */
#define SENT0_INP5 (SENT0_CH5_INP)

/** \brief 274, Watch dog timer register 5 */
#define SENT0_CH5_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403274u)
/** Alias (User Manual Name) for SENT0_CH5_WDT */
#define SENT0_WDT5 (SENT0_CH5_WDT)

/** \brief 280, Channel pre divider register 6 */
#define SENT0_CH6_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403280u)
/** Alias (User Manual Name) for SENT0_CH6_CPDR */
#define SENT0_CPDR6 (SENT0_CH6_CPDR)

/** \brief 284, Channel fractional divider register 6 */
#define SENT0_CH6_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403284u)
/** Alias (User Manual Name) for SENT0_CH6_CFDR */
#define SENT0_CFDR6 (SENT0_CH6_CFDR)

/** \brief 288, Receiver control register 6 */
#define SENT0_CH6_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403288u)
/** Alias (User Manual Name) for SENT0_CH6_RCR */
#define SENT0_RCR6 (SENT0_CH6_RCR)

/** \brief 28C, Receive status register 6 */
#define SENT0_CH6_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440328Cu)
/** Alias (User Manual Name) for SENT0_CH6_RSR */
#define SENT0_RSR6 (SENT0_CH6_RSR)

/** \brief 290, Serial data and status register 6 */
#define SENT0_CH6_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403290u)
/** Alias (User Manual Name) for SENT0_CH6_SDS */
#define SENT0_SDS6 (SENT0_CH6_SDS)

/** \brief 294, Input and output control register 6 */
#define SENT0_CH6_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403294u)
/** Alias (User Manual Name) for SENT0_CH6_IOCR */
#define SENT0_IOCR6 (SENT0_CH6_IOCR)

/** \brief 298, SPC control register 6 */
#define SENT0_CH6_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403298u)
/** Alias (User Manual Name) for SENT0_CH6_SCR */
#define SENT0_SCR6 (SENT0_CH6_SCR)

/** \brief 29C, Receive data view register 6 */
#define SENT0_CH6_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440329Cu)
/** Alias (User Manual Name) for SENT0_CH6_VIEW */
#define SENT0_VIEW6 (SENT0_CH6_VIEW)

/** \brief 2A0, Interrupt status register 6 */
#define SENT0_CH6_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44032A0u)
/** Alias (User Manual Name) for SENT0_CH6_INTSTAT */
#define SENT0_INTSTAT6 (SENT0_CH6_INTSTAT)

/** \brief 2A4, Interrupt set register 6 */
#define SENT0_CH6_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44032A4u)
/** Alias (User Manual Name) for SENT0_CH6_INTSET */
#define SENT0_INTSET6 (SENT0_CH6_INTSET)

/** \brief 2A8, Interrupt clear register 6 */
#define SENT0_CH6_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44032A8u)
/** Alias (User Manual Name) for SENT0_CH6_INTCLR */
#define SENT0_INTCLR6 (SENT0_CH6_INTCLR)

/** \brief 2AC, Interrupt enable register 6 */
#define SENT0_CH6_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44032ACu)
/** Alias (User Manual Name) for SENT0_CH6_INTEN */
#define SENT0_INTEN6 (SENT0_CH6_INTEN)

/** \brief 2B0, Interrupt node pointer register 6 */
#define SENT0_CH6_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44032B0u)
/** Alias (User Manual Name) for SENT0_CH6_INP */
#define SENT0_INP6 (SENT0_CH6_INP)

/** \brief 2B4, Watch dog timer register 6 */
#define SENT0_CH6_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44032B4u)
/** Alias (User Manual Name) for SENT0_CH6_WDT */
#define SENT0_WDT6 (SENT0_CH6_WDT)

/** \brief 2C0, Channel pre divider register 7 */
#define SENT0_CH7_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF44032C0u)
/** Alias (User Manual Name) for SENT0_CH7_CPDR */
#define SENT0_CPDR7 (SENT0_CH7_CPDR)

/** \brief 2C4, Channel fractional divider register 7 */
#define SENT0_CH7_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF44032C4u)
/** Alias (User Manual Name) for SENT0_CH7_CFDR */
#define SENT0_CFDR7 (SENT0_CH7_CFDR)

/** \brief 2C8, Receiver control register 7 */
#define SENT0_CH7_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF44032C8u)
/** Alias (User Manual Name) for SENT0_CH7_RCR */
#define SENT0_RCR7 (SENT0_CH7_RCR)

/** \brief 2CC, Receive status register 7 */
#define SENT0_CH7_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF44032CCu)
/** Alias (User Manual Name) for SENT0_CH7_RSR */
#define SENT0_RSR7 (SENT0_CH7_RSR)

/** \brief 2D0, Serial data and status register 7 */
#define SENT0_CH7_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF44032D0u)
/** Alias (User Manual Name) for SENT0_CH7_SDS */
#define SENT0_SDS7 (SENT0_CH7_SDS)

/** \brief 2D4, Input and output control register 7 */
#define SENT0_CH7_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF44032D4u)
/** Alias (User Manual Name) for SENT0_CH7_IOCR */
#define SENT0_IOCR7 (SENT0_CH7_IOCR)

/** \brief 2D8, SPC control register 7 */
#define SENT0_CH7_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF44032D8u)
/** Alias (User Manual Name) for SENT0_CH7_SCR */
#define SENT0_SCR7 (SENT0_CH7_SCR)

/** \brief 2DC, Receive data view register 7 */
#define SENT0_CH7_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF44032DCu)
/** Alias (User Manual Name) for SENT0_CH7_VIEW */
#define SENT0_VIEW7 (SENT0_CH7_VIEW)

/** \brief 2E0, Interrupt status register 7 */
#define SENT0_CH7_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44032E0u)
/** Alias (User Manual Name) for SENT0_CH7_INTSTAT */
#define SENT0_INTSTAT7 (SENT0_CH7_INTSTAT)

/** \brief 2E4, Interrupt set register 7 */
#define SENT0_CH7_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44032E4u)
/** Alias (User Manual Name) for SENT0_CH7_INTSET */
#define SENT0_INTSET7 (SENT0_CH7_INTSET)

/** \brief 2E8, Interrupt clear register 7 */
#define SENT0_CH7_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44032E8u)
/** Alias (User Manual Name) for SENT0_CH7_INTCLR */
#define SENT0_INTCLR7 (SENT0_CH7_INTCLR)

/** \brief 2EC, Interrupt enable register 7 */
#define SENT0_CH7_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44032ECu)
/** Alias (User Manual Name) for SENT0_CH7_INTEN */
#define SENT0_INTEN7 (SENT0_CH7_INTEN)

/** \brief 2F0, Interrupt node pointer register 7 */
#define SENT0_CH7_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44032F0u)
/** Alias (User Manual Name) for SENT0_CH7_INP */
#define SENT0_INP7 (SENT0_CH7_INP)

/** \brief 2F4, Watch dog timer register 7 */
#define SENT0_CH7_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44032F4u)
/** Alias (User Manual Name) for SENT0_CH7_WDT */
#define SENT0_WDT7 (SENT0_CH7_WDT)

/** \brief 300, Channel pre divider register 8 */
#define SENT0_CH8_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403300u)
/** Alias (User Manual Name) for SENT0_CH8_CPDR */
#define SENT0_CPDR8 (SENT0_CH8_CPDR)

/** \brief 304, Channel fractional divider register 8 */
#define SENT0_CH8_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403304u)
/** Alias (User Manual Name) for SENT0_CH8_CFDR */
#define SENT0_CFDR8 (SENT0_CH8_CFDR)

/** \brief 308, Receiver control register 8 */
#define SENT0_CH8_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403308u)
/** Alias (User Manual Name) for SENT0_CH8_RCR */
#define SENT0_RCR8 (SENT0_CH8_RCR)

/** \brief 30C, Receive status register 8 */
#define SENT0_CH8_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440330Cu)
/** Alias (User Manual Name) for SENT0_CH8_RSR */
#define SENT0_RSR8 (SENT0_CH8_RSR)

/** \brief 310, Serial data and status register 8 */
#define SENT0_CH8_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403310u)
/** Alias (User Manual Name) for SENT0_CH8_SDS */
#define SENT0_SDS8 (SENT0_CH8_SDS)

/** \brief 314, Input and output control register 8 */
#define SENT0_CH8_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403314u)
/** Alias (User Manual Name) for SENT0_CH8_IOCR */
#define SENT0_IOCR8 (SENT0_CH8_IOCR)

/** \brief 318, SPC control register 8 */
#define SENT0_CH8_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403318u)
/** Alias (User Manual Name) for SENT0_CH8_SCR */
#define SENT0_SCR8 (SENT0_CH8_SCR)

/** \brief 31C, Receive data view register 8 */
#define SENT0_CH8_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440331Cu)
/** Alias (User Manual Name) for SENT0_CH8_VIEW */
#define SENT0_VIEW8 (SENT0_CH8_VIEW)

/** \brief 320, Interrupt status register 8 */
#define SENT0_CH8_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403320u)
/** Alias (User Manual Name) for SENT0_CH8_INTSTAT */
#define SENT0_INTSTAT8 (SENT0_CH8_INTSTAT)

/** \brief 324, Interrupt set register 8 */
#define SENT0_CH8_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403324u)
/** Alias (User Manual Name) for SENT0_CH8_INTSET */
#define SENT0_INTSET8 (SENT0_CH8_INTSET)

/** \brief 328, Interrupt clear register 8 */
#define SENT0_CH8_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403328u)
/** Alias (User Manual Name) for SENT0_CH8_INTCLR */
#define SENT0_INTCLR8 (SENT0_CH8_INTCLR)

/** \brief 32C, Interrupt enable register 8 */
#define SENT0_CH8_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440332Cu)
/** Alias (User Manual Name) for SENT0_CH8_INTEN */
#define SENT0_INTEN8 (SENT0_CH8_INTEN)

/** \brief 330, Interrupt node pointer register 8 */
#define SENT0_CH8_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403330u)
/** Alias (User Manual Name) for SENT0_CH8_INP */
#define SENT0_INP8 (SENT0_CH8_INP)

/** \brief 334, Watch dog timer register 8 */
#define SENT0_CH8_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403334u)
/** Alias (User Manual Name) for SENT0_CH8_WDT */
#define SENT0_WDT8 (SENT0_CH8_WDT)

/** \brief 340, Channel pre divider register 9 */
#define SENT0_CH9_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403340u)
/** Alias (User Manual Name) for SENT0_CH9_CPDR */
#define SENT0_CPDR9 (SENT0_CH9_CPDR)

/** \brief 344, Channel fractional divider register 9 */
#define SENT0_CH9_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403344u)
/** Alias (User Manual Name) for SENT0_CH9_CFDR */
#define SENT0_CFDR9 (SENT0_CH9_CFDR)

/** \brief 348, Receiver control register 9 */
#define SENT0_CH9_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403348u)
/** Alias (User Manual Name) for SENT0_CH9_RCR */
#define SENT0_RCR9 (SENT0_CH9_RCR)

/** \brief 34C, Receive status register 9 */
#define SENT0_CH9_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440334Cu)
/** Alias (User Manual Name) for SENT0_CH9_RSR */
#define SENT0_RSR9 (SENT0_CH9_RSR)

/** \brief 350, Serial data and status register 9 */
#define SENT0_CH9_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403350u)
/** Alias (User Manual Name) for SENT0_CH9_SDS */
#define SENT0_SDS9 (SENT0_CH9_SDS)

/** \brief 354, Input and output control register 9 */
#define SENT0_CH9_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403354u)
/** Alias (User Manual Name) for SENT0_CH9_IOCR */
#define SENT0_IOCR9 (SENT0_CH9_IOCR)

/** \brief 358, SPC control register 9 */
#define SENT0_CH9_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403358u)
/** Alias (User Manual Name) for SENT0_CH9_SCR */
#define SENT0_SCR9 (SENT0_CH9_SCR)

/** \brief 35C, Receive data view register 9 */
#define SENT0_CH9_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440335Cu)
/** Alias (User Manual Name) for SENT0_CH9_VIEW */
#define SENT0_VIEW9 (SENT0_CH9_VIEW)

/** \brief 360, Interrupt status register 9 */
#define SENT0_CH9_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403360u)
/** Alias (User Manual Name) for SENT0_CH9_INTSTAT */
#define SENT0_INTSTAT9 (SENT0_CH9_INTSTAT)

/** \brief 364, Interrupt set register 9 */
#define SENT0_CH9_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403364u)
/** Alias (User Manual Name) for SENT0_CH9_INTSET */
#define SENT0_INTSET9 (SENT0_CH9_INTSET)

/** \brief 368, Interrupt clear register 9 */
#define SENT0_CH9_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403368u)
/** Alias (User Manual Name) for SENT0_CH9_INTCLR */
#define SENT0_INTCLR9 (SENT0_CH9_INTCLR)

/** \brief 36C, Interrupt enable register 9 */
#define SENT0_CH9_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440336Cu)
/** Alias (User Manual Name) for SENT0_CH9_INTEN */
#define SENT0_INTEN9 (SENT0_CH9_INTEN)

/** \brief 370, Interrupt node pointer register 9 */
#define SENT0_CH9_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403370u)
/** Alias (User Manual Name) for SENT0_CH9_INP */
#define SENT0_INP9 (SENT0_CH9_INP)

/** \brief 374, Watch dog timer register 9 */
#define SENT0_CH9_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403374u)
/** Alias (User Manual Name) for SENT0_CH9_WDT */
#define SENT0_WDT9 (SENT0_CH9_WDT)

/** \brief 380, Channel pre divider register 10 */
#define SENT0_CH10_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403380u)
/** Alias (User Manual Name) for SENT0_CH10_CPDR */
#define SENT0_CPDR10 (SENT0_CH10_CPDR)

/** \brief 384, Channel fractional divider register 10 */
#define SENT0_CH10_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403384u)
/** Alias (User Manual Name) for SENT0_CH10_CFDR */
#define SENT0_CFDR10 (SENT0_CH10_CFDR)

/** \brief 388, Receiver control register 10 */
#define SENT0_CH10_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403388u)
/** Alias (User Manual Name) for SENT0_CH10_RCR */
#define SENT0_RCR10 (SENT0_CH10_RCR)

/** \brief 38C, Receive status register 10 */
#define SENT0_CH10_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440338Cu)
/** Alias (User Manual Name) for SENT0_CH10_RSR */
#define SENT0_RSR10 (SENT0_CH10_RSR)

/** \brief 390, Serial data and status register 10 */
#define SENT0_CH10_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403390u)
/** Alias (User Manual Name) for SENT0_CH10_SDS */
#define SENT0_SDS10 (SENT0_CH10_SDS)

/** \brief 394, Input and output control register 10 */
#define SENT0_CH10_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403394u)
/** Alias (User Manual Name) for SENT0_CH10_IOCR */
#define SENT0_IOCR10 (SENT0_CH10_IOCR)

/** \brief 398, SPC control register 10 */
#define SENT0_CH10_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403398u)
/** Alias (User Manual Name) for SENT0_CH10_SCR */
#define SENT0_SCR10 (SENT0_CH10_SCR)

/** \brief 39C, Receive data view register 10 */
#define SENT0_CH10_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440339Cu)
/** Alias (User Manual Name) for SENT0_CH10_VIEW */
#define SENT0_VIEW10 (SENT0_CH10_VIEW)

/** \brief 3A0, Interrupt status register 10 */
#define SENT0_CH10_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44033A0u)
/** Alias (User Manual Name) for SENT0_CH10_INTSTAT */
#define SENT0_INTSTAT10 (SENT0_CH10_INTSTAT)

/** \brief 3A4, Interrupt set register 10 */
#define SENT0_CH10_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44033A4u)
/** Alias (User Manual Name) for SENT0_CH10_INTSET */
#define SENT0_INTSET10 (SENT0_CH10_INTSET)

/** \brief 3A8, Interrupt clear register 10 */
#define SENT0_CH10_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44033A8u)
/** Alias (User Manual Name) for SENT0_CH10_INTCLR */
#define SENT0_INTCLR10 (SENT0_CH10_INTCLR)

/** \brief 3AC, Interrupt enable register 10 */
#define SENT0_CH10_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44033ACu)
/** Alias (User Manual Name) for SENT0_CH10_INTEN */
#define SENT0_INTEN10 (SENT0_CH10_INTEN)

/** \brief 3B0, Interrupt node pointer register 10 */
#define SENT0_CH10_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44033B0u)
/** Alias (User Manual Name) for SENT0_CH10_INP */
#define SENT0_INP10 (SENT0_CH10_INP)

/** \brief 3B4, Watch dog timer register 10 */
#define SENT0_CH10_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44033B4u)
/** Alias (User Manual Name) for SENT0_CH10_WDT */
#define SENT0_WDT10 (SENT0_CH10_WDT)

/** \brief 3C0, Channel pre divider register 11 */
#define SENT0_CH11_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF44033C0u)
/** Alias (User Manual Name) for SENT0_CH11_CPDR */
#define SENT0_CPDR11 (SENT0_CH11_CPDR)

/** \brief 3C4, Channel fractional divider register 11 */
#define SENT0_CH11_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF44033C4u)
/** Alias (User Manual Name) for SENT0_CH11_CFDR */
#define SENT0_CFDR11 (SENT0_CH11_CFDR)

/** \brief 3C8, Receiver control register 11 */
#define SENT0_CH11_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF44033C8u)
/** Alias (User Manual Name) for SENT0_CH11_RCR */
#define SENT0_RCR11 (SENT0_CH11_RCR)

/** \brief 3CC, Receive status register 11 */
#define SENT0_CH11_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF44033CCu)
/** Alias (User Manual Name) for SENT0_CH11_RSR */
#define SENT0_RSR11 (SENT0_CH11_RSR)

/** \brief 3D0, Serial data and status register 11 */
#define SENT0_CH11_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF44033D0u)
/** Alias (User Manual Name) for SENT0_CH11_SDS */
#define SENT0_SDS11 (SENT0_CH11_SDS)

/** \brief 3D4, Input and output control register 11 */
#define SENT0_CH11_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF44033D4u)
/** Alias (User Manual Name) for SENT0_CH11_IOCR */
#define SENT0_IOCR11 (SENT0_CH11_IOCR)

/** \brief 3D8, SPC control register 11 */
#define SENT0_CH11_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF44033D8u)
/** Alias (User Manual Name) for SENT0_CH11_SCR */
#define SENT0_SCR11 (SENT0_CH11_SCR)

/** \brief 3DC, Receive data view register 11 */
#define SENT0_CH11_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF44033DCu)
/** Alias (User Manual Name) for SENT0_CH11_VIEW */
#define SENT0_VIEW11 (SENT0_CH11_VIEW)

/** \brief 3E0, Interrupt status register 11 */
#define SENT0_CH11_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44033E0u)
/** Alias (User Manual Name) for SENT0_CH11_INTSTAT */
#define SENT0_INTSTAT11 (SENT0_CH11_INTSTAT)

/** \brief 3E4, Interrupt set register 11 */
#define SENT0_CH11_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44033E4u)
/** Alias (User Manual Name) for SENT0_CH11_INTSET */
#define SENT0_INTSET11 (SENT0_CH11_INTSET)

/** \brief 3E8, Interrupt clear register 11 */
#define SENT0_CH11_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44033E8u)
/** Alias (User Manual Name) for SENT0_CH11_INTCLR */
#define SENT0_INTCLR11 (SENT0_CH11_INTCLR)

/** \brief 3EC, Interrupt enable register 11 */
#define SENT0_CH11_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44033ECu)
/** Alias (User Manual Name) for SENT0_CH11_INTEN */
#define SENT0_INTEN11 (SENT0_CH11_INTEN)

/** \brief 3F0, Interrupt node pointer register 11 */
#define SENT0_CH11_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44033F0u)
/** Alias (User Manual Name) for SENT0_CH11_INP */
#define SENT0_INP11 (SENT0_CH11_INP)

/** \brief 3F4, Watch dog timer register 11 */
#define SENT0_CH11_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44033F4u)
/** Alias (User Manual Name) for SENT0_CH11_WDT */
#define SENT0_WDT11 (SENT0_CH11_WDT)

/** \brief 400, Channel pre divider register 12 */
#define SENT0_CH12_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403400u)
/** Alias (User Manual Name) for SENT0_CH12_CPDR */
#define SENT0_CPDR12 (SENT0_CH12_CPDR)

/** \brief 404, Channel fractional divider register 12 */
#define SENT0_CH12_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403404u)
/** Alias (User Manual Name) for SENT0_CH12_CFDR */
#define SENT0_CFDR12 (SENT0_CH12_CFDR)

/** \brief 408, Receiver control register 12 */
#define SENT0_CH12_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403408u)
/** Alias (User Manual Name) for SENT0_CH12_RCR */
#define SENT0_RCR12 (SENT0_CH12_RCR)

/** \brief 40C, Receive status register 12 */
#define SENT0_CH12_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440340Cu)
/** Alias (User Manual Name) for SENT0_CH12_RSR */
#define SENT0_RSR12 (SENT0_CH12_RSR)

/** \brief 410, Serial data and status register 12 */
#define SENT0_CH12_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403410u)
/** Alias (User Manual Name) for SENT0_CH12_SDS */
#define SENT0_SDS12 (SENT0_CH12_SDS)

/** \brief 414, Input and output control register 12 */
#define SENT0_CH12_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403414u)
/** Alias (User Manual Name) for SENT0_CH12_IOCR */
#define SENT0_IOCR12 (SENT0_CH12_IOCR)

/** \brief 418, SPC control register 12 */
#define SENT0_CH12_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403418u)
/** Alias (User Manual Name) for SENT0_CH12_SCR */
#define SENT0_SCR12 (SENT0_CH12_SCR)

/** \brief 41C, Receive data view register 12 */
#define SENT0_CH12_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440341Cu)
/** Alias (User Manual Name) for SENT0_CH12_VIEW */
#define SENT0_VIEW12 (SENT0_CH12_VIEW)

/** \brief 420, Interrupt status register 12 */
#define SENT0_CH12_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403420u)
/** Alias (User Manual Name) for SENT0_CH12_INTSTAT */
#define SENT0_INTSTAT12 (SENT0_CH12_INTSTAT)

/** \brief 424, Interrupt set register 12 */
#define SENT0_CH12_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403424u)
/** Alias (User Manual Name) for SENT0_CH12_INTSET */
#define SENT0_INTSET12 (SENT0_CH12_INTSET)

/** \brief 428, Interrupt clear register 12 */
#define SENT0_CH12_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403428u)
/** Alias (User Manual Name) for SENT0_CH12_INTCLR */
#define SENT0_INTCLR12 (SENT0_CH12_INTCLR)

/** \brief 42C, Interrupt enable register 12 */
#define SENT0_CH12_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440342Cu)
/** Alias (User Manual Name) for SENT0_CH12_INTEN */
#define SENT0_INTEN12 (SENT0_CH12_INTEN)

/** \brief 430, Interrupt node pointer register 12 */
#define SENT0_CH12_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403430u)
/** Alias (User Manual Name) for SENT0_CH12_INP */
#define SENT0_INP12 (SENT0_CH12_INP)

/** \brief 434, Watch dog timer register 12 */
#define SENT0_CH12_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403434u)
/** Alias (User Manual Name) for SENT0_CH12_WDT */
#define SENT0_WDT12 (SENT0_CH12_WDT)

/** \brief 440, Channel pre divider register 13 */
#define SENT0_CH13_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403440u)
/** Alias (User Manual Name) for SENT0_CH13_CPDR */
#define SENT0_CPDR13 (SENT0_CH13_CPDR)

/** \brief 444, Channel fractional divider register 13 */
#define SENT0_CH13_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403444u)
/** Alias (User Manual Name) for SENT0_CH13_CFDR */
#define SENT0_CFDR13 (SENT0_CH13_CFDR)

/** \brief 448, Receiver control register 13 */
#define SENT0_CH13_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403448u)
/** Alias (User Manual Name) for SENT0_CH13_RCR */
#define SENT0_RCR13 (SENT0_CH13_RCR)

/** \brief 44C, Receive status register 13 */
#define SENT0_CH13_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440344Cu)
/** Alias (User Manual Name) for SENT0_CH13_RSR */
#define SENT0_RSR13 (SENT0_CH13_RSR)

/** \brief 450, Serial data and status register 13 */
#define SENT0_CH13_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403450u)
/** Alias (User Manual Name) for SENT0_CH13_SDS */
#define SENT0_SDS13 (SENT0_CH13_SDS)

/** \brief 454, Input and output control register 13 */
#define SENT0_CH13_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403454u)
/** Alias (User Manual Name) for SENT0_CH13_IOCR */
#define SENT0_IOCR13 (SENT0_CH13_IOCR)

/** \brief 458, SPC control register 13 */
#define SENT0_CH13_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403458u)
/** Alias (User Manual Name) for SENT0_CH13_SCR */
#define SENT0_SCR13 (SENT0_CH13_SCR)

/** \brief 45C, Receive data view register 13 */
#define SENT0_CH13_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440345Cu)
/** Alias (User Manual Name) for SENT0_CH13_VIEW */
#define SENT0_VIEW13 (SENT0_CH13_VIEW)

/** \brief 460, Interrupt status register 13 */
#define SENT0_CH13_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4403460u)
/** Alias (User Manual Name) for SENT0_CH13_INTSTAT */
#define SENT0_INTSTAT13 (SENT0_CH13_INTSTAT)

/** \brief 464, Interrupt set register 13 */
#define SENT0_CH13_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4403464u)
/** Alias (User Manual Name) for SENT0_CH13_INTSET */
#define SENT0_INTSET13 (SENT0_CH13_INTSET)

/** \brief 468, Interrupt clear register 13 */
#define SENT0_CH13_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4403468u)
/** Alias (User Manual Name) for SENT0_CH13_INTCLR */
#define SENT0_INTCLR13 (SENT0_CH13_INTCLR)

/** \brief 46C, Interrupt enable register 13 */
#define SENT0_CH13_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440346Cu)
/** Alias (User Manual Name) for SENT0_CH13_INTEN */
#define SENT0_INTEN13 (SENT0_CH13_INTEN)

/** \brief 470, Interrupt node pointer register 13 */
#define SENT0_CH13_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4403470u)
/** Alias (User Manual Name) for SENT0_CH13_INP */
#define SENT0_INP13 (SENT0_CH13_INP)

/** \brief 474, Watch dog timer register 13 */
#define SENT0_CH13_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4403474u)
/** Alias (User Manual Name) for SENT0_CH13_WDT */
#define SENT0_WDT13 (SENT0_CH13_WDT)

/** \brief 480, Channel pre divider register 14 */
#define SENT0_CH14_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4403480u)
/** Alias (User Manual Name) for SENT0_CH14_CPDR */
#define SENT0_CPDR14 (SENT0_CH14_CPDR)

/** \brief 484, Channel fractional divider register 14 */
#define SENT0_CH14_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4403484u)
/** Alias (User Manual Name) for SENT0_CH14_CFDR */
#define SENT0_CFDR14 (SENT0_CH14_CFDR)

/** \brief 488, Receiver control register 14 */
#define SENT0_CH14_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4403488u)
/** Alias (User Manual Name) for SENT0_CH14_RCR */
#define SENT0_RCR14 (SENT0_CH14_RCR)

/** \brief 48C, Receive status register 14 */
#define SENT0_CH14_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440348Cu)
/** Alias (User Manual Name) for SENT0_CH14_RSR */
#define SENT0_RSR14 (SENT0_CH14_RSR)

/** \brief 490, Serial data and status register 14 */
#define SENT0_CH14_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4403490u)
/** Alias (User Manual Name) for SENT0_CH14_SDS */
#define SENT0_SDS14 (SENT0_CH14_SDS)

/** \brief 494, Input and output control register 14 */
#define SENT0_CH14_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4403494u)
/** Alias (User Manual Name) for SENT0_CH14_IOCR */
#define SENT0_IOCR14 (SENT0_CH14_IOCR)

/** \brief 498, SPC control register 14 */
#define SENT0_CH14_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4403498u)
/** Alias (User Manual Name) for SENT0_CH14_SCR */
#define SENT0_SCR14 (SENT0_CH14_SCR)

/** \brief 49C, Receive data view register 14 */
#define SENT0_CH14_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440349Cu)
/** Alias (User Manual Name) for SENT0_CH14_VIEW */
#define SENT0_VIEW14 (SENT0_CH14_VIEW)

/** \brief 4A0, Interrupt status register 14 */
#define SENT0_CH14_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44034A0u)
/** Alias (User Manual Name) for SENT0_CH14_INTSTAT */
#define SENT0_INTSTAT14 (SENT0_CH14_INTSTAT)

/** \brief 4A4, Interrupt set register 14 */
#define SENT0_CH14_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44034A4u)
/** Alias (User Manual Name) for SENT0_CH14_INTSET */
#define SENT0_INTSET14 (SENT0_CH14_INTSET)

/** \brief 4A8, Interrupt clear register 14 */
#define SENT0_CH14_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44034A8u)
/** Alias (User Manual Name) for SENT0_CH14_INTCLR */
#define SENT0_INTCLR14 (SENT0_CH14_INTCLR)

/** \brief 4AC, Interrupt enable register 14 */
#define SENT0_CH14_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44034ACu)
/** Alias (User Manual Name) for SENT0_CH14_INTEN */
#define SENT0_INTEN14 (SENT0_CH14_INTEN)

/** \brief 4B0, Interrupt node pointer register 14 */
#define SENT0_CH14_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44034B0u)
/** Alias (User Manual Name) for SENT0_CH14_INP */
#define SENT0_INP14 (SENT0_CH14_INP)

/** \brief 4B4, Watch dog timer register 14 */
#define SENT0_CH14_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44034B4u)
/** Alias (User Manual Name) for SENT0_CH14_WDT */
#define SENT0_WDT14 (SENT0_CH14_WDT)

/** \brief A80, Receive time stamp register 0 */
#define SENT0_RTS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A80u)

/** \brief A84, Receive time stamp register 1 */
#define SENT0_RTS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A84u)

/** \brief A88, Receive time stamp register 2 */
#define SENT0_RTS2 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A88u)

/** \brief A8C, Receive time stamp register 3 */
#define SENT0_RTS3 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A8Cu)

/** \brief A90, Receive time stamp register 4 */
#define SENT0_RTS4 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A90u)

/** \brief A94, Receive time stamp register 5 */
#define SENT0_RTS5 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A94u)

/** \brief A98, Receive time stamp register 6 */
#define SENT0_RTS6 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A98u)

/** \brief A9C, Receive time stamp register 7 */
#define SENT0_RTS7 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403A9Cu)

/** \brief AA0, Receive time stamp register 8 */
#define SENT0_RTS8 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403AA0u)

/** \brief AA4, Receive time stamp register 9 */
#define SENT0_RTS9 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403AA4u)

/** \brief AA8, Receive time stamp register 10 */
#define SENT0_RTS10 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403AA8u)

/** \brief AAC, Receive time stamp register 11 */
#define SENT0_RTS11 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403AACu)

/** \brief AB0, Receive time stamp register 12 */
#define SENT0_RTS12 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403AB0u)

/** \brief AB4, Receive time stamp register 13 */
#define SENT0_RTS13 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403AB4u)

/** \brief AB8, Receive time stamp register 14 */
#define SENT0_RTS14 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4403AB8u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Sent_Registers_Cfg_Sent1
 * \{  */
/** \brief 0, Clock control register */
#define SENT1_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CLC*)0xF4404000u)

/** \brief 4, OCDS control and status register */
#define SENT1_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_OCS*)0xF4404004u)

/** \brief 8, Module identification register */
#define SENT1_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ID*)0xF4404008u)

/** \brief C, Reset control register A */
#define SENT1_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RST_CTRLA*)0xF440400Cu)

/** \brief 10, Reset control register B */
#define SENT1_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RST_CTRLB*)0xF4404010u)

/** \brief 14, Reset status register */
#define SENT1_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RST_STAT*)0xF4404014u)

/** \brief 18, PROT register endinit */
#define SENT1_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_PROT*)0xF4404018u)

/** \brief 1C, PROT register safe endinit */
#define SENT1_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_PROT*)0xF440401Cu)

/** \brief 20, Write access enable register A */
#define SENT1_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_WRA*)0xF4404020u)

/** \brief 24, Write access enable register B */
#define SENT1_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_WRB_FPI*)0xF4404024u)

/** \brief 28, Read access enable register A */
#define SENT1_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_RDA*)0xF4404028u)

/** \brief 2C, Read access enable register B */
#define SENT1_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_RDB_FPI*)0xF440402Cu)

/** \brief 30, VM access enable register */
#define SENT1_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_VM*)0xF4404030u)

/** \brief 34, PRS access enable register */
#define SENT1_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_ACCEN_PRS*)0xF4404034u)

/** \brief 40, SENT Fractional divider register */
#define SENT1_FDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_FDR*)0xF4404040u)

/** \brief 44, Interrupt overview register */
#define SENT1_INTOV /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_INTOV*)0xF4404044u)

/** \brief 48, Module time stamp register */
#define SENT1_TSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_TSR*)0xF4404048u)

/** \brief 4C, Time stamp predivider register */
#define SENT1_TPD /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_TPD*)0xF440404Cu)

/** \brief 80, Receive data register 0 */
#define SENT1_RDR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4404080u)

/** \brief 84, Receive data register 1 */
#define SENT1_RDR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4404084u)

/** \brief 88, Receive data register 2 */
#define SENT1_RDR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4404088u)

/** \brief 8C, Receive data register 3 */
#define SENT1_RDR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF440408Cu)

/** \brief 90, Receive data register 4 */
#define SENT1_RDR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4404090u)

/** \brief 94, Receive data register 5 */
#define SENT1_RDR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4404094u)

/** \brief 98, Receive data register 6 */
#define SENT1_RDR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF4404098u)

/** \brief 9C, Receive data register 7 */
#define SENT1_RDR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF440409Cu)

/** \brief A0, Receive data register 8 */
#define SENT1_RDR8 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44040A0u)

/** \brief A4, Receive data register 9 */
#define SENT1_RDR9 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44040A4u)

/** \brief A8, Receive data register 10 */
#define SENT1_RDR10 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44040A8u)

/** \brief AC, Receive data register 11 */
#define SENT1_RDR11 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44040ACu)

/** \brief B0, Receive data register 12 */
#define SENT1_RDR12 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44040B0u)

/** \brief B4, Receive data register 13 */
#define SENT1_RDR13 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44040B4u)

/** \brief B8, Receive data register 14 */
#define SENT1_RDR14 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RDR*)0xF44040B8u)

/** \brief 100, Channel pre divider register 0 */
#define SENT1_CH0_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404100u)
/** Alias (User Manual Name) for SENT1_CH0_CPDR */
#define SENT1_CPDR0 (SENT1_CH0_CPDR)

/** \brief 104, Channel fractional divider register 0 */
#define SENT1_CH0_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404104u)
/** Alias (User Manual Name) for SENT1_CH0_CFDR */
#define SENT1_CFDR0 (SENT1_CH0_CFDR)

/** \brief 108, Receiver control register 0 */
#define SENT1_CH0_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404108u)
/** Alias (User Manual Name) for SENT1_CH0_RCR */
#define SENT1_RCR0 (SENT1_CH0_RCR)

/** \brief 10C, Receive status register 0 */
#define SENT1_CH0_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440410Cu)
/** Alias (User Manual Name) for SENT1_CH0_RSR */
#define SENT1_RSR0 (SENT1_CH0_RSR)

/** \brief 110, Serial data and status register 0 */
#define SENT1_CH0_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404110u)
/** Alias (User Manual Name) for SENT1_CH0_SDS */
#define SENT1_SDS0 (SENT1_CH0_SDS)

/** \brief 114, Input and output control register 0 */
#define SENT1_CH0_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404114u)
/** Alias (User Manual Name) for SENT1_CH0_IOCR */
#define SENT1_IOCR0 (SENT1_CH0_IOCR)

/** \brief 118, SPC control register 0 */
#define SENT1_CH0_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404118u)
/** Alias (User Manual Name) for SENT1_CH0_SCR */
#define SENT1_SCR0 (SENT1_CH0_SCR)

/** \brief 11C, Receive data view register 0 */
#define SENT1_CH0_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440411Cu)
/** Alias (User Manual Name) for SENT1_CH0_VIEW */
#define SENT1_VIEW0 (SENT1_CH0_VIEW)

/** \brief 120, Interrupt status register 0 */
#define SENT1_CH0_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404120u)
/** Alias (User Manual Name) for SENT1_CH0_INTSTAT */
#define SENT1_INTSTAT0 (SENT1_CH0_INTSTAT)

/** \brief 124, Interrupt set register 0 */
#define SENT1_CH0_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404124u)
/** Alias (User Manual Name) for SENT1_CH0_INTSET */
#define SENT1_INTSET0 (SENT1_CH0_INTSET)

/** \brief 128, Interrupt clear register 0 */
#define SENT1_CH0_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404128u)
/** Alias (User Manual Name) for SENT1_CH0_INTCLR */
#define SENT1_INTCLR0 (SENT1_CH0_INTCLR)

/** \brief 12C, Interrupt enable register 0 */
#define SENT1_CH0_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440412Cu)
/** Alias (User Manual Name) for SENT1_CH0_INTEN */
#define SENT1_INTEN0 (SENT1_CH0_INTEN)

/** \brief 130, Interrupt node pointer register 0 */
#define SENT1_CH0_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404130u)
/** Alias (User Manual Name) for SENT1_CH0_INP */
#define SENT1_INP0 (SENT1_CH0_INP)

/** \brief 134, Watch dog timer register 0 */
#define SENT1_CH0_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404134u)
/** Alias (User Manual Name) for SENT1_CH0_WDT */
#define SENT1_WDT0 (SENT1_CH0_WDT)

/** \brief 140, Channel pre divider register 1 */
#define SENT1_CH1_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404140u)
/** Alias (User Manual Name) for SENT1_CH1_CPDR */
#define SENT1_CPDR1 (SENT1_CH1_CPDR)

/** \brief 144, Channel fractional divider register 1 */
#define SENT1_CH1_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404144u)
/** Alias (User Manual Name) for SENT1_CH1_CFDR */
#define SENT1_CFDR1 (SENT1_CH1_CFDR)

/** \brief 148, Receiver control register 1 */
#define SENT1_CH1_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404148u)
/** Alias (User Manual Name) for SENT1_CH1_RCR */
#define SENT1_RCR1 (SENT1_CH1_RCR)

/** \brief 14C, Receive status register 1 */
#define SENT1_CH1_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440414Cu)
/** Alias (User Manual Name) for SENT1_CH1_RSR */
#define SENT1_RSR1 (SENT1_CH1_RSR)

/** \brief 150, Serial data and status register 1 */
#define SENT1_CH1_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404150u)
/** Alias (User Manual Name) for SENT1_CH1_SDS */
#define SENT1_SDS1 (SENT1_CH1_SDS)

/** \brief 154, Input and output control register 1 */
#define SENT1_CH1_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404154u)
/** Alias (User Manual Name) for SENT1_CH1_IOCR */
#define SENT1_IOCR1 (SENT1_CH1_IOCR)

/** \brief 158, SPC control register 1 */
#define SENT1_CH1_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404158u)
/** Alias (User Manual Name) for SENT1_CH1_SCR */
#define SENT1_SCR1 (SENT1_CH1_SCR)

/** \brief 15C, Receive data view register 1 */
#define SENT1_CH1_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440415Cu)
/** Alias (User Manual Name) for SENT1_CH1_VIEW */
#define SENT1_VIEW1 (SENT1_CH1_VIEW)

/** \brief 160, Interrupt status register 1 */
#define SENT1_CH1_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404160u)
/** Alias (User Manual Name) for SENT1_CH1_INTSTAT */
#define SENT1_INTSTAT1 (SENT1_CH1_INTSTAT)

/** \brief 164, Interrupt set register 1 */
#define SENT1_CH1_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404164u)
/** Alias (User Manual Name) for SENT1_CH1_INTSET */
#define SENT1_INTSET1 (SENT1_CH1_INTSET)

/** \brief 168, Interrupt clear register 1 */
#define SENT1_CH1_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404168u)
/** Alias (User Manual Name) for SENT1_CH1_INTCLR */
#define SENT1_INTCLR1 (SENT1_CH1_INTCLR)

/** \brief 16C, Interrupt enable register 1 */
#define SENT1_CH1_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440416Cu)
/** Alias (User Manual Name) for SENT1_CH1_INTEN */
#define SENT1_INTEN1 (SENT1_CH1_INTEN)

/** \brief 170, Interrupt node pointer register 1 */
#define SENT1_CH1_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404170u)
/** Alias (User Manual Name) for SENT1_CH1_INP */
#define SENT1_INP1 (SENT1_CH1_INP)

/** \brief 174, Watch dog timer register 1 */
#define SENT1_CH1_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404174u)
/** Alias (User Manual Name) for SENT1_CH1_WDT */
#define SENT1_WDT1 (SENT1_CH1_WDT)

/** \brief 180, Channel pre divider register 2 */
#define SENT1_CH2_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404180u)
/** Alias (User Manual Name) for SENT1_CH2_CPDR */
#define SENT1_CPDR2 (SENT1_CH2_CPDR)

/** \brief 184, Channel fractional divider register 2 */
#define SENT1_CH2_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404184u)
/** Alias (User Manual Name) for SENT1_CH2_CFDR */
#define SENT1_CFDR2 (SENT1_CH2_CFDR)

/** \brief 188, Receiver control register 2 */
#define SENT1_CH2_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404188u)
/** Alias (User Manual Name) for SENT1_CH2_RCR */
#define SENT1_RCR2 (SENT1_CH2_RCR)

/** \brief 18C, Receive status register 2 */
#define SENT1_CH2_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440418Cu)
/** Alias (User Manual Name) for SENT1_CH2_RSR */
#define SENT1_RSR2 (SENT1_CH2_RSR)

/** \brief 190, Serial data and status register 2 */
#define SENT1_CH2_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404190u)
/** Alias (User Manual Name) for SENT1_CH2_SDS */
#define SENT1_SDS2 (SENT1_CH2_SDS)

/** \brief 194, Input and output control register 2 */
#define SENT1_CH2_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404194u)
/** Alias (User Manual Name) for SENT1_CH2_IOCR */
#define SENT1_IOCR2 (SENT1_CH2_IOCR)

/** \brief 198, SPC control register 2 */
#define SENT1_CH2_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404198u)
/** Alias (User Manual Name) for SENT1_CH2_SCR */
#define SENT1_SCR2 (SENT1_CH2_SCR)

/** \brief 19C, Receive data view register 2 */
#define SENT1_CH2_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440419Cu)
/** Alias (User Manual Name) for SENT1_CH2_VIEW */
#define SENT1_VIEW2 (SENT1_CH2_VIEW)

/** \brief 1A0, Interrupt status register 2 */
#define SENT1_CH2_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44041A0u)
/** Alias (User Manual Name) for SENT1_CH2_INTSTAT */
#define SENT1_INTSTAT2 (SENT1_CH2_INTSTAT)

/** \brief 1A4, Interrupt set register 2 */
#define SENT1_CH2_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44041A4u)
/** Alias (User Manual Name) for SENT1_CH2_INTSET */
#define SENT1_INTSET2 (SENT1_CH2_INTSET)

/** \brief 1A8, Interrupt clear register 2 */
#define SENT1_CH2_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44041A8u)
/** Alias (User Manual Name) for SENT1_CH2_INTCLR */
#define SENT1_INTCLR2 (SENT1_CH2_INTCLR)

/** \brief 1AC, Interrupt enable register 2 */
#define SENT1_CH2_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44041ACu)
/** Alias (User Manual Name) for SENT1_CH2_INTEN */
#define SENT1_INTEN2 (SENT1_CH2_INTEN)

/** \brief 1B0, Interrupt node pointer register 2 */
#define SENT1_CH2_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44041B0u)
/** Alias (User Manual Name) for SENT1_CH2_INP */
#define SENT1_INP2 (SENT1_CH2_INP)

/** \brief 1B4, Watch dog timer register 2 */
#define SENT1_CH2_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44041B4u)
/** Alias (User Manual Name) for SENT1_CH2_WDT */
#define SENT1_WDT2 (SENT1_CH2_WDT)

/** \brief 1C0, Channel pre divider register 3 */
#define SENT1_CH3_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF44041C0u)
/** Alias (User Manual Name) for SENT1_CH3_CPDR */
#define SENT1_CPDR3 (SENT1_CH3_CPDR)

/** \brief 1C4, Channel fractional divider register 3 */
#define SENT1_CH3_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF44041C4u)
/** Alias (User Manual Name) for SENT1_CH3_CFDR */
#define SENT1_CFDR3 (SENT1_CH3_CFDR)

/** \brief 1C8, Receiver control register 3 */
#define SENT1_CH3_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF44041C8u)
/** Alias (User Manual Name) for SENT1_CH3_RCR */
#define SENT1_RCR3 (SENT1_CH3_RCR)

/** \brief 1CC, Receive status register 3 */
#define SENT1_CH3_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF44041CCu)
/** Alias (User Manual Name) for SENT1_CH3_RSR */
#define SENT1_RSR3 (SENT1_CH3_RSR)

/** \brief 1D0, Serial data and status register 3 */
#define SENT1_CH3_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF44041D0u)
/** Alias (User Manual Name) for SENT1_CH3_SDS */
#define SENT1_SDS3 (SENT1_CH3_SDS)

/** \brief 1D4, Input and output control register 3 */
#define SENT1_CH3_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF44041D4u)
/** Alias (User Manual Name) for SENT1_CH3_IOCR */
#define SENT1_IOCR3 (SENT1_CH3_IOCR)

/** \brief 1D8, SPC control register 3 */
#define SENT1_CH3_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF44041D8u)
/** Alias (User Manual Name) for SENT1_CH3_SCR */
#define SENT1_SCR3 (SENT1_CH3_SCR)

/** \brief 1DC, Receive data view register 3 */
#define SENT1_CH3_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF44041DCu)
/** Alias (User Manual Name) for SENT1_CH3_VIEW */
#define SENT1_VIEW3 (SENT1_CH3_VIEW)

/** \brief 1E0, Interrupt status register 3 */
#define SENT1_CH3_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44041E0u)
/** Alias (User Manual Name) for SENT1_CH3_INTSTAT */
#define SENT1_INTSTAT3 (SENT1_CH3_INTSTAT)

/** \brief 1E4, Interrupt set register 3 */
#define SENT1_CH3_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44041E4u)
/** Alias (User Manual Name) for SENT1_CH3_INTSET */
#define SENT1_INTSET3 (SENT1_CH3_INTSET)

/** \brief 1E8, Interrupt clear register 3 */
#define SENT1_CH3_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44041E8u)
/** Alias (User Manual Name) for SENT1_CH3_INTCLR */
#define SENT1_INTCLR3 (SENT1_CH3_INTCLR)

/** \brief 1EC, Interrupt enable register 3 */
#define SENT1_CH3_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44041ECu)
/** Alias (User Manual Name) for SENT1_CH3_INTEN */
#define SENT1_INTEN3 (SENT1_CH3_INTEN)

/** \brief 1F0, Interrupt node pointer register 3 */
#define SENT1_CH3_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44041F0u)
/** Alias (User Manual Name) for SENT1_CH3_INP */
#define SENT1_INP3 (SENT1_CH3_INP)

/** \brief 1F4, Watch dog timer register 3 */
#define SENT1_CH3_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44041F4u)
/** Alias (User Manual Name) for SENT1_CH3_WDT */
#define SENT1_WDT3 (SENT1_CH3_WDT)

/** \brief 200, Channel pre divider register 4 */
#define SENT1_CH4_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404200u)
/** Alias (User Manual Name) for SENT1_CH4_CPDR */
#define SENT1_CPDR4 (SENT1_CH4_CPDR)

/** \brief 204, Channel fractional divider register 4 */
#define SENT1_CH4_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404204u)
/** Alias (User Manual Name) for SENT1_CH4_CFDR */
#define SENT1_CFDR4 (SENT1_CH4_CFDR)

/** \brief 208, Receiver control register 4 */
#define SENT1_CH4_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404208u)
/** Alias (User Manual Name) for SENT1_CH4_RCR */
#define SENT1_RCR4 (SENT1_CH4_RCR)

/** \brief 20C, Receive status register 4 */
#define SENT1_CH4_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440420Cu)
/** Alias (User Manual Name) for SENT1_CH4_RSR */
#define SENT1_RSR4 (SENT1_CH4_RSR)

/** \brief 210, Serial data and status register 4 */
#define SENT1_CH4_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404210u)
/** Alias (User Manual Name) for SENT1_CH4_SDS */
#define SENT1_SDS4 (SENT1_CH4_SDS)

/** \brief 214, Input and output control register 4 */
#define SENT1_CH4_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404214u)
/** Alias (User Manual Name) for SENT1_CH4_IOCR */
#define SENT1_IOCR4 (SENT1_CH4_IOCR)

/** \brief 218, SPC control register 4 */
#define SENT1_CH4_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404218u)
/** Alias (User Manual Name) for SENT1_CH4_SCR */
#define SENT1_SCR4 (SENT1_CH4_SCR)

/** \brief 21C, Receive data view register 4 */
#define SENT1_CH4_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440421Cu)
/** Alias (User Manual Name) for SENT1_CH4_VIEW */
#define SENT1_VIEW4 (SENT1_CH4_VIEW)

/** \brief 220, Interrupt status register 4 */
#define SENT1_CH4_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404220u)
/** Alias (User Manual Name) for SENT1_CH4_INTSTAT */
#define SENT1_INTSTAT4 (SENT1_CH4_INTSTAT)

/** \brief 224, Interrupt set register 4 */
#define SENT1_CH4_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404224u)
/** Alias (User Manual Name) for SENT1_CH4_INTSET */
#define SENT1_INTSET4 (SENT1_CH4_INTSET)

/** \brief 228, Interrupt clear register 4 */
#define SENT1_CH4_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404228u)
/** Alias (User Manual Name) for SENT1_CH4_INTCLR */
#define SENT1_INTCLR4 (SENT1_CH4_INTCLR)

/** \brief 22C, Interrupt enable register 4 */
#define SENT1_CH4_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440422Cu)
/** Alias (User Manual Name) for SENT1_CH4_INTEN */
#define SENT1_INTEN4 (SENT1_CH4_INTEN)

/** \brief 230, Interrupt node pointer register 4 */
#define SENT1_CH4_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404230u)
/** Alias (User Manual Name) for SENT1_CH4_INP */
#define SENT1_INP4 (SENT1_CH4_INP)

/** \brief 234, Watch dog timer register 4 */
#define SENT1_CH4_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404234u)
/** Alias (User Manual Name) for SENT1_CH4_WDT */
#define SENT1_WDT4 (SENT1_CH4_WDT)

/** \brief 240, Channel pre divider register 5 */
#define SENT1_CH5_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404240u)
/** Alias (User Manual Name) for SENT1_CH5_CPDR */
#define SENT1_CPDR5 (SENT1_CH5_CPDR)

/** \brief 244, Channel fractional divider register 5 */
#define SENT1_CH5_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404244u)
/** Alias (User Manual Name) for SENT1_CH5_CFDR */
#define SENT1_CFDR5 (SENT1_CH5_CFDR)

/** \brief 248, Receiver control register 5 */
#define SENT1_CH5_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404248u)
/** Alias (User Manual Name) for SENT1_CH5_RCR */
#define SENT1_RCR5 (SENT1_CH5_RCR)

/** \brief 24C, Receive status register 5 */
#define SENT1_CH5_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440424Cu)
/** Alias (User Manual Name) for SENT1_CH5_RSR */
#define SENT1_RSR5 (SENT1_CH5_RSR)

/** \brief 250, Serial data and status register 5 */
#define SENT1_CH5_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404250u)
/** Alias (User Manual Name) for SENT1_CH5_SDS */
#define SENT1_SDS5 (SENT1_CH5_SDS)

/** \brief 254, Input and output control register 5 */
#define SENT1_CH5_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404254u)
/** Alias (User Manual Name) for SENT1_CH5_IOCR */
#define SENT1_IOCR5 (SENT1_CH5_IOCR)

/** \brief 258, SPC control register 5 */
#define SENT1_CH5_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404258u)
/** Alias (User Manual Name) for SENT1_CH5_SCR */
#define SENT1_SCR5 (SENT1_CH5_SCR)

/** \brief 25C, Receive data view register 5 */
#define SENT1_CH5_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440425Cu)
/** Alias (User Manual Name) for SENT1_CH5_VIEW */
#define SENT1_VIEW5 (SENT1_CH5_VIEW)

/** \brief 260, Interrupt status register 5 */
#define SENT1_CH5_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404260u)
/** Alias (User Manual Name) for SENT1_CH5_INTSTAT */
#define SENT1_INTSTAT5 (SENT1_CH5_INTSTAT)

/** \brief 264, Interrupt set register 5 */
#define SENT1_CH5_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404264u)
/** Alias (User Manual Name) for SENT1_CH5_INTSET */
#define SENT1_INTSET5 (SENT1_CH5_INTSET)

/** \brief 268, Interrupt clear register 5 */
#define SENT1_CH5_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404268u)
/** Alias (User Manual Name) for SENT1_CH5_INTCLR */
#define SENT1_INTCLR5 (SENT1_CH5_INTCLR)

/** \brief 26C, Interrupt enable register 5 */
#define SENT1_CH5_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440426Cu)
/** Alias (User Manual Name) for SENT1_CH5_INTEN */
#define SENT1_INTEN5 (SENT1_CH5_INTEN)

/** \brief 270, Interrupt node pointer register 5 */
#define SENT1_CH5_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404270u)
/** Alias (User Manual Name) for SENT1_CH5_INP */
#define SENT1_INP5 (SENT1_CH5_INP)

/** \brief 274, Watch dog timer register 5 */
#define SENT1_CH5_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404274u)
/** Alias (User Manual Name) for SENT1_CH5_WDT */
#define SENT1_WDT5 (SENT1_CH5_WDT)

/** \brief 280, Channel pre divider register 6 */
#define SENT1_CH6_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404280u)
/** Alias (User Manual Name) for SENT1_CH6_CPDR */
#define SENT1_CPDR6 (SENT1_CH6_CPDR)

/** \brief 284, Channel fractional divider register 6 */
#define SENT1_CH6_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404284u)
/** Alias (User Manual Name) for SENT1_CH6_CFDR */
#define SENT1_CFDR6 (SENT1_CH6_CFDR)

/** \brief 288, Receiver control register 6 */
#define SENT1_CH6_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404288u)
/** Alias (User Manual Name) for SENT1_CH6_RCR */
#define SENT1_RCR6 (SENT1_CH6_RCR)

/** \brief 28C, Receive status register 6 */
#define SENT1_CH6_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440428Cu)
/** Alias (User Manual Name) for SENT1_CH6_RSR */
#define SENT1_RSR6 (SENT1_CH6_RSR)

/** \brief 290, Serial data and status register 6 */
#define SENT1_CH6_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404290u)
/** Alias (User Manual Name) for SENT1_CH6_SDS */
#define SENT1_SDS6 (SENT1_CH6_SDS)

/** \brief 294, Input and output control register 6 */
#define SENT1_CH6_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404294u)
/** Alias (User Manual Name) for SENT1_CH6_IOCR */
#define SENT1_IOCR6 (SENT1_CH6_IOCR)

/** \brief 298, SPC control register 6 */
#define SENT1_CH6_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404298u)
/** Alias (User Manual Name) for SENT1_CH6_SCR */
#define SENT1_SCR6 (SENT1_CH6_SCR)

/** \brief 29C, Receive data view register 6 */
#define SENT1_CH6_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440429Cu)
/** Alias (User Manual Name) for SENT1_CH6_VIEW */
#define SENT1_VIEW6 (SENT1_CH6_VIEW)

/** \brief 2A0, Interrupt status register 6 */
#define SENT1_CH6_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44042A0u)
/** Alias (User Manual Name) for SENT1_CH6_INTSTAT */
#define SENT1_INTSTAT6 (SENT1_CH6_INTSTAT)

/** \brief 2A4, Interrupt set register 6 */
#define SENT1_CH6_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44042A4u)
/** Alias (User Manual Name) for SENT1_CH6_INTSET */
#define SENT1_INTSET6 (SENT1_CH6_INTSET)

/** \brief 2A8, Interrupt clear register 6 */
#define SENT1_CH6_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44042A8u)
/** Alias (User Manual Name) for SENT1_CH6_INTCLR */
#define SENT1_INTCLR6 (SENT1_CH6_INTCLR)

/** \brief 2AC, Interrupt enable register 6 */
#define SENT1_CH6_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44042ACu)
/** Alias (User Manual Name) for SENT1_CH6_INTEN */
#define SENT1_INTEN6 (SENT1_CH6_INTEN)

/** \brief 2B0, Interrupt node pointer register 6 */
#define SENT1_CH6_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44042B0u)
/** Alias (User Manual Name) for SENT1_CH6_INP */
#define SENT1_INP6 (SENT1_CH6_INP)

/** \brief 2B4, Watch dog timer register 6 */
#define SENT1_CH6_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44042B4u)
/** Alias (User Manual Name) for SENT1_CH6_WDT */
#define SENT1_WDT6 (SENT1_CH6_WDT)

/** \brief 2C0, Channel pre divider register 7 */
#define SENT1_CH7_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF44042C0u)
/** Alias (User Manual Name) for SENT1_CH7_CPDR */
#define SENT1_CPDR7 (SENT1_CH7_CPDR)

/** \brief 2C4, Channel fractional divider register 7 */
#define SENT1_CH7_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF44042C4u)
/** Alias (User Manual Name) for SENT1_CH7_CFDR */
#define SENT1_CFDR7 (SENT1_CH7_CFDR)

/** \brief 2C8, Receiver control register 7 */
#define SENT1_CH7_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF44042C8u)
/** Alias (User Manual Name) for SENT1_CH7_RCR */
#define SENT1_RCR7 (SENT1_CH7_RCR)

/** \brief 2CC, Receive status register 7 */
#define SENT1_CH7_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF44042CCu)
/** Alias (User Manual Name) for SENT1_CH7_RSR */
#define SENT1_RSR7 (SENT1_CH7_RSR)

/** \brief 2D0, Serial data and status register 7 */
#define SENT1_CH7_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF44042D0u)
/** Alias (User Manual Name) for SENT1_CH7_SDS */
#define SENT1_SDS7 (SENT1_CH7_SDS)

/** \brief 2D4, Input and output control register 7 */
#define SENT1_CH7_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF44042D4u)
/** Alias (User Manual Name) for SENT1_CH7_IOCR */
#define SENT1_IOCR7 (SENT1_CH7_IOCR)

/** \brief 2D8, SPC control register 7 */
#define SENT1_CH7_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF44042D8u)
/** Alias (User Manual Name) for SENT1_CH7_SCR */
#define SENT1_SCR7 (SENT1_CH7_SCR)

/** \brief 2DC, Receive data view register 7 */
#define SENT1_CH7_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF44042DCu)
/** Alias (User Manual Name) for SENT1_CH7_VIEW */
#define SENT1_VIEW7 (SENT1_CH7_VIEW)

/** \brief 2E0, Interrupt status register 7 */
#define SENT1_CH7_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44042E0u)
/** Alias (User Manual Name) for SENT1_CH7_INTSTAT */
#define SENT1_INTSTAT7 (SENT1_CH7_INTSTAT)

/** \brief 2E4, Interrupt set register 7 */
#define SENT1_CH7_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44042E4u)
/** Alias (User Manual Name) for SENT1_CH7_INTSET */
#define SENT1_INTSET7 (SENT1_CH7_INTSET)

/** \brief 2E8, Interrupt clear register 7 */
#define SENT1_CH7_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44042E8u)
/** Alias (User Manual Name) for SENT1_CH7_INTCLR */
#define SENT1_INTCLR7 (SENT1_CH7_INTCLR)

/** \brief 2EC, Interrupt enable register 7 */
#define SENT1_CH7_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44042ECu)
/** Alias (User Manual Name) for SENT1_CH7_INTEN */
#define SENT1_INTEN7 (SENT1_CH7_INTEN)

/** \brief 2F0, Interrupt node pointer register 7 */
#define SENT1_CH7_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44042F0u)
/** Alias (User Manual Name) for SENT1_CH7_INP */
#define SENT1_INP7 (SENT1_CH7_INP)

/** \brief 2F4, Watch dog timer register 7 */
#define SENT1_CH7_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44042F4u)
/** Alias (User Manual Name) for SENT1_CH7_WDT */
#define SENT1_WDT7 (SENT1_CH7_WDT)

/** \brief 300, Channel pre divider register 8 */
#define SENT1_CH8_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404300u)
/** Alias (User Manual Name) for SENT1_CH8_CPDR */
#define SENT1_CPDR8 (SENT1_CH8_CPDR)

/** \brief 304, Channel fractional divider register 8 */
#define SENT1_CH8_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404304u)
/** Alias (User Manual Name) for SENT1_CH8_CFDR */
#define SENT1_CFDR8 (SENT1_CH8_CFDR)

/** \brief 308, Receiver control register 8 */
#define SENT1_CH8_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404308u)
/** Alias (User Manual Name) for SENT1_CH8_RCR */
#define SENT1_RCR8 (SENT1_CH8_RCR)

/** \brief 30C, Receive status register 8 */
#define SENT1_CH8_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440430Cu)
/** Alias (User Manual Name) for SENT1_CH8_RSR */
#define SENT1_RSR8 (SENT1_CH8_RSR)

/** \brief 310, Serial data and status register 8 */
#define SENT1_CH8_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404310u)
/** Alias (User Manual Name) for SENT1_CH8_SDS */
#define SENT1_SDS8 (SENT1_CH8_SDS)

/** \brief 314, Input and output control register 8 */
#define SENT1_CH8_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404314u)
/** Alias (User Manual Name) for SENT1_CH8_IOCR */
#define SENT1_IOCR8 (SENT1_CH8_IOCR)

/** \brief 318, SPC control register 8 */
#define SENT1_CH8_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404318u)
/** Alias (User Manual Name) for SENT1_CH8_SCR */
#define SENT1_SCR8 (SENT1_CH8_SCR)

/** \brief 31C, Receive data view register 8 */
#define SENT1_CH8_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440431Cu)
/** Alias (User Manual Name) for SENT1_CH8_VIEW */
#define SENT1_VIEW8 (SENT1_CH8_VIEW)

/** \brief 320, Interrupt status register 8 */
#define SENT1_CH8_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404320u)
/** Alias (User Manual Name) for SENT1_CH8_INTSTAT */
#define SENT1_INTSTAT8 (SENT1_CH8_INTSTAT)

/** \brief 324, Interrupt set register 8 */
#define SENT1_CH8_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404324u)
/** Alias (User Manual Name) for SENT1_CH8_INTSET */
#define SENT1_INTSET8 (SENT1_CH8_INTSET)

/** \brief 328, Interrupt clear register 8 */
#define SENT1_CH8_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404328u)
/** Alias (User Manual Name) for SENT1_CH8_INTCLR */
#define SENT1_INTCLR8 (SENT1_CH8_INTCLR)

/** \brief 32C, Interrupt enable register 8 */
#define SENT1_CH8_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440432Cu)
/** Alias (User Manual Name) for SENT1_CH8_INTEN */
#define SENT1_INTEN8 (SENT1_CH8_INTEN)

/** \brief 330, Interrupt node pointer register 8 */
#define SENT1_CH8_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404330u)
/** Alias (User Manual Name) for SENT1_CH8_INP */
#define SENT1_INP8 (SENT1_CH8_INP)

/** \brief 334, Watch dog timer register 8 */
#define SENT1_CH8_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404334u)
/** Alias (User Manual Name) for SENT1_CH8_WDT */
#define SENT1_WDT8 (SENT1_CH8_WDT)

/** \brief 340, Channel pre divider register 9 */
#define SENT1_CH9_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404340u)
/** Alias (User Manual Name) for SENT1_CH9_CPDR */
#define SENT1_CPDR9 (SENT1_CH9_CPDR)

/** \brief 344, Channel fractional divider register 9 */
#define SENT1_CH9_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404344u)
/** Alias (User Manual Name) for SENT1_CH9_CFDR */
#define SENT1_CFDR9 (SENT1_CH9_CFDR)

/** \brief 348, Receiver control register 9 */
#define SENT1_CH9_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404348u)
/** Alias (User Manual Name) for SENT1_CH9_RCR */
#define SENT1_RCR9 (SENT1_CH9_RCR)

/** \brief 34C, Receive status register 9 */
#define SENT1_CH9_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440434Cu)
/** Alias (User Manual Name) for SENT1_CH9_RSR */
#define SENT1_RSR9 (SENT1_CH9_RSR)

/** \brief 350, Serial data and status register 9 */
#define SENT1_CH9_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404350u)
/** Alias (User Manual Name) for SENT1_CH9_SDS */
#define SENT1_SDS9 (SENT1_CH9_SDS)

/** \brief 354, Input and output control register 9 */
#define SENT1_CH9_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404354u)
/** Alias (User Manual Name) for SENT1_CH9_IOCR */
#define SENT1_IOCR9 (SENT1_CH9_IOCR)

/** \brief 358, SPC control register 9 */
#define SENT1_CH9_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404358u)
/** Alias (User Manual Name) for SENT1_CH9_SCR */
#define SENT1_SCR9 (SENT1_CH9_SCR)

/** \brief 35C, Receive data view register 9 */
#define SENT1_CH9_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440435Cu)
/** Alias (User Manual Name) for SENT1_CH9_VIEW */
#define SENT1_VIEW9 (SENT1_CH9_VIEW)

/** \brief 360, Interrupt status register 9 */
#define SENT1_CH9_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404360u)
/** Alias (User Manual Name) for SENT1_CH9_INTSTAT */
#define SENT1_INTSTAT9 (SENT1_CH9_INTSTAT)

/** \brief 364, Interrupt set register 9 */
#define SENT1_CH9_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404364u)
/** Alias (User Manual Name) for SENT1_CH9_INTSET */
#define SENT1_INTSET9 (SENT1_CH9_INTSET)

/** \brief 368, Interrupt clear register 9 */
#define SENT1_CH9_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404368u)
/** Alias (User Manual Name) for SENT1_CH9_INTCLR */
#define SENT1_INTCLR9 (SENT1_CH9_INTCLR)

/** \brief 36C, Interrupt enable register 9 */
#define SENT1_CH9_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440436Cu)
/** Alias (User Manual Name) for SENT1_CH9_INTEN */
#define SENT1_INTEN9 (SENT1_CH9_INTEN)

/** \brief 370, Interrupt node pointer register 9 */
#define SENT1_CH9_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404370u)
/** Alias (User Manual Name) for SENT1_CH9_INP */
#define SENT1_INP9 (SENT1_CH9_INP)

/** \brief 374, Watch dog timer register 9 */
#define SENT1_CH9_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404374u)
/** Alias (User Manual Name) for SENT1_CH9_WDT */
#define SENT1_WDT9 (SENT1_CH9_WDT)

/** \brief 380, Channel pre divider register 10 */
#define SENT1_CH10_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404380u)
/** Alias (User Manual Name) for SENT1_CH10_CPDR */
#define SENT1_CPDR10 (SENT1_CH10_CPDR)

/** \brief 384, Channel fractional divider register 10 */
#define SENT1_CH10_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404384u)
/** Alias (User Manual Name) for SENT1_CH10_CFDR */
#define SENT1_CFDR10 (SENT1_CH10_CFDR)

/** \brief 388, Receiver control register 10 */
#define SENT1_CH10_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404388u)
/** Alias (User Manual Name) for SENT1_CH10_RCR */
#define SENT1_RCR10 (SENT1_CH10_RCR)

/** \brief 38C, Receive status register 10 */
#define SENT1_CH10_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440438Cu)
/** Alias (User Manual Name) for SENT1_CH10_RSR */
#define SENT1_RSR10 (SENT1_CH10_RSR)

/** \brief 390, Serial data and status register 10 */
#define SENT1_CH10_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404390u)
/** Alias (User Manual Name) for SENT1_CH10_SDS */
#define SENT1_SDS10 (SENT1_CH10_SDS)

/** \brief 394, Input and output control register 10 */
#define SENT1_CH10_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404394u)
/** Alias (User Manual Name) for SENT1_CH10_IOCR */
#define SENT1_IOCR10 (SENT1_CH10_IOCR)

/** \brief 398, SPC control register 10 */
#define SENT1_CH10_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404398u)
/** Alias (User Manual Name) for SENT1_CH10_SCR */
#define SENT1_SCR10 (SENT1_CH10_SCR)

/** \brief 39C, Receive data view register 10 */
#define SENT1_CH10_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440439Cu)
/** Alias (User Manual Name) for SENT1_CH10_VIEW */
#define SENT1_VIEW10 (SENT1_CH10_VIEW)

/** \brief 3A0, Interrupt status register 10 */
#define SENT1_CH10_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44043A0u)
/** Alias (User Manual Name) for SENT1_CH10_INTSTAT */
#define SENT1_INTSTAT10 (SENT1_CH10_INTSTAT)

/** \brief 3A4, Interrupt set register 10 */
#define SENT1_CH10_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44043A4u)
/** Alias (User Manual Name) for SENT1_CH10_INTSET */
#define SENT1_INTSET10 (SENT1_CH10_INTSET)

/** \brief 3A8, Interrupt clear register 10 */
#define SENT1_CH10_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44043A8u)
/** Alias (User Manual Name) for SENT1_CH10_INTCLR */
#define SENT1_INTCLR10 (SENT1_CH10_INTCLR)

/** \brief 3AC, Interrupt enable register 10 */
#define SENT1_CH10_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44043ACu)
/** Alias (User Manual Name) for SENT1_CH10_INTEN */
#define SENT1_INTEN10 (SENT1_CH10_INTEN)

/** \brief 3B0, Interrupt node pointer register 10 */
#define SENT1_CH10_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44043B0u)
/** Alias (User Manual Name) for SENT1_CH10_INP */
#define SENT1_INP10 (SENT1_CH10_INP)

/** \brief 3B4, Watch dog timer register 10 */
#define SENT1_CH10_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44043B4u)
/** Alias (User Manual Name) for SENT1_CH10_WDT */
#define SENT1_WDT10 (SENT1_CH10_WDT)

/** \brief 3C0, Channel pre divider register 11 */
#define SENT1_CH11_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF44043C0u)
/** Alias (User Manual Name) for SENT1_CH11_CPDR */
#define SENT1_CPDR11 (SENT1_CH11_CPDR)

/** \brief 3C4, Channel fractional divider register 11 */
#define SENT1_CH11_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF44043C4u)
/** Alias (User Manual Name) for SENT1_CH11_CFDR */
#define SENT1_CFDR11 (SENT1_CH11_CFDR)

/** \brief 3C8, Receiver control register 11 */
#define SENT1_CH11_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF44043C8u)
/** Alias (User Manual Name) for SENT1_CH11_RCR */
#define SENT1_RCR11 (SENT1_CH11_RCR)

/** \brief 3CC, Receive status register 11 */
#define SENT1_CH11_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF44043CCu)
/** Alias (User Manual Name) for SENT1_CH11_RSR */
#define SENT1_RSR11 (SENT1_CH11_RSR)

/** \brief 3D0, Serial data and status register 11 */
#define SENT1_CH11_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF44043D0u)
/** Alias (User Manual Name) for SENT1_CH11_SDS */
#define SENT1_SDS11 (SENT1_CH11_SDS)

/** \brief 3D4, Input and output control register 11 */
#define SENT1_CH11_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF44043D4u)
/** Alias (User Manual Name) for SENT1_CH11_IOCR */
#define SENT1_IOCR11 (SENT1_CH11_IOCR)

/** \brief 3D8, SPC control register 11 */
#define SENT1_CH11_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF44043D8u)
/** Alias (User Manual Name) for SENT1_CH11_SCR */
#define SENT1_SCR11 (SENT1_CH11_SCR)

/** \brief 3DC, Receive data view register 11 */
#define SENT1_CH11_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF44043DCu)
/** Alias (User Manual Name) for SENT1_CH11_VIEW */
#define SENT1_VIEW11 (SENT1_CH11_VIEW)

/** \brief 3E0, Interrupt status register 11 */
#define SENT1_CH11_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44043E0u)
/** Alias (User Manual Name) for SENT1_CH11_INTSTAT */
#define SENT1_INTSTAT11 (SENT1_CH11_INTSTAT)

/** \brief 3E4, Interrupt set register 11 */
#define SENT1_CH11_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44043E4u)
/** Alias (User Manual Name) for SENT1_CH11_INTSET */
#define SENT1_INTSET11 (SENT1_CH11_INTSET)

/** \brief 3E8, Interrupt clear register 11 */
#define SENT1_CH11_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44043E8u)
/** Alias (User Manual Name) for SENT1_CH11_INTCLR */
#define SENT1_INTCLR11 (SENT1_CH11_INTCLR)

/** \brief 3EC, Interrupt enable register 11 */
#define SENT1_CH11_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44043ECu)
/** Alias (User Manual Name) for SENT1_CH11_INTEN */
#define SENT1_INTEN11 (SENT1_CH11_INTEN)

/** \brief 3F0, Interrupt node pointer register 11 */
#define SENT1_CH11_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44043F0u)
/** Alias (User Manual Name) for SENT1_CH11_INP */
#define SENT1_INP11 (SENT1_CH11_INP)

/** \brief 3F4, Watch dog timer register 11 */
#define SENT1_CH11_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44043F4u)
/** Alias (User Manual Name) for SENT1_CH11_WDT */
#define SENT1_WDT11 (SENT1_CH11_WDT)

/** \brief 400, Channel pre divider register 12 */
#define SENT1_CH12_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404400u)
/** Alias (User Manual Name) for SENT1_CH12_CPDR */
#define SENT1_CPDR12 (SENT1_CH12_CPDR)

/** \brief 404, Channel fractional divider register 12 */
#define SENT1_CH12_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404404u)
/** Alias (User Manual Name) for SENT1_CH12_CFDR */
#define SENT1_CFDR12 (SENT1_CH12_CFDR)

/** \brief 408, Receiver control register 12 */
#define SENT1_CH12_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404408u)
/** Alias (User Manual Name) for SENT1_CH12_RCR */
#define SENT1_RCR12 (SENT1_CH12_RCR)

/** \brief 40C, Receive status register 12 */
#define SENT1_CH12_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440440Cu)
/** Alias (User Manual Name) for SENT1_CH12_RSR */
#define SENT1_RSR12 (SENT1_CH12_RSR)

/** \brief 410, Serial data and status register 12 */
#define SENT1_CH12_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404410u)
/** Alias (User Manual Name) for SENT1_CH12_SDS */
#define SENT1_SDS12 (SENT1_CH12_SDS)

/** \brief 414, Input and output control register 12 */
#define SENT1_CH12_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404414u)
/** Alias (User Manual Name) for SENT1_CH12_IOCR */
#define SENT1_IOCR12 (SENT1_CH12_IOCR)

/** \brief 418, SPC control register 12 */
#define SENT1_CH12_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404418u)
/** Alias (User Manual Name) for SENT1_CH12_SCR */
#define SENT1_SCR12 (SENT1_CH12_SCR)

/** \brief 41C, Receive data view register 12 */
#define SENT1_CH12_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440441Cu)
/** Alias (User Manual Name) for SENT1_CH12_VIEW */
#define SENT1_VIEW12 (SENT1_CH12_VIEW)

/** \brief 420, Interrupt status register 12 */
#define SENT1_CH12_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404420u)
/** Alias (User Manual Name) for SENT1_CH12_INTSTAT */
#define SENT1_INTSTAT12 (SENT1_CH12_INTSTAT)

/** \brief 424, Interrupt set register 12 */
#define SENT1_CH12_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404424u)
/** Alias (User Manual Name) for SENT1_CH12_INTSET */
#define SENT1_INTSET12 (SENT1_CH12_INTSET)

/** \brief 428, Interrupt clear register 12 */
#define SENT1_CH12_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404428u)
/** Alias (User Manual Name) for SENT1_CH12_INTCLR */
#define SENT1_INTCLR12 (SENT1_CH12_INTCLR)

/** \brief 42C, Interrupt enable register 12 */
#define SENT1_CH12_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440442Cu)
/** Alias (User Manual Name) for SENT1_CH12_INTEN */
#define SENT1_INTEN12 (SENT1_CH12_INTEN)

/** \brief 430, Interrupt node pointer register 12 */
#define SENT1_CH12_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404430u)
/** Alias (User Manual Name) for SENT1_CH12_INP */
#define SENT1_INP12 (SENT1_CH12_INP)

/** \brief 434, Watch dog timer register 12 */
#define SENT1_CH12_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404434u)
/** Alias (User Manual Name) for SENT1_CH12_WDT */
#define SENT1_WDT12 (SENT1_CH12_WDT)

/** \brief 440, Channel pre divider register 13 */
#define SENT1_CH13_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404440u)
/** Alias (User Manual Name) for SENT1_CH13_CPDR */
#define SENT1_CPDR13 (SENT1_CH13_CPDR)

/** \brief 444, Channel fractional divider register 13 */
#define SENT1_CH13_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404444u)
/** Alias (User Manual Name) for SENT1_CH13_CFDR */
#define SENT1_CFDR13 (SENT1_CH13_CFDR)

/** \brief 448, Receiver control register 13 */
#define SENT1_CH13_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404448u)
/** Alias (User Manual Name) for SENT1_CH13_RCR */
#define SENT1_RCR13 (SENT1_CH13_RCR)

/** \brief 44C, Receive status register 13 */
#define SENT1_CH13_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440444Cu)
/** Alias (User Manual Name) for SENT1_CH13_RSR */
#define SENT1_RSR13 (SENT1_CH13_RSR)

/** \brief 450, Serial data and status register 13 */
#define SENT1_CH13_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404450u)
/** Alias (User Manual Name) for SENT1_CH13_SDS */
#define SENT1_SDS13 (SENT1_CH13_SDS)

/** \brief 454, Input and output control register 13 */
#define SENT1_CH13_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404454u)
/** Alias (User Manual Name) for SENT1_CH13_IOCR */
#define SENT1_IOCR13 (SENT1_CH13_IOCR)

/** \brief 458, SPC control register 13 */
#define SENT1_CH13_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404458u)
/** Alias (User Manual Name) for SENT1_CH13_SCR */
#define SENT1_SCR13 (SENT1_CH13_SCR)

/** \brief 45C, Receive data view register 13 */
#define SENT1_CH13_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440445Cu)
/** Alias (User Manual Name) for SENT1_CH13_VIEW */
#define SENT1_VIEW13 (SENT1_CH13_VIEW)

/** \brief 460, Interrupt status register 13 */
#define SENT1_CH13_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF4404460u)
/** Alias (User Manual Name) for SENT1_CH13_INTSTAT */
#define SENT1_INTSTAT13 (SENT1_CH13_INTSTAT)

/** \brief 464, Interrupt set register 13 */
#define SENT1_CH13_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF4404464u)
/** Alias (User Manual Name) for SENT1_CH13_INTSET */
#define SENT1_INTSET13 (SENT1_CH13_INTSET)

/** \brief 468, Interrupt clear register 13 */
#define SENT1_CH13_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF4404468u)
/** Alias (User Manual Name) for SENT1_CH13_INTCLR */
#define SENT1_INTCLR13 (SENT1_CH13_INTCLR)

/** \brief 46C, Interrupt enable register 13 */
#define SENT1_CH13_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF440446Cu)
/** Alias (User Manual Name) for SENT1_CH13_INTEN */
#define SENT1_INTEN13 (SENT1_CH13_INTEN)

/** \brief 470, Interrupt node pointer register 13 */
#define SENT1_CH13_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF4404470u)
/** Alias (User Manual Name) for SENT1_CH13_INP */
#define SENT1_INP13 (SENT1_CH13_INP)

/** \brief 474, Watch dog timer register 13 */
#define SENT1_CH13_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF4404474u)
/** Alias (User Manual Name) for SENT1_CH13_WDT */
#define SENT1_WDT13 (SENT1_CH13_WDT)

/** \brief 480, Channel pre divider register 14 */
#define SENT1_CH14_CPDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CPDR*)0xF4404480u)
/** Alias (User Manual Name) for SENT1_CH14_CPDR */
#define SENT1_CPDR14 (SENT1_CH14_CPDR)

/** \brief 484, Channel fractional divider register 14 */
#define SENT1_CH14_CFDR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_CFDR*)0xF4404484u)
/** Alias (User Manual Name) for SENT1_CH14_CFDR */
#define SENT1_CFDR14 (SENT1_CH14_CFDR)

/** \brief 488, Receiver control register 14 */
#define SENT1_CH14_RCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RCR*)0xF4404488u)
/** Alias (User Manual Name) for SENT1_CH14_RCR */
#define SENT1_RCR14 (SENT1_CH14_RCR)

/** \brief 48C, Receive status register 14 */
#define SENT1_CH14_RSR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_RSR*)0xF440448Cu)
/** Alias (User Manual Name) for SENT1_CH14_RSR */
#define SENT1_RSR14 (SENT1_CH14_RSR)

/** \brief 490, Serial data and status register 14 */
#define SENT1_CH14_SDS /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SDS*)0xF4404490u)
/** Alias (User Manual Name) for SENT1_CH14_SDS */
#define SENT1_SDS14 (SENT1_CH14_SDS)

/** \brief 494, Input and output control register 14 */
#define SENT1_CH14_IOCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_IOCR*)0xF4404494u)
/** Alias (User Manual Name) for SENT1_CH14_IOCR */
#define SENT1_IOCR14 (SENT1_CH14_IOCR)

/** \brief 498, SPC control register 14 */
#define SENT1_CH14_SCR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_SCR*)0xF4404498u)
/** Alias (User Manual Name) for SENT1_CH14_SCR */
#define SENT1_SCR14 (SENT1_CH14_SCR)

/** \brief 49C, Receive data view register 14 */
#define SENT1_CH14_VIEW /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_VIEW*)0xF440449Cu)
/** Alias (User Manual Name) for SENT1_CH14_VIEW */
#define SENT1_VIEW14 (SENT1_CH14_VIEW)

/** \brief 4A0, Interrupt status register 14 */
#define SENT1_CH14_INTSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSTAT*)0xF44044A0u)
/** Alias (User Manual Name) for SENT1_CH14_INTSTAT */
#define SENT1_INTSTAT14 (SENT1_CH14_INTSTAT)

/** \brief 4A4, Interrupt set register 14 */
#define SENT1_CH14_INTSET /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTSET*)0xF44044A4u)
/** Alias (User Manual Name) for SENT1_CH14_INTSET */
#define SENT1_INTSET14 (SENT1_CH14_INTSET)

/** \brief 4A8, Interrupt clear register 14 */
#define SENT1_CH14_INTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTCLR*)0xF44044A8u)
/** Alias (User Manual Name) for SENT1_CH14_INTCLR */
#define SENT1_INTCLR14 (SENT1_CH14_INTCLR)

/** \brief 4AC, Interrupt enable register 14 */
#define SENT1_CH14_INTEN /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INTEN*)0xF44044ACu)
/** Alias (User Manual Name) for SENT1_CH14_INTEN */
#define SENT1_INTEN14 (SENT1_CH14_INTEN)

/** \brief 4B0, Interrupt node pointer register 14 */
#define SENT1_CH14_INP /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_INP*)0xF44044B0u)
/** Alias (User Manual Name) for SENT1_CH14_INP */
#define SENT1_INP14 (SENT1_CH14_INP)

/** \brief 4B4, Watch dog timer register 14 */
#define SENT1_CH14_WDT /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_CH_WDT*)0xF44044B4u)
/** Alias (User Manual Name) for SENT1_CH14_WDT */
#define SENT1_WDT14 (SENT1_CH14_WDT)

/** \brief A80, Receive time stamp register 0 */
#define SENT1_RTS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A80u)

/** \brief A84, Receive time stamp register 1 */
#define SENT1_RTS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A84u)

/** \brief A88, Receive time stamp register 2 */
#define SENT1_RTS2 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A88u)

/** \brief A8C, Receive time stamp register 3 */
#define SENT1_RTS3 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A8Cu)

/** \brief A90, Receive time stamp register 4 */
#define SENT1_RTS4 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A90u)

/** \brief A94, Receive time stamp register 5 */
#define SENT1_RTS5 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A94u)

/** \brief A98, Receive time stamp register 6 */
#define SENT1_RTS6 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A98u)

/** \brief A9C, Receive time stamp register 7 */
#define SENT1_RTS7 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404A9Cu)

/** \brief AA0, Receive time stamp register 8 */
#define SENT1_RTS8 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404AA0u)

/** \brief AA4, Receive time stamp register 9 */
#define SENT1_RTS9 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404AA4u)

/** \brief AA8, Receive time stamp register 10 */
#define SENT1_RTS10 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404AA8u)

/** \brief AAC, Receive time stamp register 11 */
#define SENT1_RTS11 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404AACu)

/** \brief AB0, Receive time stamp register 12 */
#define SENT1_RTS12 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404AB0u)

/** \brief AB4, Receive time stamp register 13 */
#define SENT1_RTS13 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404AB4u)

/** \brief AB8, Receive time stamp register 14 */
#define SENT1_RTS14 /*lint --e(923, 9078)*/ (*(volatile Ifx_SENT_RTS*)0xF4404AB8u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXSENT_REG_H */
