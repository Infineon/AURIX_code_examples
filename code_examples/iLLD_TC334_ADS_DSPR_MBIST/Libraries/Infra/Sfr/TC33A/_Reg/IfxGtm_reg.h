/**
 * \file IfxGtm_reg.h
 * \brief
 * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: TC33X32X_UM_V1.5.0
 * Specification: TC3xx User Manual.V1.5.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Gtm_Registers_Cfg Gtm address
 * \ingroup IfxSfr_Gtm_Registers
 * 
 * \defgroup IfxSfr_Gtm_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Gtm_Registers_Cfg
 *
 * \defgroup IfxSfr_Gtm_Registers_Cfg_Gtm 2-GTM
 * \ingroup IfxSfr_Gtm_Registers_Cfg
 *
 *
 */
#ifndef IFXGTM_REG_H
#define IFXGTM_REG_H 1
/******************************************************************************/
#include "IfxGtm_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Gtm_Registers_Cfg_BaseAddress
 * \{  */

/** \brief GTM object */
#define MODULE_GTM /*lint --e(923, 9078)*/ ((*(Ifx_GTM*)0xF0100000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Gtm_Registers_Cfg_Gtm
 * \{  */
/** \brief 0, GTM Version Control Register */
#define GTM_REV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_REV*)0xF0100000u)

/** \brief 4, GTM Global Reset Register */
#define GTM_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_RST*)0xF0100004u)

/** \brief 8, GTM Global Control Register */
#define GTM_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CTRL*)0xF0100008u)

/** \brief C, GTM AEI Timeout Exception Address Register */
#define GTM_AEI_ADDR_XPT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_AEI_ADDR_XPT*)0xF010000Cu)

/** \brief 10, GTM Interrupt Notification Register */
#define GTM_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_IRQ_NOTIFY*)0xF0100010u)

/** \brief 14, GTM Interrupt Enable Register */
#define GTM_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_IRQ_EN*)0xF0100014u)

/** \brief 18, GTM Software Interrupt Generation Register */
#define GTM_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_IRQ_FORCINT*)0xF0100018u)

/** \brief 1C, GTM Top Level Interrupts Mode Selection Register */
#define GTM_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_IRQ_MODE*)0xF010001Cu)

/** \brief 20, GTM Error Interrupt Enable Register */
#define GTM_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_EIRQ_EN*)0xF0100020u)

/** \brief 24, GTM Hardware Configuration Register */
#define GTM_HW_CONF /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_HW_CONF*)0xF0100024u)

/** \brief 28, GTM Configuration Register */
#define GTM_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CFG*)0xF0100028u)

/** \brief 2C, GTM AEI Non Zero Status Register */
#define GTM_AEI_STA_XPT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_AEI_STA_XPT*)0xF010002Cu)

/** \brief 30, GTM AEI Bridge Mode Register */
#define GTM_BRIDGE_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRIDGE_MODE*)0xF0100030u)

/** \brief 34, GTM AEI Bridge Pointer 1 Register */
#define GTM_BRIDGE_PTR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRIDGE_PTR1*)0xF0100034u)

/** \brief 38, GTM AEI Bridge Pointer 2 Register */
#define GTM_BRIDGE_PTR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRIDGE_PTR2*)0xF0100038u)

/** \brief 40, GTM TIM 0 Module AUX_IN Source Selection Register */
#define GTM_AUX_IN_SRC_TIM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_AUX_IN_SRC_TIM*)0xF0100040u)
/** Alias (User Manual Name) for GTM_AUX_IN_SRC_TIM0.
* To use register names with standard convension, please use GTM_AUX_IN_SRC_TIM0.
*/
#define GTM_TIM0_AUX_IN_SRC (GTM_AUX_IN_SRC_TIM0)

/** \brief 44, GTM TIM 1 Module AUX_IN Source Selection Register */
#define GTM_AUX_IN_SRC_TIM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_AUX_IN_SRC_TIM*)0xF0100044u)
/** Alias (User Manual Name) for GTM_AUX_IN_SRC_TIM1.
* To use register names with standard convension, please use GTM_AUX_IN_SRC_TIM1.
*/
#define GTM_TIM1_AUX_IN_SRC (GTM_AUX_IN_SRC_TIM1)

/** \brief 80, GTM TOM 0 Output Level */
#define GTM_OUT_TOM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OUT_TOM*)0xF0100080u)
/** Alias (User Manual Name) for GTM_OUT_TOM0.
* To use register names with standard convension, please use GTM_OUT_TOM0.
*/
#define GTM_TOM0_OUT (GTM_OUT_TOM0)

/** \brief 84, GTM TOM 1 Output Level */
#define GTM_OUT_TOM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OUT_TOM*)0xF0100084u)
/** Alias (User Manual Name) for GTM_OUT_TOM1.
* To use register names with standard convension, please use GTM_OUT_TOM1.
*/
#define GTM_TOM1_OUT (GTM_OUT_TOM1)

/** \brief 98, GTM ATOM 0 Output Level */
#define GTM_OUT_ATOM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OUT_ATOM*)0xF0100098u)
/** Alias (User Manual Name) for GTM_OUT_ATOM0.
* To use register names with standard convension, please use GTM_OUT_ATOM0.
*/
#define GTM_ATOM0_OUT (GTM_OUT_ATOM0)

/** \brief B0, GTM Cluster Clock Configuration */
#define GTM_CLS_CLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CLS_CLK_CFG*)0xF01000B0u)

/** \brief 100, TBU Global Channel Enable */
#define GTM_TBU_CHEN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TBU_CHEN*)0xF0100100u)

/** \brief 104, TBU Channel 0 Control Register */
#define GTM_TBU_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TBU_CH0_CTRL*)0xF0100104u)

/** \brief 108, TBU Channel 0 Base Register */
#define GTM_TBU_CH0_BASE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TBU_CH0_BASE*)0xF0100108u)

/** \brief 10C, TBU Channel 1 Control Register */
#define GTM_TBU_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TBU_CH1_CTRL*)0xF010010Cu)

/** \brief 110, TBU Channel 1 Base Register */
#define GTM_TBU_CH1_BASE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TBU_CH1_BASE*)0xF0100110u)

/** \brief 114, TBU Channel 2 Control Register */
#define GTM_TBU_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TBU_CH2_CTRL*)0xF0100114u)

/** \brief 118, TBU Channel 2 Base Register */
#define GTM_TBU_CH2_BASE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TBU_CH2_BASE*)0xF0100118u)

/** \brief 180, Monitor Status Register */
#define GTM_MON_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_MON_STATUS*)0xF0100180u)

/** \brief 200, CMP Comparator Enable Register */
#define GTM_CMP_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMP_EN*)0xF0100200u)

/** \brief 204, CMP Event Notification Register */
#define GTM_CMP_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMP_IRQ_NOTIFY*)0xF0100204u)

/** \brief 208, CMP Interrupt Enable Register */
#define GTM_CMP_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMP_IRQ_EN*)0xF0100208u)

/** \brief 20C, CMP Interrupt Force Register */
#define GTM_CMP_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMP_IRQ_FORCINT*)0xF010020Cu)

/** \brief 210, CMP Interrupt Mode Configuration Register */
#define GTM_CMP_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMP_IRQ_MODE*)0xF0100210u)

/** \brief 214, CMP error interrupt enable register */
#define GTM_CMP_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMP_EIRQ_EN*)0xF0100214u)

/** \brief 280, ARU Access Register */
#define GTM_ARU_ACCESS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_ACCESS*)0xF0100280u)

/** \brief 284, ARU Access Register Upper Data Word */
#define GTM_ARU_DATA_H /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DATA_H*)0xF0100284u)

/** \brief 288, ARU Access Register Lower Data Word */
#define GTM_ARU_DATA_L /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DATA_L*)0xF0100288u)

/** \brief 28C, ARU Debug Access Channel 0 */
#define GTM_ARU_DBG_ACCESS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DBG_ACCESS0*)0xF010028Cu)

/** \brief 290, ARU Debug Access 0 Transfer Register Upper Data Word */
#define GTM_ARU_DBG_DATA0_H /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DBG_DATA0_H*)0xF0100290u)

/** \brief 294, ARU Debug Access 0 Transfer Register Lower Data Word */
#define GTM_ARU_DBG_DATA0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DBG_DATA0_L*)0xF0100294u)

/** \brief 298, ARU Debug Access Channel 1 */
#define GTM_ARU_DBG_ACCESS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DBG_ACCESS1*)0xF0100298u)

/** \brief 29C, ARU Debug Access 1 Transfer Register Upper Data Word */
#define GTM_ARU_DBG_DATA1_H /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DBG_DATA1_H*)0xF010029Cu)

/** \brief 2A0, ARU Debug Access 1 Transfer Register Lower Data Word */
#define GTM_ARU_DBG_DATA1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DBG_DATA1_L*)0xF01002A0u)

/** \brief 2A4, ARU Interrupt Notification Register */
#define GTM_ARU_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_IRQ_NOTIFY*)0xF01002A4u)

/** \brief 2A8, ARU Interrupt Enable Register */
#define GTM_ARU_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_IRQ_EN*)0xF01002A8u)

/** \brief 2AC, ARU Force Interrupt Register */
#define GTM_ARU_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_IRQ_FORCINT*)0xF01002ACu)

/** \brief 2B0, ARU Interrupt Mode Register */
#define GTM_ARU_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_IRQ_MODE*)0xF01002B0u)

/** \brief 2B4, ARU caddr Counter End Value Register */
#define GTM_ARU_CADDR_END /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_CADDR_END*)0xF01002B4u)

/** \brief 2BC, ARU Enable Dynamic Routing Register */
#define GTM_ARU_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_CTRL*)0xF01002BCu)

/** \brief 2C0, ARU 0 Dynamic Routing Control Register */
#define GTM_ARU_DYN_CTRL0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_CTRL*)0xF01002C0u)
/** Alias (User Manual Name) for GTM_ARU_DYN_CTRL0.
* To use register names with standard convension, please use GTM_ARU_DYN_CTRL0.
*/
#define GTM_ARU_0_DYN_CTRL (GTM_ARU_DYN_CTRL0)

/** \brief 2C4, ARU 1 Dynamic Routing Control Register */
#define GTM_ARU_DYN_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_CTRL*)0xF01002C4u)
/** Alias (User Manual Name) for GTM_ARU_DYN_CTRL1.
* To use register names with standard convension, please use GTM_ARU_DYN_CTRL1.
*/
#define GTM_ARU_1_DYN_CTRL (GTM_ARU_DYN_CTRL1)

/** \brief 2C8, ARU 0 Lower Bits of DYN_ROUTE Register */
#define GTM_ARU_DYN_ROUTE_LOW0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_LOW*)0xF01002C8u)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_LOW0.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_LOW0.
*/
#define GTM_ARU_0_DYN_ROUTE_LOW (GTM_ARU_DYN_ROUTE_LOW0)

/** \brief 2CC, ARU 1 Lower Bits of DYN_ROUTE Register */
#define GTM_ARU_DYN_ROUTE_LOW1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_LOW*)0xF01002CCu)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_LOW1.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_LOW1.
*/
#define GTM_ARU_1_DYN_ROUTE_LOW (GTM_ARU_DYN_ROUTE_LOW1)

/** \brief 2D0, ARU 0 Higher Bits of DYN_ROUTE Register */
#define GTM_ARU_DYN_ROUTE_HIGH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_HIGH*)0xF01002D0u)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_HIGH0.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_HIGH0.
*/
#define GTM_ARU_0_DYN_ROUTE_HIGH (GTM_ARU_DYN_ROUTE_HIGH0)

/** \brief 2D4, ARU 1 Higher Bits of DYN_ROUTE Register */
#define GTM_ARU_DYN_ROUTE_HIGH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_HIGH*)0xF01002D4u)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_HIGH1.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_HIGH1.
*/
#define GTM_ARU_1_DYN_ROUTE_HIGH (GTM_ARU_DYN_ROUTE_HIGH1)

/** \brief 2D8, ARU 0 Shadow Register for ARU_0_DYN_ROUTE_LOW */
#define GTM_ARU_DYN_ROUTE_SR_LOW0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_SR_LOW*)0xF01002D8u)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_SR_LOW0.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_SR_LOW0.
*/
#define GTM_ARU_0_DYN_ROUTE_SR_LOW (GTM_ARU_DYN_ROUTE_SR_LOW0)

/** \brief 2DC, ARU 1 Shadow Register for ARU_1_DYN_ROUTE_LOW */
#define GTM_ARU_DYN_ROUTE_SR_LOW1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_SR_LOW*)0xF01002DCu)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_SR_LOW1.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_SR_LOW1.
*/
#define GTM_ARU_1_DYN_ROUTE_SR_LOW (GTM_ARU_DYN_ROUTE_SR_LOW1)

/** \brief 2E0, ARU 0 Shadow Register for ARU_0_DYN_ROUTE_HIGH */
#define GTM_ARU_DYN_ROUTE_SR_HIGH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_SR_HIGH*)0xF01002E0u)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_SR_HIGH0.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_SR_HIGH0.
*/
#define GTM_ARU_0_DYN_ROUTE_SR_HIGH (GTM_ARU_DYN_ROUTE_SR_HIGH0)

/** \brief 2E4, ARU 1 Shadow Register for ARU_1_DYN_ROUTE_HIGH */
#define GTM_ARU_DYN_ROUTE_SR_HIGH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_ROUTE_SR_HIGH*)0xF01002E4u)
/** Alias (User Manual Name) for GTM_ARU_DYN_ROUTE_SR_HIGH1.
* To use register names with standard convension, please use GTM_ARU_DYN_ROUTE_SR_HIGH1.
*/
#define GTM_ARU_1_DYN_ROUTE_SR_HIGH (GTM_ARU_DYN_ROUTE_SR_HIGH1)

/** \brief 2E8, ARU 0 Read ID for Dynamic Routing */
#define GTM_ARU_DYN_RDADDR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_RDADDR*)0xF01002E8u)
/** Alias (User Manual Name) for GTM_ARU_DYN_RDADDR0.
* To use register names with standard convension, please use GTM_ARU_DYN_RDADDR0.
*/
#define GTM_ARU_0_DYN_RDADDR (GTM_ARU_DYN_RDADDR0)

/** \brief 2EC, ARU 1 Read ID for Dynamic Routing */
#define GTM_ARU_DYN_RDADDR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_DYN_RDADDR*)0xF01002ECu)
/** Alias (User Manual Name) for GTM_ARU_DYN_RDADDR1.
* To use register names with standard convension, please use GTM_ARU_DYN_RDADDR1.
*/
#define GTM_ARU_1_DYN_RDADDR (GTM_ARU_DYN_RDADDR1)

/** \brief 2FC, ARU caddr Counter Value */
#define GTM_ARU_CADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ARU_CADDR*)0xF01002FCu)

/** \brief 300, CMU Clock Enable Register */
#define GTM_CMU_CLK_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK_EN*)0xF0100300u)

/** \brief 304, CMU Global Clock Control Numerator */
#define GTM_CMU_GCLK_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_GCLK_NUM*)0xF0100304u)

/** \brief 308, CMU Global Clock Control Denominator */
#define GTM_CMU_GCLK_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_GCLK_DEN*)0xF0100308u)

/** \brief 30C, CMU Control for Clock Source 0 */
#define GTM_CMU_CLK0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF010030Cu)
/** Alias (User Manual Name) for GTM_CMU_CLK0_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK0_CTRL.
*/
#define GTM_CMU_CLK_0_CTRL (GTM_CMU_CLK0_CTRL)

/** \brief 310, CMU Control for Clock Source 1 */
#define GTM_CMU_CLK1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF0100310u)
/** Alias (User Manual Name) for GTM_CMU_CLK1_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK1_CTRL.
*/
#define GTM_CMU_CLK_1_CTRL (GTM_CMU_CLK1_CTRL)

/** \brief 314, CMU Control for Clock Source 2 */
#define GTM_CMU_CLK2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF0100314u)
/** Alias (User Manual Name) for GTM_CMU_CLK2_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK2_CTRL.
*/
#define GTM_CMU_CLK_2_CTRL (GTM_CMU_CLK2_CTRL)

/** \brief 318, CMU Control for Clock Source 3 */
#define GTM_CMU_CLK3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF0100318u)
/** Alias (User Manual Name) for GTM_CMU_CLK3_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK3_CTRL.
*/
#define GTM_CMU_CLK_3_CTRL (GTM_CMU_CLK3_CTRL)

/** \brief 31C, CMU Control for Clock Source 4 */
#define GTM_CMU_CLK4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF010031Cu)
/** Alias (User Manual Name) for GTM_CMU_CLK4_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK4_CTRL.
*/
#define GTM_CMU_CLK_4_CTRL (GTM_CMU_CLK4_CTRL)

/** \brief 320, CMU Control for Clock Source 5 */
#define GTM_CMU_CLK5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF0100320u)
/** Alias (User Manual Name) for GTM_CMU_CLK5_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK5_CTRL.
*/
#define GTM_CMU_CLK_5_CTRL (GTM_CMU_CLK5_CTRL)

/** \brief 324, CMU Control for Clock Source 6 */
#define GTM_CMU_CLK6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF0100324u)
/** Alias (User Manual Name) for GTM_CMU_CLK6_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK6_CTRL.
*/
#define GTM_CMU_CLK_6_CTRL (GTM_CMU_CLK6_CTRL)

/** \brief 328, CMU Control for Clock Source 7 */
#define GTM_CMU_CLK7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK__CTRL*)0xF0100328u)
/** Alias (User Manual Name) for GTM_CMU_CLK7_CTRL.
* To use register names with standard convension, please use GTM_CMU_CLK7_CTRL.
*/
#define GTM_CMU_CLK_7_CTRL (GTM_CMU_CLK7_CTRL)

/** \brief 32C, CMU External Clock 0 Control Numerator */
#define GTM_CMU_ECLK0_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_ECLK_NUM*)0xF010032Cu)
/** Alias (User Manual Name) for GTM_CMU_ECLK0_NUM.
* To use register names with standard convension, please use GTM_CMU_ECLK0_NUM.
*/
#define GTM_CMU_ECLK_0_NUM (GTM_CMU_ECLK0_NUM)

/** \brief 330, CMU External Clock 0 Control Denominator */
#define GTM_CMU_ECLK0_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_ECLK_DEN*)0xF0100330u)
/** Alias (User Manual Name) for GTM_CMU_ECLK0_DEN.
* To use register names with standard convension, please use GTM_CMU_ECLK0_DEN.
*/
#define GTM_CMU_ECLK_0_DEN (GTM_CMU_ECLK0_DEN)

/** \brief 334, CMU External Clock 1 Control Numerator */
#define GTM_CMU_ECLK1_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_ECLK_NUM*)0xF0100334u)
/** Alias (User Manual Name) for GTM_CMU_ECLK1_NUM.
* To use register names with standard convension, please use GTM_CMU_ECLK1_NUM.
*/
#define GTM_CMU_ECLK_1_NUM (GTM_CMU_ECLK1_NUM)

/** \brief 338, CMU External Clock 1 Control Denominator */
#define GTM_CMU_ECLK1_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_ECLK_DEN*)0xF0100338u)
/** Alias (User Manual Name) for GTM_CMU_ECLK1_DEN.
* To use register names with standard convension, please use GTM_CMU_ECLK1_DEN.
*/
#define GTM_CMU_ECLK_1_DEN (GTM_CMU_ECLK1_DEN)

/** \brief 33C, CMU External Clock 2 Control Numerator */
#define GTM_CMU_ECLK2_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_ECLK_NUM*)0xF010033Cu)
/** Alias (User Manual Name) for GTM_CMU_ECLK2_NUM.
* To use register names with standard convension, please use GTM_CMU_ECLK2_NUM.
*/
#define GTM_CMU_ECLK_2_NUM (GTM_CMU_ECLK2_NUM)

/** \brief 340, CMU External Clock 2 Control Denominator */
#define GTM_CMU_ECLK2_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_ECLK_DEN*)0xF0100340u)
/** Alias (User Manual Name) for GTM_CMU_ECLK2_DEN.
* To use register names with standard convension, please use GTM_CMU_ECLK2_DEN.
*/
#define GTM_CMU_ECLK_2_DEN (GTM_CMU_ECLK2_DEN)

/** \brief 344, CMU Control FXCLK Sub-Unit Input Clock */
#define GTM_CMU_FXCLK_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_FXCLK_CTRL*)0xF0100344u)

/** \brief 348, CMU Synchronizing ARU and Clock Source */
#define GTM_CMU_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_GLB_CTRL*)0xF0100348u)

/** \brief 34C, CMU Control for Clock Source Selection */
#define GTM_CMU_CLK_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CMU_CLK_CTRL*)0xF010034Cu)

/** \brief 400, BRC Read Address for Input Channel 0 */
#define GTM_BRC_SRC0_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100400u)
/** Alias (User Manual Name) for GTM_BRC_SRC0_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC0_ADDR.
*/
#define GTM_BRC_SRC_0_ADDR (GTM_BRC_SRC0_ADDR)

/** \brief 404, BRC Destination Channels for Input Channel 0 */
#define GTM_BRC_SRC0_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF0100404u)
/** Alias (User Manual Name) for GTM_BRC_SRC0_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC0_DEST.
*/
#define GTM_BRC_SRC_0_DEST (GTM_BRC_SRC0_DEST)

/** \brief 408, BRC Read Address for Input Channel 1 */
#define GTM_BRC_SRC1_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100408u)
/** Alias (User Manual Name) for GTM_BRC_SRC1_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC1_ADDR.
*/
#define GTM_BRC_SRC_1_ADDR (GTM_BRC_SRC1_ADDR)

/** \brief 40C, BRC Destination Channels for Input Channel 1 */
#define GTM_BRC_SRC1_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF010040Cu)
/** Alias (User Manual Name) for GTM_BRC_SRC1_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC1_DEST.
*/
#define GTM_BRC_SRC_1_DEST (GTM_BRC_SRC1_DEST)

/** \brief 410, BRC Read Address for Input Channel 2 */
#define GTM_BRC_SRC2_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100410u)
/** Alias (User Manual Name) for GTM_BRC_SRC2_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC2_ADDR.
*/
#define GTM_BRC_SRC_2_ADDR (GTM_BRC_SRC2_ADDR)

/** \brief 414, BRC Destination Channels for Input Channel 2 */
#define GTM_BRC_SRC2_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF0100414u)
/** Alias (User Manual Name) for GTM_BRC_SRC2_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC2_DEST.
*/
#define GTM_BRC_SRC_2_DEST (GTM_BRC_SRC2_DEST)

/** \brief 418, BRC Read Address for Input Channel 3 */
#define GTM_BRC_SRC3_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100418u)
/** Alias (User Manual Name) for GTM_BRC_SRC3_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC3_ADDR.
*/
#define GTM_BRC_SRC_3_ADDR (GTM_BRC_SRC3_ADDR)

/** \brief 41C, BRC Destination Channels for Input Channel 3 */
#define GTM_BRC_SRC3_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF010041Cu)
/** Alias (User Manual Name) for GTM_BRC_SRC3_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC3_DEST.
*/
#define GTM_BRC_SRC_3_DEST (GTM_BRC_SRC3_DEST)

/** \brief 420, BRC Read Address for Input Channel 4 */
#define GTM_BRC_SRC4_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100420u)
/** Alias (User Manual Name) for GTM_BRC_SRC4_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC4_ADDR.
*/
#define GTM_BRC_SRC_4_ADDR (GTM_BRC_SRC4_ADDR)

/** \brief 424, BRC Destination Channels for Input Channel 4 */
#define GTM_BRC_SRC4_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF0100424u)
/** Alias (User Manual Name) for GTM_BRC_SRC4_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC4_DEST.
*/
#define GTM_BRC_SRC_4_DEST (GTM_BRC_SRC4_DEST)

/** \brief 428, BRC Read Address for Input Channel 5 */
#define GTM_BRC_SRC5_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100428u)
/** Alias (User Manual Name) for GTM_BRC_SRC5_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC5_ADDR.
*/
#define GTM_BRC_SRC_5_ADDR (GTM_BRC_SRC5_ADDR)

/** \brief 42C, BRC Destination Channels for Input Channel 5 */
#define GTM_BRC_SRC5_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF010042Cu)
/** Alias (User Manual Name) for GTM_BRC_SRC5_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC5_DEST.
*/
#define GTM_BRC_SRC_5_DEST (GTM_BRC_SRC5_DEST)

/** \brief 430, BRC Read Address for Input Channel 6 */
#define GTM_BRC_SRC6_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100430u)
/** Alias (User Manual Name) for GTM_BRC_SRC6_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC6_ADDR.
*/
#define GTM_BRC_SRC_6_ADDR (GTM_BRC_SRC6_ADDR)

/** \brief 434, BRC Destination Channels for Input Channel 6 */
#define GTM_BRC_SRC6_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF0100434u)
/** Alias (User Manual Name) for GTM_BRC_SRC6_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC6_DEST.
*/
#define GTM_BRC_SRC_6_DEST (GTM_BRC_SRC6_DEST)

/** \brief 438, BRC Read Address for Input Channel 7 */
#define GTM_BRC_SRC7_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100438u)
/** Alias (User Manual Name) for GTM_BRC_SRC7_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC7_ADDR.
*/
#define GTM_BRC_SRC_7_ADDR (GTM_BRC_SRC7_ADDR)

/** \brief 43C, BRC Destination Channels for Input Channel 7 */
#define GTM_BRC_SRC7_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF010043Cu)
/** Alias (User Manual Name) for GTM_BRC_SRC7_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC7_DEST.
*/
#define GTM_BRC_SRC_7_DEST (GTM_BRC_SRC7_DEST)

/** \brief 440, BRC Read Address for Input Channel 8 */
#define GTM_BRC_SRC8_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100440u)
/** Alias (User Manual Name) for GTM_BRC_SRC8_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC8_ADDR.
*/
#define GTM_BRC_SRC_8_ADDR (GTM_BRC_SRC8_ADDR)

/** \brief 444, BRC Destination Channels for Input Channel 8 */
#define GTM_BRC_SRC8_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF0100444u)
/** Alias (User Manual Name) for GTM_BRC_SRC8_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC8_DEST.
*/
#define GTM_BRC_SRC_8_DEST (GTM_BRC_SRC8_DEST)

/** \brief 448, BRC Read Address for Input Channel 9 */
#define GTM_BRC_SRC9_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100448u)
/** Alias (User Manual Name) for GTM_BRC_SRC9_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC9_ADDR.
*/
#define GTM_BRC_SRC_9_ADDR (GTM_BRC_SRC9_ADDR)

/** \brief 44C, BRC Destination Channels for Input Channel 9 */
#define GTM_BRC_SRC9_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF010044Cu)
/** Alias (User Manual Name) for GTM_BRC_SRC9_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC9_DEST.
*/
#define GTM_BRC_SRC_9_DEST (GTM_BRC_SRC9_DEST)

/** \brief 450, BRC Read Address for Input Channel 10 */
#define GTM_BRC_SRC10_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100450u)
/** Alias (User Manual Name) for GTM_BRC_SRC10_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC10_ADDR.
*/
#define GTM_BRC_SRC_10_ADDR (GTM_BRC_SRC10_ADDR)

/** \brief 454, BRC Destination Channels for Input Channel 10 */
#define GTM_BRC_SRC10_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF0100454u)
/** Alias (User Manual Name) for GTM_BRC_SRC10_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC10_DEST.
*/
#define GTM_BRC_SRC_10_DEST (GTM_BRC_SRC10_DEST)

/** \brief 458, BRC Read Address for Input Channel 11 */
#define GTM_BRC_SRC11_ADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_ADDR*)0xF0100458u)
/** Alias (User Manual Name) for GTM_BRC_SRC11_ADDR.
* To use register names with standard convension, please use GTM_BRC_SRC11_ADDR.
*/
#define GTM_BRC_SRC_11_ADDR (GTM_BRC_SRC11_ADDR)

/** \brief 45C, BRC Destination Channels for Input Channel 11 */
#define GTM_BRC_SRC11_DEST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_SRC_DEST*)0xF010045Cu)
/** Alias (User Manual Name) for GTM_BRC_SRC11_DEST.
* To use register names with standard convension, please use GTM_BRC_SRC11_DEST.
*/
#define GTM_BRC_SRC_11_DEST (GTM_BRC_SRC11_DEST)

/** \brief 460, BRC Interrupt Notification Register */
#define GTM_BRC_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_IRQ_NOTIFY*)0xF0100460u)

/** \brief 464, BRC Interrupt Enable Register */
#define GTM_BRC_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_IRQ_EN*)0xF0100464u)

/** \brief 468, BRC Force Interrupt Register */
#define GTM_BRC_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_IRQ_FORCINT*)0xF0100468u)

/** \brief 46C, BRC Interrupt Mode Configuration Register */
#define GTM_BRC_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_IRQ_MODE*)0xF010046Cu)

/** \brief 470, BRC Software Reset Register */
#define GTM_BRC_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_RST*)0xF0100470u)

/** \brief 474, BRC Error Interrupt Enable Register */
#define GTM_BRC_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_BRC_EIRQ_EN*)0xF0100474u)

/** \brief 600, ICM Interrupt Group Register Covering Infrastructural and Safety Components ARU, BRC, AEI, PSM0, PSM1, MAP, CMP, SPE */
#define GTM_ICM_IRQG_R0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_R0*)0xF0100600u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_R0.
* To use register names with standard convension, please use GTM_ICM_IRQG_R0.
*/
#define GTM_ICM_IRQG_0 (GTM_ICM_IRQG_R0)

/** \brief 608, ICM Interrupt Group Register Covering TIM0, TIM1, TIM2, TIM3 */
#define GTM_ICM_IRQG_R2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_R2*)0xF0100608u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_R2.
* To use register names with standard convension, please use GTM_ICM_IRQG_R2.
*/
#define GTM_ICM_IRQG_2 (GTM_ICM_IRQG_R2)

/** \brief 618, ICM Interrupt Group Register Covering GTM Output Sub-Modules TOM0 to TOM1 */
#define GTM_ICM_IRQG_R6 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_R6*)0xF0100618u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_R6.
* To use register names with standard convension, please use GTM_ICM_IRQG_R6.
*/
#define GTM_ICM_IRQG_6 (GTM_ICM_IRQG_R6)

/** \brief 624, ICM Interrupt Group Register Covering GTM Output Sub-Modules ATOM0, ATOM1, ATOM2 and ATOM3 */
#define GTM_ICM_IRQG_R9 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_R9*)0xF0100624u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_R9.
* To use register names with standard convension, please use GTM_ICM_IRQG_R9.
*/
#define GTM_ICM_IRQG_9 (GTM_ICM_IRQG_R9)

/** \brief 630, ICM Interrupt Group Register for Module Error Interrupt Information */
#define GTM_ICM_IRQG_MEI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_MEI*)0xF0100630u)

/** \brief 638, ICM Interrupt Group Register 1 for Channel Error Interrupt Information */
#define GTM_ICM_IRQG_CEI1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_CEI1*)0xF0100638u)

/** \brief 6B4, ICM Interrupt Group SPE for Module Error Interrupt Information */
#define GTM_ICM_IRQG_CEI_SPE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_CEI_SPE*)0xF01006B4u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_CEI_SPE.
* To use register names with standard convension, please use GTM_ICM_IRQG_CEI_SPE.
*/
#define GTM_ICM_IRQG_SPE_CEI (GTM_ICM_IRQG_CEI_SPE)

/** \brief 710, ICM Interrupt Group k for Module Error Interrupt Information for each TIMm, MCSm, SPEm, FIFOm */
#define GTM_ICM_IRQG_MEI_CLS0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_MEI_CLS*)0xF0100710u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_MEI_CLS0.
* To use register names with standard convension, please use GTM_ICM_IRQG_MEI_CLS0.
*/
#define GTM_ICM_IRQG_CLS_0_MEI (GTM_ICM_IRQG_MEI_CLS0)

/** \brief 770, ICM Interrupt Group SPE for Module Interrupt Information */
#define GTM_ICM_IRQG_CI_SPE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_CI_SPE*)0xF0100770u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_CI_SPE.
* To use register names with standard convension, please use GTM_ICM_IRQG_CI_SPE.
*/
#define GTM_ICM_IRQG_SPE_CI (GTM_ICM_IRQG_CI_SPE)

/** \brief 790, ICM Interrupt Group ATOM 0 for Channel Interrupt Information of ATOMm */
#define GTM_ICM_IRQG_CI_ATOM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_CI_ATOM*)0xF0100790u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_CI_ATOM0.
* To use register names with standard convension, please use GTM_ICM_IRQG_CI_ATOM0.
*/
#define GTM_ICM_IRQG_ATOM_0_CI (GTM_ICM_IRQG_CI_ATOM0)

/** \brief 7A0, ICM Interrupt Group TOM 0 for Channel Interrupt Information of TOMm */
#define GTM_ICM_IRQG_CI_TOM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ICM_IRQG_CI_TOM*)0xF01007A0u)
/** Alias (User Manual Name) for GTM_ICM_IRQG_CI_TOM0.
* To use register names with standard convension, please use GTM_ICM_IRQG_CI_TOM0.
*/
#define GTM_ICM_IRQG_TOM_0_CI (GTM_ICM_IRQG_CI_TOM0)

/** \brief 800, SPE0 Control Status Register */
#define GTM_SPE0_CTRL_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_CTRL_STAT*)0xF0100800u)

/** \brief 804, SPE0 Input Pattern Definition Register */
#define GTM_SPE0_PAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_PAT*)0xF0100804u)

/** \brief 808, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100808u)

/** \brief 80C, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010080Cu)

/** \brief 810, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100810u)

/** \brief 814, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100814u)

/** \brief 818, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100818u)

/** \brief 81C, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010081Cu)

/** \brief 820, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100820u)

/** \brief 824, SPE0 Output Definition Register z */
#define GTM_SPE0_OUT_PAT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100824u)

/** \brief 828, SPE0 Output Control Register */
#define GTM_SPE0_OUT_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_CTRL*)0xF0100828u)

/** \brief 82C, SPE0 Interrupt Notification Register */
#define GTM_SPE0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_NOTIFY*)0xF010082Cu)

/** \brief 830, SPE0 Interrupt Enable Register */
#define GTM_SPE0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_EN*)0xF0100830u)

/** \brief 834, SPE0 Interrupt Generation by Software */
#define GTM_SPE0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_FORCINT*)0xF0100834u)

/** \brief 838, SPE0 Interrupt Mode Configuration Register */
#define GTM_SPE0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_MODE*)0xF0100838u)

/** \brief 83C, SPE0 Error Interrupt Enable Register */
#define GTM_SPE0_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_EIRQ_EN*)0xF010083Cu)

/** \brief 840, SPE0 Input Revolution Counter */
#define GTM_SPE0_REV_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_REV_CNT*)0xF0100840u)

/** \brief 844, SPE0 Revolution Counter Compare Value */
#define GTM_SPE0_REV_CMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_REV_CMP*)0xF0100844u)

/** \brief 848, SPE0 Control Status Register 2 */
#define GTM_SPE0_CTRL_STAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_CTRL_STAT2*)0xF0100848u)

/** \brief 84C, SPE0 Command register */
#define GTM_SPE0_CMD /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_CMD*)0xF010084Cu)

/** \brief 880, SPE1 Control Status Register */
#define GTM_SPE1_CTRL_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_CTRL_STAT*)0xF0100880u)

/** \brief 884, SPE1 Input Pattern Definition Register */
#define GTM_SPE1_PAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_PAT*)0xF0100884u)

/** \brief 888, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100888u)

/** \brief 88C, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010088Cu)

/** \brief 890, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100890u)

/** \brief 894, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100894u)

/** \brief 898, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100898u)

/** \brief 89C, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010089Cu)

/** \brief 8A0, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF01008A0u)

/** \brief 8A4, SPE1 Output Definition Register z */
#define GTM_SPE1_OUT_PAT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF01008A4u)

/** \brief 8A8, SPE1 Output Control Register */
#define GTM_SPE1_OUT_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_OUT_CTRL*)0xF01008A8u)

/** \brief 8AC, SPE1 Interrupt Notification Register */
#define GTM_SPE1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_NOTIFY*)0xF01008ACu)

/** \brief 8B0, SPE1 Interrupt Enable Register */
#define GTM_SPE1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_EN*)0xF01008B0u)

/** \brief 8B4, SPE1 Interrupt Generation by Software */
#define GTM_SPE1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_FORCINT*)0xF01008B4u)

/** \brief 8B8, SPE1 Interrupt Mode Configuration Register */
#define GTM_SPE1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_IRQ_MODE*)0xF01008B8u)

/** \brief 8BC, SPE1 Error Interrupt Enable Register */
#define GTM_SPE1_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_EIRQ_EN*)0xF01008BCu)

/** \brief 8C0, SPE1 Input Revolution Counter */
#define GTM_SPE1_REV_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_REV_CNT*)0xF01008C0u)

/** \brief 8C4, SPE1 Revolution Counter Compare Value */
#define GTM_SPE1_REV_CMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_REV_CMP*)0xF01008C4u)

/** \brief 8C8, SPE1 Control Status Register 2 */
#define GTM_SPE1_CTRL_STAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_CTRL_STAT2*)0xF01008C8u)

/** \brief 8CC, SPE1 Command register */
#define GTM_SPE1_CMD /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_SPE_CMD*)0xF01008CCu)

/** \brief 1000, TIM0 Channel 0 General Purpose 0 Register */
#define GTM_TIM0_CH0_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101000u)

/** \brief 1004, TIM0 Channel 0 General Purpose 1 Register */
#define GTM_TIM0_CH0_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101004u)

/** \brief 1008, TIM0 Channel 0 SMU Counter Register */
#define GTM_TIM0_CH0_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101008u)

/** \brief 100C, TIM0 Channel 0 SMU Edge Counter Register */
#define GTM_TIM0_CH0_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010100Cu)

/** \brief 1010, TIM0 Channel 0 SMU Shadow Counter Register */
#define GTM_TIM0_CH0_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101010u)

/** \brief 1014, TIM0 Channel 0 TDU Counter Register */
#define GTM_TIM0_CH0_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101014u)

/** \brief 1018, TIM0 Channel 0 TDU Control Register */
#define GTM_TIM0_CH0_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101018u)

/** \brief 101C, TIM0 Channel 0 Filter Parameter 0 Register */
#define GTM_TIM0_CH0_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010101Cu)

/** \brief 1020, TIM0 Channel 0 Filter Parameter 1 Register */
#define GTM_TIM0_CH0_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101020u)

/** \brief 1024, TIM0 Channel 0 Control Register */
#define GTM_TIM0_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101024u)

/** \brief 1028, TIM0 Channel 0 Extended Control Register */
#define GTM_TIM0_CH0_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101028u)

/** \brief 102C, TIM0 Channel 0 Interrupt Notification Register */
#define GTM_TIM0_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010102Cu)

/** \brief 1030, TIM0 Channel 0 Interrupt Enable Register */
#define GTM_TIM0_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101030u)

/** \brief 1034, TIM0 Channel 0 Force Interrupt Register */
#define GTM_TIM0_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101034u)

/** \brief 1038, TIM0 Channel 0 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101038u)

/** \brief 103C, TIM0 Channel 0 Error Interrupt Enable Register */
#define GTM_TIM0_CH0_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010103Cu)

/** \brief 1074, TIM0 Input Value Observation Register */
#define GTM_TIM0_INP_VAL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_INP_VAL*)0xF0101074u)

/** \brief 1078, TIM0 AUX IN Source Selection Register */
#define GTM_TIM0_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_IN_SRC*)0xF0101078u)

/** \brief 107C, TIM0 Global Software Reset Register */
#define GTM_TIM0_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_RST*)0xF010107Cu)

/** \brief 1080, TIM0 Channel 1 General Purpose 0 Register */
#define GTM_TIM0_CH1_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101080u)

/** \brief 1084, TIM0 Channel 1 General Purpose 1 Register */
#define GTM_TIM0_CH1_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101084u)

/** \brief 1088, TIM0 Channel 1 SMU Counter Register */
#define GTM_TIM0_CH1_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101088u)

/** \brief 108C, TIM0 Channel 1 SMU Edge Counter Register */
#define GTM_TIM0_CH1_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010108Cu)

/** \brief 1090, TIM0 Channel 1 SMU Shadow Counter Register */
#define GTM_TIM0_CH1_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101090u)

/** \brief 1094, TIM0 Channel 1 TDU Counter Register */
#define GTM_TIM0_CH1_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101094u)

/** \brief 1098, TIM0 Channel 1 TDU Control Register */
#define GTM_TIM0_CH1_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101098u)

/** \brief 109C, TIM0 Channel 1 Filter Parameter 0 Register */
#define GTM_TIM0_CH1_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010109Cu)

/** \brief 10A0, TIM0 Channel 1 Filter Parameter 1 Register */
#define GTM_TIM0_CH1_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01010A0u)

/** \brief 10A4, TIM0 Channel 1 Control Register */
#define GTM_TIM0_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01010A4u)

/** \brief 10A8, TIM0 Channel 1 Extended Control Register */
#define GTM_TIM0_CH1_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01010A8u)

/** \brief 10AC, TIM0 Channel 1 Interrupt Notification Register */
#define GTM_TIM0_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01010ACu)

/** \brief 10B0, TIM0 Channel 1 Interrupt Enable Register */
#define GTM_TIM0_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01010B0u)

/** \brief 10B4, TIM0 Channel 1 Force Interrupt Register */
#define GTM_TIM0_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01010B4u)

/** \brief 10B8, TIM0 Channel 1 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01010B8u)

/** \brief 10BC, TIM0 Channel 1 Error Interrupt Enable Register */
#define GTM_TIM0_CH1_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01010BCu)

/** \brief 1100, TIM0 Channel 2 General Purpose 0 Register */
#define GTM_TIM0_CH2_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101100u)

/** \brief 1104, TIM0 Channel 2 General Purpose 1 Register */
#define GTM_TIM0_CH2_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101104u)

/** \brief 1108, TIM0 Channel 2 SMU Counter Register */
#define GTM_TIM0_CH2_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101108u)

/** \brief 110C, TIM0 Channel 2 SMU Edge Counter Register */
#define GTM_TIM0_CH2_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010110Cu)

/** \brief 1110, TIM0 Channel 2 SMU Shadow Counter Register */
#define GTM_TIM0_CH2_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101110u)

/** \brief 1114, TIM0 Channel 2 TDU Counter Register */
#define GTM_TIM0_CH2_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101114u)

/** \brief 1118, TIM0 Channel 2 TDU Control Register */
#define GTM_TIM0_CH2_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101118u)

/** \brief 111C, TIM0 Channel 2 Filter Parameter 0 Register */
#define GTM_TIM0_CH2_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010111Cu)

/** \brief 1120, TIM0 Channel 2 Filter Parameter 1 Register */
#define GTM_TIM0_CH2_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101120u)

/** \brief 1124, TIM0 Channel 2 Control Register */
#define GTM_TIM0_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101124u)

/** \brief 1128, TIM0 Channel 2 Extended Control Register */
#define GTM_TIM0_CH2_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101128u)

/** \brief 112C, TIM0 Channel 2 Interrupt Notification Register */
#define GTM_TIM0_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010112Cu)

/** \brief 1130, TIM0 Channel 2 Interrupt Enable Register */
#define GTM_TIM0_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101130u)

/** \brief 1134, TIM0 Channel 2 Force Interrupt Register */
#define GTM_TIM0_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101134u)

/** \brief 1138, TIM0 Channel 2 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101138u)

/** \brief 113C, TIM0 Channel 2 Error Interrupt Enable Register */
#define GTM_TIM0_CH2_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010113Cu)

/** \brief 1180, TIM0 Channel 3 General Purpose 0 Register */
#define GTM_TIM0_CH3_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101180u)

/** \brief 1184, TIM0 Channel 3 General Purpose 1 Register */
#define GTM_TIM0_CH3_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101184u)

/** \brief 1188, TIM0 Channel 3 SMU Counter Register */
#define GTM_TIM0_CH3_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101188u)

/** \brief 118C, TIM0 Channel 3 SMU Edge Counter Register */
#define GTM_TIM0_CH3_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010118Cu)

/** \brief 1190, TIM0 Channel 3 SMU Shadow Counter Register */
#define GTM_TIM0_CH3_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101190u)

/** \brief 1194, TIM0 Channel 3 TDU Counter Register */
#define GTM_TIM0_CH3_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101194u)

/** \brief 1198, TIM0 Channel 3 TDU Control Register */
#define GTM_TIM0_CH3_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101198u)

/** \brief 119C, TIM0 Channel 3 Filter Parameter 0 Register */
#define GTM_TIM0_CH3_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010119Cu)

/** \brief 11A0, TIM0 Channel 3 Filter Parameter 1 Register */
#define GTM_TIM0_CH3_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01011A0u)

/** \brief 11A4, TIM0 Channel 3 Control Register */
#define GTM_TIM0_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01011A4u)

/** \brief 11A8, TIM0 Channel 3 Extended Control Register */
#define GTM_TIM0_CH3_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01011A8u)

/** \brief 11AC, TIM0 Channel 3 Interrupt Notification Register */
#define GTM_TIM0_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01011ACu)

/** \brief 11B0, TIM0 Channel 3 Interrupt Enable Register */
#define GTM_TIM0_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01011B0u)

/** \brief 11B4, TIM0 Channel 3 Force Interrupt Register */
#define GTM_TIM0_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01011B4u)

/** \brief 11B8, TIM0 Channel 3 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01011B8u)

/** \brief 11BC, TIM0 Channel 3 Error Interrupt Enable Register */
#define GTM_TIM0_CH3_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01011BCu)

/** \brief 1200, TIM0 Channel 4 General Purpose 0 Register */
#define GTM_TIM0_CH4_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101200u)

/** \brief 1204, TIM0 Channel 4 General Purpose 1 Register */
#define GTM_TIM0_CH4_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101204u)

/** \brief 1208, TIM0 Channel 4 SMU Counter Register */
#define GTM_TIM0_CH4_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101208u)

/** \brief 120C, TIM0 Channel 4 SMU Edge Counter Register */
#define GTM_TIM0_CH4_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010120Cu)

/** \brief 1210, TIM0 Channel 4 SMU Shadow Counter Register */
#define GTM_TIM0_CH4_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101210u)

/** \brief 1214, TIM0 Channel 4 TDU Counter Register */
#define GTM_TIM0_CH4_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101214u)

/** \brief 1218, TIM0 Channel 4 TDU Control Register */
#define GTM_TIM0_CH4_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101218u)

/** \brief 121C, TIM0 Channel 4 Filter Parameter 0 Register */
#define GTM_TIM0_CH4_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010121Cu)

/** \brief 1220, TIM0 Channel 4 Filter Parameter 1 Register */
#define GTM_TIM0_CH4_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101220u)

/** \brief 1224, TIM0 Channel 4 Control Register */
#define GTM_TIM0_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101224u)

/** \brief 1228, TIM0 Channel 4 Extended Control Register */
#define GTM_TIM0_CH4_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101228u)

/** \brief 122C, TIM0 Channel 4 Interrupt Notification Register */
#define GTM_TIM0_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010122Cu)

/** \brief 1230, TIM0 Channel 4 Interrupt Enable Register */
#define GTM_TIM0_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101230u)

/** \brief 1234, TIM0 Channel 4 Force Interrupt Register */
#define GTM_TIM0_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101234u)

/** \brief 1238, TIM0 Channel 4 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101238u)

/** \brief 123C, TIM0 Channel 4 Error Interrupt Enable Register */
#define GTM_TIM0_CH4_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010123Cu)

/** \brief 1280, TIM0 Channel 5 General Purpose 0 Register */
#define GTM_TIM0_CH5_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101280u)

/** \brief 1284, TIM0 Channel 5 General Purpose 1 Register */
#define GTM_TIM0_CH5_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101284u)

/** \brief 1288, TIM0 Channel 5 SMU Counter Register */
#define GTM_TIM0_CH5_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101288u)

/** \brief 128C, TIM0 Channel 5 SMU Edge Counter Register */
#define GTM_TIM0_CH5_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010128Cu)

/** \brief 1290, TIM0 Channel 5 SMU Shadow Counter Register */
#define GTM_TIM0_CH5_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101290u)

/** \brief 1294, TIM0 Channel 5 TDU Counter Register */
#define GTM_TIM0_CH5_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101294u)

/** \brief 1298, TIM0 Channel 5 TDU Control Register */
#define GTM_TIM0_CH5_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101298u)

/** \brief 129C, TIM0 Channel 5 Filter Parameter 0 Register */
#define GTM_TIM0_CH5_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010129Cu)

/** \brief 12A0, TIM0 Channel 5 Filter Parameter 1 Register */
#define GTM_TIM0_CH5_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01012A0u)

/** \brief 12A4, TIM0 Channel 5 Control Register */
#define GTM_TIM0_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01012A4u)

/** \brief 12A8, TIM0 Channel 5 Extended Control Register */
#define GTM_TIM0_CH5_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01012A8u)

/** \brief 12AC, TIM0 Channel 5 Interrupt Notification Register */
#define GTM_TIM0_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01012ACu)

/** \brief 12B0, TIM0 Channel 5 Interrupt Enable Register */
#define GTM_TIM0_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01012B0u)

/** \brief 12B4, TIM0 Channel 5 Force Interrupt Register */
#define GTM_TIM0_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01012B4u)

/** \brief 12B8, TIM0 Channel 5 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01012B8u)

/** \brief 12BC, TIM0 Channel 5 Error Interrupt Enable Register */
#define GTM_TIM0_CH5_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01012BCu)

/** \brief 1300, TIM0 Channel 6 General Purpose 0 Register */
#define GTM_TIM0_CH6_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101300u)

/** \brief 1304, TIM0 Channel 6 General Purpose 1 Register */
#define GTM_TIM0_CH6_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101304u)

/** \brief 1308, TIM0 Channel 6 SMU Counter Register */
#define GTM_TIM0_CH6_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101308u)

/** \brief 130C, TIM0 Channel 6 SMU Edge Counter Register */
#define GTM_TIM0_CH6_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010130Cu)

/** \brief 1310, TIM0 Channel 6 SMU Shadow Counter Register */
#define GTM_TIM0_CH6_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101310u)

/** \brief 1314, TIM0 Channel 6 TDU Counter Register */
#define GTM_TIM0_CH6_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101314u)

/** \brief 1318, TIM0 Channel 6 TDU Control Register */
#define GTM_TIM0_CH6_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101318u)

/** \brief 131C, TIM0 Channel 6 Filter Parameter 0 Register */
#define GTM_TIM0_CH6_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010131Cu)

/** \brief 1320, TIM0 Channel 6 Filter Parameter 1 Register */
#define GTM_TIM0_CH6_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101320u)

/** \brief 1324, TIM0 Channel 6 Control Register */
#define GTM_TIM0_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101324u)

/** \brief 1328, TIM0 Channel 6 Extended Control Register */
#define GTM_TIM0_CH6_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101328u)

/** \brief 132C, TIM0 Channel 6 Interrupt Notification Register */
#define GTM_TIM0_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010132Cu)

/** \brief 1330, TIM0 Channel 6 Interrupt Enable Register */
#define GTM_TIM0_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101330u)

/** \brief 1334, TIM0 Channel 6 Force Interrupt Register */
#define GTM_TIM0_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101334u)

/** \brief 1338, TIM0 Channel 6 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101338u)

/** \brief 133C, TIM0 Channel 6 Error Interrupt Enable Register */
#define GTM_TIM0_CH6_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010133Cu)

/** \brief 1380, TIM0 Channel 7 General Purpose 0 Register */
#define GTM_TIM0_CH7_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101380u)

/** \brief 1384, TIM0 Channel 7 General Purpose 1 Register */
#define GTM_TIM0_CH7_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101384u)

/** \brief 1388, TIM0 Channel 7 SMU Counter Register */
#define GTM_TIM0_CH7_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101388u)

/** \brief 138C, TIM0 Channel 7 SMU Edge Counter Register */
#define GTM_TIM0_CH7_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010138Cu)

/** \brief 1390, TIM0 Channel 7 SMU Shadow Counter Register */
#define GTM_TIM0_CH7_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101390u)

/** \brief 1394, TIM0 Channel 7 TDU Counter Register */
#define GTM_TIM0_CH7_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101394u)

/** \brief 1398, TIM0 Channel 7 TDU Control Register */
#define GTM_TIM0_CH7_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101398u)

/** \brief 139C, TIM0 Channel 7 Filter Parameter 0 Register */
#define GTM_TIM0_CH7_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010139Cu)

/** \brief 13A0, TIM0 Channel 7 Filter Parameter 1 Register */
#define GTM_TIM0_CH7_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01013A0u)

/** \brief 13A4, TIM0 Channel 7 Control Register */
#define GTM_TIM0_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01013A4u)

/** \brief 13A8, TIM0 Channel 7 Extended Control Register */
#define GTM_TIM0_CH7_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01013A8u)

/** \brief 13AC, TIM0 Channel 7 Interrupt Notification Register */
#define GTM_TIM0_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01013ACu)

/** \brief 13B0, TIM0 Channel 7 Interrupt Enable Register */
#define GTM_TIM0_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01013B0u)

/** \brief 13B4, TIM0 Channel 7 Force Interrupt Register */
#define GTM_TIM0_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01013B4u)

/** \brief 13B8, TIM0 Channel 7 Interrupt Mode Configuration Register */
#define GTM_TIM0_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01013B8u)

/** \brief 13BC, TIM0 Channel 7 Error Interrupt Enable Register */
#define GTM_TIM0_CH7_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01013BCu)

/** \brief 1800, TIM1 Channel 0 General Purpose 0 Register */
#define GTM_TIM1_CH0_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101800u)

/** \brief 1804, TIM1 Channel 0 General Purpose 1 Register */
#define GTM_TIM1_CH0_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101804u)

/** \brief 1808, TIM1 Channel 0 SMU Counter Register */
#define GTM_TIM1_CH0_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101808u)

/** \brief 180C, TIM1 Channel 0 SMU Edge Counter Register */
#define GTM_TIM1_CH0_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010180Cu)

/** \brief 1810, TIM1 Channel 0 SMU Shadow Counter Register */
#define GTM_TIM1_CH0_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101810u)

/** \brief 1814, TIM1 Channel 0 TDU Counter Register */
#define GTM_TIM1_CH0_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101814u)

/** \brief 1818, TIM1 Channel 0 TDU Control Register */
#define GTM_TIM1_CH0_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101818u)

/** \brief 181C, TIM1 Channel 0 Filter Parameter 0 Register */
#define GTM_TIM1_CH0_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010181Cu)

/** \brief 1820, TIM1 Channel 0 Filter Parameter 1 Register */
#define GTM_TIM1_CH0_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101820u)

/** \brief 1824, TIM1 Channel 0 Control Register */
#define GTM_TIM1_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101824u)

/** \brief 1828, TIM1 Channel 0 Extended Control Register */
#define GTM_TIM1_CH0_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101828u)

/** \brief 182C, TIM1 Channel 0 Interrupt Notification Register */
#define GTM_TIM1_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010182Cu)

/** \brief 1830, TIM1 Channel 0 Interrupt Enable Register */
#define GTM_TIM1_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101830u)

/** \brief 1834, TIM1 Channel 0 Force Interrupt Register */
#define GTM_TIM1_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101834u)

/** \brief 1838, TIM1 Channel 0 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101838u)

/** \brief 183C, TIM1 Channel 0 Error Interrupt Enable Register */
#define GTM_TIM1_CH0_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010183Cu)

/** \brief 1874, TIM1 Input Value Observation Register */
#define GTM_TIM1_INP_VAL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_INP_VAL*)0xF0101874u)

/** \brief 1878, TIM1 AUX IN Source Selection Register */
#define GTM_TIM1_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_IN_SRC*)0xF0101878u)

/** \brief 187C, TIM1 Global Software Reset Register */
#define GTM_TIM1_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_RST*)0xF010187Cu)

/** \brief 1880, TIM1 Channel 1 General Purpose 0 Register */
#define GTM_TIM1_CH1_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101880u)

/** \brief 1884, TIM1 Channel 1 General Purpose 1 Register */
#define GTM_TIM1_CH1_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101884u)

/** \brief 1888, TIM1 Channel 1 SMU Counter Register */
#define GTM_TIM1_CH1_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101888u)

/** \brief 188C, TIM1 Channel 1 SMU Edge Counter Register */
#define GTM_TIM1_CH1_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010188Cu)

/** \brief 1890, TIM1 Channel 1 SMU Shadow Counter Register */
#define GTM_TIM1_CH1_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101890u)

/** \brief 1894, TIM1 Channel 1 TDU Counter Register */
#define GTM_TIM1_CH1_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101894u)

/** \brief 1898, TIM1 Channel 1 TDU Control Register */
#define GTM_TIM1_CH1_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101898u)

/** \brief 189C, TIM1 Channel 1 Filter Parameter 0 Register */
#define GTM_TIM1_CH1_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010189Cu)

/** \brief 18A0, TIM1 Channel 1 Filter Parameter 1 Register */
#define GTM_TIM1_CH1_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01018A0u)

/** \brief 18A4, TIM1 Channel 1 Control Register */
#define GTM_TIM1_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01018A4u)

/** \brief 18A8, TIM1 Channel 1 Extended Control Register */
#define GTM_TIM1_CH1_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01018A8u)

/** \brief 18AC, TIM1 Channel 1 Interrupt Notification Register */
#define GTM_TIM1_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01018ACu)

/** \brief 18B0, TIM1 Channel 1 Interrupt Enable Register */
#define GTM_TIM1_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01018B0u)

/** \brief 18B4, TIM1 Channel 1 Force Interrupt Register */
#define GTM_TIM1_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01018B4u)

/** \brief 18B8, TIM1 Channel 1 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01018B8u)

/** \brief 18BC, TIM1 Channel 1 Error Interrupt Enable Register */
#define GTM_TIM1_CH1_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01018BCu)

/** \brief 1900, TIM1 Channel 2 General Purpose 0 Register */
#define GTM_TIM1_CH2_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101900u)

/** \brief 1904, TIM1 Channel 2 General Purpose 1 Register */
#define GTM_TIM1_CH2_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101904u)

/** \brief 1908, TIM1 Channel 2 SMU Counter Register */
#define GTM_TIM1_CH2_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101908u)

/** \brief 190C, TIM1 Channel 2 SMU Edge Counter Register */
#define GTM_TIM1_CH2_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010190Cu)

/** \brief 1910, TIM1 Channel 2 SMU Shadow Counter Register */
#define GTM_TIM1_CH2_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101910u)

/** \brief 1914, TIM1 Channel 2 TDU Counter Register */
#define GTM_TIM1_CH2_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101914u)

/** \brief 1918, TIM1 Channel 2 TDU Control Register */
#define GTM_TIM1_CH2_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101918u)

/** \brief 191C, TIM1 Channel 2 Filter Parameter 0 Register */
#define GTM_TIM1_CH2_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010191Cu)

/** \brief 1920, TIM1 Channel 2 Filter Parameter 1 Register */
#define GTM_TIM1_CH2_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101920u)

/** \brief 1924, TIM1 Channel 2 Control Register */
#define GTM_TIM1_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101924u)

/** \brief 1928, TIM1 Channel 2 Extended Control Register */
#define GTM_TIM1_CH2_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101928u)

/** \brief 192C, TIM1 Channel 2 Interrupt Notification Register */
#define GTM_TIM1_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010192Cu)

/** \brief 1930, TIM1 Channel 2 Interrupt Enable Register */
#define GTM_TIM1_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101930u)

/** \brief 1934, TIM1 Channel 2 Force Interrupt Register */
#define GTM_TIM1_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101934u)

/** \brief 1938, TIM1 Channel 2 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101938u)

/** \brief 193C, TIM1 Channel 2 Error Interrupt Enable Register */
#define GTM_TIM1_CH2_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010193Cu)

/** \brief 1980, TIM1 Channel 3 General Purpose 0 Register */
#define GTM_TIM1_CH3_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101980u)

/** \brief 1984, TIM1 Channel 3 General Purpose 1 Register */
#define GTM_TIM1_CH3_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101984u)

/** \brief 1988, TIM1 Channel 3 SMU Counter Register */
#define GTM_TIM1_CH3_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101988u)

/** \brief 198C, TIM1 Channel 3 SMU Edge Counter Register */
#define GTM_TIM1_CH3_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010198Cu)

/** \brief 1990, TIM1 Channel 3 SMU Shadow Counter Register */
#define GTM_TIM1_CH3_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101990u)

/** \brief 1994, TIM1 Channel 3 TDU Counter Register */
#define GTM_TIM1_CH3_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101994u)

/** \brief 1998, TIM1 Channel 3 TDU Control Register */
#define GTM_TIM1_CH3_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101998u)

/** \brief 199C, TIM1 Channel 3 Filter Parameter 0 Register */
#define GTM_TIM1_CH3_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010199Cu)

/** \brief 19A0, TIM1 Channel 3 Filter Parameter 1 Register */
#define GTM_TIM1_CH3_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01019A0u)

/** \brief 19A4, TIM1 Channel 3 Control Register */
#define GTM_TIM1_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01019A4u)

/** \brief 19A8, TIM1 Channel 3 Extended Control Register */
#define GTM_TIM1_CH3_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01019A8u)

/** \brief 19AC, TIM1 Channel 3 Interrupt Notification Register */
#define GTM_TIM1_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01019ACu)

/** \brief 19B0, TIM1 Channel 3 Interrupt Enable Register */
#define GTM_TIM1_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01019B0u)

/** \brief 19B4, TIM1 Channel 3 Force Interrupt Register */
#define GTM_TIM1_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01019B4u)

/** \brief 19B8, TIM1 Channel 3 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01019B8u)

/** \brief 19BC, TIM1 Channel 3 Error Interrupt Enable Register */
#define GTM_TIM1_CH3_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01019BCu)

/** \brief 1A00, TIM1 Channel 4 General Purpose 0 Register */
#define GTM_TIM1_CH4_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101A00u)

/** \brief 1A04, TIM1 Channel 4 General Purpose 1 Register */
#define GTM_TIM1_CH4_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101A04u)

/** \brief 1A08, TIM1 Channel 4 SMU Counter Register */
#define GTM_TIM1_CH4_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101A08u)

/** \brief 1A0C, TIM1 Channel 4 SMU Edge Counter Register */
#define GTM_TIM1_CH4_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101A0Cu)

/** \brief 1A10, TIM1 Channel 4 SMU Shadow Counter Register */
#define GTM_TIM1_CH4_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101A10u)

/** \brief 1A14, TIM1 Channel 4 TDU Counter Register */
#define GTM_TIM1_CH4_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101A14u)

/** \brief 1A18, TIM1 Channel 4 TDU Control Register */
#define GTM_TIM1_CH4_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101A18u)

/** \brief 1A1C, TIM1 Channel 4 Filter Parameter 0 Register */
#define GTM_TIM1_CH4_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101A1Cu)

/** \brief 1A20, TIM1 Channel 4 Filter Parameter 1 Register */
#define GTM_TIM1_CH4_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101A20u)

/** \brief 1A24, TIM1 Channel 4 Control Register */
#define GTM_TIM1_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101A24u)

/** \brief 1A28, TIM1 Channel 4 Extended Control Register */
#define GTM_TIM1_CH4_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101A28u)

/** \brief 1A2C, TIM1 Channel 4 Interrupt Notification Register */
#define GTM_TIM1_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101A2Cu)

/** \brief 1A30, TIM1 Channel 4 Interrupt Enable Register */
#define GTM_TIM1_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101A30u)

/** \brief 1A34, TIM1 Channel 4 Force Interrupt Register */
#define GTM_TIM1_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101A34u)

/** \brief 1A38, TIM1 Channel 4 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101A38u)

/** \brief 1A3C, TIM1 Channel 4 Error Interrupt Enable Register */
#define GTM_TIM1_CH4_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101A3Cu)

/** \brief 1A80, TIM1 Channel 5 General Purpose 0 Register */
#define GTM_TIM1_CH5_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101A80u)

/** \brief 1A84, TIM1 Channel 5 General Purpose 1 Register */
#define GTM_TIM1_CH5_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101A84u)

/** \brief 1A88, TIM1 Channel 5 SMU Counter Register */
#define GTM_TIM1_CH5_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101A88u)

/** \brief 1A8C, TIM1 Channel 5 SMU Edge Counter Register */
#define GTM_TIM1_CH5_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101A8Cu)

/** \brief 1A90, TIM1 Channel 5 SMU Shadow Counter Register */
#define GTM_TIM1_CH5_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101A90u)

/** \brief 1A94, TIM1 Channel 5 TDU Counter Register */
#define GTM_TIM1_CH5_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101A94u)

/** \brief 1A98, TIM1 Channel 5 TDU Control Register */
#define GTM_TIM1_CH5_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101A98u)

/** \brief 1A9C, TIM1 Channel 5 Filter Parameter 0 Register */
#define GTM_TIM1_CH5_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101A9Cu)

/** \brief 1AA0, TIM1 Channel 5 Filter Parameter 1 Register */
#define GTM_TIM1_CH5_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101AA0u)

/** \brief 1AA4, TIM1 Channel 5 Control Register */
#define GTM_TIM1_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101AA4u)

/** \brief 1AA8, TIM1 Channel 5 Extended Control Register */
#define GTM_TIM1_CH5_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101AA8u)

/** \brief 1AAC, TIM1 Channel 5 Interrupt Notification Register */
#define GTM_TIM1_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101AACu)

/** \brief 1AB0, TIM1 Channel 5 Interrupt Enable Register */
#define GTM_TIM1_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101AB0u)

/** \brief 1AB4, TIM1 Channel 5 Force Interrupt Register */
#define GTM_TIM1_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101AB4u)

/** \brief 1AB8, TIM1 Channel 5 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101AB8u)

/** \brief 1ABC, TIM1 Channel 5 Error Interrupt Enable Register */
#define GTM_TIM1_CH5_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101ABCu)

/** \brief 1B00, TIM1 Channel 6 General Purpose 0 Register */
#define GTM_TIM1_CH6_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101B00u)

/** \brief 1B04, TIM1 Channel 6 General Purpose 1 Register */
#define GTM_TIM1_CH6_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101B04u)

/** \brief 1B08, TIM1 Channel 6 SMU Counter Register */
#define GTM_TIM1_CH6_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101B08u)

/** \brief 1B0C, TIM1 Channel 6 SMU Edge Counter Register */
#define GTM_TIM1_CH6_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101B0Cu)

/** \brief 1B10, TIM1 Channel 6 SMU Shadow Counter Register */
#define GTM_TIM1_CH6_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101B10u)

/** \brief 1B14, TIM1 Channel 6 TDU Counter Register */
#define GTM_TIM1_CH6_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101B14u)

/** \brief 1B18, TIM1 Channel 6 TDU Control Register */
#define GTM_TIM1_CH6_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101B18u)

/** \brief 1B1C, TIM1 Channel 6 Filter Parameter 0 Register */
#define GTM_TIM1_CH6_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101B1Cu)

/** \brief 1B20, TIM1 Channel 6 Filter Parameter 1 Register */
#define GTM_TIM1_CH6_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101B20u)

/** \brief 1B24, TIM1 Channel 6 Control Register */
#define GTM_TIM1_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101B24u)

/** \brief 1B28, TIM1 Channel 6 Extended Control Register */
#define GTM_TIM1_CH6_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101B28u)

/** \brief 1B2C, TIM1 Channel 6 Interrupt Notification Register */
#define GTM_TIM1_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101B2Cu)

/** \brief 1B30, TIM1 Channel 6 Interrupt Enable Register */
#define GTM_TIM1_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101B30u)

/** \brief 1B34, TIM1 Channel 6 Force Interrupt Register */
#define GTM_TIM1_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101B34u)

/** \brief 1B38, TIM1 Channel 6 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101B38u)

/** \brief 1B3C, TIM1 Channel 6 Error Interrupt Enable Register */
#define GTM_TIM1_CH6_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101B3Cu)

/** \brief 1B80, TIM1 Channel 7 General Purpose 0 Register */
#define GTM_TIM1_CH7_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101B80u)

/** \brief 1B84, TIM1 Channel 7 General Purpose 1 Register */
#define GTM_TIM1_CH7_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101B84u)

/** \brief 1B88, TIM1 Channel 7 SMU Counter Register */
#define GTM_TIM1_CH7_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101B88u)

/** \brief 1B8C, TIM1 Channel 7 SMU Edge Counter Register */
#define GTM_TIM1_CH7_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101B8Cu)

/** \brief 1B90, TIM1 Channel 7 SMU Shadow Counter Register */
#define GTM_TIM1_CH7_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101B90u)

/** \brief 1B94, TIM1 Channel 7 TDU Counter Register */
#define GTM_TIM1_CH7_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101B94u)

/** \brief 1B98, TIM1 Channel 7 TDU Control Register */
#define GTM_TIM1_CH7_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101B98u)

/** \brief 1B9C, TIM1 Channel 7 Filter Parameter 0 Register */
#define GTM_TIM1_CH7_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101B9Cu)

/** \brief 1BA0, TIM1 Channel 7 Filter Parameter 1 Register */
#define GTM_TIM1_CH7_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101BA0u)

/** \brief 1BA4, TIM1 Channel 7 Control Register */
#define GTM_TIM1_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101BA4u)

/** \brief 1BA8, TIM1 Channel 7 Extended Control Register */
#define GTM_TIM1_CH7_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101BA8u)

/** \brief 1BAC, TIM1 Channel 7 Interrupt Notification Register */
#define GTM_TIM1_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101BACu)

/** \brief 1BB0, TIM1 Channel 7 Interrupt Enable Register */
#define GTM_TIM1_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101BB0u)

/** \brief 1BB4, TIM1 Channel 7 Force Interrupt Register */
#define GTM_TIM1_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101BB4u)

/** \brief 1BB8, TIM1 Channel 7 Interrupt Mode Configuration Register */
#define GTM_TIM1_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101BB8u)

/** \brief 1BBC, TIM1 Channel 7 Error Interrupt Enable Register */
#define GTM_TIM1_CH7_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101BBCu)

/** \brief 8000, TOM0 Channel 0 Control Register */
#define GTM_TOM0_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108000u)

/** \brief 8004, TOM0 Channel 0 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108004u)

/** \brief 8008, TOM0 Channel 0 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108008u)

/** \brief 800C, TOM0 Channel 0 CCU0 Compare Register */
#define GTM_TOM0_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010800Cu)

/** \brief 8010, TOM0 Channel 0 CCU1 Compare Register */
#define GTM_TOM0_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108010u)

/** \brief 8014, TOM0 Channel 0 CCU0 Counter Register */
#define GTM_TOM0_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108014u)

/** \brief 8018, TOM0 Channel 0 Status Register */
#define GTM_TOM0_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108018u)

/** \brief 801C, TOM0 Channel 0 Interrupt Notification Register */
#define GTM_TOM0_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010801Cu)

/** \brief 8020, TOM0 Channel 0 Interrupt Enable Register */
#define GTM_TOM0_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108020u)

/** \brief 8024, TOM0 Channel 0 Force Interrupt Register */
#define GTM_TOM0_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108024u)

/** \brief 8028, TOM0 Channel 0 Interrupt Mode Register */
#define GTM_TOM0_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108028u)

/** \brief 8030, TOM0 TGC0 Global Control Register */
#define GTM_TOM0_TGC0_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_GLB_CTRL*)0xF0108030u)

/** \brief 8034, TOM0 TGC0 Action Time Base Register */
#define GTM_TOM0_TGC0_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ACT_TB*)0xF0108034u)

/** \brief 8038, TOM0 TGC0 Force Update Control Register */
#define GTM_TOM0_TGC0_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_FUPD_CTRL*)0xF0108038u)

/** \brief 803C, TOM0 TGC0 Internal Trigger Control Register */
#define GTM_TOM0_TGC0_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_INT_TRIG*)0xF010803Cu)

/** \brief 8040, TOM0 Channel 1 Control Register */
#define GTM_TOM0_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108040u)

/** \brief 8044, TOM0 Channel 1 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108044u)

/** \brief 8048, TOM0 Channel 1 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108048u)

/** \brief 804C, TOM0 Channel 1 CCU0 Compare Register */
#define GTM_TOM0_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010804Cu)

/** \brief 8050, TOM0 Channel 1 CCU1 Compare Register */
#define GTM_TOM0_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108050u)

/** \brief 8054, TOM0 Channel 1 CCU0 Counter Register */
#define GTM_TOM0_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108054u)

/** \brief 8058, TOM0 Channel 1 Status Register */
#define GTM_TOM0_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108058u)

/** \brief 805C, TOM0 Channel 1 Interrupt Notification Register */
#define GTM_TOM0_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010805Cu)

/** \brief 8060, TOM0 Channel 1 Interrupt Enable Register */
#define GTM_TOM0_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108060u)

/** \brief 8064, TOM0 Channel 1 Force Interrupt Register */
#define GTM_TOM0_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108064u)

/** \brief 8068, TOM0 Channel 1 Interrupt Mode Register */
#define GTM_TOM0_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108068u)

/** \brief 8070, TOM0 TGC0 Enable/Disable Control Register */
#define GTM_TOM0_TGC0_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_CTRL*)0xF0108070u)

/** \brief 8074, TOM0 TGC0 Enable/Disable Status Register */
#define GTM_TOM0_TGC0_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_STAT*)0xF0108074u)

/** \brief 8078, TOM0 TGC0 Output Enable Control Register */
#define GTM_TOM0_TGC0_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_CTRL*)0xF0108078u)

/** \brief 807C, TOM0 TGC0 Output Enable Status Register */
#define GTM_TOM0_TGC0_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_STAT*)0xF010807Cu)

/** \brief 8080, TOM0 Channel 2 Control Register */
#define GTM_TOM0_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108080u)

/** \brief 8084, TOM0 Channel 2 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108084u)

/** \brief 8088, TOM0 Channel 2 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108088u)

/** \brief 808C, TOM0 Channel 2 CCU0 Compare Register */
#define GTM_TOM0_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010808Cu)

/** \brief 8090, TOM0 Channel 2 CCU1 Compare Register */
#define GTM_TOM0_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108090u)

/** \brief 8094, TOM0 Channel 2 CCU0 Counter Register */
#define GTM_TOM0_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108094u)

/** \brief 8098, TOM0 Channel 2 Status Register */
#define GTM_TOM0_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108098u)

/** \brief 809C, TOM0 Channel 2 Interrupt Notification Register */
#define GTM_TOM0_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010809Cu)

/** \brief 80A0, TOM0 Channel 2 Interrupt Enable Register */
#define GTM_TOM0_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01080A0u)

/** \brief 80A4, TOM0 Channel 2 Force Interrupt Register */
#define GTM_TOM0_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01080A4u)

/** \brief 80A8, TOM0 Channel 2 Interrupt Mode Register */
#define GTM_TOM0_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01080A8u)

/** \brief 80C0, TOM0 Channel 3 Control Register */
#define GTM_TOM0_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01080C0u)

/** \brief 80C4, TOM0 Channel 3 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01080C4u)

/** \brief 80C8, TOM0 Channel 3 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01080C8u)

/** \brief 80CC, TOM0 Channel 3 CCU0 Compare Register */
#define GTM_TOM0_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01080CCu)

/** \brief 80D0, TOM0 Channel 3 CCU1 Compare Register */
#define GTM_TOM0_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01080D0u)

/** \brief 80D4, TOM0 Channel 3 CCU0 Counter Register */
#define GTM_TOM0_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01080D4u)

/** \brief 80D8, TOM0 Channel 3 Status Register */
#define GTM_TOM0_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01080D8u)

/** \brief 80DC, TOM0 Channel 3 Interrupt Notification Register */
#define GTM_TOM0_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01080DCu)

/** \brief 80E0, TOM0 Channel 3 Interrupt Enable Register */
#define GTM_TOM0_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01080E0u)

/** \brief 80E4, TOM0 Channel 3 Force Interrupt Register */
#define GTM_TOM0_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01080E4u)

/** \brief 80E8, TOM0 Channel 3 Interrupt Mode Register */
#define GTM_TOM0_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01080E8u)

/** \brief 8100, TOM0 Channel 4 Control Register */
#define GTM_TOM0_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108100u)

/** \brief 8104, TOM0 Channel 4 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108104u)

/** \brief 8108, TOM0 Channel 4 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108108u)

/** \brief 810C, TOM0 Channel 4 CCU0 Compare Register */
#define GTM_TOM0_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010810Cu)

/** \brief 8110, TOM0 Channel 4 CCU1 Compare Register */
#define GTM_TOM0_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108110u)

/** \brief 8114, TOM0 Channel 4 CCU0 Counter Register */
#define GTM_TOM0_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108114u)

/** \brief 8118, TOM0 Channel 4 Status Register */
#define GTM_TOM0_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108118u)

/** \brief 811C, TOM0 Channel 4 Interrupt Notification Register */
#define GTM_TOM0_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010811Cu)

/** \brief 8120, TOM0 Channel 4 Interrupt Enable Register */
#define GTM_TOM0_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108120u)

/** \brief 8124, TOM0 Channel 4 Force Interrupt Register */
#define GTM_TOM0_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108124u)

/** \brief 8128, TOM0 Channel 4 Interrupt Mode Register */
#define GTM_TOM0_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108128u)

/** \brief 8140, TOM0 Channel 5 Control Register */
#define GTM_TOM0_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108140u)

/** \brief 8144, TOM0 Channel 5 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108144u)

/** \brief 8148, TOM0 Channel 5 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108148u)

/** \brief 814C, TOM0 Channel 5 CCU0 Compare Register */
#define GTM_TOM0_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010814Cu)

/** \brief 8150, TOM0 Channel 5 CCU1 Compare Register */
#define GTM_TOM0_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108150u)

/** \brief 8154, TOM0 Channel 5 CCU0 Counter Register */
#define GTM_TOM0_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108154u)

/** \brief 8158, TOM0 Channel 5 Status Register */
#define GTM_TOM0_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108158u)

/** \brief 815C, TOM0 Channel 5 Interrupt Notification Register */
#define GTM_TOM0_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010815Cu)

/** \brief 8160, TOM0 Channel 5 Interrupt Enable Register */
#define GTM_TOM0_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108160u)

/** \brief 8164, TOM0 Channel 5 Force Interrupt Register */
#define GTM_TOM0_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108164u)

/** \brief 8168, TOM0 Channel 5 Interrupt Mode Register */
#define GTM_TOM0_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108168u)

/** \brief 8180, TOM0 Channel 6 Control Register */
#define GTM_TOM0_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108180u)

/** \brief 8184, TOM0 Channel 6 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108184u)

/** \brief 8188, TOM0 Channel 6 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108188u)

/** \brief 818C, TOM0 Channel 6 CCU0 Compare Register */
#define GTM_TOM0_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010818Cu)

/** \brief 8190, TOM0 Channel 6 CCU1 Compare Register */
#define GTM_TOM0_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108190u)

/** \brief 8194, TOM0 Channel 6 CCU0 Counter Register */
#define GTM_TOM0_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108194u)

/** \brief 8198, TOM0 Channel 6 Status Register */
#define GTM_TOM0_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108198u)

/** \brief 819C, TOM0 Channel 6 Interrupt Notification Register */
#define GTM_TOM0_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010819Cu)

/** \brief 81A0, TOM0 Channel 6 Interrupt Enable Register */
#define GTM_TOM0_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01081A0u)

/** \brief 81A4, TOM0 Channel 6 Force Interrupt Register */
#define GTM_TOM0_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01081A4u)

/** \brief 81A8, TOM0 Channel 6 Interrupt Mode Register */
#define GTM_TOM0_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01081A8u)

/** \brief 81C0, TOM0 Channel 7 Control Register */
#define GTM_TOM0_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01081C0u)

/** \brief 81C4, TOM0 Channel 7 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01081C4u)

/** \brief 81C8, TOM0 Channel 7 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01081C8u)

/** \brief 81CC, TOM0 Channel 7 CCU0 Compare Register */
#define GTM_TOM0_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01081CCu)

/** \brief 81D0, TOM0 Channel 7 CCU1 Compare Register */
#define GTM_TOM0_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01081D0u)

/** \brief 81D4, TOM0 Channel 7 CCU0 Counter Register */
#define GTM_TOM0_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01081D4u)

/** \brief 81D8, TOM0 Channel 7 Status Register */
#define GTM_TOM0_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01081D8u)

/** \brief 81DC, TOM0 Channel 7 Interrupt Notification Register */
#define GTM_TOM0_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01081DCu)

/** \brief 81E0, TOM0 Channel 7 Interrupt Enable Register */
#define GTM_TOM0_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01081E0u)

/** \brief 81E4, TOM0 Channel 7 Force Interrupt Register */
#define GTM_TOM0_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01081E4u)

/** \brief 81E8, TOM0 Channel 7 Interrupt Mode Register */
#define GTM_TOM0_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01081E8u)

/** \brief 8200, TOM0 Channel 8 Control Register */
#define GTM_TOM0_CH8_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108200u)

/** \brief 8204, TOM0 Channel 8 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH8_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108204u)

/** \brief 8208, TOM0 Channel 8 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH8_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108208u)

/** \brief 820C, TOM0 Channel 8 CCU0 Compare Register */
#define GTM_TOM0_CH8_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010820Cu)

/** \brief 8210, TOM0 Channel 8 CCU1 Compare Register */
#define GTM_TOM0_CH8_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108210u)

/** \brief 8214, TOM0 Channel 8 CCU0 Counter Register */
#define GTM_TOM0_CH8_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108214u)

/** \brief 8218, TOM0 Channel 8 Status Register */
#define GTM_TOM0_CH8_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108218u)

/** \brief 821C, TOM0 Channel 8 Interrupt Notification Register */
#define GTM_TOM0_CH8_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010821Cu)

/** \brief 8220, TOM0 Channel 8 Interrupt Enable Register */
#define GTM_TOM0_CH8_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108220u)

/** \brief 8224, TOM0 Channel 8 Force Interrupt Register */
#define GTM_TOM0_CH8_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108224u)

/** \brief 8228, TOM0 Channel 8 Interrupt Mode Register */
#define GTM_TOM0_CH8_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108228u)

/** \brief 8230, TOM0 TGC1 Global Control Register */
#define GTM_TOM0_TGC1_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_GLB_CTRL*)0xF0108230u)

/** \brief 8234, TOM0 TGC1 Action Time Base Register */
#define GTM_TOM0_TGC1_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ACT_TB*)0xF0108234u)

/** \brief 8238, TOM0 TGC1 Force Update Control Register */
#define GTM_TOM0_TGC1_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_FUPD_CTRL*)0xF0108238u)

/** \brief 823C, TOM0 TGC1 Internal Trigger Control Register */
#define GTM_TOM0_TGC1_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_INT_TRIG*)0xF010823Cu)

/** \brief 8240, TOM0 Channel 9 Control Register */
#define GTM_TOM0_CH9_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108240u)

/** \brief 8244, TOM0 Channel 9 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH9_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108244u)

/** \brief 8248, TOM0 Channel 9 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH9_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108248u)

/** \brief 824C, TOM0 Channel 9 CCU0 Compare Register */
#define GTM_TOM0_CH9_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010824Cu)

/** \brief 8250, TOM0 Channel 9 CCU1 Compare Register */
#define GTM_TOM0_CH9_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108250u)

/** \brief 8254, TOM0 Channel 9 CCU0 Counter Register */
#define GTM_TOM0_CH9_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108254u)

/** \brief 8258, TOM0 Channel 9 Status Register */
#define GTM_TOM0_CH9_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108258u)

/** \brief 825C, TOM0 Channel 9 Interrupt Notification Register */
#define GTM_TOM0_CH9_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010825Cu)

/** \brief 8260, TOM0 Channel 9 Interrupt Enable Register */
#define GTM_TOM0_CH9_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108260u)

/** \brief 8264, TOM0 Channel 9 Force Interrupt Register */
#define GTM_TOM0_CH9_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108264u)

/** \brief 8268, TOM0 Channel 9 Interrupt Mode Register */
#define GTM_TOM0_CH9_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108268u)

/** \brief 8270, TOM0 TGC1 Enable/Disable Control Register */
#define GTM_TOM0_TGC1_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_CTRL*)0xF0108270u)

/** \brief 8274, TOM0 TGC1 Enable/Disable Status Register */
#define GTM_TOM0_TGC1_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_STAT*)0xF0108274u)

/** \brief 8278, TOM0 TGC1 Output Enable Control Register */
#define GTM_TOM0_TGC1_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_CTRL*)0xF0108278u)

/** \brief 827C, TOM0 TGC1 Output Enable Status Register */
#define GTM_TOM0_TGC1_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_STAT*)0xF010827Cu)

/** \brief 8280, TOM0 Channel 10 Control Register */
#define GTM_TOM0_CH10_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108280u)

/** \brief 8284, TOM0 Channel 10 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH10_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108284u)

/** \brief 8288, TOM0 Channel 10 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH10_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108288u)

/** \brief 828C, TOM0 Channel 10 CCU0 Compare Register */
#define GTM_TOM0_CH10_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010828Cu)

/** \brief 8290, TOM0 Channel 10 CCU1 Compare Register */
#define GTM_TOM0_CH10_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108290u)

/** \brief 8294, TOM0 Channel 10 CCU0 Counter Register */
#define GTM_TOM0_CH10_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108294u)

/** \brief 8298, TOM0 Channel 10 Status Register */
#define GTM_TOM0_CH10_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108298u)

/** \brief 829C, TOM0 Channel 10 Interrupt Notification Register */
#define GTM_TOM0_CH10_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010829Cu)

/** \brief 82A0, TOM0 Channel 10 Interrupt Enable Register */
#define GTM_TOM0_CH10_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01082A0u)

/** \brief 82A4, TOM0 Channel 10 Force Interrupt Register */
#define GTM_TOM0_CH10_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01082A4u)

/** \brief 82A8, TOM0 Channel 10 Interrupt Mode Register */
#define GTM_TOM0_CH10_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01082A8u)

/** \brief 82C0, TOM0 Channel 11 Control Register */
#define GTM_TOM0_CH11_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01082C0u)

/** \brief 82C4, TOM0 Channel 11 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH11_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01082C4u)

/** \brief 82C8, TOM0 Channel 11 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH11_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01082C8u)

/** \brief 82CC, TOM0 Channel 11 CCU0 Compare Register */
#define GTM_TOM0_CH11_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01082CCu)

/** \brief 82D0, TOM0 Channel 11 CCU1 Compare Register */
#define GTM_TOM0_CH11_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01082D0u)

/** \brief 82D4, TOM0 Channel 11 CCU0 Counter Register */
#define GTM_TOM0_CH11_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01082D4u)

/** \brief 82D8, TOM0 Channel 11 Status Register */
#define GTM_TOM0_CH11_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01082D8u)

/** \brief 82DC, TOM0 Channel 11 Interrupt Notification Register */
#define GTM_TOM0_CH11_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01082DCu)

/** \brief 82E0, TOM0 Channel 11 Interrupt Enable Register */
#define GTM_TOM0_CH11_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01082E0u)

/** \brief 82E4, TOM0 Channel 11 Force Interrupt Register */
#define GTM_TOM0_CH11_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01082E4u)

/** \brief 82E8, TOM0 Channel 11 Interrupt Mode Register */
#define GTM_TOM0_CH11_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01082E8u)

/** \brief 8300, TOM0 Channel 12 Control Register */
#define GTM_TOM0_CH12_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108300u)

/** \brief 8304, TOM0 Channel 12 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH12_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108304u)

/** \brief 8308, TOM0 Channel 12 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH12_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108308u)

/** \brief 830C, TOM0 Channel 12 CCU0 Compare Register */
#define GTM_TOM0_CH12_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010830Cu)

/** \brief 8310, TOM0 Channel 12 CCU1 Compare Register */
#define GTM_TOM0_CH12_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108310u)

/** \brief 8314, TOM0 Channel 12 CCU0 Counter Register */
#define GTM_TOM0_CH12_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108314u)

/** \brief 8318, TOM0 Channel 12 Status Register */
#define GTM_TOM0_CH12_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108318u)

/** \brief 831C, TOM0 Channel 12 Interrupt Notification Register */
#define GTM_TOM0_CH12_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010831Cu)

/** \brief 8320, TOM0 Channel 12 Interrupt Enable Register */
#define GTM_TOM0_CH12_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108320u)

/** \brief 8324, TOM0 Channel 12 Force Interrupt Register */
#define GTM_TOM0_CH12_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108324u)

/** \brief 8328, TOM0 Channel 12 Interrupt Mode Register */
#define GTM_TOM0_CH12_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108328u)

/** \brief 8340, TOM0 Channel 13 Control Register */
#define GTM_TOM0_CH13_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108340u)

/** \brief 8344, TOM0 Channel 13 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH13_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108344u)

/** \brief 8348, TOM0 Channel 13 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH13_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108348u)

/** \brief 834C, TOM0 Channel 13 CCU0 Compare Register */
#define GTM_TOM0_CH13_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010834Cu)

/** \brief 8350, TOM0 Channel 13 CCU1 Compare Register */
#define GTM_TOM0_CH13_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108350u)

/** \brief 8354, TOM0 Channel 13 CCU0 Counter Register */
#define GTM_TOM0_CH13_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108354u)

/** \brief 8358, TOM0 Channel 13 Status Register */
#define GTM_TOM0_CH13_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108358u)

/** \brief 835C, TOM0 Channel 13 Interrupt Notification Register */
#define GTM_TOM0_CH13_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010835Cu)

/** \brief 8360, TOM0 Channel 13 Interrupt Enable Register */
#define GTM_TOM0_CH13_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108360u)

/** \brief 8364, TOM0 Channel 13 Force Interrupt Register */
#define GTM_TOM0_CH13_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108364u)

/** \brief 8368, TOM0 Channel 13 Interrupt Mode Register */
#define GTM_TOM0_CH13_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108368u)

/** \brief 8380, TOM0 Channel 14 Control Register */
#define GTM_TOM0_CH14_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108380u)

/** \brief 8384, TOM0 Channel 14 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH14_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108384u)

/** \brief 8388, TOM0 Channel 14 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH14_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108388u)

/** \brief 838C, TOM0 Channel 14 CCU0 Compare Register */
#define GTM_TOM0_CH14_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010838Cu)

/** \brief 8390, TOM0 Channel 14 CCU1 Compare Register */
#define GTM_TOM0_CH14_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108390u)

/** \brief 8394, TOM0 Channel 14 CCU0 Counter Register */
#define GTM_TOM0_CH14_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108394u)

/** \brief 8398, TOM0 Channel 14 Status Register */
#define GTM_TOM0_CH14_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108398u)

/** \brief 839C, TOM0 Channel 14 Interrupt Notification Register */
#define GTM_TOM0_CH14_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010839Cu)

/** \brief 83A0, TOM0 Channel 14 Interrupt Enable Register */
#define GTM_TOM0_CH14_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01083A0u)

/** \brief 83A4, TOM0 Channel 14 Force Interrupt Register */
#define GTM_TOM0_CH14_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01083A4u)

/** \brief 83A8, TOM0 Channel 14 Interrupt Mode Register */
#define GTM_TOM0_CH14_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01083A8u)

/** \brief 83C0, TOM0 Channel 15 Control Register */
#define GTM_TOM0_CH15_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01083C0u)

/** \brief 83C4, TOM0 Channel 15 CCU0 Compare Shadow Register */
#define GTM_TOM0_CH15_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01083C4u)

/** \brief 83C8, TOM0 Channel 15 CCU1 Compare Shadow Register */
#define GTM_TOM0_CH15_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01083C8u)

/** \brief 83CC, TOM0 Channel 15 CCU0 Compare Register */
#define GTM_TOM0_CH15_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01083CCu)

/** \brief 83D0, TOM0 Channel 15 CCU1 Compare Register */
#define GTM_TOM0_CH15_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01083D0u)

/** \brief 83D4, TOM0 Channel 15 CCU0 Counter Register */
#define GTM_TOM0_CH15_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01083D4u)

/** \brief 83D8, TOM0 Channel 15 Status Register */
#define GTM_TOM0_CH15_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01083D8u)

/** \brief 83DC, TOM0 Channel 15 Interrupt Notification Register */
#define GTM_TOM0_CH15_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01083DCu)

/** \brief 83E0, TOM0 Channel 15 Interrupt Enable Register */
#define GTM_TOM0_CH15_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01083E0u)

/** \brief 83E4, TOM0 Channel 15 Force Interrupt Register */
#define GTM_TOM0_CH15_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01083E4u)

/** \brief 83E8, TOM0 Channel 15 Interrupt Mode Register */
#define GTM_TOM0_CH15_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01083E8u)

/** \brief 8800, TOM1 Channel 0 Control Register */
#define GTM_TOM1_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108800u)

/** \brief 8804, TOM1 Channel 0 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108804u)

/** \brief 8808, TOM1 Channel 0 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108808u)

/** \brief 880C, TOM1 Channel 0 CCU0 Compare Register */
#define GTM_TOM1_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010880Cu)

/** \brief 8810, TOM1 Channel 0 CCU1 Compare Register */
#define GTM_TOM1_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108810u)

/** \brief 8814, TOM1 Channel 0 CCU0 Counter Register */
#define GTM_TOM1_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108814u)

/** \brief 8818, TOM1 Channel 0 Status Register */
#define GTM_TOM1_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108818u)

/** \brief 881C, TOM1 Channel 0 Interrupt Notification Register */
#define GTM_TOM1_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010881Cu)

/** \brief 8820, TOM1 Channel 0 Interrupt Enable Register */
#define GTM_TOM1_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108820u)

/** \brief 8824, TOM1 Channel 0 Force Interrupt Register */
#define GTM_TOM1_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108824u)

/** \brief 8828, TOM1 Channel 0 Interrupt Mode Register */
#define GTM_TOM1_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108828u)

/** \brief 8830, TOM1 TGC0 Global Control Register */
#define GTM_TOM1_TGC0_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_GLB_CTRL*)0xF0108830u)

/** \brief 8834, TOM1 TGC0 Action Time Base Register */
#define GTM_TOM1_TGC0_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ACT_TB*)0xF0108834u)

/** \brief 8838, TOM1 TGC0 Force Update Control Register */
#define GTM_TOM1_TGC0_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_FUPD_CTRL*)0xF0108838u)

/** \brief 883C, TOM1 TGC0 Internal Trigger Control Register */
#define GTM_TOM1_TGC0_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_INT_TRIG*)0xF010883Cu)

/** \brief 8840, TOM1 Channel 1 Control Register */
#define GTM_TOM1_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108840u)

/** \brief 8844, TOM1 Channel 1 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108844u)

/** \brief 8848, TOM1 Channel 1 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108848u)

/** \brief 884C, TOM1 Channel 1 CCU0 Compare Register */
#define GTM_TOM1_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010884Cu)

/** \brief 8850, TOM1 Channel 1 CCU1 Compare Register */
#define GTM_TOM1_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108850u)

/** \brief 8854, TOM1 Channel 1 CCU0 Counter Register */
#define GTM_TOM1_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108854u)

/** \brief 8858, TOM1 Channel 1 Status Register */
#define GTM_TOM1_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108858u)

/** \brief 885C, TOM1 Channel 1 Interrupt Notification Register */
#define GTM_TOM1_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010885Cu)

/** \brief 8860, TOM1 Channel 1 Interrupt Enable Register */
#define GTM_TOM1_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108860u)

/** \brief 8864, TOM1 Channel 1 Force Interrupt Register */
#define GTM_TOM1_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108864u)

/** \brief 8868, TOM1 Channel 1 Interrupt Mode Register */
#define GTM_TOM1_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108868u)

/** \brief 8870, TOM1 TGC0 Enable/Disable Control Register */
#define GTM_TOM1_TGC0_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_CTRL*)0xF0108870u)

/** \brief 8874, TOM1 TGC0 Enable/Disable Status Register */
#define GTM_TOM1_TGC0_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_STAT*)0xF0108874u)

/** \brief 8878, TOM1 TGC0 Output Enable Control Register */
#define GTM_TOM1_TGC0_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_CTRL*)0xF0108878u)

/** \brief 887C, TOM1 TGC0 Output Enable Status Register */
#define GTM_TOM1_TGC0_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_STAT*)0xF010887Cu)

/** \brief 8880, TOM1 Channel 2 Control Register */
#define GTM_TOM1_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108880u)

/** \brief 8884, TOM1 Channel 2 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108884u)

/** \brief 8888, TOM1 Channel 2 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108888u)

/** \brief 888C, TOM1 Channel 2 CCU0 Compare Register */
#define GTM_TOM1_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010888Cu)

/** \brief 8890, TOM1 Channel 2 CCU1 Compare Register */
#define GTM_TOM1_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108890u)

/** \brief 8894, TOM1 Channel 2 CCU0 Counter Register */
#define GTM_TOM1_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108894u)

/** \brief 8898, TOM1 Channel 2 Status Register */
#define GTM_TOM1_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108898u)

/** \brief 889C, TOM1 Channel 2 Interrupt Notification Register */
#define GTM_TOM1_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010889Cu)

/** \brief 88A0, TOM1 Channel 2 Interrupt Enable Register */
#define GTM_TOM1_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01088A0u)

/** \brief 88A4, TOM1 Channel 2 Force Interrupt Register */
#define GTM_TOM1_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01088A4u)

/** \brief 88A8, TOM1 Channel 2 Interrupt Mode Register */
#define GTM_TOM1_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01088A8u)

/** \brief 88C0, TOM1 Channel 3 Control Register */
#define GTM_TOM1_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01088C0u)

/** \brief 88C4, TOM1 Channel 3 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01088C4u)

/** \brief 88C8, TOM1 Channel 3 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01088C8u)

/** \brief 88CC, TOM1 Channel 3 CCU0 Compare Register */
#define GTM_TOM1_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01088CCu)

/** \brief 88D0, TOM1 Channel 3 CCU1 Compare Register */
#define GTM_TOM1_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01088D0u)

/** \brief 88D4, TOM1 Channel 3 CCU0 Counter Register */
#define GTM_TOM1_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01088D4u)

/** \brief 88D8, TOM1 Channel 3 Status Register */
#define GTM_TOM1_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01088D8u)

/** \brief 88DC, TOM1 Channel 3 Interrupt Notification Register */
#define GTM_TOM1_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01088DCu)

/** \brief 88E0, TOM1 Channel 3 Interrupt Enable Register */
#define GTM_TOM1_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01088E0u)

/** \brief 88E4, TOM1 Channel 3 Force Interrupt Register */
#define GTM_TOM1_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01088E4u)

/** \brief 88E8, TOM1 Channel 3 Interrupt Mode Register */
#define GTM_TOM1_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01088E8u)

/** \brief 8900, TOM1 Channel 4 Control Register */
#define GTM_TOM1_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108900u)

/** \brief 8904, TOM1 Channel 4 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108904u)

/** \brief 8908, TOM1 Channel 4 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108908u)

/** \brief 890C, TOM1 Channel 4 CCU0 Compare Register */
#define GTM_TOM1_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010890Cu)

/** \brief 8910, TOM1 Channel 4 CCU1 Compare Register */
#define GTM_TOM1_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108910u)

/** \brief 8914, TOM1 Channel 4 CCU0 Counter Register */
#define GTM_TOM1_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108914u)

/** \brief 8918, TOM1 Channel 4 Status Register */
#define GTM_TOM1_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108918u)

/** \brief 891C, TOM1 Channel 4 Interrupt Notification Register */
#define GTM_TOM1_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010891Cu)

/** \brief 8920, TOM1 Channel 4 Interrupt Enable Register */
#define GTM_TOM1_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108920u)

/** \brief 8924, TOM1 Channel 4 Force Interrupt Register */
#define GTM_TOM1_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108924u)

/** \brief 8928, TOM1 Channel 4 Interrupt Mode Register */
#define GTM_TOM1_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108928u)

/** \brief 8940, TOM1 Channel 5 Control Register */
#define GTM_TOM1_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108940u)

/** \brief 8944, TOM1 Channel 5 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108944u)

/** \brief 8948, TOM1 Channel 5 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108948u)

/** \brief 894C, TOM1 Channel 5 CCU0 Compare Register */
#define GTM_TOM1_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010894Cu)

/** \brief 8950, TOM1 Channel 5 CCU1 Compare Register */
#define GTM_TOM1_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108950u)

/** \brief 8954, TOM1 Channel 5 CCU0 Counter Register */
#define GTM_TOM1_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108954u)

/** \brief 8958, TOM1 Channel 5 Status Register */
#define GTM_TOM1_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108958u)

/** \brief 895C, TOM1 Channel 5 Interrupt Notification Register */
#define GTM_TOM1_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010895Cu)

/** \brief 8960, TOM1 Channel 5 Interrupt Enable Register */
#define GTM_TOM1_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108960u)

/** \brief 8964, TOM1 Channel 5 Force Interrupt Register */
#define GTM_TOM1_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108964u)

/** \brief 8968, TOM1 Channel 5 Interrupt Mode Register */
#define GTM_TOM1_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108968u)

/** \brief 8980, TOM1 Channel 6 Control Register */
#define GTM_TOM1_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108980u)

/** \brief 8984, TOM1 Channel 6 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108984u)

/** \brief 8988, TOM1 Channel 6 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108988u)

/** \brief 898C, TOM1 Channel 6 CCU0 Compare Register */
#define GTM_TOM1_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010898Cu)

/** \brief 8990, TOM1 Channel 6 CCU1 Compare Register */
#define GTM_TOM1_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108990u)

/** \brief 8994, TOM1 Channel 6 CCU0 Counter Register */
#define GTM_TOM1_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108994u)

/** \brief 8998, TOM1 Channel 6 Status Register */
#define GTM_TOM1_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108998u)

/** \brief 899C, TOM1 Channel 6 Interrupt Notification Register */
#define GTM_TOM1_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010899Cu)

/** \brief 89A0, TOM1 Channel 6 Interrupt Enable Register */
#define GTM_TOM1_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01089A0u)

/** \brief 89A4, TOM1 Channel 6 Force Interrupt Register */
#define GTM_TOM1_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01089A4u)

/** \brief 89A8, TOM1 Channel 6 Interrupt Mode Register */
#define GTM_TOM1_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01089A8u)

/** \brief 89C0, TOM1 Channel 7 Control Register */
#define GTM_TOM1_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01089C0u)

/** \brief 89C4, TOM1 Channel 7 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01089C4u)

/** \brief 89C8, TOM1 Channel 7 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01089C8u)

/** \brief 89CC, TOM1 Channel 7 CCU0 Compare Register */
#define GTM_TOM1_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01089CCu)

/** \brief 89D0, TOM1 Channel 7 CCU1 Compare Register */
#define GTM_TOM1_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01089D0u)

/** \brief 89D4, TOM1 Channel 7 CCU0 Counter Register */
#define GTM_TOM1_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01089D4u)

/** \brief 89D8, TOM1 Channel 7 Status Register */
#define GTM_TOM1_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01089D8u)

/** \brief 89DC, TOM1 Channel 7 Interrupt Notification Register */
#define GTM_TOM1_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01089DCu)

/** \brief 89E0, TOM1 Channel 7 Interrupt Enable Register */
#define GTM_TOM1_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01089E0u)

/** \brief 89E4, TOM1 Channel 7 Force Interrupt Register */
#define GTM_TOM1_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01089E4u)

/** \brief 89E8, TOM1 Channel 7 Interrupt Mode Register */
#define GTM_TOM1_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01089E8u)

/** \brief 8A00, TOM1 Channel 8 Control Register */
#define GTM_TOM1_CH8_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108A00u)

/** \brief 8A04, TOM1 Channel 8 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH8_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108A04u)

/** \brief 8A08, TOM1 Channel 8 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH8_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108A08u)

/** \brief 8A0C, TOM1 Channel 8 CCU0 Compare Register */
#define GTM_TOM1_CH8_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108A0Cu)

/** \brief 8A10, TOM1 Channel 8 CCU1 Compare Register */
#define GTM_TOM1_CH8_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108A10u)

/** \brief 8A14, TOM1 Channel 8 CCU0 Counter Register */
#define GTM_TOM1_CH8_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108A14u)

/** \brief 8A18, TOM1 Channel 8 Status Register */
#define GTM_TOM1_CH8_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108A18u)

/** \brief 8A1C, TOM1 Channel 8 Interrupt Notification Register */
#define GTM_TOM1_CH8_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108A1Cu)

/** \brief 8A20, TOM1 Channel 8 Interrupt Enable Register */
#define GTM_TOM1_CH8_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108A20u)

/** \brief 8A24, TOM1 Channel 8 Force Interrupt Register */
#define GTM_TOM1_CH8_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108A24u)

/** \brief 8A28, TOM1 Channel 8 Interrupt Mode Register */
#define GTM_TOM1_CH8_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108A28u)

/** \brief 8A30, TOM1 TGC1 Global Control Register */
#define GTM_TOM1_TGC1_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_GLB_CTRL*)0xF0108A30u)

/** \brief 8A34, TOM1 TGC1 Action Time Base Register */
#define GTM_TOM1_TGC1_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ACT_TB*)0xF0108A34u)

/** \brief 8A38, TOM1 TGC1 Force Update Control Register */
#define GTM_TOM1_TGC1_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_FUPD_CTRL*)0xF0108A38u)

/** \brief 8A3C, TOM1 TGC1 Internal Trigger Control Register */
#define GTM_TOM1_TGC1_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_INT_TRIG*)0xF0108A3Cu)

/** \brief 8A40, TOM1 Channel 9 Control Register */
#define GTM_TOM1_CH9_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108A40u)

/** \brief 8A44, TOM1 Channel 9 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH9_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108A44u)

/** \brief 8A48, TOM1 Channel 9 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH9_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108A48u)

/** \brief 8A4C, TOM1 Channel 9 CCU0 Compare Register */
#define GTM_TOM1_CH9_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108A4Cu)

/** \brief 8A50, TOM1 Channel 9 CCU1 Compare Register */
#define GTM_TOM1_CH9_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108A50u)

/** \brief 8A54, TOM1 Channel 9 CCU0 Counter Register */
#define GTM_TOM1_CH9_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108A54u)

/** \brief 8A58, TOM1 Channel 9 Status Register */
#define GTM_TOM1_CH9_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108A58u)

/** \brief 8A5C, TOM1 Channel 9 Interrupt Notification Register */
#define GTM_TOM1_CH9_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108A5Cu)

/** \brief 8A60, TOM1 Channel 9 Interrupt Enable Register */
#define GTM_TOM1_CH9_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108A60u)

/** \brief 8A64, TOM1 Channel 9 Force Interrupt Register */
#define GTM_TOM1_CH9_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108A64u)

/** \brief 8A68, TOM1 Channel 9 Interrupt Mode Register */
#define GTM_TOM1_CH9_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108A68u)

/** \brief 8A70, TOM1 TGC1 Enable/Disable Control Register */
#define GTM_TOM1_TGC1_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_CTRL*)0xF0108A70u)

/** \brief 8A74, TOM1 TGC1 Enable/Disable Status Register */
#define GTM_TOM1_TGC1_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_ENDIS_STAT*)0xF0108A74u)

/** \brief 8A78, TOM1 TGC1 Output Enable Control Register */
#define GTM_TOM1_TGC1_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_CTRL*)0xF0108A78u)

/** \brief 8A7C, TOM1 TGC1 Output Enable Status Register */
#define GTM_TOM1_TGC1_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_TGC_OUTEN_STAT*)0xF0108A7Cu)

/** \brief 8A80, TOM1 Channel 10 Control Register */
#define GTM_TOM1_CH10_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108A80u)

/** \brief 8A84, TOM1 Channel 10 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH10_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108A84u)

/** \brief 8A88, TOM1 Channel 10 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH10_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108A88u)

/** \brief 8A8C, TOM1 Channel 10 CCU0 Compare Register */
#define GTM_TOM1_CH10_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108A8Cu)

/** \brief 8A90, TOM1 Channel 10 CCU1 Compare Register */
#define GTM_TOM1_CH10_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108A90u)

/** \brief 8A94, TOM1 Channel 10 CCU0 Counter Register */
#define GTM_TOM1_CH10_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108A94u)

/** \brief 8A98, TOM1 Channel 10 Status Register */
#define GTM_TOM1_CH10_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108A98u)

/** \brief 8A9C, TOM1 Channel 10 Interrupt Notification Register */
#define GTM_TOM1_CH10_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108A9Cu)

/** \brief 8AA0, TOM1 Channel 10 Interrupt Enable Register */
#define GTM_TOM1_CH10_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108AA0u)

/** \brief 8AA4, TOM1 Channel 10 Force Interrupt Register */
#define GTM_TOM1_CH10_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108AA4u)

/** \brief 8AA8, TOM1 Channel 10 Interrupt Mode Register */
#define GTM_TOM1_CH10_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108AA8u)

/** \brief 8AC0, TOM1 Channel 11 Control Register */
#define GTM_TOM1_CH11_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108AC0u)

/** \brief 8AC4, TOM1 Channel 11 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH11_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108AC4u)

/** \brief 8AC8, TOM1 Channel 11 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH11_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108AC8u)

/** \brief 8ACC, TOM1 Channel 11 CCU0 Compare Register */
#define GTM_TOM1_CH11_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108ACCu)

/** \brief 8AD0, TOM1 Channel 11 CCU1 Compare Register */
#define GTM_TOM1_CH11_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108AD0u)

/** \brief 8AD4, TOM1 Channel 11 CCU0 Counter Register */
#define GTM_TOM1_CH11_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108AD4u)

/** \brief 8AD8, TOM1 Channel 11 Status Register */
#define GTM_TOM1_CH11_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108AD8u)

/** \brief 8ADC, TOM1 Channel 11 Interrupt Notification Register */
#define GTM_TOM1_CH11_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108ADCu)

/** \brief 8AE0, TOM1 Channel 11 Interrupt Enable Register */
#define GTM_TOM1_CH11_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108AE0u)

/** \brief 8AE4, TOM1 Channel 11 Force Interrupt Register */
#define GTM_TOM1_CH11_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108AE4u)

/** \brief 8AE8, TOM1 Channel 11 Interrupt Mode Register */
#define GTM_TOM1_CH11_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108AE8u)

/** \brief 8B00, TOM1 Channel 12 Control Register */
#define GTM_TOM1_CH12_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108B00u)

/** \brief 8B04, TOM1 Channel 12 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH12_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108B04u)

/** \brief 8B08, TOM1 Channel 12 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH12_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108B08u)

/** \brief 8B0C, TOM1 Channel 12 CCU0 Compare Register */
#define GTM_TOM1_CH12_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108B0Cu)

/** \brief 8B10, TOM1 Channel 12 CCU1 Compare Register */
#define GTM_TOM1_CH12_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108B10u)

/** \brief 8B14, TOM1 Channel 12 CCU0 Counter Register */
#define GTM_TOM1_CH12_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108B14u)

/** \brief 8B18, TOM1 Channel 12 Status Register */
#define GTM_TOM1_CH12_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108B18u)

/** \brief 8B1C, TOM1 Channel 12 Interrupt Notification Register */
#define GTM_TOM1_CH12_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108B1Cu)

/** \brief 8B20, TOM1 Channel 12 Interrupt Enable Register */
#define GTM_TOM1_CH12_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108B20u)

/** \brief 8B24, TOM1 Channel 12 Force Interrupt Register */
#define GTM_TOM1_CH12_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108B24u)

/** \brief 8B28, TOM1 Channel 12 Interrupt Mode Register */
#define GTM_TOM1_CH12_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108B28u)

/** \brief 8B40, TOM1 Channel 13 Control Register */
#define GTM_TOM1_CH13_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108B40u)

/** \brief 8B44, TOM1 Channel 13 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH13_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108B44u)

/** \brief 8B48, TOM1 Channel 13 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH13_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108B48u)

/** \brief 8B4C, TOM1 Channel 13 CCU0 Compare Register */
#define GTM_TOM1_CH13_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108B4Cu)

/** \brief 8B50, TOM1 Channel 13 CCU1 Compare Register */
#define GTM_TOM1_CH13_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108B50u)

/** \brief 8B54, TOM1 Channel 13 CCU0 Counter Register */
#define GTM_TOM1_CH13_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108B54u)

/** \brief 8B58, TOM1 Channel 13 Status Register */
#define GTM_TOM1_CH13_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108B58u)

/** \brief 8B5C, TOM1 Channel 13 Interrupt Notification Register */
#define GTM_TOM1_CH13_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108B5Cu)

/** \brief 8B60, TOM1 Channel 13 Interrupt Enable Register */
#define GTM_TOM1_CH13_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108B60u)

/** \brief 8B64, TOM1 Channel 13 Force Interrupt Register */
#define GTM_TOM1_CH13_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108B64u)

/** \brief 8B68, TOM1 Channel 13 Interrupt Mode Register */
#define GTM_TOM1_CH13_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108B68u)

/** \brief 8B80, TOM1 Channel 14 Control Register */
#define GTM_TOM1_CH14_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108B80u)

/** \brief 8B84, TOM1 Channel 14 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH14_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108B84u)

/** \brief 8B88, TOM1 Channel 14 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH14_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108B88u)

/** \brief 8B8C, TOM1 Channel 14 CCU0 Compare Register */
#define GTM_TOM1_CH14_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108B8Cu)

/** \brief 8B90, TOM1 Channel 14 CCU1 Compare Register */
#define GTM_TOM1_CH14_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108B90u)

/** \brief 8B94, TOM1 Channel 14 CCU0 Counter Register */
#define GTM_TOM1_CH14_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108B94u)

/** \brief 8B98, TOM1 Channel 14 Status Register */
#define GTM_TOM1_CH14_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108B98u)

/** \brief 8B9C, TOM1 Channel 14 Interrupt Notification Register */
#define GTM_TOM1_CH14_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108B9Cu)

/** \brief 8BA0, TOM1 Channel 14 Interrupt Enable Register */
#define GTM_TOM1_CH14_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108BA0u)

/** \brief 8BA4, TOM1 Channel 14 Force Interrupt Register */
#define GTM_TOM1_CH14_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108BA4u)

/** \brief 8BA8, TOM1 Channel 14 Interrupt Mode Register */
#define GTM_TOM1_CH14_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108BA8u)

/** \brief 8BC0, TOM1 Channel 15 Control Register */
#define GTM_TOM1_CH15_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108BC0u)

/** \brief 8BC4, TOM1 Channel 15 CCU0 Compare Shadow Register */
#define GTM_TOM1_CH15_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108BC4u)

/** \brief 8BC8, TOM1 Channel 15 CCU1 Compare Shadow Register */
#define GTM_TOM1_CH15_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108BC8u)

/** \brief 8BCC, TOM1 Channel 15 CCU0 Compare Register */
#define GTM_TOM1_CH15_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108BCCu)

/** \brief 8BD0, TOM1 Channel 15 CCU1 Compare Register */
#define GTM_TOM1_CH15_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108BD0u)

/** \brief 8BD4, TOM1 Channel 15 CCU0 Counter Register */
#define GTM_TOM1_CH15_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108BD4u)

/** \brief 8BD8, TOM1 Channel 15 Status Register */
#define GTM_TOM1_CH15_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108BD8u)

/** \brief 8BDC, TOM1 Channel 15 Interrupt Notification Register */
#define GTM_TOM1_CH15_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108BDCu)

/** \brief 8BE0, TOM1 Channel 15 Interrupt Enable Register */
#define GTM_TOM1_CH15_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108BE0u)

/** \brief 8BE4, TOM1 Channel 15 Force Interrupt Register */
#define GTM_TOM1_CH15_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108BE4u)

/** \brief 8BE8, TOM1 Channel 15 Interrupt Mode Register */
#define GTM_TOM1_CH15_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108BE8u)

/** \brief 9FD00, Clock Control Register */
#define GTM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CLC*)0xF019FD00u)

/** \brief 9FD04, Kernel Reset Status Clear Register */
#define GTM_RESET_CLR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_RESET_CLR*)0xF019FD04u)

/** \brief 9FD08, Kernel Reset Register 0 */
#define GTM_RESET1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_RESET1*)0xF019FD08u)

/** \brief 9FD0C, Kernel Reset Register 1 */
#define GTM_RESET2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_RESET2*)0xF019FD0Cu)

/** \brief 9FD10, Access Enable Register 0 */
#define GTM_ACCEN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ACCEN0*)0xF019FD10u)

/** \brief 9FD14, Access Enable Register 1 */
#define GTM_ACCEN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ACCEN1*)0xF019FD14u)

/** \brief 9FD18, OCDS TBU0 Trigger Register */
#define GTM_OCDS_OTBU0T /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OCDS_OTBU0T*)0xF019FD18u)
/** Alias (User Manual Name) for GTM_OCDS_OTBU0T.
* To use register names with standard convension, please use GTM_OCDS_OTBU0T.
*/
#define GTM_OTBU0T (GTM_OCDS_OTBU0T)

/** \brief 9FD1C, OCDS TBU1 Trigger Register */
#define GTM_OCDS_OTBU1T /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OCDS_OTBU1T*)0xF019FD1Cu)
/** Alias (User Manual Name) for GTM_OCDS_OTBU1T.
* To use register names with standard convension, please use GTM_OCDS_OTBU1T.
*/
#define GTM_OTBU1T (GTM_OCDS_OTBU1T)

/** \brief 9FD20, OCDS TBU2 Trigger Register */
#define GTM_OCDS_OTBU2T /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OCDS_OTBU2T*)0xF019FD20u)
/** Alias (User Manual Name) for GTM_OCDS_OTBU2T.
* To use register names with standard convension, please use GTM_OCDS_OTBU2T.
*/
#define GTM_OTBU2T (GTM_OCDS_OTBU2T)

/** \brief 9FD28, OCDS Trigger Set Select Register */
#define GTM_OCDS_OTSS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OCDS_OTSS*)0xF019FD28u)
/** Alias (User Manual Name) for GTM_OCDS_OTSS.
* To use register names with standard convension, please use GTM_OCDS_OTSS.
*/
#define GTM_OTSS (GTM_OCDS_OTSS)

/** \brief 9FD2C, OCDS Trigger Set Control 0 Register */
#define GTM_OCDS_OTSC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OCDS_OTSC0*)0xF019FD2Cu)
/** Alias (User Manual Name) for GTM_OCDS_OTSC0.
* To use register names with standard convension, please use GTM_OCDS_OTSC0.
*/
#define GTM_OTSC0 (GTM_OCDS_OTSC0)

/** \brief 9FD34, OCDS Debug Access Register */
#define GTM_OCDS_ODA /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OCDS_ODA*)0xF019FD34u)
/** Alias (User Manual Name) for GTM_OCDS_ODA.
* To use register names with standard convension, please use GTM_OCDS_ODA.
*/
#define GTM_ODA (GTM_OCDS_ODA)

/** \brief 9FD38, OCDS Control and Status */
#define GTM_OCDS_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_OCDS_OCS*)0xF019FD38u)
/** Alias (User Manual Name) for GTM_OCDS_OCS.
* To use register names with standard convension, please use GTM_OCDS_OCS.
*/
#define GTM_OCS (GTM_OCDS_OCS)

/** \brief 9FD40, TIM0 Input Select Register */
#define GTM_TIMINSEL0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIMINSEL*)0xF019FD40u)
/** Alias (User Manual Name) for GTM_TIMINSEL0.
* To use register names with standard convension, please use GTM_TIMINSEL0.
*/
#define GTM_TIM0INSEL (GTM_TIMINSEL0)

/** \brief 9FD44, TIM1 Input Select Register */
#define GTM_TIMINSEL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TIMINSEL*)0xF019FD44u)
/** Alias (User Manual Name) for GTM_TIMINSEL1.
* To use register names with standard convension, please use GTM_TIMINSEL1.
*/
#define GTM_TIM1INSEL (GTM_TIMINSEL1)

/** \brief 9FD60, Timer Output Select Register */
#define GTM_TOUTSEL0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD60u)

/** \brief 9FD64, Timer Output Select Register */
#define GTM_TOUTSEL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD64u)

/** \brief 9FD68, Timer Output Select Register */
#define GTM_TOUTSEL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD68u)

/** \brief 9FD6C, Timer Output Select Register */
#define GTM_TOUTSEL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD6Cu)

/** \brief 9FD70, Timer Output Select Register */
#define GTM_TOUTSEL4 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD70u)

/** \brief 9FD74, Timer Output Select Register */
#define GTM_TOUTSEL5 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD74u)

/** \brief 9FD78, Timer Output Select Register */
#define GTM_TOUTSEL6 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD78u)

/** \brief 9FD7C, Timer Output Select Register */
#define GTM_TOUTSEL7 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD7Cu)

/** \brief 9FD80, Timer Output Select Register */
#define GTM_TOUTSEL8 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD80u)

/** \brief 9FD84, Timer Output Select Register */
#define GTM_TOUTSEL9 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD84u)

/** \brief 9FD88, Timer Output Select Register */
#define GTM_TOUTSEL10 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD88u)

/** \brief 9FD8C, Timer Output Select Register */
#define GTM_TOUTSEL11 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD8Cu)

/** \brief 9FD90, Timer Output Select Register */
#define GTM_TOUTSEL12 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD90u)

/** \brief 9FD94, Timer Output Select Register */
#define GTM_TOUTSEL13 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD94u)

/** \brief 9FD98, Timer Output Select Register */
#define GTM_TOUTSEL14 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD98u)

/** \brief 9FD9C, Timer Output Select Register */
#define GTM_TOUTSEL15 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FD9Cu)

/** \brief 9FDA0, Timer Output Select Register */
#define GTM_TOUTSEL16 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_TOUTSEL*)0xF019FDA0u)

/** \brief 9FE40, ADC Trigger 0 Output Select 0 Register */
#define GTM_ADCTRIG0_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT0*)0xF019FE40u)
/** Alias (User Manual Name) for GTM_ADCTRIG0_OUT0.
* To use register names with standard convension, please use GTM_ADCTRIG0_OUT0.
*/
#define GTM_ADCTRIG0OUT0 (GTM_ADCTRIG0_OUT0)

/** \brief 9FE44, ADC Trigger 0 Output Select 1 Register */
#define GTM_ADCTRIG0_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT1*)0xF019FE44u)
/** Alias (User Manual Name) for GTM_ADCTRIG0_OUT1.
* To use register names with standard convension, please use GTM_ADCTRIG0_OUT1.
*/
#define GTM_ADCTRIG0OUT1 (GTM_ADCTRIG0_OUT1)

/** \brief 9FE48, ADC Trigger 1 Output Select 0 Register */
#define GTM_ADCTRIG1_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT0*)0xF019FE48u)
/** Alias (User Manual Name) for GTM_ADCTRIG1_OUT0.
* To use register names with standard convension, please use GTM_ADCTRIG1_OUT0.
*/
#define GTM_ADCTRIG1OUT0 (GTM_ADCTRIG1_OUT0)

/** \brief 9FE4C, ADC Trigger 1 Output Select 1 Register */
#define GTM_ADCTRIG1_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT1*)0xF019FE4Cu)
/** Alias (User Manual Name) for GTM_ADCTRIG1_OUT1.
* To use register names with standard convension, please use GTM_ADCTRIG1_OUT1.
*/
#define GTM_ADCTRIG1OUT1 (GTM_ADCTRIG1_OUT1)

/** \brief 9FE50, ADC Trigger 2 Output Select 0 Register */
#define GTM_ADCTRIG2_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT0*)0xF019FE50u)
/** Alias (User Manual Name) for GTM_ADCTRIG2_OUT0.
* To use register names with standard convension, please use GTM_ADCTRIG2_OUT0.
*/
#define GTM_ADCTRIG2OUT0 (GTM_ADCTRIG2_OUT0)

/** \brief 9FE54, ADC Trigger 2 Output Select 1 Register */
#define GTM_ADCTRIG2_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT1*)0xF019FE54u)
/** Alias (User Manual Name) for GTM_ADCTRIG2_OUT1.
* To use register names with standard convension, please use GTM_ADCTRIG2_OUT1.
*/
#define GTM_ADCTRIG2OUT1 (GTM_ADCTRIG2_OUT1)

/** \brief 9FE58, ADC Trigger 3 Output Select 0 Register */
#define GTM_ADCTRIG3_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT0*)0xF019FE58u)
/** Alias (User Manual Name) for GTM_ADCTRIG3_OUT0.
* To use register names with standard convension, please use GTM_ADCTRIG3_OUT0.
*/
#define GTM_ADCTRIG3OUT0 (GTM_ADCTRIG3_OUT0)

/** \brief 9FE5C, ADC Trigger 3 Output Select 1 Register */
#define GTM_ADCTRIG3_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT1*)0xF019FE5Cu)
/** Alias (User Manual Name) for GTM_ADCTRIG3_OUT1.
* To use register names with standard convension, please use GTM_ADCTRIG3_OUT1.
*/
#define GTM_ADCTRIG3OUT1 (GTM_ADCTRIG3_OUT1)

/** \brief 9FE60, ADC Trigger 4 Output Select 0 Register */
#define GTM_ADCTRIG4_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT0*)0xF019FE60u)
/** Alias (User Manual Name) for GTM_ADCTRIG4_OUT0.
* To use register names with standard convension, please use GTM_ADCTRIG4_OUT0.
*/
#define GTM_ADCTRIG4OUT0 (GTM_ADCTRIG4_OUT0)

/** \brief 9FE64, ADC Trigger 4 Output Select 1 Register */
#define GTM_ADCTRIG4_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ADCTRIG_OUT1*)0xF019FE64u)
/** Alias (User Manual Name) for GTM_ADCTRIG4_OUT1.
* To use register names with standard convension, please use GTM_ADCTRIG4_OUT1.
*/
#define GTM_ADCTRIG4OUT1 (GTM_ADCTRIG4_OUT1)

/** \brief 9FFD4, LCDCDC Output Select Register */
#define GTM_LCDCDCOUTSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_LCDCDCOUTSEL*)0xF019FFD4u)

/** \brief 9FFD8, DTM_AUX Input Selection Register */
#define GTM_DTMAUXINSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_DTMAUXINSEL*)0xF019FFD8u)

/** \brief 9FFDC, CAN0/CAN1 Output Select Register */
#define GTM_CANOUTSEL0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CANOUTSEL0*)0xF019FFDCu)

/** \brief E21DC, CCM0 Hardware Configuration Register */
#define GTM_CCM0_HW_CONF /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_HW_CONF*)0xF01E21DCu)

/** \brief E21E0, CCM0 TIM Module AUX_IN Source Selection Register */
#define GTM_CCM0_TIM_AUX_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_TIM_AUX_IN_SRC*)0xF01E21E0u)

/** \brief E21E8, CCM0 TOM Output Level Register */
#define GTM_CCM0_TOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_TOM_OUT*)0xF01E21E8u)

/** \brief E21EC, CCM0 ATOM Output Level Register */
#define GTM_CCM0_ATOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_ATOM_OUT*)0xF01E21ECu)

/** \brief E21F0, CCM0 CMU Clock Configuration Register */
#define GTM_CCM0_CMU_CLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_CMU_CLK_CFG*)0xF01E21F0u)

/** \brief E21F4, CCM0 CMU Fixed Clock Configuration Register */
#define GTM_CCM0_CMU_FXCLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_CMU_FXCLK_CFG*)0xF01E21F4u)

/** \brief E21F8, CCM0 Configuration Register */
#define GTM_CCM0_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_CFG*)0xF01E21F8u)

/** \brief E21FC, CCM0 Protection Register */
#define GTM_CCM0_PROT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_PROT*)0xF01E21FCu)

/** \brief E23DC, CCM1 Hardware Configuration Register */
#define GTM_CCM1_HW_CONF /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_HW_CONF*)0xF01E23DCu)

/** \brief E23E0, CCM1 TIM Module AUX_IN Source Selection Register */
#define GTM_CCM1_TIM_AUX_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_TIM_AUX_IN_SRC*)0xF01E23E0u)

/** \brief E23E8, CCM1 TOM Output Level Register */
#define GTM_CCM1_TOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_TOM_OUT*)0xF01E23E8u)

/** \brief E23F0, CCM1 CMU Clock Configuration Register */
#define GTM_CCM1_CMU_CLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_CMU_CLK_CFG*)0xF01E23F0u)

/** \brief E23F4, CCM1 CMU Fixed Clock Configuration Register */
#define GTM_CCM1_CMU_FXCLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_CMU_FXCLK_CFG*)0xF01E23F4u)

/** \brief E23F8, CCM1 Configuration Register */
#define GTM_CCM1_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_CFG*)0xF01E23F8u)

/** \brief E23FC, CCM1 Protection Register */
#define GTM_CCM1_PROT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CCM_PROT*)0xF01E23FCu)

/** \brief E4000, CDTM0 DTM0 Global Configuration and Control Register */
#define GTM_CDTM0_DTM0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CTRL*)0xF01E4000u)

/** \brief E4004, CDTM0 DTM0 Channel Control Register 1 */
#define GTM_CDTM0_DTM0_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL1*)0xF01E4004u)

/** \brief E4008, CDTM0 DTM0 Channel Control Register 2 */
#define GTM_CDTM0_DTM0_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2*)0xF01E4008u)

/** \brief E400C, CDTM0 DTM0 Channel Control Register 2 Shadow */
#define GTM_CDTM0_DTM0_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2_SR*)0xF01E400Cu)

/** \brief E4010, CDTM0 DTM0 Phase Shift Unit Configuration and Control Register */
#define GTM_CDTM0_DTM0_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_PS_CTRL*)0xF01E4010u)

/** \brief E4014, CDTM0 DTM0 Channel 0 Dead Time Reload Values */
#define GTM_CDTM0_DTM0_CH0_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4014u)

/** \brief E4018, CDTM0 DTM0 Channel 1 Dead Time Reload Values */
#define GTM_CDTM0_DTM0_CH1_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4018u)

/** \brief E401C, CDTM0 DTM0 Channel 2 Dead Time Reload Values */
#define GTM_CDTM0_DTM0_CH2_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E401Cu)

/** \brief E4020, CDTM0 DTM0 Channel 3 Dead Time Reload Values */
#define GTM_CDTM0_DTM0_CH3_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4020u)

/** \brief E4024, CDTM0 DTM0 Channel Shadow Register */
#define GTM_CDTM0_DTM0_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_SR*)0xF01E4024u)

/** \brief E4028, CDTM0 DTM0 Channel Control Register 3 */
#define GTM_CDTM0_DTM0_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL3*)0xF01E4028u)

/** \brief E4040, CDTM0 DTM1 Global Configuration and Control Register */
#define GTM_CDTM0_DTM1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CTRL*)0xF01E4040u)

/** \brief E4044, CDTM0 DTM1 Channel Control Register 1 */
#define GTM_CDTM0_DTM1_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL1*)0xF01E4044u)

/** \brief E4048, CDTM0 DTM1 Channel Control Register 2 */
#define GTM_CDTM0_DTM1_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2*)0xF01E4048u)

/** \brief E404C, CDTM0 DTM1 Channel Control Register 2 Shadow */
#define GTM_CDTM0_DTM1_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2_SR*)0xF01E404Cu)

/** \brief E4050, CDTM0 DTM1 Phase Shift Unit Configuration and Control Register */
#define GTM_CDTM0_DTM1_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_PS_CTRL*)0xF01E4050u)

/** \brief E4054, CDTM0 DTM1 Channel 0 Dead Time Reload Values */
#define GTM_CDTM0_DTM1_CH0_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4054u)

/** \brief E4058, CDTM0 DTM1 Channel 1 Dead Time Reload Values */
#define GTM_CDTM0_DTM1_CH1_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4058u)

/** \brief E405C, CDTM0 DTM1 Channel 2 Dead Time Reload Values */
#define GTM_CDTM0_DTM1_CH2_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E405Cu)

/** \brief E4060, CDTM0 DTM1 Channel 3 Dead Time Reload Values */
#define GTM_CDTM0_DTM1_CH3_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4060u)

/** \brief E4064, CDTM0 DTM1 Channel Shadow Register */
#define GTM_CDTM0_DTM1_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_SR*)0xF01E4064u)

/** \brief E4068, CDTM0 DTM1 Channel Control Register 3 */
#define GTM_CDTM0_DTM1_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL3*)0xF01E4068u)

/** \brief E4100, CDTM0 DTM4 Global Configuration and Control Register */
#define GTM_CDTM0_DTM4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CTRL*)0xF01E4100u)

/** \brief E4104, CDTM0 DTM4 Channel Control Register 1 */
#define GTM_CDTM0_DTM4_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL1*)0xF01E4104u)

/** \brief E4108, CDTM0 DTM4 Channel Control Register 2 */
#define GTM_CDTM0_DTM4_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2*)0xF01E4108u)

/** \brief E410C, CDTM0 DTM4 Channel Control Register 2 Shadow */
#define GTM_CDTM0_DTM4_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2_SR*)0xF01E410Cu)

/** \brief E4110, CDTM0 DTM4 Phase Shift Unit Configuration and Control Register */
#define GTM_CDTM0_DTM4_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_PS_CTRL*)0xF01E4110u)

/** \brief E4114, CDTM0 DTM4 Channel 0 Dead Time Reload Values */
#define GTM_CDTM0_DTM4_CH0_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4114u)

/** \brief E4118, CDTM0 DTM4 Channel 1 Dead Time Reload Values */
#define GTM_CDTM0_DTM4_CH1_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4118u)

/** \brief E411C, CDTM0 DTM4 Channel 2 Dead Time Reload Values */
#define GTM_CDTM0_DTM4_CH2_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E411Cu)

/** \brief E4120, CDTM0 DTM4 Channel 3 Dead Time Reload Values */
#define GTM_CDTM0_DTM4_CH3_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4120u)

/** \brief E4124, CDTM0 DTM4 Channel Shadow Register */
#define GTM_CDTM0_DTM4_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_SR*)0xF01E4124u)

/** \brief E4128, CDTM0 DTM4 Channel Control Register 3 */
#define GTM_CDTM0_DTM4_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL3*)0xF01E4128u)

/** \brief E4140, CDTM0 DTM5 Global Configuration and Control Register */
#define GTM_CDTM0_DTM5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CTRL*)0xF01E4140u)

/** \brief E4144, CDTM0 DTM5 Channel Control Register 1 */
#define GTM_CDTM0_DTM5_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL1*)0xF01E4144u)

/** \brief E4148, CDTM0 DTM5 Channel Control Register 2 */
#define GTM_CDTM0_DTM5_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2*)0xF01E4148u)

/** \brief E414C, CDTM0 DTM5 Channel Control Register 2 Shadow */
#define GTM_CDTM0_DTM5_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2_SR*)0xF01E414Cu)

/** \brief E4150, CDTM0 DTM5 Phase Shift Unit Configuration and Control Register */
#define GTM_CDTM0_DTM5_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_PS_CTRL*)0xF01E4150u)

/** \brief E4154, CDTM0 DTM5 Channel 0 Dead Time Reload Values */
#define GTM_CDTM0_DTM5_CH0_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4154u)

/** \brief E4158, CDTM0 DTM5 Channel 1 Dead Time Reload Values */
#define GTM_CDTM0_DTM5_CH1_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4158u)

/** \brief E415C, CDTM0 DTM5 Channel 2 Dead Time Reload Values */
#define GTM_CDTM0_DTM5_CH2_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E415Cu)

/** \brief E4160, CDTM0 DTM5 Channel 3 Dead Time Reload Values */
#define GTM_CDTM0_DTM5_CH3_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4160u)

/** \brief E4164, CDTM0 DTM5 Channel Shadow Register */
#define GTM_CDTM0_DTM5_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_SR*)0xF01E4164u)

/** \brief E4168, CDTM0 DTM5 Channel Control Register 3 */
#define GTM_CDTM0_DTM5_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL3*)0xF01E4168u)

/** \brief E4400, CDTM1 DTM0 Global Configuration and Control Register */
#define GTM_CDTM1_DTM0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CTRL*)0xF01E4400u)

/** \brief E4404, CDTM1 DTM0 Channel Control Register 1 */
#define GTM_CDTM1_DTM0_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL1*)0xF01E4404u)

/** \brief E4408, CDTM1 DTM0 Channel Control Register 2 */
#define GTM_CDTM1_DTM0_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2*)0xF01E4408u)

/** \brief E440C, CDTM1 DTM0 Channel Control Register 2 Shadow */
#define GTM_CDTM1_DTM0_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2_SR*)0xF01E440Cu)

/** \brief E4410, CDTM1 DTM0 Phase Shift Unit Configuration and Control Register */
#define GTM_CDTM1_DTM0_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_PS_CTRL*)0xF01E4410u)

/** \brief E4414, CDTM1 DTM0 Channel 0 Dead Time Reload Values */
#define GTM_CDTM1_DTM0_CH0_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4414u)

/** \brief E4418, CDTM1 DTM0 Channel 1 Dead Time Reload Values */
#define GTM_CDTM1_DTM0_CH1_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4418u)

/** \brief E441C, CDTM1 DTM0 Channel 2 Dead Time Reload Values */
#define GTM_CDTM1_DTM0_CH2_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E441Cu)

/** \brief E4420, CDTM1 DTM0 Channel 3 Dead Time Reload Values */
#define GTM_CDTM1_DTM0_CH3_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4420u)

/** \brief E4424, CDTM1 DTM0 Channel Shadow Register */
#define GTM_CDTM1_DTM0_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_SR*)0xF01E4424u)

/** \brief E4428, CDTM1 DTM0 Channel Control Register 3 */
#define GTM_CDTM1_DTM0_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL3*)0xF01E4428u)

/** \brief E4440, CDTM1 DTM1 Global Configuration and Control Register */
#define GTM_CDTM1_DTM1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CTRL*)0xF01E4440u)

/** \brief E4444, CDTM1 DTM1 Channel Control Register 1 */
#define GTM_CDTM1_DTM1_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL1*)0xF01E4444u)

/** \brief E4448, CDTM1 DTM1 Channel Control Register 2 */
#define GTM_CDTM1_DTM1_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2*)0xF01E4448u)

/** \brief E444C, CDTM1 DTM1 Channel Control Register 2 Shadow */
#define GTM_CDTM1_DTM1_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL2_SR*)0xF01E444Cu)

/** \brief E4450, CDTM1 DTM1 Phase Shift Unit Configuration and Control Register */
#define GTM_CDTM1_DTM1_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_PS_CTRL*)0xF01E4450u)

/** \brief E4454, CDTM1 DTM1 Channel 0 Dead Time Reload Values */
#define GTM_CDTM1_DTM1_CH0_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4454u)

/** \brief E4458, CDTM1 DTM1 Channel 1 Dead Time Reload Values */
#define GTM_CDTM1_DTM1_CH1_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4458u)

/** \brief E445C, CDTM1 DTM1 Channel 2 Dead Time Reload Values */
#define GTM_CDTM1_DTM1_CH2_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E445Cu)

/** \brief E4460, CDTM1 DTM1 Channel 3 Dead Time Reload Values */
#define GTM_CDTM1_DTM1_CH3_DTV /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_DTV*)0xF01E4460u)

/** \brief E4464, CDTM1 DTM1 Channel Shadow Register */
#define GTM_CDTM1_DTM1_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_SR*)0xF01E4464u)

/** \brief E4468, CDTM1 DTM1 Channel Control Register 3 */
#define GTM_CDTM1_DTM1_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_CDTM_DTM_CH_CTRL3*)0xF01E4468u)

/** \brief E8000, ATOM0 Channel 0 ARU read address Register */
#define GTM_ATOM0_CH0_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8000u)

/** \brief E8004, ATOM0 Channel 0 Control Register */
#define GTM_ATOM0_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8004u)

/** \brief E8004, ATOM0 Channel 0 Control Register in SOMB Mode */
#define GTM_ATOM0_CH0_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8004u)

/** \brief E8004, ATOM0 Channel 0 Control Register in SOMC Mode */
#define GTM_ATOM0_CH0_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8004u)

/** \brief E8004, ATOM0 Channel 0 Control Register in SOMI Mode */
#define GTM_ATOM0_CH0_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8004u)

/** \brief E8004, ATOM0 Channel 0 Control Register in SOMP Mode */
#define GTM_ATOM0_CH0_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8004u)

/** \brief E8004, ATOM0 Channel 0 Control Register in SOMS Mode */
#define GTM_ATOM0_CH0_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8004u)

/** \brief E8008, ATOM0 Channel 0 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8008u)

/** \brief E800C, ATOM0 Channel 0 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E800Cu)

/** \brief E8010, ATOM0 Channel 0 CCU0 Compare Register */
#define GTM_ATOM0_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8010u)

/** \brief E8014, ATOM0 Channel 0 CCU1 Compare Register */
#define GTM_ATOM0_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8014u)

/** \brief E8018, ATOM0 Channel 0 CCU0 Counter Register */
#define GTM_ATOM0_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8018u)

/** \brief E801C, ATOM0 Channel 0 Status Register */
#define GTM_ATOM0_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E801Cu)

/** \brief E8020, ATOM0 Channel 0 Interrupt Notification Register */
#define GTM_ATOM0_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E8020u)

/** \brief E8024, ATOM0 Channel 0 Interrupt Enable Register */
#define GTM_ATOM0_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E8024u)

/** \brief E8028, ATOM0 Channel 0 Software Interrupt Generation Register */
#define GTM_ATOM0_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E8028u)

/** \brief E802C, ATOM0 Channel 0 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E802Cu)

/** \brief E8040, ATOM0 AGC Global Control Register */
#define GTM_ATOM0_AGC_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_GLB_CTRL*)0xF01E8040u)

/** \brief E8044, ATOM0 AGC Enable/Disable Control Register */
#define GTM_ATOM0_AGC_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_CTRL*)0xF01E8044u)

/** \brief E8048, ATOM0 AGC Enable/Disable Status Register */
#define GTM_ATOM0_AGC_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_STAT*)0xF01E8048u)

/** \brief E804C, ATOM0 AGC Action Time Base Register */
#define GTM_ATOM0_AGC_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_ACT_TB*)0xF01E804Cu)

/** \brief E8050, ATOM0 AGC Output Enable Control Register */
#define GTM_ATOM0_AGC_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_CTRL*)0xF01E8050u)

/** \brief E8054, ATOM0 AGC Output Enable Status Register */
#define GTM_ATOM0_AGC_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_STAT*)0xF01E8054u)

/** \brief E8058, ATOM0 AGC Force Update Control Register */
#define GTM_ATOM0_AGC_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_FUPD_CTRL*)0xF01E8058u)

/** \brief E805C, ATOM0 AGC Internal Trigger Control Register */
#define GTM_ATOM0_AGC_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_AGC_INT_TRIG*)0xF01E805Cu)

/** \brief E8080, ATOM0 Channel 1 ARU read address Register */
#define GTM_ATOM0_CH1_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8080u)

/** \brief E8084, ATOM0 Channel 1 Control Register */
#define GTM_ATOM0_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8084u)

/** \brief E8084, ATOM0 Channel 1 Control Register in SOMB Mode */
#define GTM_ATOM0_CH1_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8084u)

/** \brief E8084, ATOM0 Channel 1 Control Register in SOMC Mode */
#define GTM_ATOM0_CH1_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8084u)

/** \brief E8084, ATOM0 Channel 1 Control Register in SOMI Mode */
#define GTM_ATOM0_CH1_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8084u)

/** \brief E8084, ATOM0 Channel 1 Control Register in SOMP Mode */
#define GTM_ATOM0_CH1_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8084u)

/** \brief E8084, ATOM0 Channel 1 Control Register in SOMS Mode */
#define GTM_ATOM0_CH1_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8084u)

/** \brief E8088, ATOM0 Channel 1 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8088u)

/** \brief E808C, ATOM0 Channel 1 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E808Cu)

/** \brief E8090, ATOM0 Channel 1 CCU0 Compare Register */
#define GTM_ATOM0_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8090u)

/** \brief E8094, ATOM0 Channel 1 CCU1 Compare Register */
#define GTM_ATOM0_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8094u)

/** \brief E8098, ATOM0 Channel 1 CCU0 Counter Register */
#define GTM_ATOM0_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8098u)

/** \brief E809C, ATOM0 Channel 1 Status Register */
#define GTM_ATOM0_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E809Cu)

/** \brief E80A0, ATOM0 Channel 1 Interrupt Notification Register */
#define GTM_ATOM0_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E80A0u)

/** \brief E80A4, ATOM0 Channel 1 Interrupt Enable Register */
#define GTM_ATOM0_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E80A4u)

/** \brief E80A8, ATOM0 Channel 1 Software Interrupt Generation Register */
#define GTM_ATOM0_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E80A8u)

/** \brief E80AC, ATOM0 Channel 1 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E80ACu)

/** \brief E8100, ATOM0 Channel 2 ARU read address Register */
#define GTM_ATOM0_CH2_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8100u)

/** \brief E8104, ATOM0 Channel 2 Control Register */
#define GTM_ATOM0_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8104u)

/** \brief E8104, ATOM0 Channel 2 Control Register in SOMB Mode */
#define GTM_ATOM0_CH2_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8104u)

/** \brief E8104, ATOM0 Channel 2 Control Register in SOMC Mode */
#define GTM_ATOM0_CH2_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8104u)

/** \brief E8104, ATOM0 Channel 2 Control Register in SOMI Mode */
#define GTM_ATOM0_CH2_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8104u)

/** \brief E8104, ATOM0 Channel 2 Control Register in SOMP Mode */
#define GTM_ATOM0_CH2_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8104u)

/** \brief E8104, ATOM0 Channel 2 Control Register in SOMS Mode */
#define GTM_ATOM0_CH2_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8104u)

/** \brief E8108, ATOM0 Channel 2 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8108u)

/** \brief E810C, ATOM0 Channel 2 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E810Cu)

/** \brief E8110, ATOM0 Channel 2 CCU0 Compare Register */
#define GTM_ATOM0_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8110u)

/** \brief E8114, ATOM0 Channel 2 CCU1 Compare Register */
#define GTM_ATOM0_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8114u)

/** \brief E8118, ATOM0 Channel 2 CCU0 Counter Register */
#define GTM_ATOM0_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8118u)

/** \brief E811C, ATOM0 Channel 2 Status Register */
#define GTM_ATOM0_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E811Cu)

/** \brief E8120, ATOM0 Channel 2 Interrupt Notification Register */
#define GTM_ATOM0_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E8120u)

/** \brief E8124, ATOM0 Channel 2 Interrupt Enable Register */
#define GTM_ATOM0_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E8124u)

/** \brief E8128, ATOM0 Channel 2 Software Interrupt Generation Register */
#define GTM_ATOM0_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E8128u)

/** \brief E812C, ATOM0 Channel 2 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E812Cu)

/** \brief E8180, ATOM0 Channel 3 ARU read address Register */
#define GTM_ATOM0_CH3_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8180u)

/** \brief E8184, ATOM0 Channel 3 Control Register */
#define GTM_ATOM0_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8184u)

/** \brief E8184, ATOM0 Channel 3 Control Register in SOMB Mode */
#define GTM_ATOM0_CH3_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8184u)

/** \brief E8184, ATOM0 Channel 3 Control Register in SOMC Mode */
#define GTM_ATOM0_CH3_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8184u)

/** \brief E8184, ATOM0 Channel 3 Control Register in SOMI Mode */
#define GTM_ATOM0_CH3_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8184u)

/** \brief E8184, ATOM0 Channel 3 Control Register in SOMP Mode */
#define GTM_ATOM0_CH3_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8184u)

/** \brief E8184, ATOM0 Channel 3 Control Register in SOMS Mode */
#define GTM_ATOM0_CH3_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8184u)

/** \brief E8188, ATOM0 Channel 3 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8188u)

/** \brief E818C, ATOM0 Channel 3 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E818Cu)

/** \brief E8190, ATOM0 Channel 3 CCU0 Compare Register */
#define GTM_ATOM0_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8190u)

/** \brief E8194, ATOM0 Channel 3 CCU1 Compare Register */
#define GTM_ATOM0_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8194u)

/** \brief E8198, ATOM0 Channel 3 CCU0 Counter Register */
#define GTM_ATOM0_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8198u)

/** \brief E819C, ATOM0 Channel 3 Status Register */
#define GTM_ATOM0_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E819Cu)

/** \brief E81A0, ATOM0 Channel 3 Interrupt Notification Register */
#define GTM_ATOM0_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E81A0u)

/** \brief E81A4, ATOM0 Channel 3 Interrupt Enable Register */
#define GTM_ATOM0_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E81A4u)

/** \brief E81A8, ATOM0 Channel 3 Software Interrupt Generation Register */
#define GTM_ATOM0_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E81A8u)

/** \brief E81AC, ATOM0 Channel 3 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E81ACu)

/** \brief E8200, ATOM0 Channel 4 ARU read address Register */
#define GTM_ATOM0_CH4_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8200u)

/** \brief E8204, ATOM0 Channel 4 Control Register */
#define GTM_ATOM0_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8204u)

/** \brief E8204, ATOM0 Channel 4 Control Register in SOMB Mode */
#define GTM_ATOM0_CH4_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8204u)

/** \brief E8204, ATOM0 Channel 4 Control Register in SOMC Mode */
#define GTM_ATOM0_CH4_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8204u)

/** \brief E8204, ATOM0 Channel 4 Control Register in SOMI Mode */
#define GTM_ATOM0_CH4_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8204u)

/** \brief E8204, ATOM0 Channel 4 Control Register in SOMP Mode */
#define GTM_ATOM0_CH4_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8204u)

/** \brief E8204, ATOM0 Channel 4 Control Register in SOMS Mode */
#define GTM_ATOM0_CH4_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8204u)

/** \brief E8208, ATOM0 Channel 4 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8208u)

/** \brief E820C, ATOM0 Channel 4 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E820Cu)

/** \brief E8210, ATOM0 Channel 4 CCU0 Compare Register */
#define GTM_ATOM0_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8210u)

/** \brief E8214, ATOM0 Channel 4 CCU1 Compare Register */
#define GTM_ATOM0_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8214u)

/** \brief E8218, ATOM0 Channel 4 CCU0 Counter Register */
#define GTM_ATOM0_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8218u)

/** \brief E821C, ATOM0 Channel 4 Status Register */
#define GTM_ATOM0_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E821Cu)

/** \brief E8220, ATOM0 Channel 4 Interrupt Notification Register */
#define GTM_ATOM0_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E8220u)

/** \brief E8224, ATOM0 Channel 4 Interrupt Enable Register */
#define GTM_ATOM0_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E8224u)

/** \brief E8228, ATOM0 Channel 4 Software Interrupt Generation Register */
#define GTM_ATOM0_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E8228u)

/** \brief E822C, ATOM0 Channel 4 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E822Cu)

/** \brief E8280, ATOM0 Channel 5 ARU read address Register */
#define GTM_ATOM0_CH5_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8280u)

/** \brief E8284, ATOM0 Channel 5 Control Register */
#define GTM_ATOM0_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8284u)

/** \brief E8284, ATOM0 Channel 5 Control Register in SOMB Mode */
#define GTM_ATOM0_CH5_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8284u)

/** \brief E8284, ATOM0 Channel 5 Control Register in SOMC Mode */
#define GTM_ATOM0_CH5_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8284u)

/** \brief E8284, ATOM0 Channel 5 Control Register in SOMI Mode */
#define GTM_ATOM0_CH5_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8284u)

/** \brief E8284, ATOM0 Channel 5 Control Register in SOMP Mode */
#define GTM_ATOM0_CH5_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8284u)

/** \brief E8284, ATOM0 Channel 5 Control Register in SOMS Mode */
#define GTM_ATOM0_CH5_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8284u)

/** \brief E8288, ATOM0 Channel 5 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8288u)

/** \brief E828C, ATOM0 Channel 5 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E828Cu)

/** \brief E8290, ATOM0 Channel 5 CCU0 Compare Register */
#define GTM_ATOM0_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8290u)

/** \brief E8294, ATOM0 Channel 5 CCU1 Compare Register */
#define GTM_ATOM0_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8294u)

/** \brief E8298, ATOM0 Channel 5 CCU0 Counter Register */
#define GTM_ATOM0_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8298u)

/** \brief E829C, ATOM0 Channel 5 Status Register */
#define GTM_ATOM0_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E829Cu)

/** \brief E82A0, ATOM0 Channel 5 Interrupt Notification Register */
#define GTM_ATOM0_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E82A0u)

/** \brief E82A4, ATOM0 Channel 5 Interrupt Enable Register */
#define GTM_ATOM0_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E82A4u)

/** \brief E82A8, ATOM0 Channel 5 Software Interrupt Generation Register */
#define GTM_ATOM0_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E82A8u)

/** \brief E82AC, ATOM0 Channel 5 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E82ACu)

/** \brief E8300, ATOM0 Channel 6 ARU read address Register */
#define GTM_ATOM0_CH6_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8300u)

/** \brief E8304, ATOM0 Channel 6 Control Register */
#define GTM_ATOM0_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8304u)

/** \brief E8304, ATOM0 Channel 6 Control Register in SOMB Mode */
#define GTM_ATOM0_CH6_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8304u)

/** \brief E8304, ATOM0 Channel 6 Control Register in SOMC Mode */
#define GTM_ATOM0_CH6_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8304u)

/** \brief E8304, ATOM0 Channel 6 Control Register in SOMI Mode */
#define GTM_ATOM0_CH6_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8304u)

/** \brief E8304, ATOM0 Channel 6 Control Register in SOMP Mode */
#define GTM_ATOM0_CH6_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8304u)

/** \brief E8304, ATOM0 Channel 6 Control Register in SOMS Mode */
#define GTM_ATOM0_CH6_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8304u)

/** \brief E8308, ATOM0 Channel 6 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8308u)

/** \brief E830C, ATOM0 Channel 6 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E830Cu)

/** \brief E8310, ATOM0 Channel 6 CCU0 Compare Register */
#define GTM_ATOM0_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8310u)

/** \brief E8314, ATOM0 Channel 6 CCU1 Compare Register */
#define GTM_ATOM0_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8314u)

/** \brief E8318, ATOM0 Channel 6 CCU0 Counter Register */
#define GTM_ATOM0_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8318u)

/** \brief E831C, ATOM0 Channel 6 Status Register */
#define GTM_ATOM0_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E831Cu)

/** \brief E8320, ATOM0 Channel 6 Interrupt Notification Register */
#define GTM_ATOM0_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E8320u)

/** \brief E8324, ATOM0 Channel 6 Interrupt Enable Register */
#define GTM_ATOM0_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E8324u)

/** \brief E8328, ATOM0 Channel 6 Software Interrupt Generation Register */
#define GTM_ATOM0_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E8328u)

/** \brief E832C, ATOM0 Channel 6 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E832Cu)

/** \brief E8380, ATOM0 Channel 7 ARU read address Register */
#define GTM_ATOM0_CH7_RDADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF01E8380u)

/** \brief E8384, ATOM0 Channel 7 Control Register */
#define GTM_ATOM0_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF01E8384u)

/** \brief E8384, ATOM0 Channel 7 Control Register in SOMB Mode */
#define GTM_ATOM0_CH7_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMB*)0xF01E8384u)

/** \brief E8384, ATOM0 Channel 7 Control Register in SOMC Mode */
#define GTM_ATOM0_CH7_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF01E8384u)

/** \brief E8384, ATOM0 Channel 7 Control Register in SOMI Mode */
#define GTM_ATOM0_CH7_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF01E8384u)

/** \brief E8384, ATOM0 Channel 7 Control Register in SOMP Mode */
#define GTM_ATOM0_CH7_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF01E8384u)

/** \brief E8384, ATOM0 Channel 7 Control Register in SOMS Mode */
#define GTM_ATOM0_CH7_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF01E8384u)

/** \brief E8388, ATOM0 Channel 7 CCU0 Compare Shadow Register */
#define GTM_ATOM0_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF01E8388u)

/** \brief E838C, ATOM0 Channel 7 CCU1 Compare Shadow Register */
#define GTM_ATOM0_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF01E838Cu)

/** \brief E8390, ATOM0 Channel 7 CCU0 Compare Register */
#define GTM_ATOM0_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF01E8390u)

/** \brief E8394, ATOM0 Channel 7 CCU1 Compare Register */
#define GTM_ATOM0_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF01E8394u)

/** \brief E8398, ATOM0 Channel 7 CCU0 Counter Register */
#define GTM_ATOM0_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF01E8398u)

/** \brief E839C, ATOM0 Channel 7 Status Register */
#define GTM_ATOM0_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF01E839Cu)

/** \brief E83A0, ATOM0 Channel 7 Interrupt Notification Register */
#define GTM_ATOM0_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF01E83A0u)

/** \brief E83A4, ATOM0 Channel 7 Interrupt Enable Register */
#define GTM_ATOM0_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF01E83A4u)

/** \brief E83A8, ATOM0 Channel 7 Software Interrupt Generation Register */
#define GTM_ATOM0_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF01E83A8u)

/** \brief E83AC, ATOM0 Channel 7 Interrupt Mode Configuration Register */
#define GTM_ATOM0_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF01E83ACu)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXGTM_REG_H */
