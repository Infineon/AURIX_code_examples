/*********************************************************************************************************************
 * \file LMU_MPU.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef LMU_MPU_H_
#define LMU_MPU_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "IfxCpu_reg.h"
#include "IfxPort.h"
#include "Ifx_Types.h"
#include "IfxLmu_reg.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define LMU_PROTECTION_RANGE_0  0                                       /* Define Protection Region 0                */
#define LMU_PROTECTION_RANGE_1  1                                       /* Define Protection Region 1                */
#define LMU_PROTECTION_RANGE_2  2                                       /* Define Protection Region 2                */
#define LMU_PROTECTION_RANGE_3  3                                       /* Define Protection Region 3                */
#define LMU_PROTECTION_RANGE_4  4                                       /* Define Protection Region 4                */
#define LMU_PROTECTION_RANGE_5  5                                       /* Define Protection Region 5                */
#define LMU_PROTECTION_RANGE_6  6                                       /* Define Protection Region 6                */
#define LMU_PROTECTION_RANGE_7  7                                       /* Define Protection Region 7                */
#define LMU_PROTECTION_RANGE_8  8                                       /* Define Protection Region 8                */
#define LMU_PROTECTION_RANGE_9  9                                       /* Define Protection Region 9                */
#define LMU_PROTECTION_RANGE_10  10                                     /* Define Protection Region 10               */
#define LMU_PROTECTION_RANGE_11  11                                     /* Define Protection Region 11               */
#define LMU_PROTECTION_RANGE_12  12                                     /* Define Protection Region 12               */
#define LMU_PROTECTION_RANGE_13  13                                     /* Define Protection Region 13               */
#define LMU_PROTECTION_RANGE_14  14                                     /* Define Protection Region 14               */
#define LMU_PROTECTION_RANGE_15  15                                     /* Define Protection Region 15               */

typedef enum {
    Ifx_LMU_RGN_IDX_0               = 0,                                /* Region 0 specified by Index 0             */
    Ifx_LMU_RGN_IDX_1               = 1,                                /* Region 1 specified by Index 1             */
    Ifx_LMU_RGN_IDX_2               = 2,                                /* Region 2 specified by Index 2             */
    Ifx_LMU_RGN_IDX_3               = 3,                                /* Region 3 specified by Index 3             */
    Ifx_LMU_RGN_IDX_4               = 4,                                /* Region 4 specified by Index 4             */
    Ifx_LMU_RGN_IDX_5               = 5,                                /* Region 5 specified by Index 5             */
    Ifx_LMU_RGN_IDX_6               = 6,                                /* Region 6 specified by Index 6             */
    Ifx_LMU_RGN_IDX_7               = 7,                                /* Region 7 specified by Index 7             */
    Ifx_LMU_RGN_IDX_8               = 8,                                /* Region 8 specified by Index 8             */
    Ifx_LMU_RGN_IDX_9               = 9,                                /* Region 9 specified by Index 9             */
    Ifx_LMU_RGN_IDX_10              = 10,                               /* Region 10 specified by Index 10           */
    Ifx_LMU_RGN_IDX_11              = 11,                               /* Region 11 specified by Index 11           */
    Ifx_LMU_RGN_IDX_12              = 12,                               /* Region 12 specified by Index 12           */
    Ifx_LMU_RGN_IDX_13              = 13,                               /* Region 13 specified by Index 13           */
    Ifx_LMU_RGN_IDX_14              = 14,                               /* Region 14 specified by Index 14           */
    Ifx_LMU_RGN_IDX_15              = 15,                               /* Region 15 specified by Index 15           */
} Ifx_LMU_RGN_IDX;

typedef enum {
    /* Defining TagID */
    Ifx_TagID_CPU0_NonSafe          = 1 << 1,                            /* TagID CPU0 EN1 (Non Safe TAG ID)          */
    Ifx_TagID_CPU0_Safe             = 1 << 2,                            /* TagID CPU0 EN2 (Safe TAG ID)              */
    Ifx_TagID_CPU1_NonSafe          = 1 << 5,                            /* TagID CPU1 EN5 (Non Safe TAG ID)          */
    Ifx_TagID_CPU1_Safe             = 1 << 6,                            /* TagID CPU1 EN6 (Safe TAG ID)              */
    Ifx_TagID_CPU2_NonSafe          = 1 << 9,                            /* TagID CPU2 EN9 (Non Safe TAG ID)          */
    Ifx_TagID_CPU2_Safe             = 1 << 10,                           /* TagID CPU2 EN10 (Safe TAG ID)             */
    Ifx_TagID_CPU3_NonSafe          = 1 << 13,                           /* TagID CPU3 EN13 (Non Safe TAG ID)         */
    Ifx_TagID_CPU3_Safe             = 1 << 14,                           /* TagID CPU3 EN14 (Safe TAG ID)             */
    Ifx_TagID_CPU4_NonSafe          = 1 << 17,                           /* TagID CPU4 EN17 (Non Safe TAG ID)         */
    Ifx_TagID_CPU4_Safe             = 1 << 18,                           /* TagID CPU4 EN18 (Safe TAG ID)             */
    Ifx_TagID_CPU5_NonSafe          = 1 << 21,                           /* TagID CPU5 EN21 (Non Safe TAG ID)         */
    Ifx_TagID_CPU5_Safe             = 1 << 22,                           /* TagID CPU5 EN22 (Safe TAG ID)             */
    /* Compound of both (Safe, and NonSafe) TagIDs  */
    Ifx_TagID_CPU0                  = Ifx_TagID_CPU0_Safe | Ifx_TagID_CPU0_NonSafe,
    Ifx_TagID_CPU1                  = Ifx_TagID_CPU1_Safe | Ifx_TagID_CPU1_NonSafe,
    Ifx_TagID_CPU2                  = Ifx_TagID_CPU2_Safe | Ifx_TagID_CPU2_NonSafe,
    Ifx_TagID_CPU3                  = Ifx_TagID_CPU3_Safe | Ifx_TagID_CPU3_NonSafe,
    Ifx_TagID_CPU4                  = Ifx_TagID_CPU4_Safe | Ifx_TagID_CPU4_NonSafe,
    Ifx_TagID_CPU5                  = Ifx_TagID_CPU5_Safe | Ifx_TagID_CPU5_NonSafe,
} Ifx_TagID;

#define CORE_0   0                                                                   /* Define Core 0                */
#define CORE_1   1                                                                   /* Define Core 1                */
#define CORE_2   2                                                                   /* Define Core 2                */


/*********************************************************************************************************************/
/*-----------------------------------------------Function Prototypes-------------------------------------------------*/
/*********************************************************************************************************************/
/* LMU access disable function */
void disable_LMU0_access(Ifx_TagID tagId);

/* LMU access enable function */
void enable_LMU0_access(Ifx_TagID tagId);

/* LMU MPU control function for defining protection range for LMU0 */
void define_LMU0_bus_protection_range(uint32 lowerBoundAddress, uint32 upperBoundAddress, Ifx_LMU_RGN_IDX range);

/* LMU MPU read/write enable functions for LMU0 */
void enable_LMU0_read_protection_range(Ifx_LMU_RGN_IDX range, Ifx_TagID tagId);
void enable_LMU0_write_protection_range(Ifx_LMU_RGN_IDX range, Ifx_TagID tagId);

/* LMU MPU read/write enable functions for LMU0 */
void disable_LMU0_read_protection_range(Ifx_LMU_RGN_IDX range, Ifx_TagID tagId);
void disable_LMU0_write_protection_range(Ifx_LMU_RGN_IDX range, Ifx_TagID tagId);

#endif  /* LMU_MPU_H_ */
