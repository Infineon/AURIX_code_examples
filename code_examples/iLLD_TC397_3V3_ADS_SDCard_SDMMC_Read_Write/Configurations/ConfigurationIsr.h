/**
 * \file ConfigurationIsr.h
 * \brief Interrupts configuration of the project.
 *
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.

 *
 */

#ifndef CONFIGURATIONISR_H
#define CONFIGURATIONISR_H

#include <_Impl/IfxSrc_cfg.h>
#include <_Impl/IfxCan_cfg.h>
/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/

/** \brief Build the ISR configuration object
 * \param no interrupt priority
 * \param cpu assign CPU number
 */
#define ISR_ASSIGN(no, cpu)  ((no << 8) + cpu)

/** \brief extract the priority out of the ISR object */
#define ISR_PRIORITY(no_cpu) (no_cpu >> 8)

/** \brief extract the service provider  out of the ISR object */
#define ISR_PROVIDER(no_cpu) (no_cpu % 8)
/**
 * \addtogroup IfxLld_Demo_QspiDmaDemo_SrcDoc_InterruptConfig
 * \{ */

/**
 * \name Interrupt priority configuration for CPU.
 * The interrupt priority range is [1,255]
 * \{
 */

#define ISR_PRIORITY_MEASUREMENT    1  /**< \brief Define the GPT compare match interrupt priority.  */

#define ISR_PRIORITY_CPUSRV0        2  /**< \brief Define the conio periodic interrupt priority must be lower than QSPIx priorities.  */

#define ISR_PRIORITY_ASC_SHELL_RX   4   /**< \brief Define the ASC SHELL receive interrupt priority.  */

#define ISR_PRIORITY_ASC_SHELL_TX   5   /**< \brief Define the ASC SHELL transmit interrupt priority.  */

#define ISR_PRIORITY_ASC_SHELL_EX   6   /**< \brief Define the ASC SHELL error interrupt priority.  */

#define ISR_PRIORITY_RTC_CAL_F      8  /**< \brief Define the RTC Calibration Measurement Finished interrupt priority must be lower than QSPI.  */

#define ISR_PRIORITY_VADC_CH0       10  /**< \brief Define the VADC Channel 0 interrupt priority.  */
/* block minimum the next USED_GROUPS numbers for other groups, in our case 9 */

#define ISR_PRIORITY_TFT_QSPI_ER    21  /**< \brief Define the TFT error interrupt priority.  */

#define ISR_PRIORITY_SDCARD_QSPI_ER 22  /**< \brief Define the SDCARD error interrupt priority.  */

#define ISR_PRIORITY_TLF_QSPI_ER    23  /**< \brief Define the TLF error interrupt priority.  */

#define ISR_PRIORITY_BACKLIGHT      30  /**< \brief Define the TOMx_x compare match interrupt priority.  */

#define ISR_PRIORITY_TFT_QSPI_TX    31  /**< \brief Define the TFT transmit interrupt priority.  */

#define ISR_PRIORITY_SDCARD_QSPI_TX 32  /**< \brief Define the SDCARD transmit interrupt priority.  */

#define ISR_PRIORITY_TLF_QSPI_TX    33  /**< \brief Define the TLF transmit interrupt priority.  */

#define ISR_PRIORITY_TFT_QSPI_RX    51  /**< \brief Define the TFT receive interrupt priority.  */

#define ISR_PRIORITY_SDCARD_QSPI_RX 52  /**< \brief Define the SDCARD receive interrupt priority.  */

#define ISR_PRIORITY_TLF_QSPI_RX    53  /**< \brief Define the TLF receive interrupt priority.  */

#define ISR_PRIORITY_CAN00_TX       60  /**< \brief Define the CAN0 node 0  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN00_RX       80  /**< \brief Define the CAN0 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN01_TX       61  /**< \brief Define the CAN0 node 1  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN01_RX       81  /**< \brief Define the CAN0 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN02_TX       62  /**< \brief Define the CAN0 node 2  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN02_RX       82  /**< \brief Define the CAN0 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN03_TX       63  /**< \brief Define the CAN0 node 3  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN03_RX       83  /**< \brief Define the CAN0 node 3 receive data interrupt priority.  */

/* only used when device has 2 modules */
#if (IFXCAN_NUM_MODULES > 1)
#define ISR_PRIORITY_CAN10_TX       64  /**< \brief Define the CAN1 node 0 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN10_RX       84  /**< \brief Define the CAN1 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN11_TX       65  /**< \brief Define the CAN1 node 1 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN11_RX       85  /**< \brief Define the CAN1 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN12_TX       66  /**< \brief Define the CAN1 node 2 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN12_RX       86  /**< \brief Define the CAN1 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN13_TX       67  /**< \brief Define the CAN1 node 3 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN13_RX       87  /**< \brief Define the CAN1 node 3 receive data interrupt priority.  */
#endif

/* only used when device has 3 modules */
#if (IFXCAN_NUM_MODULES > 2)
#define ISR_PRIORITY_CAN20_TX       68  /**< \brief Define the CAN2 node 0 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN20_RX       88  /**< \brief Define the CAN2 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN21_TX       69  /**< \brief Define the CAN2 node 1 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN21_RX       89  /**< \brief Define the CAN2 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN22_TX       70  /**< \brief Define the CAN2 node 2 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN22_RX       90  /**< \brief Define the CAN2 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN23_TX       71  /**< \brief Define the CAN2 node 3 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN23_RX       91  /**< \brief Define the CAN2 node 3 receive data interrupt priority.  */
#endif

#define ISR_PRIORITY_BEEPER         95  /**< \brief Define the Beeper interrupt priority, if no GTM available.  */

#define ISR_PRIORITY_OS_TICK        99  /**< \brief Define the TFT refresh interrupt priority.  */

#define ISR_PRIORITY_GETH_TX       100  /**< \brief Define the Ethernet transmit interrupt priority.  */

#define ISR_PRIORITY_GETH_RX       101  /**< \brief Define the Ethernet receive interrupt priority.  */

#define ISR_PRIORITY_RTC_ALARM     128  /**< \brief Define the RTC alarm interrupt priority.  */

#define ISR_PRIORITY_PERF_MEAS     255  /**< \brief Define the TOMx_x interrupt priority.  */

/** \} */

/**
 * \name DMA channel configuration.
 * The DMA channel range is [0,15] for TC22X/TC23X
 * \{
 */

#define TFT_DMA_CH_TXBUFF_TO_TXFIFO        0 /**< \brief Dma channel used for TFT Master Qspi Transmit  */
#define TFT_DMA_CH_RXBUFF_FROM_RXFIFO      1 /**< \brief Dma channel used for TFT Master Qspi Receive  */
#define SDCARD_DMA_CH_TXBUFF_TO_TXFIFO     2 /**< \brief Dma channel used for SDCARD Master Qspi Transmit  */
#define SDCARD_DMA_CH_RXBUFF_FROM_RXFIFO   3 /**< \brief Dma channel used for SDCARD Master Qspi Receive  */

/** \} */

/**
 * \name Interrupt service provider configuration (use only number for variable section definition).
 * \{ */
/** \} */

//------------------------------------------------------------------------------

#endif
