/**
 * \file Configuration.h
 * \brief Global configuration of the project
 *
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.

 *
 */

#ifndef CONFIGURATION_H
#define CONFIGURATION_H
/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/
#include "Ifx_reg.h"
#include "Ifx_Cfg.h"
#include <_PinMap/IfxQspi_PinMap.h>
#include <_PinMap/IfxPort_PinMap.h>
#include <_PinMap/IfxScu_PinMap.h>
#if IFXGTM_REG_H == 1
#include <_PinMap/IfxGtm_PinMap.h>
#endif

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/
/* set here the used pins for the RTC (I2C) */
#define RTC_SCL_PIN                 IfxI2c0_SCL_P15_4_INOUT
#define RTC_SDA_PIN                 IfxI2c0_SDA_P15_5_INOUT
#define RTC_ALARM_PIN_INPUT         IfxScu_REQ4A_P33_7_IN
#define RTC_ALARM_SRC               &MODULE_SRC.SCU.SCUERU[0]

/* set here the used pins for TLF3xx8x (QSPI2) */
#define TLF_QSPI_MAX_BAUDRATE       50000000  // maximum baudrate which is possible to get a small time quantum
#define TLF_SCLK_PIN	            IfxQspi2_SCLK_P15_8_OUT
#define TLF_MTSR_PIN	            IfxQspi2_MTSR_P15_6_OUT      // for Application Kit TC3X7
#define TLF_MRST_PIN	            IfxQspi2_MRSTB_P15_7_IN
//#define TLF_USE_DMA  // uncomment line for using DMA
//#define DMA_CH_TLF_TX             TLF_DMA_CH_TXBUFF_TO_TXFIFO
//#define DMA_CH_TLF_RX             TLF_DMA_CH_RXBUFF_FROM_RXFIFO

#define TLF_CS_PIN                  IfxQspi2_SLSO1_P14_2_OUT

/* set here the used pins for the SDCARD (QSPI1) */
#define SDCARD_MAX_BAUDRATE         50000000  // maximum baudrate which is possible to get a small time quantum
#define SDCARD_SCLK_PIN	            IfxQspi1_SCLK_P10_2_OUT
#define SDCARD_MTSR_PIN	            IfxQspi1_MTSR_P10_3_OUT
#define SDCARD_MRST_PIN	            IfxQspi1_MRSTA_P10_1_IN
#define SDCARD_USE_DMA  // comment line for not using DMA
#define DMA_CH_SDCARD_TX            SDCARD_DMA_CH_TXBUFF_TO_TXFIFO
#define DMA_CH_SDCARD_RX            SDCARD_DMA_CH_RXBUFF_FROM_RXFIFO

#define SDCARD_USE_CHIPSELECT       IfxQspi1_SLSO9_P10_5_OUT
#define SDCARD_USE_CD               IfxPort_P10_7
/* ECON for 25MHz (A=3, B=3, C=0, TQ=2) with 300MHz fbaud2 */
#define SDCARD_FCLK_FAST_VALUE      0x0381

/* if device has SDMMC module and VEXT is 3,3V then the SDMMC module is used instead of QSPI */
#ifdef MODULE_SDMMC0
#define SDCARD_CLK_PIN	            IfxSdmmc0_CLK_P15_1_OUT
#define SDCARD_CMD_PIN	            IfxSdmmc0_CMD_P15_3_INOUT
#define SDCARD_DAT0_PIN	            IfxSdmmc0_DAT0_P20_7_INOUT
#define SDCARD_DAT1_PIN	            IfxSdmmc0_DAT1_P20_8_INOUT
#define SDCARD_DAT2_PIN	            IfxSdmmc0_DAT2_P20_10_INOUT
#define SDCARD_DAT3_PIN	            IfxSdmmc0_DAT3_P20_11_INOUT
#endif

/* set here the used pins for TFT and TOUCH (QSPI0) */
#define TFT_MAX_BAUDRATE            50000000  // maximum baudrate which is possible to get a small time quantum
#define TFT_SCLK_PIN	            IfxQspi0_SCLK_P20_13_OUT
#define TFT_MTSR_PIN	            IfxQspi0_MTSR_P20_14_OUT
#define TFT_MRST_PIN	            IfxQspi0_MRSTA_P20_12_IN
#define TFT_USE_DMA  // comment line for not using DMA
#define DMA_CH_TFT_TX               TFT_DMA_CH_TXBUFF_TO_TXFIFO
#define DMA_CH_TFT_RX               TFT_DMA_CH_RXBUFF_FROM_RXFIFO
#define TFT_TRANSMIT_CALLBACK       tft_transmit_callback

#define TFT_USE_CHIPSELECT          IfxQspi0_SLSO8_P20_6_OUT
#define TFT_UPDATE_IRQ              MODULE_SRC.GPSR.GPSR[0].SR[0]

#define TOUCH_USE_CHIPSELECT        IfxQspi0_SLSO9_P20_3_OUT
#define TOUCH_USE_INT               IfxPort_P20_9

#if IFXGTM_REG_H == 1
#define BACKGROUND_LIGHT            IfxGtm_TOM1_3_TOUT71_P15_0_OUT

#define BEEPER                      IfxGtm_TOM0_4_TOUT22_P33_0_OUT

#define PERFORMANCE_MEASURE         IfxGtm_TOM0_0_TOUT53_P21_2_OUT
#else
#define BACKGROUND_LIGHT            IfxPort_P15_0           // no timer here, no dimming only on/off possible

#define BEEPER                      IfxPort_P33_0           // no timer here, must be done by SW

#define PERFORMANCE_MEASURE         IfxPort_P21_2           // not used
#endif

#define CAN00_TXD_PIN               IfxCan_TXD00_P20_8_OUT
#define CAN00_RXD_PIN               IfxCan_RXD00B_P20_7_IN

#ifdef MODULE_SDMMC0
/* if SDMMC usable, then the CAN02 is connected instead of CAN00 if VEXT==3,3V */
#define CAN02_TXD_PIN               IfxCan_TXD02_P10_3_OUT
#define CAN02_RXD_PIN               IfxCan_RXD02E_P10_2_IN
#endif

#define LIN_TXD_PIN                 IfxAsclin2_TX_P10_5_OUT
#define LIN_RXD_PIN                 IfxAsclin2_RXD_P10_6_IN

/* LEDs on Application Kit */
#define LED0_PORT                   IfxPort_P13_0
#define LED1_PORT                   IfxPort_P13_1
#define LED2_PORT                   IfxPort_P13_2
#define LED3_PORT                   IfxPort_P13_3
/* LEDs on ADAS Application Kit */
#define LED0_PORT_ADAS              IfxPort_P33_1
#define LED1_PORT_ADAS              IfxPort_P33_2
#define LED2_PORT_ADAS              IfxPort_P33_3
#define LED3_PORT_ADAS              IfxPort_P33_4

/* we set our Lifehold to LED0 */
#define LIFEHOLD_LED                LED0_PORT
/* we set our Lifehold to LED0 of ADAS */
#define LIFEHOLD_LED_ADAS           LED0_PORT_ADAS

/* we define here the pins for RTL8211F RGMII connection (V2.0) */
#define ETH_GREFCLK_PIN             IfxGeth_GREFCLK_P11_5_IN
#define ETH_RXCTL_PIN               IfxGeth_RXCTLA_P11_11_IN
#define ETH_RXCLK_PIN               IfxGeth_RXCLKA_P11_12_IN
#define ETH_RXD0_PIN                IfxGeth_RXD0A_P11_10_IN
#define ETH_RXD1_PIN                IfxGeth_RXD1A_P11_9_IN
#define ETH_RXD2_PIN                IfxGeth_RXD2A_P11_8_IN
#define ETH_RXD3_PIN                IfxGeth_RXD3A_P11_7_IN
#define ETH_MDC_PIN                 IfxGeth_MDC_P12_0_OUT
#define ETH_MDIO_PIN                IfxGeth_MDIO_P12_1_INOUT
#define ETH_TXD0_PIN                IfxGeth_TXD0_P11_3_OUT
#define ETH_TXD1_PIN                IfxGeth_TXD1_P11_2_OUT
#define ETH_TXD2_PIN                IfxGeth_TXD2_P11_1_OUT
#define ETH_TXD3_PIN                IfxGeth_TXD3_P11_0_OUT
#define ETH_TXCTL_PIN               IfxGeth_TXCTL_P11_6_OUT
#define ETH_TXCLK_PIN               IfxGeth_TXCLK_P11_4_OUT

/* set the values for systemtimer */
#define IFX_CFG_STM_TICKS_PER_MS (100000) /**< \brief Number of STM ticks per millisecond */

/* define the CPU which service the selected peripherals */
#define CPU_WHICH_SERVICE_CAN          0     /**< \brief Define the CPU which service the Can and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_BACKLIGHT    1     /**< \brief Define the CPU which service the Backlight and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_MEASUREMENT  2     /**< \brief Define the CPU which service the Measurement and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_PERF_MEAS    3     /**< \brief Define the CPU which service the Performance Measurement and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_ETHERNET     4     /**< \brief Define the CPU which service the Ethernet and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_EVADC        5     /**< \brief Define the CPU which service the Evadc and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_SDCARD       0     /**< \brief Define the CPU which service the Sdcard and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_LIN          1     /**< \brief Define the CPU which service the Lin and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_TLF          2     /**< \brief Define the CPU which service the Tlf3xx8x and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_RTC          3     /**< \brief Define the CPU which service the Rtc and where functions/variables are located. Must be always 0, because CPU0 control safety watchdog  */
#define CPU_WHICH_SERVICE_ASC_SHELL    4     /**< \brief Define the CPU which service the Asclin shell and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_TFT          5     /**< \brief Define the CPU which service the Tft and touch where functions/variables are located.  */
#define CPU_WHICH_SERVICE_BEEPER       0     /**< \brief Define the CPU which service the Beeper and where functions/variables are located.  */

/* define the CPU which holds the DAS variables */
#define DAS_VAR_LOCATION            3

#define TFT_OVER_DAS

#define REFRESH_TFT 50		// Refresh rate [ms]; 1x refresh ~0,8 % CPU load; for graphic-out: 4 colors ~ 1.2 % CPU load, 16 colors ~ 0.8 % CPU load
							// Max refresh rate ~ 40 ms due to QSPI-load

#define REFRESH_MEASUREMENT 50		// Refresh rate [ms] for temperature and voltage measurement

#define BOARD_TEXT          "Application Kit"
/* baord name used on display, here shorted because limited y space in TFT line */
#define BOARD_TEXT_TFT      "AppKit"
#define BOARD_VERSION_TEXT  "V2.0"

#define SW_VERSION_TEXT     "SW V2.0"

/* here we define our Asclin shell values */
/* our Application Kit use P14.0 and P14.1 as ASC via USB */
#define CFG_ASC_SHELL_BAUDRATE      (115200.0)                   /**< \brief Define the Baudrate */
#define ASC_SHELL_TX_PIN            IfxAsclin0_TX_P14_0_OUT
#define ASC_SHELL_RX_PIN            IfxAsclin0_RXA_P14_1_IN

#define CFG_ASC_RX_BUFFER_SIZE      (512)                        /**< \brief Define the Rx buffer size in byte. */
#define CFG_ASC_TX_BUFFER_SIZE      (6 * 1024)                   /**< \brief Define the Tx buffer size in byte. */

#define LWIP_PRINT_VIA_DISPLAY 1 /* LWIP printf to display, uncommented if not needed */
//#define LWIP_PRINT_VIA_CONSOLE 1 /* LWIP printf to console (shell), uncommented if not needed */

#endif
