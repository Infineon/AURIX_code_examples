/**
 * \file IfxDre_cfg.h
 * \brief DRE on-chip implementation data
 * \ingroup IfxLld_Dre
 *
 * \version iLLD-TC4-v2.2.0
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 *
 * \defgroup IfxLld_Dre DRE
 * \ingroup IfxLld
 * \defgroup IfxLld_Dre_Impl Implementation Interface
 * \ingroup IfxLld_Dre
 * \defgroup IfxLld_Dre_Std Standard Interface
 * \ingroup IfxLld_Dre
 * \defgroup IfxLld_Dre_Impl_Enumerations Enumerations
 * \ingroup IfxLld_Dre_Impl
 */

#ifndef IFXDRE_CFG_H
#define IFXDRE_CFG_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "Cpu/Std/Ifx_Types.h"
#include "IfxDre_reg.h"
#include "IfxDre_bf.h"

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/

/** \brief Number of DRE modules
 */
#define IFXDRE_NUM_MODULES           (1)

/** \brief Number of Destination Memory
 */
#define IFXDRE_NUM_DMEM              (28)

/** \brief Number of Stream Id Filters
 */
#define IFXDRE_NUM_STREAM_ID_FILTERS (8)

/** \brief CAD Element Offset
 */
#define IFXDRE_CAD_CAN_OFFSET        (8)

/** \brief DMEM Parameter Element Offset
 */
#define IFXDRE_DMEM_PARAM_OFFSET     (16)

/** \brief Number of EIBUF Buffers
 */
#define IFXDRE_NUM_EIBUF_BUFFERS     (6)

/** \brief Number of EOBUF Buffers
 */
#define IFXDRE_NUM_EOBUF_BUFFERS     (6)

/** \brief Offset of Routing Table Start Address from DRE Module Address (DRE RAM Start Address (0x8000) + RT Offset (0x1AE0) in RAM)
 */
#define IFXDRE_RT_START_OFFSET       (0x9AE0)

/** \brief Offset of DMEM Parameter Table Start Address from DRE Module Address (DRE RAM Start Address (0x8000) + DMEM Parameter Table Offset (0x7A40) in RAM)
 */
#define IFXDRE_DMEM_PARAM_TABLE_START_OFFSET       (0x0FA40)

/** \brief Offset of Ethernet Address Database Start Address from DRE Module Address (DRE RAM Start Address (0x8000) + Ethernet Address Database Offset (0x2AE0) in RAM)
 */
#define IFXDRE_EAD_START_OFFSET      (0x0AAE0)

/** \brief Offset of Ethernet Forwarding Table Start Address from DRE Module Address (DRE RAM Start Address (0x8000) + Ethernet Forwarding Table Offset (0x7640) in RAM)
 */
#define IFXDRE_FT_START_OFFSET       (0xF640)

/** \brief Value to clear DMEM Status register
 */
#define IFXDRE_DMEM_STATUS_CLEAR     (0x170001)

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/** \addtogroup IfxLld_Dre_Impl_Enumerations
 * \{ */
/** \brief List of the available Dre resources
 */
typedef enum
{
    IfxDre_Index_none = -1,  /**< \brief Not Selected */
    IfxDre_Index_0    = 0    /**< \brief DRE index 0 */
} IfxDre_Index;

/** \} */

/******************************************************************************/
/*-------------------Global Exported Variables/Constants----------------------*/
/******************************************************************************/
IFX_EXTERN IFX_CONST IfxModule_IndexMap IfxDre_cfg_indexMap[IFXDRE_NUM_MODULES];

#endif /* IFXDRE_CFG_H */
