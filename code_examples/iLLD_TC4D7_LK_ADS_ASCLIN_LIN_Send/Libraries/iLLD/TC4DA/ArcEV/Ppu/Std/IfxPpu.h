/**
 * \file IfxPpu.h
 *
 * \version iLLD-TC4-v2.2.0
 * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef IFXPPU_H
#define IFXPPU_H 1

#include "Ifx_Types.h"
#include "Compilers.h"
#if defined (__CARC__)
#include <sfr\regppu.sfr>
#endif

IFX_INLINE void IfxPpu_setVccmRegion(uint8 region)
{
#if defined (__arc__)
	_sr(((uint32)region << 28), 0x544U);
#endif
#if defined (__CARC__)
	AUX_VECMEM_REGION = ((uint32)region << 28);
#endif
}

IFX_INLINE uint8 IfxPpu_getVccmRegion(uint32 *region)
{
#if defined (__arc__)
	return (uint8)(_lr(0x544U) >> 28);
#endif
#if defined (__CARC__)
	return (uint8)(AUX_VECMEM_REGION >> 28);
#endif
}

IFX_INLINE void IfxPpu_requestTricoreToWriteToBits(uint32 *address, uint32 value, uint32 mask)
{

}


#endif /* IFXPPU_H_ */
