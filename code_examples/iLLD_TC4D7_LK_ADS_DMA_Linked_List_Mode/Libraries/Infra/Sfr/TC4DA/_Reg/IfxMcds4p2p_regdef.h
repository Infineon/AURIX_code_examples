/**
 * \file IfxMcds4p2p_regdef.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_MCDS/V0.2.1.1.0
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Mcds4p2p_Registers Mcds4p2p Registers
 * \ingroup IfxSfr
 * 
 * \defgroup IfxSfr_Mcds4p2p_Registers_Bitfields Bitfields
 * \ingroup IfxSfr_Mcds4p2p_Registers
 * 
 * \defgroup IfxSfr_Mcds4p2p_Registers_union Register unions
 * \ingroup IfxSfr_Mcds4p2p_Registers
 * 
 * \defgroup IfxSfr_Mcds4p2p_Registers_struct Memory map
 * \ingroup IfxSfr_Mcds4p2p_Registers
 */
#ifndef IFXMCDS4P2P_REGDEF_H
#define IFXMCDS4P2P_REGDEF_H 1
/******************************************************************************/
#include "Ifx_TypesReg.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/


/** \addtogroup IfxSfr_Mcds4p2p_Registers_Bitfields
 * \{  */
/** \brief PRS access enable register */
typedef struct _Ifx_MCDS4P2P_ACCEN_PRS_Bits
{
    __IO Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for PRS q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [15:8] \internal Reserved */
    __IO Ifx_Strict_32Bit WR00:1;          /**< \brief [16:16] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR01:1;          /**< \brief [17:17] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR02:1;          /**< \brief [18:18] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR03:1;          /**< \brief [19:19] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR04:1;          /**< \brief [20:20] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR05:1;          /**< \brief [21:21] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR06:1;          /**< \brief [22:22] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR07:1;          /**< \brief [23:23] Write access enable for PRS q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [31:24] \internal Reserved */
} Ifx_MCDS4P2P_ACCEN_PRS_Bits;

/** \brief Read access enable register A */
typedef struct _Ifx_MCDS4P2P_ACCEN_RDA_Bits
{
    __IO Ifx_Strict_32Bit EN00:1;          /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN01:1;          /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN02:1;          /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN03:1;          /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN04:1;          /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN05:1;          /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN06:1;          /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN07:1;          /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN08:1;          /**< \brief [8:8] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN09:1;          /**< \brief [9:9] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN10:1;          /**< \brief [10:10] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN11:1;          /**< \brief [11:11] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN12:1;          /**< \brief [12:12] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN13:1;          /**< \brief [13:13] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN14:1;          /**< \brief [14:14] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN15:1;          /**< \brief [15:15] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN16:1;          /**< \brief [16:16] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN17:1;          /**< \brief [17:17] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN18:1;          /**< \brief [18:18] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN19:1;          /**< \brief [19:19] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN20:1;          /**< \brief [20:20] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN21:1;          /**< \brief [21:21] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN22:1;          /**< \brief [22:22] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN23:1;          /**< \brief [23:23] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN24:1;          /**< \brief [24:24] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN25:1;          /**< \brief [25:25] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN26:1;          /**< \brief [26:26] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN27:1;          /**< \brief [27:27] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN28:1;          /**< \brief [28:28] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN29:1;          /**< \brief [29:29] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN30:1;          /**< \brief [30:30] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN31:1;          /**< \brief [31:31] Read access enable for TAG-ID q - ENq (rw) */
} Ifx_MCDS4P2P_ACCEN_RDA_Bits;

/** \brief Read access enable register B */
typedef struct _Ifx_MCDS4P2P_ACCEN_RDB_FPI_Bits
{
    __IO Ifx_Strict_32Bit EN32:1;          /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN33:1;          /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN34:1;          /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN35:1;          /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN36:1;          /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN37:1;          /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN38:1;          /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN39:1;          /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rw) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_MCDS4P2P_ACCEN_RDB_FPI_Bits;

/** \brief VM access enable register */
typedef struct _Ifx_MCDS4P2P_ACCEN_VM_Bits
{
    __IO Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for VM ID q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [15:8] \internal Reserved */
    __IO Ifx_Strict_32Bit WR00:1;          /**< \brief [16:16] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR01:1;          /**< \brief [17:17] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR02:1;          /**< \brief [18:18] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR03:1;          /**< \brief [19:19] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR04:1;          /**< \brief [20:20] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR05:1;          /**< \brief [21:21] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR06:1;          /**< \brief [22:22] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR07:1;          /**< \brief [23:23] Write access enable for VM ID q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [31:24] \internal Reserved */
} Ifx_MCDS4P2P_ACCEN_VM_Bits;

/** \brief Write access enable register A */
typedef struct _Ifx_MCDS4P2P_ACCEN_WRA_Bits
{
    __IO Ifx_Strict_32Bit EN00:1;          /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN01:1;          /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN02:1;          /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN03:1;          /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN04:1;          /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN05:1;          /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN06:1;          /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN07:1;          /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN08:1;          /**< \brief [8:8] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN09:1;          /**< \brief [9:9] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN10:1;          /**< \brief [10:10] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN11:1;          /**< \brief [11:11] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN12:1;          /**< \brief [12:12] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN13:1;          /**< \brief [13:13] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN14:1;          /**< \brief [14:14] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN15:1;          /**< \brief [15:15] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN16:1;          /**< \brief [16:16] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN17:1;          /**< \brief [17:17] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN18:1;          /**< \brief [18:18] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN19:1;          /**< \brief [19:19] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN20:1;          /**< \brief [20:20] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN21:1;          /**< \brief [21:21] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN22:1;          /**< \brief [22:22] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN23:1;          /**< \brief [23:23] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN24:1;          /**< \brief [24:24] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN25:1;          /**< \brief [25:25] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN26:1;          /**< \brief [26:26] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN27:1;          /**< \brief [27:27] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN28:1;          /**< \brief [28:28] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN29:1;          /**< \brief [29:29] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN30:1;          /**< \brief [30:30] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN31:1;          /**< \brief [31:31] Write access enable for TAG-ID q - ENq (rw) */
} Ifx_MCDS4P2P_ACCEN_WRA_Bits;

/** \brief Write access enable register B */
typedef struct _Ifx_MCDS4P2P_ACCEN_WRB_FPI_Bits
{
    __IO Ifx_Strict_32Bit EN32:1;          /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN33:1;          /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN34:1;          /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN35:1;          /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN36:1;          /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN37:1;          /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN38:1;          /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN39:1;          /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rw) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_MCDS4P2P_ACCEN_WRB_FPI_Bits;

/** \brief Clock Control Register */
typedef struct _Ifx_MCDS4P2P_CLC_Bits
{
    __IO Ifx_Strict_32Bit DISR:1;          /**< \brief [0:0] Module Disable Request Bit - DISR (rw) */
    __I  Ifx_Strict_32Bit DISS:1;          /**< \brief [1:1] Module Disable Status Bit - DISS (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [2:2] \internal Reserved */
    __IO Ifx_Strict_32Bit EDIS:1;          /**< \brief [3:3] Sleep Mode Enable Control - EDIS (rw) */
    __I  Ifx_Strict_32Bit :28;             /**< \brief [31:4] \internal Reserved */
} Ifx_MCDS4P2P_CLC_Bits;

/** \brief FGAC Lookup Table RAM register */
typedef struct _Ifx_MCDS4P2P_FGACLUT_Bits
{
    __IO Ifx_Strict_32Bit DATA:32;         /**< \brief [31:0] FGAC LT data transfer register (rwh) */
} Ifx_MCDS4P2P_FGACLUT_Bits;

/** \brief Trace Buffer Bottom Register */
typedef struct _Ifx_MCDS4P2P_FIFOBOT_Bits
{
    __I  Ifx_Strict_32Bit :12;             /**< \brief [11:0] \internal Reserved */
    __IO Ifx_Strict_32Bit BOTTOM:19;       /**< \brief [30:12] Trace Buffer lower Bound - BOTTOM (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [31:31] \internal Reserved */
} Ifx_MCDS4P2P_FIFOBOT_Bits;

/** \brief Trace Buffer Control Register */
typedef struct _Ifx_MCDS4P2P_FIFOCTL_Bits
{
    __I  Ifx_Strict_32Bit TRG:1;           /**< \brief [0:0] Trigger Received Flag - TRG (rh) */
    __I  Ifx_Strict_32Bit FFE:1;           /**< \brief [1:1] FIFO Feeder Empty - FFE (rh) */
    __I  Ifx_Strict_32Bit TME:1;           /**< \brief [2:2] Trace Buffer Access Error (rh) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [6:3] \internal Reserved */
    __IO Ifx_Strict_32Bit DMC_MODE:1;      /**< \brief [7:7] Message sorting algorithm - DMC_MODE (rw) */
    __O  Ifx_Strict_32Bit DMC_MODE_P:1;    /**< \brief [8:8] DMC Mode write protection - DMC_MODE_P (w) */
    __I  Ifx_Strict_32Bit TRDIS:1;         /**< \brief [9:9] Trigger Disable Flag - TRDIS (rh) */
    __O  Ifx_Strict_32Bit TRON:1;          /**< \brief [10:10] Clear Trigger Disable Flag - TRON (w) */
    __O  Ifx_Strict_32Bit TROFF:1;         /**< \brief [11:11] Set Trigger Disable Flag - TROFF (w) */
    __I  Ifx_Strict_32Bit FLSH:2;          /**< \brief [13:12] Flush Flag - FLSH (rh) */
    __O  Ifx_Strict_32Bit CLR:1;           /**< \brief [14:14] Clear Flush Flag - CLR (w) */
    __O  Ifx_Strict_32Bit SET:1;           /**< \brief [15:15] Set Flush Flag - SET (w) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [23:16] \internal Reserved */
    __IO Ifx_Strict_32Bit CTTO:7;          /**< \brief [30:24] Continuous Trace Time Out - CTTO (rw) */
    __O  Ifx_Strict_32Bit CTTO_P:1;        /**< \brief [31:31] CTTO write protection - CTTO_P (w) */
} Ifx_MCDS4P2P_FIFOCTL_Bits;

/** \brief Trace Buffer Write Pointer */
typedef struct _Ifx_MCDS4P2P_FIFONOW_Bits
{
    __I  Ifx_Strict_32Bit :5;              /**< \brief [4:0] \internal Reserved */
    __I  Ifx_Strict_32Bit NOW:26;          /**< \brief [30:5] Trace Buffer Current Write Pointer - NOW (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [31:31] \internal Reserved */
} Ifx_MCDS4P2P_FIFONOW_Bits;

/** \brief FIFO Overflow Counter Register */
typedef struct _Ifx_MCDS4P2P_FIFOOVRCNT_Bits
{
    __I  Ifx_Strict_32Bit COUNT:8;         /**< \brief [7:0] FIFO Overflow Counter - COUNT (rh) */
    __I  Ifx_Strict_32Bit :7;              /**< \brief [14:8] \internal Reserved */
    __O  Ifx_Strict_32Bit CLR:1;           /**< \brief [15:15] Clear counter - CLR (w) */
    __I  Ifx_Strict_32Bit :16;             /**< \brief [31:16] \internal Reserved */
} Ifx_MCDS4P2P_FIFOOVRCNT_Bits;

/** \brief Trace Buffer PRE/POST Register */
typedef struct _Ifx_MCDS4P2P_FIFOPRE_Bits
{
    __I  Ifx_Strict_32Bit :5;              /**< \brief [4:0] \internal Reserved */
    __IO Ifx_Strict_32Bit PRE:27;          /**< \brief [31:5] Trace Buffer Pre-Trigger Area Size - PRE (rw) */
} Ifx_MCDS4P2P_FIFOPRE_Bits;

/** \brief Trace Buffer Top Register */
typedef struct _Ifx_MCDS4P2P_FIFOTOP_Bits
{
    __I  Ifx_Strict_32Bit :12;             /**< \brief [11:0] \internal Reserved */
    __IO Ifx_Strict_32Bit TOP:20;          /**< \brief [31:12] Trace Buffer upper Bound - TOP (rw) */
} Ifx_MCDS4P2P_FIFOTOP_Bits;

/** \brief Module Identification Register */
typedef struct _Ifx_MCDS4P2P_ID_Bits
{
    __I  Ifx_Strict_32Bit MOD_REV:8;       /**< \brief [7:0] Module Revision - MOD_REV (r) */
    __I  Ifx_Strict_32Bit MOD_TYPE:8;      /**< \brief [15:8] Module Type - MOD_TYPE (r) */
    __I  Ifx_Strict_32Bit MOD_NUM:16;      /**< \brief [31:16] Module Number - MOD_NUM (r) */
} Ifx_MCDS4P2P_ID_Bits;

/** \brief MCX ACT Action Definition Register 0 */
typedef struct _Ifx_MCDS4P2P_MCXACT_Bits
{
    __IO Ifx_Strict_32Bit AIS0:5;          /**< \brief [4:0] Action Input Selector - AIS0 (rw) */
    __IO Ifx_Strict_32Bit AIQ0:2;          /**< \brief [6:5] Action Input Qualifier - AIQ0 (rw) */
    __IO Ifx_Strict_32Bit LV0:1;           /**< \brief [7:7] Action Input Level Mode - LV0 (rw) */
    __IO Ifx_Strict_32Bit AIS1:5;          /**< \brief [12:8] Action Input Selector - AIS1 (rw) */
    __IO Ifx_Strict_32Bit AIQ1:2;          /**< \brief [14:13] Action Input Qualifier - AIQ1 (rw) */
    __IO Ifx_Strict_32Bit LV1:1;           /**< \brief [15:15] Action Input Level Mode - LV1 (rw) */
    __IO Ifx_Strict_32Bit AIS2:5;          /**< \brief [20:16] Action Input Selector - AIS2 (rw) */
    __IO Ifx_Strict_32Bit AIQ2:2;          /**< \brief [22:21] Action Input Qualifier - AIQ2 (rw) */
    __IO Ifx_Strict_32Bit LV2:1;           /**< \brief [23:23] Action Input Level Mode - LV2 (rw) */
    __IO Ifx_Strict_32Bit AIS3:5;          /**< \brief [28:24] Action Input Selector - AIS3 (rw) */
    __IO Ifx_Strict_32Bit AIQ3:2;          /**< \brief [30:29] Action Input Qualifier - AIQ3 (rw) */
    __IO Ifx_Strict_32Bit LV3:1;           /**< \brief [31:31] Action Input Level Mode - LV3 (rw) */
} Ifx_MCDS4P2P_MCXACT_Bits;

/** \brief MCX EVT Event Definition Register 0 */
typedef struct _Ifx_MCDS4P2P_MCXEVT_Bits
{
    __IO Ifx_Strict_32Bit EIQ0:2;          /**< \brief [1:0] Event Input Qualifier - EIQ0 (rw) */
    __IO Ifx_Strict_32Bit EIQ1:2;          /**< \brief [3:2] Event Input Qualifier - EIQ1 (rw) */
    __IO Ifx_Strict_32Bit EIQ2:2;          /**< \brief [5:4] Event Input Qualifier - EIQ2 (rw) */
    __IO Ifx_Strict_32Bit EIQ3:2;          /**< \brief [7:6] Event Input Qualifier - EIQ3 (rw) */
    __IO Ifx_Strict_32Bit EIQ4:2;          /**< \brief [9:8] Event Input Qualifier - EIQ4 (rw) */
    __IO Ifx_Strict_32Bit EIQ5:2;          /**< \brief [11:10] Event Input Qualifier - EIQ5 (rw) */
    __IO Ifx_Strict_32Bit EIQ6:2;          /**< \brief [13:12] Event Input Qualifier - EIQ6 (rw) */
    __IO Ifx_Strict_32Bit EIQ7:2;          /**< \brief [15:14] Event Input Qualifier - EIQ7 (rw) */
    __IO Ifx_Strict_32Bit EIQ8:2;          /**< \brief [17:16] Event Input Qualifier - EIQ8 (rw) */
    __IO Ifx_Strict_32Bit EIQ9:2;          /**< \brief [19:18] Event Input Qualifier - EIQ9 (rw) */
    __IO Ifx_Strict_32Bit EIQ10:2;         /**< \brief [21:20] Event Input Qualifier - EIQ10 (rw) */
    __IO Ifx_Strict_32Bit EIQ11:2;         /**< \brief [23:22] Event Input Qualifier - EIQ11 (rw) */
    __IO Ifx_Strict_32Bit EIQ12:2;         /**< \brief [25:24] Event Input Qualifier - EIQ12 (rw) */
    __IO Ifx_Strict_32Bit EIQ13:2;         /**< \brief [27:26] Event Input Qualifier - EIQ13 (rw) */
    __IO Ifx_Strict_32Bit EIQ14:2;         /**< \brief [29:28] Event Input Qualifier - EIQ14 (rw) */
    __IO Ifx_Strict_32Bit EIQ15:2;         /**< \brief [31:30] Event Input Qualifier - EIQ15 (rw) */
} Ifx_MCDS4P2P_MCXEVT_Bits;

/** \brief MCX CCL Counter Control Register 0 */
typedef struct _Ifx_MCDS4P2P_MCX_CCL_Bits
{
    __IO Ifx_Strict_32Bit INC0:7;          /**< \brief [6:0] Count Input Selector - INC0 (rw) */
    __IO Ifx_Strict_32Bit ILV0:1;          /**< \brief [7:7] Count Input Level Mode - ILV0 (rw) */
    __IO Ifx_Strict_32Bit CLR0:6;          /**< \brief [13:8] Clear Input Selector - CLR0 (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [14:14] \internal Reserved */
    __IO Ifx_Strict_32Bit CLV0:1;          /**< \brief [15:15] Clear Input Level Mode - CLV0 (rw) */
    __IO Ifx_Strict_32Bit INC1:7;          /**< \brief [22:16] Count Input Selector - INC1 (rw) */
    __IO Ifx_Strict_32Bit ILV1:1;          /**< \brief [23:23] Count Input Level Mode - ILV1 (rw) */
    __IO Ifx_Strict_32Bit CLR1:6;          /**< \brief [29:24] Clear Input Selector - CLR1 (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [30:30] \internal Reserved */
    __IO Ifx_Strict_32Bit CLV1:1;          /**< \brief [31:31] Clear Input Level Mode - CLV1 (rw) */
} Ifx_MCDS4P2P_MCX_CCL_Bits;

/** \brief MCX CNT Current Count Register 0 */
typedef struct _Ifx_MCDS4P2P_MCX_CNT_Bits
{
    __I  Ifx_Strict_32Bit COUNT:16;        /**< \brief [15:0] Current Counter - COUNT (rh) */
    __I  Ifx_Strict_32Bit :16;             /**< \brief [31:16] \internal Reserved */
} Ifx_MCDS4P2P_MCX_CNT_Bits;

/** \brief MCX LMT Counter Limit Register 0 */
typedef struct _Ifx_MCDS4P2P_MCX_LMT_Bits
{
    __IO Ifx_Strict_32Bit LIMIT:16;        /**< \brief [15:0] Counter Limit - LIMIT (rw) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [29:16] \internal Reserved */
    __IO Ifx_Strict_32Bit MOD0:1;          /**< \brief [30:30] Modulo Count Control - MOD0 (rw) */
    __IO Ifx_Strict_32Bit MOD1:1;          /**< \brief [31:31] Modulo Count Control - MOD1 (rw) */
} Ifx_MCDS4P2P_MCX_LMT_Bits;

/** \brief TMUX Trace Source Control */
typedef struct _Ifx_MCDS4P2P_MUX_Bits
{
    __IO Ifx_Strict_32Bit TMUX0:3;         /**< \brief [2:0] Trace Source Select 0 - TMUX0 (rw) */
    __IO Ifx_Strict_32Bit TM0_EN:1;        /**< \brief [3:3] Trace Source Select 0 Enable (rw) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [6:4] \internal Reserved */
    __O  Ifx_Strict_32Bit TM0_P:1;         /**< \brief [7:7] Trace Source Select 0 Protection (w) */
    __IO Ifx_Strict_32Bit TMUX1:3;         /**< \brief [10:8] Trace Source Select 1 - TMUX1 (rw) */
    __IO Ifx_Strict_32Bit TM1_EN:1;        /**< \brief [11:11] Trace Source Select 1 Enable (rw) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [14:12] \internal Reserved */
    __O  Ifx_Strict_32Bit TM1_P:1;         /**< \brief [15:15] Trace Source Select 1 Protection (w) */
    __IO Ifx_Strict_32Bit TMUX2:3;         /**< \brief [18:16] Trace Source Select 2 - TMUX2 (rw) */
    __IO Ifx_Strict_32Bit TM2_EN:1;        /**< \brief [19:19] Trace Source Select 2 Enable (rw) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [22:20] \internal Reserved */
    __O  Ifx_Strict_32Bit TM2_P:1;         /**< \brief [23:23] Trace Source Select 2 Protection (w) */
    __IO Ifx_Strict_32Bit TMUX3:3;         /**< \brief [26:24] Trace Source Select 3 - TMUX3 (rw) */
    __IO Ifx_Strict_32Bit TM3_EN:1;        /**< \brief [27:27] Trace Source Select 3 Enable (rw) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [30:28] \internal Reserved */
    __O  Ifx_Strict_32Bit TM3_P:1;         /**< \brief [31:31] Trace Source Select 3 Protection (w) */
} Ifx_MCDS4P2P_MUX_Bits;

/** \brief Trace source selection lock */
typedef struct _Ifx_MCDS4P2P_MUXLOCK_Bits
{
    __IO Ifx_Strict_32Bit LOCK:1;          /**< \brief [0:0] Trace source selection lock (rw) */
    __I  Ifx_Strict_32Bit :31;             /**< \brief [31:1] \internal Reserved */
} Ifx_MCDS4P2P_MUXLOCK_Bits;

/** \brief TCMUX and SRI Trace Source Control */
typedef struct _Ifx_MCDS4P2P_MUXTCRC_Bits
{
    __IO Ifx_Strict_32Bit TCMUX0:2;        /**< \brief [1:0] TCMUX Trace Source Select - TCMUX0 (rw) */
    __IO Ifx_Strict_32Bit TCMUX1:2;        /**< \brief [3:2] TCMUX Trace Source Select - TCMUX1 (rw) */
    __IO Ifx_Strict_32Bit TCMUX2:2;        /**< \brief [5:4] TCMUX Trace Source Select - TCMUX2 (rw) */
    __IO Ifx_Strict_32Bit TCMUX3:2;        /**< \brief [7:6] TCMUX Trace Source Select - TCMUX3 (rw) */
    __IO Ifx_Strict_32Bit PPUMUX:1;        /**< \brief [8:8] PPUMUX Trace Source Select (rw) */
    __IO Ifx_Strict_32Bit SPUMUX:1;        /**< \brief [9:9] SPUMUX Trace Source Select (rw) */
    __I  Ifx_Strict_32Bit :5;              /**< \brief [14:10] \internal Reserved */
    __O  Ifx_Strict_32Bit TCMUX_P:1;       /**< \brief [15:15] TCMUX Trace Source Select Protection - TCMUX_P (w) */
    __IO Ifx_Strict_32Bit SRIRDWR0:1;      /**< \brief [16:16] SRI read or write data Select (rw) */
    __IO Ifx_Strict_32Bit SRIRDWR1:1;      /**< \brief [17:17] SRI read or write data Select (rw) */
    __IO Ifx_Strict_32Bit SRIRDWR2:1;      /**< \brief [18:18] SRI read or write data Select (rw) */
    __IO Ifx_Strict_32Bit SRIRDWR3:1;      /**< \brief [19:19] SRI read or write data Select (rw) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [22:20] \internal Reserved */
    __O  Ifx_Strict_32Bit SRIRDWR_P:1;     /**< \brief [23:23] SRI read or write data Select Protection - SRIRDWR_P (w) */
    __IO Ifx_Strict_32Bit RC:1;            /**< \brief [24:24] Reference Clock Select - RC (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [26:25] \internal Reserved */
    __O  Ifx_Strict_32Bit RC_P:1;          /**< \brief [27:27] Reference Clock Select Protection - RC_P (w) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [30:28] \internal Reserved */
    __IO Ifx_Strict_32Bit PERF_EN:1;       /**< \brief [31:31] Performance Counter Interface to OTGB Enable (rw) */
} Ifx_MCDS4P2P_MUXTCRC_Bits;

/** \brief OCDS Control and Status Register */
typedef struct _Ifx_MCDS4P2P_OCS_Bits
{
    __IO Ifx_Strict_32Bit TGS:2;           /**< \brief [1:0] Trigger Set for OTGB0/1 - TGS (rw) */
    __IO Ifx_Strict_32Bit TGB:1;           /**< \brief [2:2] OTGB0/1 Bus Select - TGB (rw) */
    __O  Ifx_Strict_32Bit TG_P:1;          /**< \brief [3:3] TGS, TGB Write Protection - TG_P (w) */
    __I  Ifx_Strict_32Bit :20;             /**< \brief [23:4] \internal Reserved */
    __IO Ifx_Strict_32Bit SUS:4;           /**< \brief [27:24] OCDS Suspend Control - SUS (rw) */
    __O  Ifx_Strict_32Bit SUS_P:1;         /**< \brief [28:28] SUS Write Protection - SUS_P (w) */
    __I  Ifx_Strict_32Bit SUSSTA:1;        /**< \brief [29:29] Suspend State - SUSSTA (rh) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [31:30] \internal Reserved */
} Ifx_MCDS4P2P_OCS_Bits;

/** \brief PAL timer */
typedef struct _Ifx_MCDS4P2P_PALTIMER_Bits
{
    __IO Ifx_Strict_32Bit TIMEOUT0:6;      /**< \brief [5:0] PALTIMER POBx (rw) */
    __I  Ifx_Strict_32Bit TIMER0SR:1;      /**< \brief [6:6] PALTIMER POBx status (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [7:7] \internal Reserved */
    __IO Ifx_Strict_32Bit TIMEOUT1:6;      /**< \brief [13:8] PALTIMER POBy (rw) */
    __I  Ifx_Strict_32Bit TIMER1SR:1;      /**< \brief [14:14] PALTIMER POBy status (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [15:15] \internal Reserved */
    __IO Ifx_Strict_32Bit TIMEOUT2:6;      /**< \brief [21:16] PALTIMER POBz (rw) */
    __I  Ifx_Strict_32Bit TIMER2SR:1;      /**< \brief [22:22] PALTIMER POBz status (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [23:23] \internal Reserved */
    __IO Ifx_Strict_32Bit TIMEOUT3:6;      /**< \brief [29:24] PALTIMER POBw (rw) */
    __I  Ifx_Strict_32Bit TIMER3SR:1;      /**< \brief [30:30] PALTIMER POBw status (rh) */
    __IO Ifx_Strict_32Bit TIMERDIS:1;      /**< \brief [31:31] PALTIMER disable (rw) */
} Ifx_MCDS4P2P_PALTIMER_Bits;

/** \brief Resource Protection Register */
typedef struct _Ifx_MCDS4P2P_PROT_Bits
{
    __IO Ifx_Strict_32Bit STATE:3;         /**< \brief [2:0] Resource protection state (rwh) */
    __O  Ifx_Strict_32Bit SWEN:1;          /**< \brief [3:3] State write enable (w) */
    __I  Ifx_Strict_32Bit :12;             /**< \brief [15:4] \internal Reserved */
    __IO Ifx_Strict_32Bit VM:3;            /**< \brief [18:16] Virtual Machine definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit VMEN:1;          /**< \brief [19:19] Virtual Machine definition Enable for PROT owner (rw) */
    __IO Ifx_Strict_32Bit PRS:3;           /**< \brief [22:20] Protection Set definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit PRSEN:1;         /**< \brief [23:23] Protection Set definition Enable for PROT owner (rw) */
    __IO Ifx_Strict_32Bit TAGID:6;         /**< \brief [29:24] TAG ID definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit ODEF:1;          /**< \brief [30:30] Enable for PROT owner definition (rw) */
    __O  Ifx_Strict_32Bit OWEN:1;          /**< \brief [31:31] Owner write enable (w) */
} Ifx_MCDS4P2P_PROT_Bits;

/** \brief Reset Control Register A */
typedef struct _Ifx_MCDS4P2P_RST_CTRLA_Bits
{
    __IO Ifx_Strict_32Bit KRST:1;          /**< \brief [0:0] Kernel Reset - KRST (rw1sh) */
    __I  Ifx_Strict_32Bit :7;              /**< \brief [7:1] \internal Reserved */
    __IO Ifx_Strict_32Bit GRSTEN0:1;       /**< \brief [8:8] Enable for Global Module Reset Group 0 - GRSTEN0 (rw) */
    __IO Ifx_Strict_32Bit GRSTEN1:1;       /**< \brief [9:9] Enable for Global Module Reset Group 1 - GRSTEN1 (rw) */
    __IO Ifx_Strict_32Bit GRSTEN2:1;       /**< \brief [10:10] Enable for Global Module Reset Group 2 - GRSTEN2 (rw) */
    __IO Ifx_Strict_32Bit GRSTEN3:1;       /**< \brief [11:11] Enable for Global Module Reset Group 3 - GRSTEN3 (rw) */
    __I  Ifx_Strict_32Bit :20;             /**< \brief [31:12] \internal Reserved */
} Ifx_MCDS4P2P_RST_CTRLA_Bits;

/** \brief Reset Control Register B */
typedef struct _Ifx_MCDS4P2P_RST_CTRLB_Bits
{
    __IO Ifx_Strict_32Bit KRST:1;          /**< \brief [0:0] Kernel Reset - KRST (rw1sh) */
    __I  Ifx_Strict_32Bit :30;             /**< \brief [30:1] \internal Reserved */
    __O  Ifx_Strict_32Bit STATCLR:1;       /**< \brief [31:31] Kernel Reset Status Clear - STATCLR (w) */
} Ifx_MCDS4P2P_RST_CTRLB_Bits;

/** \brief Reset Status Register */
typedef struct _Ifx_MCDS4P2P_RST_STAT_Bits
{
    __I  Ifx_Strict_32Bit KRST:1;          /**< \brief [0:0] Kernel Reset Status - KRST (rh) */
    __I  Ifx_Strict_32Bit :7;              /**< \brief [7:1] \internal Reserved */
    __I  Ifx_Strict_32Bit GRST0:1;         /**< \brief [8:8] Status for Global Module Reset Group 0 - GRST0 (rh) */
    __I  Ifx_Strict_32Bit GRST1:1;         /**< \brief [9:9] Status for Global Module Reset Group 1 - GRST1 (rh) */
    __I  Ifx_Strict_32Bit GRST2:1;         /**< \brief [10:10] Status for Global Module Reset Group 2 - GRST2 (rh) */
    __I  Ifx_Strict_32Bit GRST3:1;         /**< \brief [11:11] Status for Global Module Reset Group 3 - GRST3 (rh) */
    __I  Ifx_Strict_32Bit :20;             /**< \brief [31:12] \internal Reserved */
} Ifx_MCDS4P2P_RST_STAT_Bits;

/** \brief Trace Buffer Fill Level */
typedef struct _Ifx_MCDS4P2P_TBUFFLV_Bits
{
    __I  Ifx_Strict_32Bit CURLVL:11;       /**< \brief [10:0] Current TBUF Fill Level - CURLVL (rh) */
    __I  Ifx_Strict_32Bit :5;              /**< \brief [15:11] \internal Reserved */
    __IO Ifx_Strict_32Bit MAXLVL:11;       /**< \brief [26:16] Maximum TBUF FIFO Fill Level - MAXLVL (rw0ch) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [30:27] \internal Reserved */
    __IO Ifx_Strict_32Bit WRAP:1;          /**< \brief [31:31] Maximum TBUF FIFO Fill Level - MAXLVL (rw0ch) */
} Ifx_MCDS4P2P_TBUFFLV_Bits;

/** \brief Trace Buffer Read Pointer */
typedef struct _Ifx_MCDS4P2P_TBUFRDNOW_Bits
{
    __I  Ifx_Strict_32Bit :5;              /**< \brief [4:0] \internal Reserved */
    __I  Ifx_Strict_32Bit RDNOW:10;        /**< \brief [14:5] Trace Buffer Read Pointer - RDNOW (rh) */
    __I  Ifx_Strict_32Bit :17;             /**< \brief [31:15] \internal Reserved */
} Ifx_MCDS4P2P_TBUFRDNOW_Bits;

/** \brief TBUF watermark level */
typedef struct _Ifx_MCDS4P2P_TBUFWMLV_Bits
{
    __IO Ifx_Strict_32Bit WMLVL0:10;       /**< \brief [9:0] Watermark level 0 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit WMLVL1:10;       /**< \brief [25:16] Watermark level 1 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_MCDS4P2P_TBUFWMLV_Bits;

/** \brief TCACBND */
typedef struct _Ifx_MCDS4P2P_TCACBND_Bits
{
    __IO Ifx_Strict_32Bit BOUND:23;        /**< \brief [22:0] Mode Comparator range lower bound - BOUND (rw) */
    __I  Ifx_Strict_32Bit :9;              /**< \brief [31:23] \internal Reserved */
} Ifx_MCDS4P2P_TCACBND_Bits;

/** \brief TCACMSK */
typedef struct _Ifx_MCDS4P2P_TCACMSK_Bits
{
    __IO Ifx_Strict_32Bit SVM:1;           /**< \brief [0:0] Comparator bit mask for Supervisor Mode - SVM (rw) */
    __IO Ifx_Strict_32Bit MASTER:5;        /**< \brief [5:1] Comparator bit mask for Master ID - MASTER (rw) */
    __IO Ifx_Strict_32Bit SUBCHANNEL:7;    /**< \brief [12:6] Comparator bit mask for Sub-channel ID - SUBCHANNEL (rw) */
    __IO Ifx_Strict_32Bit WR:1;            /**< \brief [13:13] Comparator bit mask for Direction Write - WR (rw) */
    __IO Ifx_Strict_32Bit RD:1;            /**< \brief [14:14] Comparator bit mask for Direction Read - RD (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [15:15] \internal Reserved */
    __IO Ifx_Strict_32Bit VM:3;            /**< \brief [18:16] Comparator bit mask for virtual machine ID - VM (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [19:19] \internal Reserved */
    __IO Ifx_Strict_32Bit PRS:3;           /**< \brief [22:20] Comparator bit mask for protection set ID - PRS (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [30:23] \internal Reserved */
    __IO Ifx_Strict_32Bit MSK:1;           /**< \brief [31:31] Bit mask for Transaction Type - MSK (rw) */
} Ifx_MCDS4P2P_TCACMSK_Bits;

/** \brief TCACRNG */
typedef struct _Ifx_MCDS4P2P_TCACRNG_Bits
{
    __IO Ifx_Strict_32Bit RANGE:23;        /**< \brief [22:0] Mode Comparator range size - RANGE (rw) */
    __I  Ifx_Strict_32Bit :9;              /**< \brief [31:23] \internal Reserved */
} Ifx_MCDS4P2P_TCACRNG_Bits;

/** \brief TCACT */
typedef struct _Ifx_MCDS4P2P_TCACT_Bits
{
    __IO Ifx_Strict_32Bit AIS0:5;          /**< \brief [4:0] Action Input Selector - AIS0 (rw) */
    __IO Ifx_Strict_32Bit AIQ0:2;          /**< \brief [6:5] Action Input Qualifier - AIQ0 (rw) */
    __IO Ifx_Strict_32Bit LV0:1;           /**< \brief [7:7] Action Input Level Mode - LV0 (rw) */
    __IO Ifx_Strict_32Bit AIS1:5;          /**< \brief [12:8] Action Input Selector - AIS1 (rw) */
    __IO Ifx_Strict_32Bit AIQ1:2;          /**< \brief [14:13] Action Input Qualifier - AIQ1 (rw) */
    __IO Ifx_Strict_32Bit LV1:1;           /**< \brief [15:15] Action Input Level Mode - LV1 (rw) */
    __IO Ifx_Strict_32Bit AIS2:5;          /**< \brief [20:16] Action Input Selector - AIS2 (rw) */
    __IO Ifx_Strict_32Bit AIQ2:2;          /**< \brief [22:21] Action Input Qualifier - AIQ2 (rw) */
    __IO Ifx_Strict_32Bit LV2:1;           /**< \brief [23:23] Action Input Level Mode - LV2 (rw) */
    __IO Ifx_Strict_32Bit AIS3:5;          /**< \brief [28:24] Action Input Selector - AIS3 (rw) */
    __IO Ifx_Strict_32Bit AIQ3:2;          /**< \brief [30:29] Action Input Qualifier - AIQ3 (rw) */
    __IO Ifx_Strict_32Bit LV3:1;           /**< \brief [31:31] Action Input Level Mode - LV3 (rw) */
} Ifx_MCDS4P2P_TCACT_Bits;

/** \brief TCADRALIAS */
typedef struct _Ifx_MCDS4P2P_TCADRALIAS_Bits
{
    __IO Ifx_Strict_32Bit PTUALIAS:1;      /**< \brief [0:0] Control bit for program address aliasing (rw) */
    __IO Ifx_Strict_32Bit DTUALIAS:1;      /**< \brief [1:1] Control bit for data address aliasing (rw) */
    __IO Ifx_Strict_32Bit FGACLTEN:1;      /**< \brief [2:2] Enable bit for FGAC LT access (rw) */
    __I  Ifx_Strict_32Bit :29;             /**< \brief [31:3] \internal Reserved */
} Ifx_MCDS4P2P_TCADRALIAS_Bits;

/** \brief TCCFT */
typedef struct _Ifx_MCDS4P2P_TCCFT_Bits
{
    __IO Ifx_Strict_32Bit VSHRT_FCT:10;    /**< \brief [9:0] Length of very short leaf function - VSHRT_FCT (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit SHRT_FCT:10;     /**< \brief [25:16] Length of short leaf function - SHRT_FCT (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_MCDS4P2P_TCCFT_Bits;

/** \brief TCCIP */
typedef struct _Ifx_MCDS4P2P_TCCIP_Bits
{
    __I  Ifx_Strict_32Bit :1;              /**< \brief [0:0] \internal Reserved */
    __I  Ifx_Strict_32Bit CURRENT:31;      /**< \brief [31:1] Current Instruction Pointer - CURRENT (rh) */
} Ifx_MCDS4P2P_TCCIP_Bits;

/** \brief TCDCTS */
typedef struct _Ifx_MCDS4P2P_TCDCTS_Bits
{
    __I  Ifx_Strict_32Bit NESTED_EXCP:4;    /**< \brief [3:0] Nested Exception Level (rh) */
    __I  Ifx_Strict_32Bit IEN:1;           /**< \brief [4:4] Interrupt Enable Flag - IEN (rh) */
    __I  Ifx_Strict_32Bit VM:3;            /**< \brief [7:5] Virtual machine ID - VM (rh) */
    __I  Ifx_Strict_32Bit PRS:3;           /**< \brief [10:8] Protection set ID - PRS (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [11:11] \internal Reserved */
    __I  Ifx_Strict_32Bit NR:1;            /**< \brief [12:12] TriCore not running - NR (rh) */
    __I  Ifx_Strict_32Bit DBGEN:1;         /**< \brief [13:13] Debug Enabled Flag - DBGEN (rh) */
    __I  Ifx_Strict_32Bit CLKDIV:2;        /**< \brief [15:14] Current Clock Divider - CLKDIV (rh) */
    __I  Ifx_Strict_32Bit ERR_SRI_BUS:1;    /**< \brief [16:16] SRI or FPI bus error flag (rh) */
    __I  Ifx_Strict_32Bit ARR:1;           /**< \brief [17:17] Application Reset request (rh) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [31:18] \internal Reserved */
} Ifx_MCDS4P2P_TCDCTS_Bits;

/** \brief TCDCUBND */
typedef struct _Ifx_MCDS4P2P_TCDCUBND_Bits
{
    __IO Ifx_Strict_32Bit BOUND:18;        /**< \brief [17:0] Mode Comparator range lower bound - BOUND (rw) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [31:18] \internal Reserved */
} Ifx_MCDS4P2P_TCDCUBND_Bits;

/** \brief TCDCUMSK */
typedef struct _Ifx_MCDS4P2P_TCDCUMSK_Bits
{
    __IO Ifx_Strict_32Bit MASK:18;         /**< \brief [17:0] Data Comparator bit mask - MASK_31_0 (rw) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [31:18] \internal Reserved */
} Ifx_MCDS4P2P_TCDCUMSK_Bits;

/** \brief TCDCURNG */
typedef struct _Ifx_MCDS4P2P_TCDCURNG_Bits
{
    __IO Ifx_Strict_32Bit RANGE:18;        /**< \brief [17:0] Mode Comparator range size - RANGE (rw) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [31:18] \internal Reserved */
} Ifx_MCDS4P2P_TCDCURNG_Bits;

/** \brief TCDTUFLV */
typedef struct _Ifx_MCDS4P2P_TCDTUFLV_Bits
{
    __I  Ifx_Strict_32Bit CURLVL0:4;       /**< \brief [3:0] Current DTU0 FIFO Fill Level - CURLVL0 (rh) */
    __IO Ifx_Strict_32Bit MAXLVL0:4;       /**< \brief [7:4] Maximum DTU0 FIFO Fill Level - MAXLVL0 (rwh) */
    __I  Ifx_Strict_32Bit CURLVL1:4;       /**< \brief [11:8] Current DTU1 FIFO Fill Level - CURLVL1 (rh) */
    __IO Ifx_Strict_32Bit MAXLVL1:4;       /**< \brief [15:12] Maximum DTU1 FIFO Fill Level - MAXLVL1 (rwh) */
    __I  Ifx_Strict_32Bit :16;             /**< \brief [31:16] \internal Reserved */
} Ifx_MCDS4P2P_TCDTUFLV_Bits;

/** \brief TCEABND */
typedef struct _Ifx_MCDS4P2P_TCEABND_Bits
{
    __IO Ifx_Strict_32Bit BOUND:32;        /**< \brief [31:0] Address Comparator range lower bound - BOUND (rw) */
} Ifx_MCDS4P2P_TCEABND_Bits;

/** \brief TCEARNG */
typedef struct _Ifx_MCDS4P2P_TCEARNG_Bits
{
    __IO Ifx_Strict_32Bit RANGE:32;        /**< \brief [31:0] Address Comparator range size - RANGE (rw) */
} Ifx_MCDS4P2P_TCEARNG_Bits;

/** \brief TCEVT */
typedef struct _Ifx_MCDS4P2P_TCEVT_Bits
{
    __IO Ifx_Strict_32Bit EIQ0:2;          /**< \brief [1:0] Event Input Qualifier - EIQ0 (rw) */
    __IO Ifx_Strict_32Bit EIQ1:2;          /**< \brief [3:2] Event Input Qualifier - EIQ1 (rw) */
    __IO Ifx_Strict_32Bit EIQ2:2;          /**< \brief [5:4] Event Input Qualifier - EIQ2 (rw) */
    __IO Ifx_Strict_32Bit EIQ3:2;          /**< \brief [7:6] Event Input Qualifier - EIQ3 (rw) */
    __IO Ifx_Strict_32Bit EIQ4:2;          /**< \brief [9:8] Event Input Qualifier - EIQ4 (rw) */
    __IO Ifx_Strict_32Bit EIQ5:2;          /**< \brief [11:10] Event Input Qualifier - EIQ5 (rw) */
    __IO Ifx_Strict_32Bit EIQ6:2;          /**< \brief [13:12] Event Input Qualifier - EIQ6 (rw) */
    __IO Ifx_Strict_32Bit EIQ7:2;          /**< \brief [15:14] Event Input Qualifier - EIQ7 (rw) */
    __IO Ifx_Strict_32Bit EIQ8:2;          /**< \brief [17:16] Event Input Qualifier - EIQ8 (rw) */
    __IO Ifx_Strict_32Bit EIQ9:2;          /**< \brief [19:18] Event Input Qualifier - EIQ9 (rw) */
    __IO Ifx_Strict_32Bit EIQ10:2;         /**< \brief [21:20] Event Input Qualifier - EIQ10 (rw) */
    __IO Ifx_Strict_32Bit EIQ11:2;         /**< \brief [23:22] Event Input Qualifier - EIQ11 (rw) */
    __IO Ifx_Strict_32Bit EIQ12:2;         /**< \brief [25:24] Event Input Qualifier - EIQ12 (rw) */
    __IO Ifx_Strict_32Bit EIQ13:2;         /**< \brief [27:26] Event Input Qualifier - EIQ13 (rw) */
    __IO Ifx_Strict_32Bit EIQ14:2;         /**< \brief [29:28] Event Input Qualifier - EIQ14 (rw) */
    __IO Ifx_Strict_32Bit EIQ15:2;         /**< \brief [31:30] Event Input Qualifier - EIQ15 (rw) */
} Ifx_MCDS4P2P_TCEVT_Bits;

/** \brief TCIPBND */
typedef struct _Ifx_MCDS4P2P_TCIPBND_Bits
{
    __I  Ifx_Strict_32Bit :1;              /**< \brief [0:0] \internal Reserved */
    __IO Ifx_Strict_32Bit BOUND:31;        /**< \brief [31:1] IP Comparator range lower bound - BOUND (rw) */
} Ifx_MCDS4P2P_TCIPBND_Bits;

/** \brief TCIPRNG */
typedef struct _Ifx_MCDS4P2P_TCIPRNG_Bits
{
    __I  Ifx_Strict_32Bit :1;              /**< \brief [0:0] \internal Reserved */
    __IO Ifx_Strict_32Bit RANGE:31;        /**< \brief [31:1] IP Comparator range size - RANGE (rw) */
} Ifx_MCDS4P2P_TCIPRNG_Bits;

/** \brief TCPALBND */
typedef struct _Ifx_MCDS4P2P_TCPALBND_Bits
{
    __IO Ifx_Strict_32Bit BOUND:32;        /**< \brief [31:0] Comparator range lower bound - BOUND (rw) */
} Ifx_MCDS4P2P_TCPALBND_Bits;

/** \brief TCPALMAP */
typedef struct _Ifx_MCDS4P2P_TCPALMAP_Bits
{
    __I  Ifx_Strict_32Bit :5;              /**< \brief [4:0] \internal Reserved */
    __IO Ifx_Strict_32Bit OFFSET:11;       /**< \brief [15:5] Lookup table location in RAM - OFFSET (rw) */
    __I  Ifx_Strict_32Bit :12;             /**< \brief [27:16] \internal Reserved */
    __IO Ifx_Strict_32Bit GRAIN:3;         /**< \brief [30:28] Lookup table granularity - GRAIN (rw) */
    __IO Ifx_Strict_32Bit EN:1;            /**< \brief [31:31] Lookup table active - EN (rw) */
} Ifx_MCDS4P2P_TCPALMAP_Bits;

/** \brief TCPALRNG */
typedef struct _Ifx_MCDS4P2P_TCPALRNG_Bits
{
    __IO Ifx_Strict_32Bit RANGE:32;        /**< \brief [31:0] Lookup table range size - RANGE (rw) */
} Ifx_MCDS4P2P_TCPALRNG_Bits;

/** \brief TCWDBND */
typedef struct _Ifx_MCDS4P2P_TCWDBND_Bits
{
    __IO Ifx_Strict_32Bit BOUND_31_0:32;    /**< \brief [31:0] Data Comparator range lower bound - BOUND_31_0 (rw) */
} Ifx_MCDS4P2P_TCWDBND_Bits;

/** \brief TCWDHBND */
typedef struct _Ifx_MCDS4P2P_TCWDHBND_Bits
{
    __IO Ifx_Strict_32Bit BOUND_63_32:32;    /**< \brief [31:0] Data Comparator range lower bound high word - BOUND_63_32 (rw) */
} Ifx_MCDS4P2P_TCWDHBND_Bits;

/** \brief TCWDHMSK */
typedef struct _Ifx_MCDS4P2P_TCWDHMSK_Bits
{
    __IO Ifx_Strict_32Bit MASK_63_32:32;    /**< \brief [31:0] Data Comparator bit mask high word - MASK_63_32 (rw) */
} Ifx_MCDS4P2P_TCWDHMSK_Bits;

/** \brief TCWDHRNG */
typedef struct _Ifx_MCDS4P2P_TCWDHRNG_Bits
{
    __IO Ifx_Strict_32Bit RANGE_63_32:32;    /**< \brief [31:0] Data Comparator range size high word - RANGE_63_32 (rw) */
} Ifx_MCDS4P2P_TCWDHRNG_Bits;

/** \brief TCWDMSK */
typedef struct _Ifx_MCDS4P2P_TCWDMSK_Bits
{
    __IO Ifx_Strict_32Bit MASK_31_0:32;    /**< \brief [31:0] Data Comparator bit mask - MASK_31_0 (rw) */
} Ifx_MCDS4P2P_TCWDMSK_Bits;

/** \brief TCWDRNG */
typedef struct _Ifx_MCDS4P2P_TCWDRNG_Bits
{
    __IO Ifx_Strict_32Bit RANGE_31_0:32;    /**< \brief [31:0] Data Comparator range size - RANGE_31_0 (rw) */
} Ifx_MCDS4P2P_TCWDRNG_Bits;

/** \brief TCWDSGN */
typedef struct _Ifx_MCDS4P2P_TCWDSGN_Bits
{
    __IO Ifx_Strict_32Bit SIGN:6;          /**< \brief [5:0] Bit number (1…63) of sign bit - SIGN (rw) */
    __I  Ifx_Strict_32Bit :26;             /**< \brief [31:6] \internal Reserved */
} Ifx_MCDS4P2P_TCWDSGN_Bits;

/** \brief MCDS Clock Counter Register */
typedef struct _Ifx_MCDS4P2P_TSUEMUCNT_Bits
{
    __I  Ifx_Strict_32Bit COUNT:32;        /**< \brief [31:0] Current Count Value - COUNT (rh) */
} Ifx_MCDS4P2P_TSUEMUCNT_Bits;

/** \brief Clock Prescaler Register */
typedef struct _Ifx_MCDS4P2P_TSUPRSCL_Bits
{
    __IO Ifx_Strict_32Bit RELOAD:32;       /**< \brief [31:0] Prescaler Reload Value - RELOAD (rw) */
} Ifx_MCDS4P2P_TSUPRSCL_Bits;

/** \brief Reference Clock Counter Register */
typedef struct _Ifx_MCDS4P2P_TSUREFCNT_Bits
{
    __I  Ifx_Strict_32Bit COUNT:32;        /**< \brief [31:0] Current Count Value - COUNT (rh) */
} Ifx_MCDS4P2P_TSUREFCNT_Bits;

/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_mcds4p2p_Registers_union
 * \{   */
/** \brief PRS access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_ACCEN_PRS_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_ACCEN_PRS;

/** \brief Read access enable register A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_ACCEN_RDA_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_ACCEN_RDA;

/** \brief Read access enable register B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_ACCEN_RDB_FPI_Bits B;     /**< \brief Bitfield access */
} Ifx_MCDS4P2P_ACCEN_RDB_FPI;

/** \brief VM access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_ACCEN_VM_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_ACCEN_VM;

/** \brief Write access enable register A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_ACCEN_WRA_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_ACCEN_WRA;

/** \brief Write access enable register B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_ACCEN_WRB_FPI_Bits B;     /**< \brief Bitfield access */
} Ifx_MCDS4P2P_ACCEN_WRB_FPI;

/** \brief Clock Control Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_CLC_Bits B;               /**< \brief Bitfield access */
} Ifx_MCDS4P2P_CLC;

/** \brief FGAC Lookup Table RAM register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_FGACLUT_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_FGACLUT;

/** \brief Trace Buffer Bottom Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_FIFOBOT_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_FIFOBOT;

/** \brief Trace Buffer Control Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_FIFOCTL_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_FIFOCTL;

/** \brief Trace Buffer Write Pointer   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_FIFONOW_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_FIFONOW;

/** \brief FIFO Overflow Counter Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_FIFOOVRCNT_Bits B;        /**< \brief Bitfield access */
} Ifx_MCDS4P2P_FIFOOVRCNT;

/** \brief Trace Buffer PRE/POST Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_FIFOPRE_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_FIFOPRE;

/** \brief Trace Buffer Top Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_FIFOTOP_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_FIFOTOP;

/** \brief Module Identification Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_ID_Bits B;                /**< \brief Bitfield access */
} Ifx_MCDS4P2P_ID;

/** \brief MCX ACT Action Definition Register 0   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MCXACT_Bits B;            /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MCXACT;

/** \brief MCX EVT Event Definition Register 0   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MCXEVT_Bits B;            /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MCXEVT;

/** \brief MCX CCL Counter Control Register 0   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MCX_CCL_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MCX_CCL;

/** \brief MCX CNT Current Count Register 0   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MCX_CNT_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MCX_CNT;

/** \brief MCX LMT Counter Limit Register 0   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MCX_LMT_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MCX_LMT;

/** \brief TMUX Trace Source Control   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MUX_Bits B;               /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MUX;

/** \brief Trace source selection lock   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MUXLOCK_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MUXLOCK;

/** \brief TCMUX and SRI Trace Source Control   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_MUXTCRC_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_MUXTCRC;

/** \brief OCDS Control and Status Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_OCS_Bits B;               /**< \brief Bitfield access */
} Ifx_MCDS4P2P_OCS;

/** \brief PAL timer   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_PALTIMER_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_PALTIMER;

/** \brief Resource Protection Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_PROT_Bits B;              /**< \brief Bitfield access */
} Ifx_MCDS4P2P_PROT;

/** \brief Reset Control Register A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_RST_CTRLA_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_RST_CTRLA;

/** \brief Reset Control Register B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_RST_CTRLB_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_RST_CTRLB;

/** \brief Reset Status Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_RST_STAT_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_RST_STAT;

/** \brief Trace Buffer Fill Level   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TBUFFLV_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TBUFFLV;

/** \brief Trace Buffer Read Pointer   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TBUFRDNOW_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TBUFRDNOW;

/** \brief TBUF watermark level   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TBUFWMLV_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TBUFWMLV;

/** \brief TCACBND   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCACBND_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCACBND;

/** \brief TCACMSK   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCACMSK_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCACMSK;

/** \brief TCACRNG   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCACRNG_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCACRNG;

/** \brief TCACT   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCACT_Bits B;             /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCACT;

/** \brief TCADRALIAS   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCADRALIAS_Bits B;        /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCADRALIAS;

/** \brief TCCFT   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCCFT_Bits B;             /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCCFT;

/** \brief TCCIP   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCCIP_Bits B;             /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCCIP;

/** \brief TCDCTS   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCDCTS_Bits B;            /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCDCTS;

/** \brief TCDCUBND   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCDCUBND_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCDCUBND;

/** \brief TCDCUMSK   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCDCUMSK_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCDCUMSK;

/** \brief TCDCURNG   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCDCURNG_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCDCURNG;

/** \brief TCDTUFLV   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCDTUFLV_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCDTUFLV;

/** \brief TCEABND   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCEABND_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCEABND;

/** \brief TCEARNG   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCEARNG_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCEARNG;

/** \brief TCEVT   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCEVT_Bits B;             /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCEVT;

/** \brief TCIPBND   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCIPBND_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCIPBND;

/** \brief TCIPRNG   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCIPRNG_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCIPRNG;

/** \brief TCPALBND   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCPALBND_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCPALBND;

/** \brief TCPALMAP   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCPALMAP_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCPALMAP;

/** \brief TCPALRNG   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCPALRNG_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCPALRNG;

/** \brief TCWDBND   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCWDBND_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCWDBND;

/** \brief TCWDHBND   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCWDHBND_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCWDHBND;

/** \brief TCWDHMSK   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCWDHMSK_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCWDHMSK;

/** \brief TCWDHRNG   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCWDHRNG_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCWDHRNG;

/** \brief TCWDMSK   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCWDMSK_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCWDMSK;

/** \brief TCWDRNG   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCWDRNG_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCWDRNG;

/** \brief TCWDSGN   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TCWDSGN_Bits B;           /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TCWDSGN;

/** \brief MCDS Clock Counter Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TSUEMUCNT_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TSUEMUCNT;

/** \brief Clock Prescaler Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TSUPRSCL_Bits B;          /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TSUPRSCL;

/** \brief Reference Clock Counter Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_MCDS4P2P_TSUREFCNT_Bits B;         /**< \brief Bitfield access */
} Ifx_MCDS4P2P_TSUREFCNT;

/** \}  */

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_ACCEN_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ACCEN object */
typedef volatile struct _Ifx_MCDS4P2P_ACCEN
{
       __IO Ifx_MCDS4P2P_ACCEN_WRA              WRA;                    /**< \brief 0, Write access enable register A*/
       __IO Ifx_MCDS4P2P_ACCEN_WRB_FPI          WRB;                    /**< \brief 4, Write access enable register B*/
       __IO Ifx_MCDS4P2P_ACCEN_RDA              RDA;                    /**< \brief 8, Read access enable register A*/
       __IO Ifx_MCDS4P2P_ACCEN_RDB_FPI          RDB;                    /**< \brief C, Read access enable register B*/
       __IO Ifx_MCDS4P2P_ACCEN_VM               VM;                     /**< \brief 10, VM access enable register*/
       __IO Ifx_MCDS4P2P_ACCEN_PRS              PRS;                    /**< \brief 14, PRS access enable register*/
       __I  Ifx_UReg_8Bit                       reserved_18[8];         /**< \brief 18, \internal Reserved */
} Ifx_MCDS4P2P_ACCEN;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_RST_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief RST object */
typedef volatile struct _Ifx_MCDS4P2P_RST
{
       __IO Ifx_MCDS4P2P_RST_CTRLA              CTRLA;                  /**< \brief 0, Reset Control Register A*/
       __IO Ifx_MCDS4P2P_RST_CTRLB              CTRLB;                  /**< \brief 4, Reset Control Register B*/
       __I  Ifx_MCDS4P2P_RST_STAT               STAT;                   /**< \brief 8, Reset Status Register*/
} Ifx_MCDS4P2P_RST;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_MCX_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief MCX object */
typedef volatile struct _Ifx_MCDS4P2P_MCX
{
       __IO Ifx_MCDS4P2P_MCX_CCL                CCL;                    /**< \brief 0, MCX CCL Counter Control Register 0*/
       __IO Ifx_MCDS4P2P_MCX_LMT                LMT;                    /**< \brief 4, MCX LMT Counter Limit Register 0*/
       __I  Ifx_MCDS4P2P_MCX_CNT                CNT;                    /**< \brief 8, MCX CNT Current Count Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_MCX;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCXDCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCXDCU object */
typedef volatile struct _Ifx_MCDS4P2P_TCXDCU
{
       __IO Ifx_MCDS4P2P_TCDCUBND               BND;                    /**< \brief 0, POB DCUBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCDCURNG               RNG;                    /**< \brief 4, POB DCURNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCDCUMSK               MSK;                    /**< \brief 8, POB DCUMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCXDCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCXPAL_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCXPAL object */
typedef volatile struct _Ifx_MCDS4P2P_TCXPAL
{
       __IO Ifx_MCDS4P2P_TCPALBND               BND;                    /**< \brief 0, POB PALBND Lookup Table Base Register 0*/
       __IO Ifx_MCDS4P2P_TCPALRNG               RNG;                    /**< \brief 4, POB PALRNG Lookup Table Range Register 0*/
       __IO Ifx_MCDS4P2P_TCPALMAP               MAP;                    /**< \brief 8, POB PALMAP Lookup Table Mapping Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCXPAL;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCXEA_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCXEA object */
typedef volatile struct _Ifx_MCDS4P2P_TCXEA
{
       __IO Ifx_MCDS4P2P_TCEABND                BND;                    /**< \brief 0, POB EABND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCEARNG                RNG;                    /**< \brief 4, POB EARNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCXEA;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCXWD_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCXWD object */
typedef volatile struct _Ifx_MCDS4P2P_TCXWD
{
       __IO Ifx_MCDS4P2P_TCWDBND                BND;                    /**< \brief 0, POB WDBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHBND               HBND;                   /**< \brief 4, POB WDHBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDRNG                RNG;                    /**< \brief 8, POB WDRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHRNG               HRNG;                   /**< \brief C, POB WDHRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDMSK                MSK;                    /**< \brief 10, POB WDMSK Comparator Mask Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHMSK               HMSK;                   /**< \brief 14, POB WDHMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_18[4];         /**< \brief 18, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWDSGN                SGN;                    /**< \brief 1C, POB WDSGN Comparator Sign Register 0*/
} Ifx_MCDS4P2P_TCXWD;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCXAC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCXAC object */
typedef volatile struct _Ifx_MCDS4P2P_TCXAC
{
       __IO Ifx_MCDS4P2P_TCACBND                BND;                    /**< \brief 0, POB ACBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCACRNG                RNG;                    /**< \brief 4, POB ACRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCACMSK                MSK;                    /**< \brief 8, POB ACMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCXAC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCXIP_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCXIP object */
typedef volatile struct _Ifx_MCDS4P2P_TCXIP
{
       __IO Ifx_MCDS4P2P_TCIPBND                BND;                    /**< \brief 0, POB IPBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCIPRNG                RNG;                    /**< \brief 4, POB IPRNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCXIP;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCYDCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCYDCU object */
typedef volatile struct _Ifx_MCDS4P2P_TCYDCU
{
       __IO Ifx_MCDS4P2P_TCDCUBND               BND;                    /**< \brief 0, POB DCUBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCDCURNG               RNG;                    /**< \brief 4, POB DCURNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCDCUMSK               MSK;                    /**< \brief 8, POB DCUMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCYDCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCYPAL_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCYPAL object */
typedef volatile struct _Ifx_MCDS4P2P_TCYPAL
{
       __IO Ifx_MCDS4P2P_TCPALBND               BND;                    /**< \brief 0, POB PALBND Lookup Table Base Register 0*/
       __IO Ifx_MCDS4P2P_TCPALRNG               RNG;                    /**< \brief 4, POB PALRNG Lookup Table Range Register 0*/
       __IO Ifx_MCDS4P2P_TCPALMAP               MAP;                    /**< \brief 8, POB PALMAP Lookup Table Mapping Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCYPAL;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCYEA_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCYEA object */
typedef volatile struct _Ifx_MCDS4P2P_TCYEA
{
       __IO Ifx_MCDS4P2P_TCEABND                BND;                    /**< \brief 0, POB EABND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCEARNG                RNG;                    /**< \brief 4, POB EARNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCYEA;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCYWD_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCYWD object */
typedef volatile struct _Ifx_MCDS4P2P_TCYWD
{
       __IO Ifx_MCDS4P2P_TCWDBND                BND;                    /**< \brief 0, POB WDBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHBND               HBND;                   /**< \brief 4, POB WDHBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDRNG                RNG;                    /**< \brief 8, POB WDRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHRNG               HRNG;                   /**< \brief C, POB WDHRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDMSK                MSK;                    /**< \brief 10, POB WDMSK Comparator Mask Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHMSK               HMSK;                   /**< \brief 14, POB WDHMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_18[4];         /**< \brief 18, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWDSGN                SGN;                    /**< \brief 1C, POB WDSGN Comparator Sign Register 0*/
} Ifx_MCDS4P2P_TCYWD;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCYAC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCYAC object */
typedef volatile struct _Ifx_MCDS4P2P_TCYAC
{
       __IO Ifx_MCDS4P2P_TCACBND                BND;                    /**< \brief 0, POB ACBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCACRNG                RNG;                    /**< \brief 4, POB ACRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCACMSK                MSK;                    /**< \brief 8, POB ACMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCYAC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCYIP_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCYIP object */
typedef volatile struct _Ifx_MCDS4P2P_TCYIP
{
       __IO Ifx_MCDS4P2P_TCIPBND                BND;                    /**< \brief 0, POB IPBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCIPRNG                RNG;                    /**< \brief 4, POB IPRNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCYIP;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCWDCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCWDCU object */
typedef volatile struct _Ifx_MCDS4P2P_TCWDCU
{
       __IO Ifx_MCDS4P2P_TCDCUBND               BND;                    /**< \brief 0, POB DCUBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCDCURNG               RNG;                    /**< \brief 4, POB DCURNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCDCUMSK               MSK;                    /**< \brief 8, POB DCUMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCWDCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCWPAL_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCWPAL object */
typedef volatile struct _Ifx_MCDS4P2P_TCWPAL
{
       __IO Ifx_MCDS4P2P_TCPALBND               BND;                    /**< \brief 0, POB PALBND Lookup Table Base Register 0*/
       __IO Ifx_MCDS4P2P_TCPALRNG               RNG;                    /**< \brief 4, POB PALRNG Lookup Table Range Register 0*/
       __IO Ifx_MCDS4P2P_TCPALMAP               MAP;                    /**< \brief 8, POB PALMAP Lookup Table Mapping Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCWPAL;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCWEA_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCWEA object */
typedef volatile struct _Ifx_MCDS4P2P_TCWEA
{
       __IO Ifx_MCDS4P2P_TCEABND                BND;                    /**< \brief 0, POB EABND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCEARNG                RNG;                    /**< \brief 4, POB EARNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCWEA;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCWWD_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCWWD object */
typedef volatile struct _Ifx_MCDS4P2P_TCWWD
{
       __IO Ifx_MCDS4P2P_TCWDBND                BND;                    /**< \brief 0, POB WDBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHBND               HBND;                   /**< \brief 4, POB WDHBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDRNG                RNG;                    /**< \brief 8, POB WDRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHRNG               HRNG;                   /**< \brief C, POB WDHRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDMSK                MSK;                    /**< \brief 10, POB WDMSK Comparator Mask Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHMSK               HMSK;                   /**< \brief 14, POB WDHMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_18[4];         /**< \brief 18, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWDSGN                SGN;                    /**< \brief 1C, POB WDSGN Comparator Sign Register 0*/
} Ifx_MCDS4P2P_TCWWD;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCWAC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCWAC object */
typedef volatile struct _Ifx_MCDS4P2P_TCWAC
{
       __IO Ifx_MCDS4P2P_TCACBND                BND;                    /**< \brief 0, POB ACBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCACRNG                RNG;                    /**< \brief 4, POB ACRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCACMSK                MSK;                    /**< \brief 8, POB ACMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCWAC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCWIP_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCWIP object */
typedef volatile struct _Ifx_MCDS4P2P_TCWIP
{
       __IO Ifx_MCDS4P2P_TCIPBND                BND;                    /**< \brief 0, POB IPBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCIPRNG                RNG;                    /**< \brief 4, POB IPRNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCWIP;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCZDCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCZDCU object */
typedef volatile struct _Ifx_MCDS4P2P_TCZDCU
{
       __IO Ifx_MCDS4P2P_TCDCUBND               BND;                    /**< \brief 0, POB DCUBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCDCURNG               RNG;                    /**< \brief 4, POB DCURNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCDCUMSK               MSK;                    /**< \brief 8, POB DCUMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCZDCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCZPAL_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCZPAL object */
typedef volatile struct _Ifx_MCDS4P2P_TCZPAL
{
       __IO Ifx_MCDS4P2P_TCPALBND               BND;                    /**< \brief 0, POB PALBND Lookup Table Base Register 0*/
       __IO Ifx_MCDS4P2P_TCPALRNG               RNG;                    /**< \brief 4, POB PALRNG Lookup Table Range Register 0*/
       __IO Ifx_MCDS4P2P_TCPALMAP               MAP;                    /**< \brief 8, POB PALMAP Lookup Table Mapping Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCZPAL;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCZEA_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCZEA object */
typedef volatile struct _Ifx_MCDS4P2P_TCZEA
{
       __IO Ifx_MCDS4P2P_TCEABND                BND;                    /**< \brief 0, POB EABND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCEARNG                RNG;                    /**< \brief 4, POB EARNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCZEA;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCZWD_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCZWD object */
typedef volatile struct _Ifx_MCDS4P2P_TCZWD
{
       __IO Ifx_MCDS4P2P_TCWDBND                BND;                    /**< \brief 0, POB WDBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHBND               HBND;                   /**< \brief 4, POB WDHBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCWDRNG                RNG;                    /**< \brief 8, POB WDRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHRNG               HRNG;                   /**< \brief C, POB WDHRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCWDMSK                MSK;                    /**< \brief 10, POB WDMSK Comparator Mask Register 0*/
       __IO Ifx_MCDS4P2P_TCWDHMSK               HMSK;                   /**< \brief 14, POB WDHMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_18[4];         /**< \brief 18, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWDSGN                SGN;                    /**< \brief 1C, POB WDSGN Comparator Sign Register 0*/
} Ifx_MCDS4P2P_TCZWD;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCZAC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCZAC object */
typedef volatile struct _Ifx_MCDS4P2P_TCZAC
{
       __IO Ifx_MCDS4P2P_TCACBND                BND;                    /**< \brief 0, POB ACBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCACRNG                RNG;                    /**< \brief 4, POB ACRNG Comparator Range Register 0*/
       __IO Ifx_MCDS4P2P_TCACMSK                MSK;                    /**< \brief 8, POB ACMSK Comparator Mask Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_MCDS4P2P_TCZAC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_TCZIP_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TCZIP object */
typedef volatile struct _Ifx_MCDS4P2P_TCZIP
{
       __IO Ifx_MCDS4P2P_TCIPBND                BND;                    /**< \brief 0, POB IPBND Comparator Bound Register 0*/
       __IO Ifx_MCDS4P2P_TCIPRNG                RNG;                    /**< \brief 4, POB IPRNG Comparator Range Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8[8];          /**< \brief 8, \internal Reserved */
} Ifx_MCDS4P2P_TCZIP;

/******************************************************************************/
/** \addtogroup IfxSfr_Mcds4p2p_Registers_struct
 * \{  */
/******************************************************************************/
/** \name Object L0
 * \{  */

/** \brief MCDS4P2P object */
typedef volatile struct _Ifx_MCDS4P2P
{
       __IO Ifx_MCDS4P2P_CLC                    CLC;                    /**< \brief 0, Clock Control Register*/
       __IO Ifx_MCDS4P2P_OCS                    OCS;                    /**< \brief 4, OCDS Control and Status Register*/
       __I  Ifx_MCDS4P2P_ID                     ID;                     /**< \brief 8, Module Identification Register*/
       __I  Ifx_UReg_8Bit                       reserved_C[8];          /**< \brief C, \internal Reserved */
       __IO Ifx_MCDS4P2P_MUX                    MUX;                    /**< \brief 14, TMUX Trace Source Control*/
       __I  Ifx_UReg_8Bit                       reserved_18[8];         /**< \brief 18, \internal Reserved */
       __IO Ifx_MCDS4P2P_MUXTCRC                MUXTCRC;                /**< \brief 20, TCMUX and SRI Trace Source Control*/
       __IO Ifx_MCDS4P2P_MUXLOCK                MUXLOCK;                /**< \brief 24, Trace source selection lock*/
       __I  Ifx_UReg_8Bit                       reserved_28[8];         /**< \brief 28, \internal Reserved */
       __IO Ifx_MCDS4P2P_PALTIMER               PALTIMER;               /**< \brief 30, PAL timer*/
       __I  Ifx_UReg_8Bit                       reserved_34[140];       /**< \brief 34, \internal Reserved */
       __IO Ifx_MCDS4P2P_ACCEN                  ACCEN;                  /**< \brief C0, */
       __IO Ifx_MCDS4P2P_PROT                   PROTSE;                 /**< \brief E0, PROT Register Safe Endinit*/
       __I  Ifx_UReg_8Bit                       reserved_E4[12];        /**< \brief E4, \internal Reserved */
       __IO Ifx_MCDS4P2P_RST                    RST;                    /**< \brief F0, Reset Status Register*/
       __I  Ifx_UReg_8Bit                       reserved_FC[260];       /**< \brief FC, \internal Reserved */
       __I  Ifx_MCDS4P2P_FIFONOW                FIFONOW;                /**< \brief 200, Trace Buffer Write Pointer*/
       __IO Ifx_MCDS4P2P_FIFOBOT                FIFOBOT;                /**< \brief 204, Trace Buffer Bottom Register*/
       __IO Ifx_MCDS4P2P_FIFOPRE                FIFOPRE;                /**< \brief 208, Trace Buffer PRE/POST Register*/
       __IO Ifx_MCDS4P2P_FIFOTOP                FIFOTOP;                /**< \brief 20C, Trace Buffer Top Register*/
       __IO Ifx_MCDS4P2P_FIFOCTL                FIFOCTL;                /**< \brief 210, Trace Buffer Control Register*/
       __I  Ifx_UReg_8Bit                       reserved_214[8];        /**< \brief 214, \internal Reserved */
       __IO Ifx_MCDS4P2P_FIFOOVRCNT             FIFOOVRCNT;             /**< \brief 21C, FIFO Overflow Counter Register*/
       __I  Ifx_UReg_8Bit                       reserved_220[4];        /**< \brief 220, \internal Reserved */
       __IO Ifx_MCDS4P2P_TBUFFLV                TBUFFLV;                /**< \brief 224, Trace Buffer Fill Level*/
       __IO Ifx_MCDS4P2P_TBUFWMLV               TBUFWMLV;               /**< \brief 228, TBUF watermark level*/
       __I  Ifx_MCDS4P2P_TBUFRDNOW              TBUFRDNOW;              /**< \brief 22C, Trace Buffer Read Pointer*/
       __I  Ifx_UReg_8Bit                       reserved_230[464];      /**< \brief 230, \internal Reserved */
       __I  Ifx_MCDS4P2P_TSUREFCNT              TSUREFCNT;              /**< \brief 400, Reference Clock Counter Register*/
       __IO Ifx_MCDS4P2P_TSUPRSCL               TSUPRSCL;               /**< \brief 404, Clock Prescaler Register*/
       __I  Ifx_MCDS4P2P_TSUEMUCNT              TSUEMUCNT;              /**< \brief 408, MCDS Clock Counter Register*/
       __I  Ifx_UReg_8Bit                       reserved_40C[1012];     /**< \brief 40C, \internal Reserved */
       __IO Ifx_MCDS4P2P_MCXEVT                 MCXEVT[24];             /**< \brief 800, MCX EVT Event Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_860[32];       /**< \brief 860, \internal Reserved */
       __IO Ifx_MCDS4P2P_MCXACT                 MCXACT[85];             /**< \brief 880, MCX ACT Action Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_9D4[44];       /**< \brief 9D4, \internal Reserved */
       __IO Ifx_MCDS4P2P_MCX                    MCX[32];                /**< \brief A00, */
       __I  Ifx_UReg_8Bit                       reserved_C00[5120];     /**< \brief C00, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCDCTS                 TCXDCSTS;               /**< \brief 2000, POB DCSTS Debug Status Register*/
       __I  Ifx_UReg_8Bit                       reserved_2004[4];       /**< \brief 2004, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCCIP                  TCXCIP;                 /**< \brief 2008, POB CIP Current Instruction Pointer*/
       __IO Ifx_MCDS4P2P_TCCFT                  TCXCFT;                 /**< \brief 200C, POB CFT Compact Function Trace Register*/
       __IO Ifx_MCDS4P2P_TCADRALIAS             TCXADRALIAS;            /**< \brief 2010, POB Address Alias Register*/
       __I  Ifx_UReg_8Bit                       reserved_2014[12];      /**< \brief 2014, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCXDCU                 TCXDCU[2];              /**< \brief 2020, */
       __I  Ifx_UReg_8Bit                       reserved_2040[464];     /**< \brief 2040, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCXPAL                 TCXPAL[8];              /**< \brief 2210, */
       __I  Ifx_UReg_8Bit                       reserved_2290[368];     /**< \brief 2290, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCXEA                  TCXEA[8];               /**< \brief 2400, */
       __IO Ifx_MCDS4P2P_TCXWD                  TCXWD[4];               /**< \brief 2480, POB WDSGN Comparator Sign Register 0*/
       __IO Ifx_MCDS4P2P_TCXAC                  TCXAC[4];               /**< \brief 2500, */
       __I  Ifx_UReg_8Bit                       reserved_2540[64];      /**< \brief 2540, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCDTUFLV               TCXDTUFLV;              /**< \brief 2580, POB DTU FIFOs Fill Level*/
       __I  Ifx_UReg_8Bit                       reserved_2584[636];     /**< \brief 2584, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCEVT                  TCXEVT[16];             /**< \brief 2800, POB EVT Event Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_2840[64];      /**< \brief 2840, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCACT                  TCXACT[24];             /**< \brief 2880, POB ACT Action Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_28E0[1824];    /**< \brief 28E0, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCXIP                  TCXIP[6];               /**< \brief 3000, */
       __I  Ifx_UReg_8Bit                       reserved_3060[4000];    /**< \brief 3060, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCDCTS                 TCYDCSTS;               /**< \brief 4000, POB DCSTS Debug Status Register*/
       __I  Ifx_UReg_8Bit                       reserved_4004[4];       /**< \brief 4004, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCCIP                  TCYCIP;                 /**< \brief 4008, POB CIP Current Instruction Pointer*/
       __IO Ifx_MCDS4P2P_TCCFT                  TCYCFT;                 /**< \brief 400C, POB CFT Compact Function Trace Register*/
       __IO Ifx_MCDS4P2P_TCADRALIAS             TCYADRALIAS;            /**< \brief 4010, POB Address Alias Register*/
       __I  Ifx_UReg_8Bit                       reserved_4014[12];      /**< \brief 4014, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCYDCU                 TCYDCU[2];              /**< \brief 4020, */
       __I  Ifx_UReg_8Bit                       reserved_4040[464];     /**< \brief 4040, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCYPAL                 TCYPAL[8];              /**< \brief 4210, */
       __I  Ifx_UReg_8Bit                       reserved_4290[368];     /**< \brief 4290, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCYEA                  TCYEA[8];               /**< \brief 4400, */
       __IO Ifx_MCDS4P2P_TCYWD                  TCYWD[4];               /**< \brief 4480, POB WDSGN Comparator Sign Register 0*/
       __IO Ifx_MCDS4P2P_TCYAC                  TCYAC[4];               /**< \brief 4500, */
       __I  Ifx_UReg_8Bit                       reserved_4540[64];      /**< \brief 4540, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCDTUFLV               TCYDTUFLV;              /**< \brief 4580, POB DTU FIFOs Fill Level*/
       __I  Ifx_UReg_8Bit                       reserved_4584[636];     /**< \brief 4584, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCEVT                  TCYEVT[16];             /**< \brief 4800, POB EVT Event Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_4840[64];      /**< \brief 4840, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCACT                  TCYACT[24];             /**< \brief 4880, POB ACT Action Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_48E0[1824];    /**< \brief 48E0, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCYIP                  TCYIP[6];               /**< \brief 5000, */
       __I  Ifx_UReg_8Bit                       reserved_5060[4000];    /**< \brief 5060, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCDCTS                 TCWDCSTS;               /**< \brief 6000, POB DCSTS Debug Status Register*/
       __I  Ifx_UReg_8Bit                       reserved_6004[4];       /**< \brief 6004, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCCIP                  TCWCIP;                 /**< \brief 6008, POB CIP Current Instruction Pointer*/
       __IO Ifx_MCDS4P2P_TCCFT                  TCWCFT;                 /**< \brief 600C, POB CFT Compact Function Trace Register*/
       __IO Ifx_MCDS4P2P_TCADRALIAS             TCWADRALIAS;            /**< \brief 6010, POB Address Alias Register*/
       __I  Ifx_UReg_8Bit                       reserved_6014[12];      /**< \brief 6014, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWDCU                 TCWDCU[2];              /**< \brief 6020, */
       __I  Ifx_UReg_8Bit                       reserved_6040[464];     /**< \brief 6040, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWPAL                 TCWPAL[8];              /**< \brief 6210, */
       __I  Ifx_UReg_8Bit                       reserved_6290[368];     /**< \brief 6290, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWEA                  TCWEA[8];               /**< \brief 6400, */
       __IO Ifx_MCDS4P2P_TCWWD                  TCWWD[4];               /**< \brief 6480, POB WDSGN Comparator Sign Register 0*/
       __IO Ifx_MCDS4P2P_TCWAC                  TCWAC[4];               /**< \brief 6500, */
       __I  Ifx_UReg_8Bit                       reserved_6540[64];      /**< \brief 6540, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCDTUFLV               TCWDTUFLV;              /**< \brief 6580, POB DTU FIFOs Fill Level*/
       __I  Ifx_UReg_8Bit                       reserved_6584[636];     /**< \brief 6584, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCEVT                  TCWEVT[16];             /**< \brief 6800, POB EVT Event Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_6840[64];      /**< \brief 6840, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCACT                  TCWACT[24];             /**< \brief 6880, POB ACT Action Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_68E0[1824];    /**< \brief 68E0, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCWIP                  TCWIP[6];               /**< \brief 7000, */
       __I  Ifx_UReg_8Bit                       reserved_7060[4000];    /**< \brief 7060, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCDCTS                 TCZDCSTS;               /**< \brief 8000, POB DCSTS Debug Status Register*/
       __I  Ifx_UReg_8Bit                       reserved_8004[4];       /**< \brief 8004, \internal Reserved */
       __I  Ifx_MCDS4P2P_TCCIP                  TCZCIP;                 /**< \brief 8008, POB CIP Current Instruction Pointer*/
       __IO Ifx_MCDS4P2P_TCCFT                  TCZCFT;                 /**< \brief 800C, POB CFT Compact Function Trace Register*/
       __IO Ifx_MCDS4P2P_TCADRALIAS             TCZADRALIAS;            /**< \brief 8010, POB Address Alias Register*/
       __I  Ifx_UReg_8Bit                       reserved_8014[12];      /**< \brief 8014, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCZDCU                 TCZDCU[2];              /**< \brief 8020, */
       __I  Ifx_UReg_8Bit                       reserved_8040[464];     /**< \brief 8040, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCZPAL                 TCZPAL[8];              /**< \brief 8210, */
       __I  Ifx_UReg_8Bit                       reserved_8290[368];     /**< \brief 8290, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCZEA                  TCZEA[8];               /**< \brief 8400, */
       __IO Ifx_MCDS4P2P_TCZWD                  TCZWD[4];               /**< \brief 8480, POB WDSGN Comparator Sign Register 0*/
       __IO Ifx_MCDS4P2P_TCZAC                  TCZAC[4];               /**< \brief 8500, */
       __I  Ifx_UReg_8Bit                       reserved_8540[64];      /**< \brief 8540, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCDTUFLV               TCZDTUFLV;              /**< \brief 8580, POB DTU FIFOs Fill Level*/
       __I  Ifx_UReg_8Bit                       reserved_8584[636];     /**< \brief 8584, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCEVT                  TCZEVT[16];             /**< \brief 8800, POB EVT Event Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_8840[64];      /**< \brief 8840, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCACT                  TCZACT[24];             /**< \brief 8880, POB ACT Action Definition Register 0*/
       __I  Ifx_UReg_8Bit                       reserved_88E0[1824];    /**< \brief 88E0, \internal Reserved */
       __IO Ifx_MCDS4P2P_TCZIP                  TCZIP[6];               /**< \brief 9000, */
       __I  Ifx_UReg_8Bit                       reserved_9060[12192];    /**< \brief 9060, \internal Reserved */
       __IO Ifx_MCDS4P2P_FGACLUT                FGACLUT[2048];          /**< \brief C000, FGAC Lookup Table RAM register*/
       __I  Ifx_UReg_8Bit                       reserved_E000[73727];    /**< \brief E000, \internal Reserved */
} Ifx_MCDS4P2P;

/** \}  */
/******************************************************************************/
/** \}  */


/******************************************************************************/

/******************************************************************************/

#endif /* IFXMCDS4P2P_REGDEF_H */
