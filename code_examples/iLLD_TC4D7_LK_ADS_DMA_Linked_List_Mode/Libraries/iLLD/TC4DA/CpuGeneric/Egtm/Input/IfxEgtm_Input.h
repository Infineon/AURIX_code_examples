/**
 * \file IfxEgtm_Input.h
 * \brief EGTM INPUT details
 * \ingroup IfxLld_Egtm
 *
 * \version iLLD-TC4-v2.1.1
 * \copyright Copyright (c) 2023 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 *
 * \defgroup IfxLld_Egtm_Input_Usage How to use the Input Interface layer?
 * \ingroup IfxLld_Egtm_Input
 * \section IfxLld_Egtm_Input_Overview Overview
 *
 * This layers is used to select a peripheral signal as an input to TIM or DTM submodule.\n
 * E.g Adc to Tim, Adc to DtmAux, Canxl to Tim, etc.
 *
 * \defgroup IfxLld_Egtm_Input Input Interface
 * \ingroup IfxLld_Egtm
 * \defgroup IfxLld_Egtm_Input_TIM_connections TIM connection functions
 * \ingroup IfxLld_Egtm_Input
 * \defgroup IfxLld_Egtm_Input_DTMAUX_connections DTMAUX connection functions
 * \ingroup IfxLld_Egtm_Input
 */

#ifndef IFXEGTM_INPUT_H
#define IFXEGTM_INPUT_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "_Impl/IfxEgtm_cfg.h"
#if !defined(IFX_ILLD_PPU_USAGE)
#include "Cpu/Std/IfxCpu_Intrinsics.h"
#endif
#if defined(IFX_ILLD_PPU_USAGE)
#include "Cpu/Std/IfxPpu_Intrinsics.h"
#endif
#include "IfxEgtm_bf.h"

/** \addtogroup IfxLld_Egtm_Input_TIM_connections
 * \{ */

/******************************************************************************/
/*-------------------------Global Function Prototypes-------------------------*/
/******************************************************************************/

/** \brief Select ADC signal as input to TIM submodule.
 * \param input Input ADC signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectAdcTimInput(IfxEgtm_AdcTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \brief Select CAN signal as input to TIM submodule.
 * \param input Input CAN signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectCanTimInput(IfxEgtm_CanTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \brief Select CAN-XL signal as input to TIM submodule.
 * \param input Input CAN-XL signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectCanxlTimInput(IfxEgtm_CanxlTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \brief Select GETH signal as input to TIM submodule.
 * \param input Input GETH signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectGethTimInput(IfxEgtm_GethTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \brief Select LETH signal as input to TIM submodule.
 * \param input Input LETH signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectLethTimInput(IfxEgtm_LethTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \brief Select ERAY signal as input to TIM submodule.
 * \param input Input ERAY signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectErayTimInput(IfxEgtm_ErayTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \brief Select PMS signal as input to TIM submodule.
 * \param input Input PMS signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectPmsTimInput(IfxEgtm_PmsTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \brief Select SCU signal as input to TIM submodule.
 * \param input Input SCU signal
 * \param cluster TIM cluster number
 * \param channel TIM channel number
 * \return TRUE on success. FALSE: Input cannot be connected to specified TIM channel in cluster
 */
IFX_EXTERN boolean IfxEgtm_Input_selectScuTimInput(IfxEgtm_ScuTimInput input, IfxEgtm_Tim cluster, IfxEgtm_Tim_Ch channel);

/** \} */

/** \addtogroup IfxLld_Egtm_Input_DTMAUX_connections
 * \{ */

/******************************************************************************/
/*-------------------------Global Function Prototypes-------------------------*/
/******************************************************************************/

/** \brief Select ADC signal to be used as DTM_AUX_IN0/1
 * \param input Input ADC signal
 * \param cdtm CDTM cluster
 * \param dtm DTM index
 * \param dtmAuxInput Connect input signal to DTM_AUX_IN0 or DTM_AUX_IN1
 * \return TRUE on success. FALSE: Input cannot be connected to specified CDTM/DTM
 */
IFX_EXTERN boolean IfxEgtm_Input_selectAdcDtmAuxInput(IfxEgtm_AdcDtmAuxInput input, IfxEgtm_Cdtm cdtm, IfxEgtm_Dtm dtm, IfxEgtm_DtmAuxInput dtmAuxInput);

/** \} */

#endif /* IFXEGTM_INPUT_H */
