/**********************************************************************************************************************
 * \file scr_t01_sdcc.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef SCR_T01_SDCC_H_
#define SCR_T01_SDCC_H_ 1

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "scr_generic_defs.h"

/*********************************************************************************************************************/
/*-------------------------------------------Timer 0 and Timer 1 Registers-------------------------------------------*/
/*********************************************************************************************************************/
__sfr __at(ADDR_SCR_T01_TL0)                SCR_T01_TL0;
__sfr __at(ADDR_SCR_T01_TL1)                SCR_T01_TL1;
__sfr __at(ADDR_SCR_T01_TH0)                SCR_T01_TH0;
__sfr __at(ADDR_SCR_T01_TH1)                SCR_T01_TH1;
__sfr __at(ADDR_SCR_T01_TCON)               SCR_T01_TCON;
__sfr __at(ADDR_SCR_T01_TMOD)               SCR_T01_TMOD;

/*********************************************************************************************************************/
/*--------------------------------------------------Data Structures--------------------------------------------------*/
/*********************************************************************************************************************/

/** \addtogroup Scr_T01_Registers_Bitfields
 * \{  */

/** \brief Timer 0 Low Byte */
typedef struct
{
    Scr_UReg_8Bit VAL;              /**< \brief [7:0] Timer 0 Low Byte Value (rwh) */
} Scr_T01_TL0_Bits;

/** \brief Timer 1 Low Byte */
typedef struct
{
    Scr_UReg_8Bit VAL;              /**< \brief [7:0] Timer 1 Low Byte Value (rwh) */
} Scr_T01_TL1_Bits;

/** \brief Timer 0 High Byte */
typedef struct
{
    Scr_UReg_8Bit VAL;              /**< \brief [7:0] Timer 0 High Byte Value (rwh) */
} Scr_T01_TH0_Bits;

/** \brief Timer 1 High Byte */
typedef struct
{
    Scr_UReg_8Bit VAL;              /**< \brief [7:0] Timer 1 High Byte Value (rwh) */
} Scr_T01_TH1_Bits;

/** \brief Timer 0/1 Control Register */
typedef struct
{
    Scr_UReg_8Bit IT0:1;            /**< \brief [0:0] External Interrupt 0 Level/Edge Trigger Control (rw) */
    Scr_UReg_8Bit IE0:1;            /**< \brief [1:1] External Interrupt 0 Flag (rwh) */
    Scr_UReg_8Bit IT1:1;            /**< \brief [2:2] External Interrupt 1 Level/Edge Trigger Control (rw) */
    Scr_UReg_8Bit IE1:1;            /**< \brief [3:3] External Interrupt 1 Flag (rwh) */
    Scr_UReg_8Bit TR0:1;            /**< \brief [4:4] Timer 0 Run Control (rw) */
    Scr_UReg_8Bit TF0:1;            /**< \brief [5:5] Timer 0 Overflow Flag (rwh) */
    Scr_UReg_8Bit TR1:1;            /**< \brief [6:6] Timer 1 Run Control (rw) */
    Scr_UReg_8Bit TF1:1;            /**< \brief [7:7] Timer 1 Overflow Flag (rwh) */
} Scr_T01_TCON_Bits;

/** \brief Timer Mode Register */
typedef struct
{
    Scr_UReg_8Bit T0M:2;            /**< \brief [1:0] Timer 0 Mode Select Bits (rw) */
    Scr_UReg_8Bit T0S:1;            /**< \brief [2:2] Timer 0 Input Selector (rw) */
    Scr_UReg_8Bit GATE0:1;          /**< \brief [3:3] Timer 0 Gate Control (rw) */
    Scr_UReg_8Bit T1M:2;            /**< \brief [5:4] Timer 1 Mode Select Bits (rw) */
    Scr_UReg_8Bit T1S:1;            /**< \brief [6:6] Timer 1 Input Selector (rw) */
    Scr_UReg_8Bit GATE1:1;          /**< \brief [7:7] Timer 1 Gate Control (rw) */
} Scr_T01_TMOD_Bits;

/** \}  */

/** \addtogroup Scr_T01_Registers_union
 * \{   */

/** \brief Timer 0 Low Byte */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_T01_TL0_Bits B;             /**< \brief Bitfield access */
} Scr_T01_TL0;

/** \brief Timer 1 Low Byte */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_T01_TL1_Bits B;             /**< \brief Bitfield access */
} Scr_T01_TL1;

/** \brief Timer 0 High Byte */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_T01_TH0_Bits B;             /**< \brief Bitfield access */
} Scr_T01_TH0;

/** \brief Timer 1 High Byte */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_T01_TH1_Bits B;             /**< \brief Bitfield access */
} Scr_T01_TH1;

/** \brief Timer 0/1 Control Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_T01_TCON_Bits B;            /**< \brief Bitfield access */
} Scr_T01_TCON;

/** \brief Timer Mode Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_T01_TMOD_Bits B;            /**< \brief Bitfield access */
} Scr_T01_TMOD;

/** \}  */

/*********************************************************************************************************************/
/*-------------------------------------------------Inline Functions--------------------------------------------------*/
/*********************************************************************************************************************/

#endif /* SCR_T01_SDCC_H_ */
