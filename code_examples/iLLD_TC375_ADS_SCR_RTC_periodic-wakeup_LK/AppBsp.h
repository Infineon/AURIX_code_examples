/**********************************************************************************************************************
 * \file AppBsp.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef APP_BSP_H_
#define APP_BSP_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Platform_Types.h"
#include "AppBsp_Conf.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#if USE_KIT_A2G_TC375_LITE
    #define TICKS_FOR_1_MS          (100000UL)
    #define STATUSLED_TCACTIVITY    (AppBspStatusLed_1) /* LED showing TriCore(TM) activity */
#endif /* USE_KIT_A2G_TC375_LITE */

#if USE_KIT_A2G_TC397_5V_TFT
    #define TICKS_FOR_1_MS          (100000UL)
    #define STATUSLED_TCACTIVITY    (AppBspStatusLed_4) /* LED showing TriCore(TM) activity */
#endif /* USE_KIT_A2G_TC397_5V_TFT */

#if USE_TC3X7_TH_V2
    #define TICKS_FOR_1_MS          (100000UL)
    #define STATUSLED_TCACTIVITY    (AppBspStatusLed_4) /* LED showing TriCore(TM) activity */
#endif /* USE_TC3X7_TH_V2 */

#if USE_TC4X7_STD_V1
    #define TICKS_FOR_1_MS          (100000UL)
    #define STATUSLED_TCACTIVITY    (AppBspStatusLed_4) /* LED showing TriCore(TM) activity */
#endif /* USE_TC4X7_STD_V1 */

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*--------------------------------------------------Data Structures--------------------------------------------------*/
/*********************************************************************************************************************/
typedef enum
{
    AppBspStatusLed_1,  /* LED 1 / D107 / D306 / D406 / D1 */
    AppBspStatusLed_2,  /* LED 2 / D108 / D307 / D407 / D2 */
    AppBspStatusLed_3,  /* LED 3 / D109 / D308 / D408 */
    AppBspStatusLed_4   /* LED 4 / D110 / D309 / D409 */
} AppBspStatusLed;

typedef enum
{
    AppBspScrPin_P0_0,  /* SCR Port 0, Pin 0 */
    AppBspScrPin_P0_1,  /* SCR Port 0, Pin 1 */
    AppBspScrPin_P0_2,  /* SCR Port 0, Pin 2 */
    AppBspScrPin_P0_3,  /* SCR Port 0, Pin 3 */
    AppBspScrPin_P0_4,  /* SCR Port 0, Pin 4 */
    AppBspScrPin_P0_5,  /* SCR Port 0, Pin 5 */
    AppBspScrPin_P0_6,  /* SCR Port 0, Pin 6 */
    AppBspScrPin_P0_7,  /* SCR Port 0, Pin 7 */

    AppBspScrPin_P1_0,  /* SCR Port 1, Pin 0 */
    AppBspScrPin_P1_1,  /* SCR Port 1, Pin 1 */
    AppBspScrPin_P1_2,  /* SCR Port 1, Pin 2 */
    AppBspScrPin_P1_3,  /* SCR Port 1, Pin 3 */
    AppBspScrPin_P1_4,  /* SCR Port 1, Pin 4 */
    AppBspScrPin_P1_5,  /* SCR Port 1, Pin 5 */
    AppBspScrPin_P1_6,  /* SCR Port 1, Pin 6 */
    AppBspScrPin_P1_7,  /* SCR Port 1, Pin 7 */

#if USE_TC4X7_STD_V1
    AppBspScrPin_P2_0,  /* SCR Port 2, Pin 0 , only TC4 */
    AppBspScrPin_P2_1,  /* SCR Port 2, Pin 1 , only TC4 */
    AppBspScrPin_P2_2,  /* SCR Port 2, Pin 2 , only TC4 */
    AppBspScrPin_P2_3,  /* SCR Port 2, Pin 3 , only TC4 */
    AppBspScrPin_P2_4,  /* SCR Port 2, Pin 4 , only TC4 */

    AppBspScrPin_P3_0,  /* SCR Port 3, Pin 0 , only TC4 */
    AppBspScrPin_P3_1,  /* SCR Port 3, Pin 1 , only TC4 */
    AppBspScrPin_P3_2,  /* SCR Port 3, Pin 2 , only TC4 */
    AppBspScrPin_P3_3,  /* SCR Port 3, Pin 3 , only TC4 */
    AppBspScrPin_P3_4,  /* SCR Port 3, Pin 4 , only TC4 */
#endif /* USE_TC4X7_STD_V1 */
} AppBspScrPin;

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void configureAppBspScrPorts(void);
void configureAppBspStatusLeds(void);
void activateAppBspStateLed(const AppBspStatusLed ledId);
void deactivateAppBspStateLed(const AppBspStatusLed ledId);
void toggleAppBspStateLed(const AppBspStatusLed ledId);
boolean getPinState(AppBspScrPin pin);
void setPinState(AppBspScrPin pin, boolean high);

void showTcActivity(void);
boolean getButtonState(void);
void waitForButtonPress(void);
boolean getPinBState(void);

#endif /* APP_BSP_H_ */
