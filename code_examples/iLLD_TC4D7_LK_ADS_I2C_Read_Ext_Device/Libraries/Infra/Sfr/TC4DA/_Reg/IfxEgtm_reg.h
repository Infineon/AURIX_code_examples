/**
 * \file IfxEgtm_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_EGTM/V0.2.1.1.2
 * Specification: latest @ 2024-03-18 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Egtm_Registers_Cfg Egtm address
 * \ingroup IfxSfr_Egtm_Registers
 * 
 * \defgroup IfxSfr_Egtm_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Egtm_Registers_Cfg
 *
 * \defgroup IfxSfr_Egtm_Registers_Cfg_Egtm 2-EGTM
 * \ingroup IfxSfr_Egtm_Registers_Cfg
 *
 *
 */
#ifndef IFXEGTM_REG_H
#define IFXEGTM_REG_H 1
/******************************************************************************/
#include "IfxEgtm_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Egtm_Registers_Cfg_BaseAddress
 * \{  */

/** \brief EGTM object */
#define MODULE_EGTM /*lint --e(923, 9078)*/ ((*(Ifx_EGTM*)0xF9080000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Egtm_Registers_Cfg_Egtm
 * \{  */
/** \brief 0, eGTM version control register */
#define EGTM_CLS0_ARCH_REV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_REV*)0xF9080000u)

/** \brief 4, eGTM global reset register */
#define EGTM_CLS0_ARCH_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_RST*)0xF9080004u)

/** \brief 8, eGTM global control register */
#define EGTM_CLS0_ARCH_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_CTRL*)0xF9080008u)

/** \brief C, eGTM configuration register */
#define EGTM_CLS0_ARCH_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_CFG*)0xF908000Cu)

/** \brief 10, eGTM AEI timeout exception address register */
#define EGTM_CLS0_ARCH_AEI_ADDR_XPT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_AEI_ADDR_XPT*)0xF9080010u)

/** \brief 14, eGTM AEI non-zero status register */
#define EGTM_CLS0_ARCH_AEI_STA_XPT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_AEI_STA_XPT*)0xF9080014u)

/** \brief 18, eGTM Interrupt notification register */
#define EGTM_CLS0_ARCH_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_IRQ_NOTIFY*)0xF9080018u)

/** \brief 1C, eGTM interrupt enable register */
#define EGTM_CLS0_ARCH_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_IRQ_EN*)0xF908001Cu)

/** \brief 20, eGTM error interrupt enable register */
#define EGTM_CLS0_ARCH_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_EIRQ_EN*)0xF9080020u)

/** \brief 24, eGTM Software interrupt generation register */
#define EGTM_CLS0_ARCH_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_IRQ_FORCINT*)0xF9080024u)

/** \brief 28, eGTM toplevel interrupts mode selection */
#define EGTM_CLS0_ARCH_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_IRQ_MODE*)0xF9080028u)

/** \brief 2C, eGTM Cluster Clock Configuration */
#define EGTM_CLS0_ARCH_CLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ARCH_CLK_CFG*)0xF908002Cu)

/** \brief 40, eGTM AEI bridge mode register */
#define EGTM_CLS0_AEI_BRIDGE_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_AEI_BRIDGE_MODE*)0xF9080040u)

/** \brief 44, eGTM AEI bridge pointer 1 register */
#define EGTM_CLS0_AEI_BRIDGE_PTR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_AEI_BRIDGE_PTR1*)0xF9080044u)

/** \brief 48, eGTM AEI bridge pointer 2 register */
#define EGTM_CLS0_AEI_BRIDGE_PTR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_AEI_BRIDGE_PTR2*)0xF9080048u)

/** \brief 80, CMU clock enable */
#define EGTM_CLS0_CMU_CLK_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLK_EN*)0xF9080080u)

/** \brief 84, The numerator for CMU global clock resolution generator */
#define EGTM_CLS0_CMU_GCLK_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_GCLK_NUM*)0xF9080084u)

/** \brief 88, The denominator for CMU global clock resolution generator */
#define EGTM_CLS0_CMU_GCLK_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_GCLK_DEN*)0xF9080088u)

/** \brief 8C, CMU control for clock resolution generator [x] */
#define EGTM_CLS0_CMU_CLK0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLKX_CTRL*)0xF908008Cu)

/** \brief 90, CMU control for clock resolution generator [x] */
#define EGTM_CLS0_CMU_CLK1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLKX_CTRL*)0xF9080090u)

/** \brief 94, CMU control for clock resolution generator [x] */
#define EGTM_CLS0_CMU_CLK2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLKX_CTRL*)0xF9080094u)

/** \brief 98, CMU control for clock resolution generator [x] */
#define EGTM_CLS0_CMU_CLK3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLKX_CTRL*)0xF9080098u)

/** \brief 9C, CMU control for clock resolution generator [x] */
#define EGTM_CLS0_CMU_CLK4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLKX_CTRL*)0xF908009Cu)

/** \brief A0, CMU control for clock resolution generator [x] */
#define EGTM_CLS0_CMU_CLK5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLKX_CTRL*)0xF90800A0u)

/** \brief A4, CMU control for clock resolution generator 6 */
#define EGTM_CLS0_CMU_CLK_6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLK_6_CTRL*)0xF90800A4u)

/** \brief A8, CMU control for clock resolution generator 7 */
#define EGTM_CLS0_CMU_CLK_7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLK_7_CTRL*)0xF90800A8u)

/** \brief AC, The numerator for the external clock resolution generator [z] */
#define EGTM_CLS0_CMU_ECLK0_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_ECLK_NUM*)0xF90800ACu)

/** \brief B0, The denominator for the external clock resolution generator [z] */
#define EGTM_CLS0_CMU_ECLK0_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_ECLK_DEN*)0xF90800B0u)

/** \brief B4, The numerator for the external clock resolution generator [z] */
#define EGTM_CLS0_CMU_ECLK1_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_ECLK_NUM*)0xF90800B4u)

/** \brief B8, The denominator for the external clock resolution generator [z] */
#define EGTM_CLS0_CMU_ECLK1_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_ECLK_DEN*)0xF90800B8u)

/** \brief BC, The numerator for the external clock resolution generator [z] */
#define EGTM_CLS0_CMU_ECLK2_NUM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_ECLK_NUM*)0xF90800BCu)

/** \brief C0, The denominator for the external clock resolution generator [z] */
#define EGTM_CLS0_CMU_ECLK2_DEN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_ECLK_DEN*)0xF90800C0u)

/** \brief C4, CMU control for selection of FCR subblock input */
#define EGTM_CLS0_CMU_FXCLK_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_FXCLK_CTRL*)0xF90800C4u)

/** \brief CC, CMU control for clock resolution generator */
#define EGTM_CLS0_CMU_CLK_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMU_CLK_CTRL*)0xF90800CCu)

/** \brief 100, TBU global channel enable */
#define EGTM_CLS0_TBU_CHEN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TBU_CHEN*)0xF9080100u)

/** \brief 104, TBU channel 0 control */
#define EGTM_CLS0_TBU_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TBU_CH0_CTRL*)0xF9080104u)

/** \brief 108, TBU channel 0 base */
#define EGTM_CLS0_TBU_CH0_BASE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TBU_CH0_BASE*)0xF9080108u)

/** \brief 10C, TBU channel 1 control */
#define EGTM_CLS0_TBU_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TBU_CH1_CTRL*)0xF908010Cu)

/** \brief 110, TBU channel [x] base */
#define EGTM_CLS0_TBU_CH1_BASE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TBU_CH_BASE*)0xF9080110u)

/** \brief 114, TBU channel 2 control */
#define EGTM_CLS0_TBU_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TBU_CH2_CTRL*)0xF9080114u)

/** \brief 118, TBU channel [x] base */
#define EGTM_CLS0_TBU_CH2_BASE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TBU_CH_BASE*)0xF9080118u)

/** \brief 400, ICM_IRQG_0 */
#define EGTM_CLS0_ICM_IRQG_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_0*)0xF9080400u)

/** \brief 408, ICM Interrupt group register covering TIM0, TIM1, TIM2, TIM3 */
#define EGTM_CLS0_ICM_IRQG_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_2*)0xF9080408u)

/** \brief 430, ICM Interrupt group register for module error interrupt information */
#define EGTM_CLS0_ICM_IRQG_MEI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_MEI*)0xF9080430u)

/** \brief 438, ICM Interrupt group register 1 for channel error interrupt information */
#define EGTM_CLS0_ICM_IRQG_CEI1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_CEI1*)0xF9080438u)

/** \brief 4B4, ICM Interrupt group SPE for module Error Interrupt information */
#define EGTM_CLS0_ICM_IRQG_SPE_CEI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_SPE_CEI*)0xF90804B4u)

/** \brief 510, ICM_IRQG_CLS_[g]_MEI */
#define EGTM_CLS0_ICM_IRQG_CLS0_MEI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_CLS_MEI*)0xF9080510u)

/** \brief 570, ICM Interrupt group SPE for module Interrupt information */
#define EGTM_CLS0_ICM_IRQG_SPE_CI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_SPE_CI*)0xF9080570u)

/** \brief 590, ICM_IRQG_ATOM_[g]_CI */
#define EGTM_CLS0_ICM_IRQG_ATOM0_CI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_ATOM_CI*)0xF9080590u)

/** \brief 5A0, ICM_IRQG_TOM_[g]_CI */
#define EGTM_CLS0_ICM_IRQG_TOM0_CI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_TOM_CI*)0xF90805A0u)

/** \brief 5A4, ICM_IRQG_TOM_[g]_CI */
#define EGTM_CLS0_ICM_IRQG_TOM1_CI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ICM_IRQG_TOM_CI*)0xF90805A4u)

/** \brief 680, MON status register */
#define EGTM_CLS0_MON_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_MON_STATUS*)0xF9080680u)

/** \brief 6C0, CMP comparator enable register */
#define EGTM_CLS0_CMP_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_EN*)0xF90806C0u)

/** \brief 6C4, CMP event notification register */
#define EGTM_CLS0_CMP_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_NOTIFY*)0xF90806C4u)

/** \brief 6C8, CMP interrupt enable register */
#define EGTM_CLS0_CMP_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_EN*)0xF90806C8u)

/** \brief 6CC, CMP interrupt force register */
#define EGTM_CLS0_CMP_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_FORCINT*)0xF90806CCu)

/** \brief 6D0, CMP interrupt mode configuration register */
#define EGTM_CLS0_CMP_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_MODE*)0xF90806D0u)

/** \brief 6D4, CMP error interrupt enable register */
#define EGTM_CLS0_CMP_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_EIRQ_EN*)0xF90806D4u)

/** \brief 800, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH0_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080800u)

/** \brief 804, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH0_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080804u)

/** \brief 808, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH0_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080808u)

/** \brief 80C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH0_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF908080Cu)

/** \brief 810, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH0_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080810u)

/** \brief 814, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH0_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080814u)

/** \brief 818, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH0_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080818u)

/** \brief 81C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH0_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF908081Cu)

/** \brief 820, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH0_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF9080820u)

/** \brief 824, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF9080824u)

/** \brief 828, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH0_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF9080828u)

/** \brief 82C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF908082Cu)

/** \brief 830, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF9080830u)

/** \brief 834, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF9080834u)

/** \brief 838, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF9080838u)

/** \brief 83C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH0_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF908083Cu)

/** \brief 880, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH1_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080880u)

/** \brief 884, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH1_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080884u)

/** \brief 888, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH1_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080888u)

/** \brief 88C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH1_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF908088Cu)

/** \brief 890, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH1_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080890u)

/** \brief 894, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH1_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080894u)

/** \brief 898, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH1_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080898u)

/** \brief 89C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH1_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF908089Cu)

/** \brief 8A0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH1_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90808A0u)

/** \brief 8A4, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90808A4u)

/** \brief 8A8, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH1_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90808A8u)

/** \brief 8AC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90808ACu)

/** \brief 8B0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90808B0u)

/** \brief 8B4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90808B4u)

/** \brief 8B8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90808B8u)

/** \brief 8BC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH1_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90808BCu)

/** \brief 900, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH2_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080900u)

/** \brief 904, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH2_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080904u)

/** \brief 908, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH2_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080908u)

/** \brief 90C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH2_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF908090Cu)

/** \brief 910, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH2_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080910u)

/** \brief 914, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH2_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080914u)

/** \brief 918, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH2_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080918u)

/** \brief 91C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH2_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF908091Cu)

/** \brief 920, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH2_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF9080920u)

/** \brief 924, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF9080924u)

/** \brief 928, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH2_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF9080928u)

/** \brief 92C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF908092Cu)

/** \brief 930, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF9080930u)

/** \brief 934, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF9080934u)

/** \brief 938, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF9080938u)

/** \brief 93C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH2_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF908093Cu)

/** \brief 980, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH3_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080980u)

/** \brief 984, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH3_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080984u)

/** \brief 988, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH3_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080988u)

/** \brief 98C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH3_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF908098Cu)

/** \brief 990, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH3_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080990u)

/** \brief 994, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH3_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080994u)

/** \brief 998, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH3_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080998u)

/** \brief 99C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH3_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF908099Cu)

/** \brief 9A0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH3_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90809A0u)

/** \brief 9A4, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90809A4u)

/** \brief 9A8, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH3_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90809A8u)

/** \brief 9AC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90809ACu)

/** \brief 9B0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90809B0u)

/** \brief 9B4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90809B4u)

/** \brief 9B8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90809B8u)

/** \brief 9BC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH3_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90809BCu)

/** \brief A00, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH4_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080A00u)

/** \brief A04, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH4_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080A04u)

/** \brief A08, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH4_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080A08u)

/** \brief A0C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH4_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF9080A0Cu)

/** \brief A10, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH4_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080A10u)

/** \brief A14, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH4_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080A14u)

/** \brief A18, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH4_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080A18u)

/** \brief A1C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH4_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF9080A1Cu)

/** \brief A20, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH4_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF9080A20u)

/** \brief A24, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF9080A24u)

/** \brief A28, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH4_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF9080A28u)

/** \brief A2C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF9080A2Cu)

/** \brief A30, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF9080A30u)

/** \brief A34, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF9080A34u)

/** \brief A38, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF9080A38u)

/** \brief A3C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH4_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF9080A3Cu)

/** \brief A80, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH5_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080A80u)

/** \brief A84, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH5_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080A84u)

/** \brief A88, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH5_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080A88u)

/** \brief A8C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH5_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF9080A8Cu)

/** \brief A90, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH5_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080A90u)

/** \brief A94, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH5_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080A94u)

/** \brief A98, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH5_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080A98u)

/** \brief A9C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH5_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF9080A9Cu)

/** \brief AA0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH5_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF9080AA0u)

/** \brief AA4, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF9080AA4u)

/** \brief AA8, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH5_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF9080AA8u)

/** \brief AAC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF9080AACu)

/** \brief AB0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF9080AB0u)

/** \brief AB4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF9080AB4u)

/** \brief AB8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF9080AB8u)

/** \brief ABC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH5_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF9080ABCu)

/** \brief B00, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH6_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080B00u)

/** \brief B04, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH6_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080B04u)

/** \brief B08, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH6_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080B08u)

/** \brief B0C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH6_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF9080B0Cu)

/** \brief B10, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH6_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080B10u)

/** \brief B14, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH6_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080B14u)

/** \brief B18, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH6_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080B18u)

/** \brief B1C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH6_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF9080B1Cu)

/** \brief B20, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH6_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF9080B20u)

/** \brief B24, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF9080B24u)

/** \brief B28, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH6_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF9080B28u)

/** \brief B2C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF9080B2Cu)

/** \brief B30, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF9080B30u)

/** \brief B34, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF9080B34u)

/** \brief B38, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF9080B38u)

/** \brief B3C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH6_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF9080B3Cu)

/** \brief B80, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS0_TIM_CH7_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF9080B80u)

/** \brief B84, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS0_TIM_CH7_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF9080B84u)

/** \brief B88, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS0_TIM_CH7_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF9080B88u)

/** \brief B8C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS0_TIM_CH7_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF9080B8Cu)

/** \brief B90, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS0_TIM_CH7_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF9080B90u)

/** \brief B94, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS0_TIM_CH7_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF9080B94u)

/** \brief B98, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS0_TIM_CH7_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF9080B98u)

/** \brief B9C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS0_TIM_CH7_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF9080B9Cu)

/** \brief BA0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS0_TIM_CH7_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF9080BA0u)

/** \brief BA4, TIM[i] channel [x] control register */
#define EGTM_CLS0_TIM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF9080BA4u)

/** \brief BA8, TIM[i] channel [x] extended control register */
#define EGTM_CLS0_TIM_CH7_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF9080BA8u)

/** \brief BAC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TIM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF9080BACu)

/** \brief BB0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TIM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF9080BB0u)

/** \brief BB4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TIM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF9080BB4u)

/** \brief BB8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_TIM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF9080BB8u)

/** \brief BBC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS0_TIM_CH7_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF9080BBCu)

/** \brief C00, TIM[i] input value observation register */
#define EGTM_CLS0_TIM_INP_VAL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_INP_VAL*)0xF9080C00u)

/** \brief C04, TIM[i] AUX IN source selection register */
#define EGTM_CLS0_TIM_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_IN_SRC*)0xF9080C04u)

/** \brief C08, TIM[i] global software reset register */
#define EGTM_CLS0_TIM_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_RST*)0xF9080C08u)

/** \brief 1000, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081000u)

/** \brief 1004, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081004u)

/** \brief 1008, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081008u)

/** \brief 100C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908100Cu)

/** \brief 1010, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081010u)

/** \brief 1014, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081014u)

/** \brief 1018, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081018u)

/** \brief 101C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908101Cu)

/** \brief 1020, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081020u)

/** \brief 1024, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081024u)

/** \brief 1028, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081028u)

/** \brief 1030, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH0_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081030u)

/** \brief 1040, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081040u)

/** \brief 1044, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081044u)

/** \brief 1048, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081048u)

/** \brief 104C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908104Cu)

/** \brief 1050, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081050u)

/** \brief 1054, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081054u)

/** \brief 1058, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081058u)

/** \brief 105C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908105Cu)

/** \brief 1060, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081060u)

/** \brief 1064, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081064u)

/** \brief 1068, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081068u)

/** \brief 1070, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH1_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081070u)

/** \brief 1080, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081080u)

/** \brief 1084, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081084u)

/** \brief 1088, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081088u)

/** \brief 108C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908108Cu)

/** \brief 1090, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081090u)

/** \brief 1094, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081094u)

/** \brief 1098, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081098u)

/** \brief 109C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908109Cu)

/** \brief 10A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90810A0u)

/** \brief 10A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90810A4u)

/** \brief 10A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90810A8u)

/** \brief 10B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH2_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90810B0u)

/** \brief 10C0, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90810C0u)

/** \brief 10C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90810C4u)

/** \brief 10C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90810C8u)

/** \brief 10CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90810CCu)

/** \brief 10D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90810D0u)

/** \brief 10D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90810D4u)

/** \brief 10D8, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90810D8u)

/** \brief 10DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90810DCu)

/** \brief 10E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90810E0u)

/** \brief 10E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90810E4u)

/** \brief 10E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90810E8u)

/** \brief 10F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH3_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90810F0u)

/** \brief 1100, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081100u)

/** \brief 1104, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081104u)

/** \brief 1108, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081108u)

/** \brief 110C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908110Cu)

/** \brief 1110, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081110u)

/** \brief 1114, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081114u)

/** \brief 1118, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081118u)

/** \brief 111C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908111Cu)

/** \brief 1120, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081120u)

/** \brief 1124, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081124u)

/** \brief 1128, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081128u)

/** \brief 1130, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH4_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081130u)

/** \brief 1140, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081140u)

/** \brief 1144, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081144u)

/** \brief 1148, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081148u)

/** \brief 114C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908114Cu)

/** \brief 1150, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081150u)

/** \brief 1154, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081154u)

/** \brief 1158, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081158u)

/** \brief 115C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908115Cu)

/** \brief 1160, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081160u)

/** \brief 1164, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081164u)

/** \brief 1168, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081168u)

/** \brief 1170, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH5_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081170u)

/** \brief 1180, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081180u)

/** \brief 1184, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081184u)

/** \brief 1188, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081188u)

/** \brief 118C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908118Cu)

/** \brief 1190, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081190u)

/** \brief 1194, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081194u)

/** \brief 1198, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081198u)

/** \brief 119C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908119Cu)

/** \brief 11A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90811A0u)

/** \brief 11A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90811A4u)

/** \brief 11A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90811A8u)

/** \brief 11B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH6_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90811B0u)

/** \brief 11C0, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90811C0u)

/** \brief 11C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90811C4u)

/** \brief 11C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90811C8u)

/** \brief 11CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90811CCu)

/** \brief 11D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90811D0u)

/** \brief 11D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90811D4u)

/** \brief 11D8, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90811D8u)

/** \brief 11DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90811DCu)

/** \brief 11E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90811E0u)

/** \brief 11E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90811E4u)

/** \brief 11E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90811E8u)

/** \brief 11F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH7_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90811F0u)

/** \brief 1200, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH8_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081200u)

/** \brief 1204, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH8_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081204u)

/** \brief 1208, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH8_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081208u)

/** \brief 120C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH8_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908120Cu)

/** \brief 1210, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH8_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081210u)

/** \brief 1214, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH8_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081214u)

/** \brief 1218, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH8_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081218u)

/** \brief 121C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH8_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908121Cu)

/** \brief 1220, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH8_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081220u)

/** \brief 1224, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH8_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081224u)

/** \brief 1228, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH8_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081228u)

/** \brief 1230, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH8_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081230u)

/** \brief 1240, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH9_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081240u)

/** \brief 1244, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH9_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081244u)

/** \brief 1248, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH9_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081248u)

/** \brief 124C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH9_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908124Cu)

/** \brief 1250, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH9_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081250u)

/** \brief 1254, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH9_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081254u)

/** \brief 1258, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH9_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081258u)

/** \brief 125C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH9_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908125Cu)

/** \brief 1260, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH9_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081260u)

/** \brief 1264, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH9_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081264u)

/** \brief 1268, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH9_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081268u)

/** \brief 1270, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH9_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081270u)

/** \brief 1280, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH10_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081280u)

/** \brief 1284, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH10_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081284u)

/** \brief 1288, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH10_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081288u)

/** \brief 128C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH10_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908128Cu)

/** \brief 1290, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH10_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081290u)

/** \brief 1294, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH10_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081294u)

/** \brief 1298, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH10_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081298u)

/** \brief 129C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH10_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908129Cu)

/** \brief 12A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH10_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90812A0u)

/** \brief 12A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH10_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90812A4u)

/** \brief 12A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH10_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90812A8u)

/** \brief 12B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH10_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90812B0u)

/** \brief 12C0, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH11_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90812C0u)

/** \brief 12C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH11_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90812C4u)

/** \brief 12C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH11_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90812C8u)

/** \brief 12CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH11_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90812CCu)

/** \brief 12D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH11_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90812D0u)

/** \brief 12D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH11_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90812D4u)

/** \brief 12D8, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH11_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90812D8u)

/** \brief 12DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH11_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90812DCu)

/** \brief 12E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH11_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90812E0u)

/** \brief 12E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH11_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90812E4u)

/** \brief 12E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH11_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90812E8u)

/** \brief 12F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH11_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90812F0u)

/** \brief 1300, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH12_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081300u)

/** \brief 1304, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH12_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081304u)

/** \brief 1308, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH12_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081308u)

/** \brief 130C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH12_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908130Cu)

/** \brief 1310, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH12_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081310u)

/** \brief 1314, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH12_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081314u)

/** \brief 1318, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH12_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081318u)

/** \brief 131C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH12_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908131Cu)

/** \brief 1320, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH12_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081320u)

/** \brief 1324, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH12_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081324u)

/** \brief 1328, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH12_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081328u)

/** \brief 1330, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH12_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081330u)

/** \brief 1340, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH13_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081340u)

/** \brief 1344, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH13_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081344u)

/** \brief 1348, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH13_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081348u)

/** \brief 134C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH13_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908134Cu)

/** \brief 1350, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH13_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081350u)

/** \brief 1354, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH13_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081354u)

/** \brief 1358, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH13_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081358u)

/** \brief 135C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH13_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908135Cu)

/** \brief 1360, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH13_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF9081360u)

/** \brief 1364, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH13_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF9081364u)

/** \brief 1368, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH13_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF9081368u)

/** \brief 1370, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH13_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF9081370u)

/** \brief 1380, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH14_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF9081380u)

/** \brief 1384, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH14_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF9081384u)

/** \brief 1388, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH14_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF9081388u)

/** \brief 138C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH14_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF908138Cu)

/** \brief 1390, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH14_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF9081390u)

/** \brief 1394, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH14_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF9081394u)

/** \brief 1398, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH14_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF9081398u)

/** \brief 139C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH14_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF908139Cu)

/** \brief 13A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH14_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90813A0u)

/** \brief 13A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH14_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90813A4u)

/** \brief 13A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH14_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90813A8u)

/** \brief 13B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH14_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90813B0u)

/** \brief 13C0, TOM[i] channel [x] control register */
#define EGTM_CLS0_TOM_CH15_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90813C0u)

/** \brief 13C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_TOM_CH15_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90813C4u)

/** \brief 13C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_TOM_CH15_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90813C8u)

/** \brief 13CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_TOM_CH15_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90813CCu)

/** \brief 13D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_TOM_CH15_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90813D0u)

/** \brief 13D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS0_TOM_CH15_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90813D4u)

/** \brief 13D8, TOM[i] channel [x] status register */
#define EGTM_CLS0_TOM_CH15_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90813D8u)

/** \brief 13DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_TOM_CH15_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90813DCu)

/** \brief 13E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_TOM_CH15_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90813E0u)

/** \brief 13E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS0_TOM_CH15_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90813E4u)

/** \brief 13E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS0_TOM_CH15_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90813E8u)

/** \brief 13F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS0_TOM_CH15_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90813F0u)

/** \brief 1430, TOM[i] TGC [g] global control register */
#define EGTM_CLS0_TOM_TGC0_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_GLB_CTRL*)0xF9081430u)

/** \brief 1434, TOM[i] TGC [g] action time base register */
#define EGTM_CLS0_TOM_TGC0_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ACT_TB*)0xF9081434u)

/** \brief 1438, TOM[i] TGC [g] force update control register */
#define EGTM_CLS0_TOM_TGC0_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_FUPD_CTRL*)0xF9081438u)

/** \brief 143C, TOM[i] TGC [g] internal trigger control register */
#define EGTM_CLS0_TOM_TGC0_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_INT_TRIG*)0xF908143Cu)

/** \brief 1470, TOM[i] TGC [g] enable/disable control register */
#define EGTM_CLS0_TOM_TGC0_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_CTRL*)0xF9081470u)

/** \brief 1474, TOM[i] TGC [g] enable/disable status register */
#define EGTM_CLS0_TOM_TGC0_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_STAT*)0xF9081474u)

/** \brief 1478, TOM[i] TGC [g] output enable control register */
#define EGTM_CLS0_TOM_TGC0_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_CTRL*)0xF9081478u)

/** \brief 147C, TOM[i] TGC [g] output enable status register */
#define EGTM_CLS0_TOM_TGC0_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_STAT*)0xF908147Cu)

/** \brief 14B0, TOM[i] TGC [g] global control register */
#define EGTM_CLS0_TOM_TGC1_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_GLB_CTRL*)0xF90814B0u)

/** \brief 14B4, TOM[i] TGC [g] action time base register */
#define EGTM_CLS0_TOM_TGC1_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ACT_TB*)0xF90814B4u)

/** \brief 14B8, TOM[i] TGC [g] force update control register */
#define EGTM_CLS0_TOM_TGC1_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_FUPD_CTRL*)0xF90814B8u)

/** \brief 14BC, TOM[i] TGC [g] internal trigger control register */
#define EGTM_CLS0_TOM_TGC1_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_INT_TRIG*)0xF90814BCu)

/** \brief 14F0, TOM[i] TGC [g] enable/disable control register */
#define EGTM_CLS0_TOM_TGC1_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_CTRL*)0xF90814F0u)

/** \brief 14F4, TOM[i] TGC [g] enable/disable status register */
#define EGTM_CLS0_TOM_TGC1_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_STAT*)0xF90814F4u)

/** \brief 14F8, TOM[i] TGC [g] output enable control register */
#define EGTM_CLS0_TOM_TGC1_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_CTRL*)0xF90814F8u)

/** \brief 14FC, TOM[i] TGC [g] output enable status register */
#define EGTM_CLS0_TOM_TGC1_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_STAT*)0xF90814FCu)

/** \brief 1804, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH0_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081804u)

/** \brief 1804, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH0_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081804u)

/** \brief 1804, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH0_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081804u)

/** \brief 1804, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH0_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081804u)

/** \brief 1804, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH0_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081804u)

/** \brief 1804, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081804u)

/** \brief 1808, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081808u)

/** \brief 180C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF908180Cu)

/** \brief 1810, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081810u)

/** \brief 1814, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081814u)

/** \brief 1818, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081818u)

/** \brief 181C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF908181Cu)

/** \brief 1820, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF9081820u)

/** \brief 1824, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF9081824u)

/** \brief 1828, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF9081828u)

/** \brief 182C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF908182Cu)

/** \brief 1830, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH0_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF9081830u)

/** \brief 1834, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH0_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF9081834u)

/** \brief 1884, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH1_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081884u)

/** \brief 1884, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH1_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081884u)

/** \brief 1884, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH1_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081884u)

/** \brief 1884, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH1_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081884u)

/** \brief 1884, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH1_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081884u)

/** \brief 1884, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081884u)

/** \brief 1888, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081888u)

/** \brief 188C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF908188Cu)

/** \brief 1890, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081890u)

/** \brief 1894, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081894u)

/** \brief 1898, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081898u)

/** \brief 189C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF908189Cu)

/** \brief 18A0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90818A0u)

/** \brief 18A4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90818A4u)

/** \brief 18A8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90818A8u)

/** \brief 18AC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90818ACu)

/** \brief 18B0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH1_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90818B0u)

/** \brief 18B4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH1_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90818B4u)

/** \brief 1904, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH2_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081904u)

/** \brief 1904, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH2_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081904u)

/** \brief 1904, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH2_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081904u)

/** \brief 1904, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH2_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081904u)

/** \brief 1904, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH2_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081904u)

/** \brief 1904, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081904u)

/** \brief 1908, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081908u)

/** \brief 190C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF908190Cu)

/** \brief 1910, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081910u)

/** \brief 1914, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081914u)

/** \brief 1918, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081918u)

/** \brief 191C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF908191Cu)

/** \brief 1920, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF9081920u)

/** \brief 1924, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF9081924u)

/** \brief 1928, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF9081928u)

/** \brief 192C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF908192Cu)

/** \brief 1930, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH2_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF9081930u)

/** \brief 1934, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH2_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF9081934u)

/** \brief 1984, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH3_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081984u)

/** \brief 1984, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH3_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081984u)

/** \brief 1984, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH3_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081984u)

/** \brief 1984, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH3_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081984u)

/** \brief 1984, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH3_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081984u)

/** \brief 1984, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081984u)

/** \brief 1988, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081988u)

/** \brief 198C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF908198Cu)

/** \brief 1990, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081990u)

/** \brief 1994, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081994u)

/** \brief 1998, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081998u)

/** \brief 199C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF908199Cu)

/** \brief 19A0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90819A0u)

/** \brief 19A4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90819A4u)

/** \brief 19A8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90819A8u)

/** \brief 19AC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90819ACu)

/** \brief 19B0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH3_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90819B0u)

/** \brief 19B4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH3_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90819B4u)

/** \brief 1A04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH4_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081A04u)

/** \brief 1A04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH4_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081A04u)

/** \brief 1A04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH4_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081A04u)

/** \brief 1A04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH4_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081A04u)

/** \brief 1A04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH4_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081A04u)

/** \brief 1A04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081A04u)

/** \brief 1A08, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081A08u)

/** \brief 1A0C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF9081A0Cu)

/** \brief 1A10, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081A10u)

/** \brief 1A14, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081A14u)

/** \brief 1A18, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081A18u)

/** \brief 1A1C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF9081A1Cu)

/** \brief 1A20, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF9081A20u)

/** \brief 1A24, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF9081A24u)

/** \brief 1A28, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF9081A28u)

/** \brief 1A2C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF9081A2Cu)

/** \brief 1A30, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH4_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF9081A30u)

/** \brief 1A34, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH4_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF9081A34u)

/** \brief 1A84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH5_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081A84u)

/** \brief 1A84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH5_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081A84u)

/** \brief 1A84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH5_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081A84u)

/** \brief 1A84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH5_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081A84u)

/** \brief 1A84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH5_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081A84u)

/** \brief 1A84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081A84u)

/** \brief 1A88, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081A88u)

/** \brief 1A8C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF9081A8Cu)

/** \brief 1A90, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081A90u)

/** \brief 1A94, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081A94u)

/** \brief 1A98, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081A98u)

/** \brief 1A9C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF9081A9Cu)

/** \brief 1AA0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF9081AA0u)

/** \brief 1AA4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF9081AA4u)

/** \brief 1AA8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF9081AA8u)

/** \brief 1AAC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF9081AACu)

/** \brief 1AB0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH5_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF9081AB0u)

/** \brief 1AB4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH5_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF9081AB4u)

/** \brief 1B04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH6_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081B04u)

/** \brief 1B04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH6_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081B04u)

/** \brief 1B04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH6_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081B04u)

/** \brief 1B04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH6_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081B04u)

/** \brief 1B04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH6_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081B04u)

/** \brief 1B04, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081B04u)

/** \brief 1B08, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081B08u)

/** \brief 1B0C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF9081B0Cu)

/** \brief 1B10, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081B10u)

/** \brief 1B14, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081B14u)

/** \brief 1B18, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081B18u)

/** \brief 1B1C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF9081B1Cu)

/** \brief 1B20, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF9081B20u)

/** \brief 1B24, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF9081B24u)

/** \brief 1B28, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF9081B28u)

/** \brief 1B2C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF9081B2Cu)

/** \brief 1B30, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH6_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF9081B30u)

/** \brief 1B34, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH6_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF9081B34u)

/** \brief 1B84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH7_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF9081B84u)

/** \brief 1B84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH7_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF9081B84u)

/** \brief 1B84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH7_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF9081B84u)

/** \brief 1B84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH7_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF9081B84u)

/** \brief 1B84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH7_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF9081B84u)

/** \brief 1B84, ATOM[i] channel [x] control register */
#define EGTM_CLS0_ATOM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF9081B84u)

/** \brief 1B88, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS0_ATOM_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF9081B88u)

/** \brief 1B8C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS0_ATOM_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF9081B8Cu)

/** \brief 1B90, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS0_ATOM_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF9081B90u)

/** \brief 1B94, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS0_ATOM_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF9081B94u)

/** \brief 1B98, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS0_ATOM_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF9081B98u)

/** \brief 1B9C, ATOM[i] channel [x] status register */
#define EGTM_CLS0_ATOM_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF9081B9Cu)

/** \brief 1BA0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS0_ATOM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF9081BA0u)

/** \brief 1BA4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS0_ATOM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF9081BA4u)

/** \brief 1BA8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS0_ATOM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF9081BA8u)

/** \brief 1BAC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS0_ATOM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF9081BACu)

/** \brief 1BB0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS0_ATOM_CH7_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF9081BB0u)

/** \brief 1BB4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS0_ATOM_CH7_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF9081BB4u)

/** \brief 1C40, ATOM[i] AGC global control register */
#define EGTM_CLS0_ATOM_AGC_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_GLB_CTRL*)0xF9081C40u)

/** \brief 1C44, ATOM[i] AGC enable/disable control register */
#define EGTM_CLS0_ATOM_AGC_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ENDIS_CTRL*)0xF9081C44u)

/** \brief 1C48, ATOM[i] AGC enable/disable status register */
#define EGTM_CLS0_ATOM_AGC_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ENDIS_STAT*)0xF9081C48u)

/** \brief 1C4C, ATOM[i] AGC action time base register */
#define EGTM_CLS0_ATOM_AGC_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ACT_TB*)0xF9081C4Cu)

/** \brief 1C50, ATOM[i] AGC output enable control register */
#define EGTM_CLS0_ATOM_AGC_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_OUTEN_CTRL*)0xF9081C50u)

/** \brief 1C54, ATOM[i] AGC output enable status register */
#define EGTM_CLS0_ATOM_AGC_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_OUTEN_STAT*)0xF9081C54u)

/** \brief 1C58, ATOM[i] AGC force update control register */
#define EGTM_CLS0_ATOM_AGC_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_FUPD_CTRL*)0xF9081C58u)

/** \brief 1C5C, ATOM[i] AGC internal trigger control register */
#define EGTM_CLS0_ATOM_AGC_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_INT_TRIG*)0xF9081C5Cu)

/** \brief 41D4, CCM[i] 2. Hardware Configuration Register */
#define EGTM_CLS0_CCM_HW_CONF2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_HW_CONF2*)0xF90841D4u)

/** \brief 41DC, CCM[i] Hardware Configuration Register */
#define EGTM_CLS0_CCM_HW_CONF /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_HW_CONF*)0xF90841DCu)

/** \brief 41E0, CCM[i] TIM AUX Input Source Register */
#define EGTM_CLS0_CCM_TIM_AUX_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_TIM_AUX_IN_SRC*)0xF90841E0u)

/** \brief 41E8, CCM[i] TOM Output Register */
#define EGTM_CLS0_CCM_TOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_TOM_OUT*)0xF90841E8u)

/** \brief 41EC, CCM[i] ATOM Output Register */
#define EGTM_CLS0_CCM_ATOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_ATOM_OUT*)0xF90841ECu)

/** \brief 41F0, CCM[i] CMU Clock Configuration Register */
#define EGTM_CLS0_CCM_CMU_CLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CMU_CLK_CFG*)0xF90841F0u)

/** \brief 41F4, CCM[i] CMU Fixed Clock Configuration Register */
#define EGTM_CLS0_CCM_CMU_FXCLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CMU_FXCLK_CFG*)0xF90841F4u)

/** \brief 41F8, CCM[i] Configuration Register */
#define EGTM_CLS0_CCM_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CFG*)0xF90841F8u)

/** \brief 41FC, CCM[i] Protection Register */
#define EGTM_CLS0_CCM_PROT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_PROT*)0xF90841FCu)

/** \brief 4400, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS0_CDTM_DTM0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF9084400u)

/** \brief 4404, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS0_CDTM_DTM0_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF9084404u)

/** \brief 4408, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS0_CDTM_DTM0_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF9084408u)

/** \brief 440C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS0_CDTM_DTM0_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF908440Cu)

/** \brief 4410, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS0_CDTM_DTM0_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF9084410u)

/** \brief 4414, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084414u)

/** \brief 4418, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084418u)

/** \brief 441C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF908441Cu)

/** \brief 4420, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084420u)

/** \brief 4424, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS0_CDTM_DTM0_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF9084424u)

/** \brief 4428, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS0_CDTM_DTM0_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF9084428u)

/** \brief 442C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS0_CDTM_DTM0_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF908442Cu)

/** \brief 4430, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084430u)

/** \brief 4434, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084434u)

/** \brief 4438, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084438u)

/** \brief 443C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM0_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF908443Cu)

/** \brief 4440, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS0_CDTM_DTM1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF9084440u)

/** \brief 4444, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS0_CDTM_DTM1_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF9084444u)

/** \brief 4448, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS0_CDTM_DTM1_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF9084448u)

/** \brief 444C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS0_CDTM_DTM1_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF908444Cu)

/** \brief 4450, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS0_CDTM_DTM1_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF9084450u)

/** \brief 4454, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084454u)

/** \brief 4458, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084458u)

/** \brief 445C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF908445Cu)

/** \brief 4460, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084460u)

/** \brief 4464, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS0_CDTM_DTM1_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF9084464u)

/** \brief 4468, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS0_CDTM_DTM1_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF9084468u)

/** \brief 446C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS0_CDTM_DTM1_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF908446Cu)

/** \brief 4470, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084470u)

/** \brief 4474, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084474u)

/** \brief 4478, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084478u)

/** \brief 447C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM1_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF908447Cu)

/** \brief 4480, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS0_CDTM_DTM2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF9084480u)

/** \brief 4484, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS0_CDTM_DTM2_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF9084484u)

/** \brief 4488, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS0_CDTM_DTM2_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF9084488u)

/** \brief 448C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS0_CDTM_DTM2_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF908448Cu)

/** \brief 4490, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS0_CDTM_DTM2_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF9084490u)

/** \brief 4494, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084494u)

/** \brief 4498, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084498u)

/** \brief 449C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF908449Cu)

/** \brief 44A0, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90844A0u)

/** \brief 44A4, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS0_CDTM_DTM2_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90844A4u)

/** \brief 44A8, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS0_CDTM_DTM2_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90844A8u)

/** \brief 44AC, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS0_CDTM_DTM2_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90844ACu)

/** \brief 44B0, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844B0u)

/** \brief 44B4, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844B4u)

/** \brief 44B8, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844B8u)

/** \brief 44BC, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM2_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844BCu)

/** \brief 44C0, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS0_CDTM_DTM3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90844C0u)

/** \brief 44C4, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS0_CDTM_DTM3_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90844C4u)

/** \brief 44C8, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS0_CDTM_DTM3_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90844C8u)

/** \brief 44CC, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS0_CDTM_DTM3_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90844CCu)

/** \brief 44D0, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS0_CDTM_DTM3_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90844D0u)

/** \brief 44D4, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90844D4u)

/** \brief 44D8, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90844D8u)

/** \brief 44DC, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90844DCu)

/** \brief 44E0, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90844E0u)

/** \brief 44E4, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS0_CDTM_DTM3_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90844E4u)

/** \brief 44E8, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS0_CDTM_DTM3_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90844E8u)

/** \brief 44EC, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS0_CDTM_DTM3_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90844ECu)

/** \brief 44F0, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844F0u)

/** \brief 44F4, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844F4u)

/** \brief 44F8, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844F8u)

/** \brief 44FC, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM3_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90844FCu)

/** \brief 4500, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS0_CDTM_DTM4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF9084500u)

/** \brief 4504, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS0_CDTM_DTM4_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF9084504u)

/** \brief 4508, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS0_CDTM_DTM4_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF9084508u)

/** \brief 450C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS0_CDTM_DTM4_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF908450Cu)

/** \brief 4510, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS0_CDTM_DTM4_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF9084510u)

/** \brief 4514, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084514u)

/** \brief 4518, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084518u)

/** \brief 451C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF908451Cu)

/** \brief 4520, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084520u)

/** \brief 4524, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS0_CDTM_DTM4_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF9084524u)

/** \brief 4528, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS0_CDTM_DTM4_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF9084528u)

/** \brief 452C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS0_CDTM_DTM4_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF908452Cu)

/** \brief 4530, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084530u)

/** \brief 4534, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084534u)

/** \brief 4538, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084538u)

/** \brief 453C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM4_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF908453Cu)

/** \brief 4540, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS0_CDTM_DTM5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF9084540u)

/** \brief 4544, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS0_CDTM_DTM5_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF9084544u)

/** \brief 4548, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS0_CDTM_DTM5_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF9084548u)

/** \brief 454C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS0_CDTM_DTM5_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF908454Cu)

/** \brief 4550, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS0_CDTM_DTM5_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF9084550u)

/** \brief 4554, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084554u)

/** \brief 4558, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084558u)

/** \brief 455C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF908455Cu)

/** \brief 4560, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF9084560u)

/** \brief 4564, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS0_CDTM_DTM5_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF9084564u)

/** \brief 4568, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS0_CDTM_DTM5_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF9084568u)

/** \brief 456C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS0_CDTM_DTM5_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF908456Cu)

/** \brief 4570, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084570u)

/** \brief 4574, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084574u)

/** \brief 4578, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF9084578u)

/** \brief 457C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS0_CDTM_DTM5_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF908457Cu)

/** \brief 4C00, SPE[i] Control Status Register */
#define EGTM_CLS0_SPE_CTRL_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CTRL_STAT*)0xF9084C00u)

/** \brief 4C04, SPE[i] Input Pattern Definition Register */
#define EGTM_CLS0_SPE_PAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_PAT*)0xF9084C04u)

/** \brief 4C08, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C08u)

/** \brief 4C0C, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C0Cu)

/** \brief 4C10, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C10u)

/** \brief 4C14, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C14u)

/** \brief 4C18, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C18u)

/** \brief 4C1C, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C1Cu)

/** \brief 4C20, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C20u)

/** \brief 4C24, SPE[i] Output Definition Register [p] */
#define EGTM_CLS0_SPE_OUT_PAT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF9084C24u)

/** \brief 4C28, SPE[i] Output Control Register */
#define EGTM_CLS0_SPE_OUT_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_CTRL*)0xF9084C28u)

/** \brief 4C2C, SPE[i] Interrupt Notification Register */
#define EGTM_CLS0_SPE_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_NOTIFY*)0xF9084C2Cu)

/** \brief 4C30, SPE[i] Interrupt Enable Register */
#define EGTM_CLS0_SPE_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_EN*)0xF9084C30u)

/** \brief 4C34, SPE[i] Interrupt Generation By Software */
#define EGTM_CLS0_SPE_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_FORCINT*)0xF9084C34u)

/** \brief 4C38, SPE[i] Interrupt Mode Configuration Register */
#define EGTM_CLS0_SPE_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_MODE*)0xF9084C38u)

/** \brief 4C3C, SPE[i] Error Interrupt Enable Register */
#define EGTM_CLS0_SPE_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_EIRQ_EN*)0xF9084C3Cu)

/** \brief 4C40, SPE[i] Input Revolution Counter */
#define EGTM_CLS0_SPE_REV_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_REV_CNT*)0xF9084C40u)

/** \brief 4C44, SPE[i] Revolution Counter Compare Value */
#define EGTM_CLS0_SPE_REV_CMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_REV_CMP*)0xF9084C44u)

/** \brief 4C48, SPE[i] Control Status Register 2 */
#define EGTM_CLS0_SPE_CTRL_STAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CTRL_STAT2*)0xF9084C48u)

/** \brief 4C4C, SPE[i] Command Register */
#define EGTM_CLS0_SPE_CMD /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CMD*)0xF9084C4Cu)

/** \brief 20680, MON status register */
#define EGTM_CLS1_MON_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_MON_STATUS*)0xF90A0680u)

/** \brief 206C0, CMP comparator enable register */
#define EGTM_CLS1_CMP_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_EN*)0xF90A06C0u)

/** \brief 206C4, CMP event notification register */
#define EGTM_CLS1_CMP_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_NOTIFY*)0xF90A06C4u)

/** \brief 206C8, CMP interrupt enable register */
#define EGTM_CLS1_CMP_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_EN*)0xF90A06C8u)

/** \brief 206CC, CMP interrupt force register */
#define EGTM_CLS1_CMP_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_FORCINT*)0xF90A06CCu)

/** \brief 206D0, CMP interrupt mode configuration register */
#define EGTM_CLS1_CMP_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_MODE*)0xF90A06D0u)

/** \brief 206D4, CMP error interrupt enable register */
#define EGTM_CLS1_CMP_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_EIRQ_EN*)0xF90A06D4u)

/** \brief 20800, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH0_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0800u)

/** \brief 20804, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH0_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0804u)

/** \brief 20808, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH0_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0808u)

/** \brief 2080C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH0_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A080Cu)

/** \brief 20810, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH0_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0810u)

/** \brief 20814, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH0_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0814u)

/** \brief 20818, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH0_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0818u)

/** \brief 2081C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH0_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A081Cu)

/** \brief 20820, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH0_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A0820u)

/** \brief 20824, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A0824u)

/** \brief 20828, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH0_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A0828u)

/** \brief 2082C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A082Cu)

/** \brief 20830, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A0830u)

/** \brief 20834, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A0834u)

/** \brief 20838, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A0838u)

/** \brief 2083C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH0_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A083Cu)

/** \brief 20880, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH1_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0880u)

/** \brief 20884, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH1_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0884u)

/** \brief 20888, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH1_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0888u)

/** \brief 2088C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH1_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A088Cu)

/** \brief 20890, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH1_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0890u)

/** \brief 20894, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH1_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0894u)

/** \brief 20898, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH1_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0898u)

/** \brief 2089C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH1_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A089Cu)

/** \brief 208A0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH1_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A08A0u)

/** \brief 208A4, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A08A4u)

/** \brief 208A8, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH1_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A08A8u)

/** \brief 208AC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A08ACu)

/** \brief 208B0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A08B0u)

/** \brief 208B4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A08B4u)

/** \brief 208B8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A08B8u)

/** \brief 208BC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH1_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A08BCu)

/** \brief 20900, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH2_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0900u)

/** \brief 20904, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH2_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0904u)

/** \brief 20908, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH2_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0908u)

/** \brief 2090C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH2_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A090Cu)

/** \brief 20910, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH2_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0910u)

/** \brief 20914, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH2_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0914u)

/** \brief 20918, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH2_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0918u)

/** \brief 2091C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH2_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A091Cu)

/** \brief 20920, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH2_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A0920u)

/** \brief 20924, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A0924u)

/** \brief 20928, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH2_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A0928u)

/** \brief 2092C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A092Cu)

/** \brief 20930, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A0930u)

/** \brief 20934, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A0934u)

/** \brief 20938, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A0938u)

/** \brief 2093C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH2_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A093Cu)

/** \brief 20980, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH3_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0980u)

/** \brief 20984, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH3_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0984u)

/** \brief 20988, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH3_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0988u)

/** \brief 2098C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH3_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A098Cu)

/** \brief 20990, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH3_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0990u)

/** \brief 20994, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH3_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0994u)

/** \brief 20998, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH3_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0998u)

/** \brief 2099C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH3_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A099Cu)

/** \brief 209A0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH3_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A09A0u)

/** \brief 209A4, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A09A4u)

/** \brief 209A8, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH3_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A09A8u)

/** \brief 209AC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A09ACu)

/** \brief 209B0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A09B0u)

/** \brief 209B4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A09B4u)

/** \brief 209B8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A09B8u)

/** \brief 209BC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH3_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A09BCu)

/** \brief 20A00, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH4_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0A00u)

/** \brief 20A04, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH4_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0A04u)

/** \brief 20A08, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH4_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0A08u)

/** \brief 20A0C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH4_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A0A0Cu)

/** \brief 20A10, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH4_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0A10u)

/** \brief 20A14, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH4_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0A14u)

/** \brief 20A18, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH4_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0A18u)

/** \brief 20A1C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH4_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A0A1Cu)

/** \brief 20A20, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH4_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A0A20u)

/** \brief 20A24, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A0A24u)

/** \brief 20A28, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH4_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A0A28u)

/** \brief 20A2C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A0A2Cu)

/** \brief 20A30, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A0A30u)

/** \brief 20A34, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A0A34u)

/** \brief 20A38, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A0A38u)

/** \brief 20A3C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH4_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A0A3Cu)

/** \brief 20A80, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH5_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0A80u)

/** \brief 20A84, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH5_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0A84u)

/** \brief 20A88, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH5_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0A88u)

/** \brief 20A8C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH5_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A0A8Cu)

/** \brief 20A90, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH5_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0A90u)

/** \brief 20A94, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH5_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0A94u)

/** \brief 20A98, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH5_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0A98u)

/** \brief 20A9C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH5_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A0A9Cu)

/** \brief 20AA0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH5_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A0AA0u)

/** \brief 20AA4, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A0AA4u)

/** \brief 20AA8, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH5_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A0AA8u)

/** \brief 20AAC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A0AACu)

/** \brief 20AB0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A0AB0u)

/** \brief 20AB4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A0AB4u)

/** \brief 20AB8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A0AB8u)

/** \brief 20ABC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH5_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A0ABCu)

/** \brief 20B00, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH6_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0B00u)

/** \brief 20B04, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH6_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0B04u)

/** \brief 20B08, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH6_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0B08u)

/** \brief 20B0C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH6_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A0B0Cu)

/** \brief 20B10, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH6_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0B10u)

/** \brief 20B14, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH6_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0B14u)

/** \brief 20B18, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH6_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0B18u)

/** \brief 20B1C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH6_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A0B1Cu)

/** \brief 20B20, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH6_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A0B20u)

/** \brief 20B24, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A0B24u)

/** \brief 20B28, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH6_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A0B28u)

/** \brief 20B2C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A0B2Cu)

/** \brief 20B30, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A0B30u)

/** \brief 20B34, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A0B34u)

/** \brief 20B38, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A0B38u)

/** \brief 20B3C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH6_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A0B3Cu)

/** \brief 20B80, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS1_TIM_CH7_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90A0B80u)

/** \brief 20B84, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS1_TIM_CH7_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90A0B84u)

/** \brief 20B88, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS1_TIM_CH7_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90A0B88u)

/** \brief 20B8C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS1_TIM_CH7_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90A0B8Cu)

/** \brief 20B90, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS1_TIM_CH7_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90A0B90u)

/** \brief 20B94, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS1_TIM_CH7_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90A0B94u)

/** \brief 20B98, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS1_TIM_CH7_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90A0B98u)

/** \brief 20B9C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS1_TIM_CH7_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90A0B9Cu)

/** \brief 20BA0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS1_TIM_CH7_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90A0BA0u)

/** \brief 20BA4, TIM[i] channel [x] control register */
#define EGTM_CLS1_TIM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90A0BA4u)

/** \brief 20BA8, TIM[i] channel [x] extended control register */
#define EGTM_CLS1_TIM_CH7_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90A0BA8u)

/** \brief 20BAC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TIM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90A0BACu)

/** \brief 20BB0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TIM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90A0BB0u)

/** \brief 20BB4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TIM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90A0BB4u)

/** \brief 20BB8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_TIM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90A0BB8u)

/** \brief 20BBC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS1_TIM_CH7_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90A0BBCu)

/** \brief 20C00, TIM[i] input value observation register */
#define EGTM_CLS1_TIM_INP_VAL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_INP_VAL*)0xF90A0C00u)

/** \brief 20C04, TIM[i] AUX IN source selection register */
#define EGTM_CLS1_TIM_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_IN_SRC*)0xF90A0C04u)

/** \brief 20C08, TIM[i] global software reset register */
#define EGTM_CLS1_TIM_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_RST*)0xF90A0C08u)

/** \brief 21000, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1000u)

/** \brief 21004, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1004u)

/** \brief 21008, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1008u)

/** \brief 2100C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A100Cu)

/** \brief 21010, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1010u)

/** \brief 21014, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1014u)

/** \brief 21018, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1018u)

/** \brief 2101C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A101Cu)

/** \brief 21020, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1020u)

/** \brief 21024, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1024u)

/** \brief 21028, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1028u)

/** \brief 21030, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH0_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1030u)

/** \brief 21040, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1040u)

/** \brief 21044, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1044u)

/** \brief 21048, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1048u)

/** \brief 2104C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A104Cu)

/** \brief 21050, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1050u)

/** \brief 21054, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1054u)

/** \brief 21058, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1058u)

/** \brief 2105C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A105Cu)

/** \brief 21060, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1060u)

/** \brief 21064, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1064u)

/** \brief 21068, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1068u)

/** \brief 21070, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH1_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1070u)

/** \brief 21080, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1080u)

/** \brief 21084, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1084u)

/** \brief 21088, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1088u)

/** \brief 2108C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A108Cu)

/** \brief 21090, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1090u)

/** \brief 21094, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1094u)

/** \brief 21098, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1098u)

/** \brief 2109C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A109Cu)

/** \brief 210A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A10A0u)

/** \brief 210A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A10A4u)

/** \brief 210A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A10A8u)

/** \brief 210B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH2_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A10B0u)

/** \brief 210C0, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A10C0u)

/** \brief 210C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A10C4u)

/** \brief 210C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A10C8u)

/** \brief 210CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A10CCu)

/** \brief 210D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A10D0u)

/** \brief 210D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A10D4u)

/** \brief 210D8, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A10D8u)

/** \brief 210DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A10DCu)

/** \brief 210E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A10E0u)

/** \brief 210E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A10E4u)

/** \brief 210E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A10E8u)

/** \brief 210F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH3_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A10F0u)

/** \brief 21100, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1100u)

/** \brief 21104, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1104u)

/** \brief 21108, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1108u)

/** \brief 2110C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A110Cu)

/** \brief 21110, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1110u)

/** \brief 21114, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1114u)

/** \brief 21118, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1118u)

/** \brief 2111C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A111Cu)

/** \brief 21120, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1120u)

/** \brief 21124, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1124u)

/** \brief 21128, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1128u)

/** \brief 21130, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH4_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1130u)

/** \brief 21140, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1140u)

/** \brief 21144, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1144u)

/** \brief 21148, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1148u)

/** \brief 2114C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A114Cu)

/** \brief 21150, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1150u)

/** \brief 21154, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1154u)

/** \brief 21158, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1158u)

/** \brief 2115C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A115Cu)

/** \brief 21160, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1160u)

/** \brief 21164, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1164u)

/** \brief 21168, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1168u)

/** \brief 21170, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH5_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1170u)

/** \brief 21180, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1180u)

/** \brief 21184, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1184u)

/** \brief 21188, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1188u)

/** \brief 2118C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A118Cu)

/** \brief 21190, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1190u)

/** \brief 21194, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1194u)

/** \brief 21198, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1198u)

/** \brief 2119C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A119Cu)

/** \brief 211A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A11A0u)

/** \brief 211A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A11A4u)

/** \brief 211A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A11A8u)

/** \brief 211B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH6_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A11B0u)

/** \brief 211C0, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A11C0u)

/** \brief 211C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A11C4u)

/** \brief 211C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A11C8u)

/** \brief 211CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A11CCu)

/** \brief 211D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A11D0u)

/** \brief 211D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A11D4u)

/** \brief 211D8, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A11D8u)

/** \brief 211DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A11DCu)

/** \brief 211E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A11E0u)

/** \brief 211E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A11E4u)

/** \brief 211E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A11E8u)

/** \brief 211F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH7_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A11F0u)

/** \brief 21200, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH8_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1200u)

/** \brief 21204, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH8_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1204u)

/** \brief 21208, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH8_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1208u)

/** \brief 2120C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH8_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A120Cu)

/** \brief 21210, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH8_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1210u)

/** \brief 21214, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH8_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1214u)

/** \brief 21218, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH8_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1218u)

/** \brief 2121C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH8_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A121Cu)

/** \brief 21220, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH8_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1220u)

/** \brief 21224, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH8_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1224u)

/** \brief 21228, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH8_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1228u)

/** \brief 21230, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH8_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1230u)

/** \brief 21240, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH9_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1240u)

/** \brief 21244, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH9_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1244u)

/** \brief 21248, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH9_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1248u)

/** \brief 2124C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH9_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A124Cu)

/** \brief 21250, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH9_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1250u)

/** \brief 21254, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH9_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1254u)

/** \brief 21258, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH9_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1258u)

/** \brief 2125C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH9_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A125Cu)

/** \brief 21260, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH9_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1260u)

/** \brief 21264, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH9_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1264u)

/** \brief 21268, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH9_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1268u)

/** \brief 21270, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH9_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1270u)

/** \brief 21280, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH10_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1280u)

/** \brief 21284, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH10_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1284u)

/** \brief 21288, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH10_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1288u)

/** \brief 2128C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH10_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A128Cu)

/** \brief 21290, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH10_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1290u)

/** \brief 21294, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH10_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1294u)

/** \brief 21298, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH10_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1298u)

/** \brief 2129C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH10_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A129Cu)

/** \brief 212A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH10_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A12A0u)

/** \brief 212A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH10_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A12A4u)

/** \brief 212A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH10_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A12A8u)

/** \brief 212B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH10_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A12B0u)

/** \brief 212C0, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH11_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A12C0u)

/** \brief 212C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH11_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A12C4u)

/** \brief 212C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH11_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A12C8u)

/** \brief 212CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH11_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A12CCu)

/** \brief 212D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH11_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A12D0u)

/** \brief 212D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH11_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A12D4u)

/** \brief 212D8, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH11_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A12D8u)

/** \brief 212DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH11_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A12DCu)

/** \brief 212E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH11_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A12E0u)

/** \brief 212E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH11_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A12E4u)

/** \brief 212E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH11_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A12E8u)

/** \brief 212F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH11_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A12F0u)

/** \brief 21300, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH12_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1300u)

/** \brief 21304, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH12_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1304u)

/** \brief 21308, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH12_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1308u)

/** \brief 2130C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH12_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A130Cu)

/** \brief 21310, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH12_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1310u)

/** \brief 21314, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH12_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1314u)

/** \brief 21318, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH12_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1318u)

/** \brief 2131C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH12_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A131Cu)

/** \brief 21320, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH12_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1320u)

/** \brief 21324, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH12_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1324u)

/** \brief 21328, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH12_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1328u)

/** \brief 21330, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH12_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1330u)

/** \brief 21340, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH13_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1340u)

/** \brief 21344, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH13_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1344u)

/** \brief 21348, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH13_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1348u)

/** \brief 2134C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH13_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A134Cu)

/** \brief 21350, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH13_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1350u)

/** \brief 21354, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH13_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1354u)

/** \brief 21358, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH13_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1358u)

/** \brief 2135C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH13_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A135Cu)

/** \brief 21360, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH13_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A1360u)

/** \brief 21364, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH13_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A1364u)

/** \brief 21368, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH13_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A1368u)

/** \brief 21370, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH13_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A1370u)

/** \brief 21380, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH14_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A1380u)

/** \brief 21384, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH14_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A1384u)

/** \brief 21388, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH14_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A1388u)

/** \brief 2138C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH14_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A138Cu)

/** \brief 21390, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH14_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A1390u)

/** \brief 21394, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH14_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A1394u)

/** \brief 21398, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH14_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A1398u)

/** \brief 2139C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH14_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A139Cu)

/** \brief 213A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH14_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A13A0u)

/** \brief 213A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH14_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A13A4u)

/** \brief 213A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH14_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A13A8u)

/** \brief 213B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH14_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A13B0u)

/** \brief 213C0, TOM[i] channel [x] control register */
#define EGTM_CLS1_TOM_CH15_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90A13C0u)

/** \brief 213C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_TOM_CH15_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90A13C4u)

/** \brief 213C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_TOM_CH15_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90A13C8u)

/** \brief 213CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_TOM_CH15_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90A13CCu)

/** \brief 213D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_TOM_CH15_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90A13D0u)

/** \brief 213D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS1_TOM_CH15_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90A13D4u)

/** \brief 213D8, TOM[i] channel [x] status register */
#define EGTM_CLS1_TOM_CH15_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90A13D8u)

/** \brief 213DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_TOM_CH15_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90A13DCu)

/** \brief 213E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_TOM_CH15_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90A13E0u)

/** \brief 213E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS1_TOM_CH15_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90A13E4u)

/** \brief 213E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS1_TOM_CH15_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90A13E8u)

/** \brief 213F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS1_TOM_CH15_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90A13F0u)

/** \brief 21430, TOM[i] TGC [g] global control register */
#define EGTM_CLS1_TOM_TGC0_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_GLB_CTRL*)0xF90A1430u)

/** \brief 21434, TOM[i] TGC [g] action time base register */
#define EGTM_CLS1_TOM_TGC0_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ACT_TB*)0xF90A1434u)

/** \brief 21438, TOM[i] TGC [g] force update control register */
#define EGTM_CLS1_TOM_TGC0_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_FUPD_CTRL*)0xF90A1438u)

/** \brief 2143C, TOM[i] TGC [g] internal trigger control register */
#define EGTM_CLS1_TOM_TGC0_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_INT_TRIG*)0xF90A143Cu)

/** \brief 21470, TOM[i] TGC [g] enable/disable control register */
#define EGTM_CLS1_TOM_TGC0_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_CTRL*)0xF90A1470u)

/** \brief 21474, TOM[i] TGC [g] enable/disable status register */
#define EGTM_CLS1_TOM_TGC0_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_STAT*)0xF90A1474u)

/** \brief 21478, TOM[i] TGC [g] output enable control register */
#define EGTM_CLS1_TOM_TGC0_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_CTRL*)0xF90A1478u)

/** \brief 2147C, TOM[i] TGC [g] output enable status register */
#define EGTM_CLS1_TOM_TGC0_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_STAT*)0xF90A147Cu)

/** \brief 214B0, TOM[i] TGC [g] global control register */
#define EGTM_CLS1_TOM_TGC1_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_GLB_CTRL*)0xF90A14B0u)

/** \brief 214B4, TOM[i] TGC [g] action time base register */
#define EGTM_CLS1_TOM_TGC1_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ACT_TB*)0xF90A14B4u)

/** \brief 214B8, TOM[i] TGC [g] force update control register */
#define EGTM_CLS1_TOM_TGC1_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_FUPD_CTRL*)0xF90A14B8u)

/** \brief 214BC, TOM[i] TGC [g] internal trigger control register */
#define EGTM_CLS1_TOM_TGC1_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_INT_TRIG*)0xF90A14BCu)

/** \brief 214F0, TOM[i] TGC [g] enable/disable control register */
#define EGTM_CLS1_TOM_TGC1_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_CTRL*)0xF90A14F0u)

/** \brief 214F4, TOM[i] TGC [g] enable/disable status register */
#define EGTM_CLS1_TOM_TGC1_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_STAT*)0xF90A14F4u)

/** \brief 214F8, TOM[i] TGC [g] output enable control register */
#define EGTM_CLS1_TOM_TGC1_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_CTRL*)0xF90A14F8u)

/** \brief 214FC, TOM[i] TGC [g] output enable status register */
#define EGTM_CLS1_TOM_TGC1_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_STAT*)0xF90A14FCu)

/** \brief 21804, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH0_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1804u)

/** \brief 21804, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH0_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1804u)

/** \brief 21804, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH0_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1804u)

/** \brief 21804, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH0_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1804u)

/** \brief 21804, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH0_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1804u)

/** \brief 21804, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1804u)

/** \brief 21808, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1808u)

/** \brief 2180C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A180Cu)

/** \brief 21810, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1810u)

/** \brief 21814, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1814u)

/** \brief 21818, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1818u)

/** \brief 2181C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A181Cu)

/** \brief 21820, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A1820u)

/** \brief 21824, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A1824u)

/** \brief 21828, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A1828u)

/** \brief 2182C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A182Cu)

/** \brief 21830, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH0_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A1830u)

/** \brief 21834, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH0_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A1834u)

/** \brief 21884, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH1_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1884u)

/** \brief 21884, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH1_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1884u)

/** \brief 21884, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH1_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1884u)

/** \brief 21884, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH1_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1884u)

/** \brief 21884, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH1_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1884u)

/** \brief 21884, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1884u)

/** \brief 21888, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1888u)

/** \brief 2188C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A188Cu)

/** \brief 21890, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1890u)

/** \brief 21894, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1894u)

/** \brief 21898, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1898u)

/** \brief 2189C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A189Cu)

/** \brief 218A0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A18A0u)

/** \brief 218A4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A18A4u)

/** \brief 218A8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A18A8u)

/** \brief 218AC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A18ACu)

/** \brief 218B0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH1_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A18B0u)

/** \brief 218B4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH1_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A18B4u)

/** \brief 21904, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH2_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1904u)

/** \brief 21904, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH2_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1904u)

/** \brief 21904, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH2_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1904u)

/** \brief 21904, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH2_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1904u)

/** \brief 21904, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH2_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1904u)

/** \brief 21904, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1904u)

/** \brief 21908, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1908u)

/** \brief 2190C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A190Cu)

/** \brief 21910, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1910u)

/** \brief 21914, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1914u)

/** \brief 21918, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1918u)

/** \brief 2191C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A191Cu)

/** \brief 21920, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A1920u)

/** \brief 21924, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A1924u)

/** \brief 21928, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A1928u)

/** \brief 2192C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A192Cu)

/** \brief 21930, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH2_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A1930u)

/** \brief 21934, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH2_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A1934u)

/** \brief 21984, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH3_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1984u)

/** \brief 21984, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH3_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1984u)

/** \brief 21984, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH3_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1984u)

/** \brief 21984, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH3_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1984u)

/** \brief 21984, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH3_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1984u)

/** \brief 21984, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1984u)

/** \brief 21988, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1988u)

/** \brief 2198C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A198Cu)

/** \brief 21990, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1990u)

/** \brief 21994, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1994u)

/** \brief 21998, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1998u)

/** \brief 2199C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A199Cu)

/** \brief 219A0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A19A0u)

/** \brief 219A4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A19A4u)

/** \brief 219A8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A19A8u)

/** \brief 219AC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A19ACu)

/** \brief 219B0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH3_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A19B0u)

/** \brief 219B4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH3_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A19B4u)

/** \brief 21A04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH4_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1A04u)

/** \brief 21A04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH4_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1A04u)

/** \brief 21A04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH4_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1A04u)

/** \brief 21A04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH4_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1A04u)

/** \brief 21A04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH4_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1A04u)

/** \brief 21A04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1A04u)

/** \brief 21A08, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1A08u)

/** \brief 21A0C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A1A0Cu)

/** \brief 21A10, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1A10u)

/** \brief 21A14, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1A14u)

/** \brief 21A18, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1A18u)

/** \brief 21A1C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A1A1Cu)

/** \brief 21A20, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A1A20u)

/** \brief 21A24, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A1A24u)

/** \brief 21A28, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A1A28u)

/** \brief 21A2C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A1A2Cu)

/** \brief 21A30, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH4_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A1A30u)

/** \brief 21A34, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH4_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A1A34u)

/** \brief 21A84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH5_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1A84u)

/** \brief 21A84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH5_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1A84u)

/** \brief 21A84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH5_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1A84u)

/** \brief 21A84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH5_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1A84u)

/** \brief 21A84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH5_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1A84u)

/** \brief 21A84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1A84u)

/** \brief 21A88, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1A88u)

/** \brief 21A8C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A1A8Cu)

/** \brief 21A90, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1A90u)

/** \brief 21A94, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1A94u)

/** \brief 21A98, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1A98u)

/** \brief 21A9C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A1A9Cu)

/** \brief 21AA0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A1AA0u)

/** \brief 21AA4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A1AA4u)

/** \brief 21AA8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A1AA8u)

/** \brief 21AAC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A1AACu)

/** \brief 21AB0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH5_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A1AB0u)

/** \brief 21AB4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH5_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A1AB4u)

/** \brief 21B04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH6_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1B04u)

/** \brief 21B04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH6_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1B04u)

/** \brief 21B04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH6_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1B04u)

/** \brief 21B04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH6_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1B04u)

/** \brief 21B04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH6_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1B04u)

/** \brief 21B04, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1B04u)

/** \brief 21B08, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1B08u)

/** \brief 21B0C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A1B0Cu)

/** \brief 21B10, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1B10u)

/** \brief 21B14, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1B14u)

/** \brief 21B18, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1B18u)

/** \brief 21B1C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A1B1Cu)

/** \brief 21B20, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A1B20u)

/** \brief 21B24, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A1B24u)

/** \brief 21B28, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A1B28u)

/** \brief 21B2C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A1B2Cu)

/** \brief 21B30, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH6_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A1B30u)

/** \brief 21B34, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH6_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A1B34u)

/** \brief 21B84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH7_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90A1B84u)

/** \brief 21B84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH7_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90A1B84u)

/** \brief 21B84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH7_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90A1B84u)

/** \brief 21B84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH7_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90A1B84u)

/** \brief 21B84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH7_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90A1B84u)

/** \brief 21B84, ATOM[i] channel [x] control register */
#define EGTM_CLS1_ATOM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90A1B84u)

/** \brief 21B88, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS1_ATOM_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90A1B88u)

/** \brief 21B8C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS1_ATOM_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90A1B8Cu)

/** \brief 21B90, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS1_ATOM_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90A1B90u)

/** \brief 21B94, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS1_ATOM_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90A1B94u)

/** \brief 21B98, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS1_ATOM_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90A1B98u)

/** \brief 21B9C, ATOM[i] channel [x] status register */
#define EGTM_CLS1_ATOM_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90A1B9Cu)

/** \brief 21BA0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS1_ATOM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90A1BA0u)

/** \brief 21BA4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS1_ATOM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90A1BA4u)

/** \brief 21BA8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS1_ATOM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90A1BA8u)

/** \brief 21BAC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS1_ATOM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90A1BACu)

/** \brief 21BB0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS1_ATOM_CH7_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90A1BB0u)

/** \brief 21BB4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS1_ATOM_CH7_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90A1BB4u)

/** \brief 21C40, ATOM[i] AGC global control register */
#define EGTM_CLS1_ATOM_AGC_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_GLB_CTRL*)0xF90A1C40u)

/** \brief 21C44, ATOM[i] AGC enable/disable control register */
#define EGTM_CLS1_ATOM_AGC_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ENDIS_CTRL*)0xF90A1C44u)

/** \brief 21C48, ATOM[i] AGC enable/disable status register */
#define EGTM_CLS1_ATOM_AGC_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ENDIS_STAT*)0xF90A1C48u)

/** \brief 21C4C, ATOM[i] AGC action time base register */
#define EGTM_CLS1_ATOM_AGC_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ACT_TB*)0xF90A1C4Cu)

/** \brief 21C50, ATOM[i] AGC output enable control register */
#define EGTM_CLS1_ATOM_AGC_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_OUTEN_CTRL*)0xF90A1C50u)

/** \brief 21C54, ATOM[i] AGC output enable status register */
#define EGTM_CLS1_ATOM_AGC_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_OUTEN_STAT*)0xF90A1C54u)

/** \brief 21C58, ATOM[i] AGC force update control register */
#define EGTM_CLS1_ATOM_AGC_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_FUPD_CTRL*)0xF90A1C58u)

/** \brief 21C5C, ATOM[i] AGC internal trigger control register */
#define EGTM_CLS1_ATOM_AGC_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_INT_TRIG*)0xF90A1C5Cu)

/** \brief 241D4, CCM[i] 2. Hardware Configuration Register */
#define EGTM_CLS1_CCM_HW_CONF2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_HW_CONF2*)0xF90A41D4u)

/** \brief 241DC, CCM[i] Hardware Configuration Register */
#define EGTM_CLS1_CCM_HW_CONF /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_HW_CONF*)0xF90A41DCu)

/** \brief 241E0, CCM[i] TIM AUX Input Source Register */
#define EGTM_CLS1_CCM_TIM_AUX_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_TIM_AUX_IN_SRC*)0xF90A41E0u)

/** \brief 241E8, CCM[i] TOM Output Register */
#define EGTM_CLS1_CCM_TOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_TOM_OUT*)0xF90A41E8u)

/** \brief 241EC, CCM[i] ATOM Output Register */
#define EGTM_CLS1_CCM_ATOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_ATOM_OUT*)0xF90A41ECu)

/** \brief 241F0, CCM[i] CMU Clock Configuration Register */
#define EGTM_CLS1_CCM_CMU_CLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CMU_CLK_CFG*)0xF90A41F0u)

/** \brief 241F4, CCM[i] CMU Fixed Clock Configuration Register */
#define EGTM_CLS1_CCM_CMU_FXCLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CMU_FXCLK_CFG*)0xF90A41F4u)

/** \brief 241F8, CCM[i] Configuration Register */
#define EGTM_CLS1_CCM_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CFG*)0xF90A41F8u)

/** \brief 241FC, CCM[i] Protection Register */
#define EGTM_CLS1_CCM_PROT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_PROT*)0xF90A41FCu)

/** \brief 24400, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS1_CDTM_DTM0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90A4400u)

/** \brief 24404, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS1_CDTM_DTM0_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90A4404u)

/** \brief 24408, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS1_CDTM_DTM0_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90A4408u)

/** \brief 2440C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS1_CDTM_DTM0_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90A440Cu)

/** \brief 24410, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS1_CDTM_DTM0_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90A4410u)

/** \brief 24414, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4414u)

/** \brief 24418, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4418u)

/** \brief 2441C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A441Cu)

/** \brief 24420, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4420u)

/** \brief 24424, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS1_CDTM_DTM0_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90A4424u)

/** \brief 24428, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS1_CDTM_DTM0_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90A4428u)

/** \brief 2442C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS1_CDTM_DTM0_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90A442Cu)

/** \brief 24430, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4430u)

/** \brief 24434, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4434u)

/** \brief 24438, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4438u)

/** \brief 2443C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM0_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A443Cu)

/** \brief 24440, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS1_CDTM_DTM1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90A4440u)

/** \brief 24444, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS1_CDTM_DTM1_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90A4444u)

/** \brief 24448, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS1_CDTM_DTM1_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90A4448u)

/** \brief 2444C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS1_CDTM_DTM1_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90A444Cu)

/** \brief 24450, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS1_CDTM_DTM1_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90A4450u)

/** \brief 24454, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4454u)

/** \brief 24458, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4458u)

/** \brief 2445C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A445Cu)

/** \brief 24460, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4460u)

/** \brief 24464, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS1_CDTM_DTM1_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90A4464u)

/** \brief 24468, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS1_CDTM_DTM1_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90A4468u)

/** \brief 2446C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS1_CDTM_DTM1_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90A446Cu)

/** \brief 24470, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4470u)

/** \brief 24474, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4474u)

/** \brief 24478, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4478u)

/** \brief 2447C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM1_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A447Cu)

/** \brief 24480, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS1_CDTM_DTM2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90A4480u)

/** \brief 24484, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS1_CDTM_DTM2_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90A4484u)

/** \brief 24488, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS1_CDTM_DTM2_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90A4488u)

/** \brief 2448C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS1_CDTM_DTM2_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90A448Cu)

/** \brief 24490, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS1_CDTM_DTM2_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90A4490u)

/** \brief 24494, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4494u)

/** \brief 24498, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4498u)

/** \brief 2449C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A449Cu)

/** \brief 244A0, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A44A0u)

/** \brief 244A4, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS1_CDTM_DTM2_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90A44A4u)

/** \brief 244A8, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS1_CDTM_DTM2_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90A44A8u)

/** \brief 244AC, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS1_CDTM_DTM2_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90A44ACu)

/** \brief 244B0, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44B0u)

/** \brief 244B4, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44B4u)

/** \brief 244B8, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44B8u)

/** \brief 244BC, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM2_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44BCu)

/** \brief 244C0, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS1_CDTM_DTM3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90A44C0u)

/** \brief 244C4, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS1_CDTM_DTM3_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90A44C4u)

/** \brief 244C8, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS1_CDTM_DTM3_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90A44C8u)

/** \brief 244CC, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS1_CDTM_DTM3_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90A44CCu)

/** \brief 244D0, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS1_CDTM_DTM3_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90A44D0u)

/** \brief 244D4, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A44D4u)

/** \brief 244D8, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A44D8u)

/** \brief 244DC, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A44DCu)

/** \brief 244E0, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A44E0u)

/** \brief 244E4, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS1_CDTM_DTM3_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90A44E4u)

/** \brief 244E8, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS1_CDTM_DTM3_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90A44E8u)

/** \brief 244EC, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS1_CDTM_DTM3_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90A44ECu)

/** \brief 244F0, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44F0u)

/** \brief 244F4, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44F4u)

/** \brief 244F8, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44F8u)

/** \brief 244FC, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM3_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A44FCu)

/** \brief 24500, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS1_CDTM_DTM4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90A4500u)

/** \brief 24504, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS1_CDTM_DTM4_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90A4504u)

/** \brief 24508, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS1_CDTM_DTM4_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90A4508u)

/** \brief 2450C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS1_CDTM_DTM4_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90A450Cu)

/** \brief 24510, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS1_CDTM_DTM4_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90A4510u)

/** \brief 24514, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4514u)

/** \brief 24518, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4518u)

/** \brief 2451C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A451Cu)

/** \brief 24520, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4520u)

/** \brief 24524, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS1_CDTM_DTM4_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90A4524u)

/** \brief 24528, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS1_CDTM_DTM4_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90A4528u)

/** \brief 2452C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS1_CDTM_DTM4_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90A452Cu)

/** \brief 24530, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4530u)

/** \brief 24534, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4534u)

/** \brief 24538, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4538u)

/** \brief 2453C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM4_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A453Cu)

/** \brief 24540, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS1_CDTM_DTM5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90A4540u)

/** \brief 24544, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS1_CDTM_DTM5_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90A4544u)

/** \brief 24548, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS1_CDTM_DTM5_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90A4548u)

/** \brief 2454C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS1_CDTM_DTM5_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90A454Cu)

/** \brief 24550, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS1_CDTM_DTM5_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90A4550u)

/** \brief 24554, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4554u)

/** \brief 24558, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4558u)

/** \brief 2455C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A455Cu)

/** \brief 24560, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90A4560u)

/** \brief 24564, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS1_CDTM_DTM5_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90A4564u)

/** \brief 24568, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS1_CDTM_DTM5_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90A4568u)

/** \brief 2456C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS1_CDTM_DTM5_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90A456Cu)

/** \brief 24570, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4570u)

/** \brief 24574, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4574u)

/** \brief 24578, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A4578u)

/** \brief 2457C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS1_CDTM_DTM5_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90A457Cu)

/** \brief 24C00, SPE[i] Control Status Register */
#define EGTM_CLS1_SPE_CTRL_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CTRL_STAT*)0xF90A4C00u)

/** \brief 24C04, SPE[i] Input Pattern Definition Register */
#define EGTM_CLS1_SPE_PAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_PAT*)0xF90A4C04u)

/** \brief 24C08, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C08u)

/** \brief 24C0C, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C0Cu)

/** \brief 24C10, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C10u)

/** \brief 24C14, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C14u)

/** \brief 24C18, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C18u)

/** \brief 24C1C, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C1Cu)

/** \brief 24C20, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C20u)

/** \brief 24C24, SPE[i] Output Definition Register [p] */
#define EGTM_CLS1_SPE_OUT_PAT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90A4C24u)

/** \brief 24C28, SPE[i] Output Control Register */
#define EGTM_CLS1_SPE_OUT_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_CTRL*)0xF90A4C28u)

/** \brief 24C2C, SPE[i] Interrupt Notification Register */
#define EGTM_CLS1_SPE_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_NOTIFY*)0xF90A4C2Cu)

/** \brief 24C30, SPE[i] Interrupt Enable Register */
#define EGTM_CLS1_SPE_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_EN*)0xF90A4C30u)

/** \brief 24C34, SPE[i] Interrupt Generation By Software */
#define EGTM_CLS1_SPE_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_FORCINT*)0xF90A4C34u)

/** \brief 24C38, SPE[i] Interrupt Mode Configuration Register */
#define EGTM_CLS1_SPE_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_MODE*)0xF90A4C38u)

/** \brief 24C3C, SPE[i] Error Interrupt Enable Register */
#define EGTM_CLS1_SPE_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_EIRQ_EN*)0xF90A4C3Cu)

/** \brief 24C40, SPE[i] Input Revolution Counter */
#define EGTM_CLS1_SPE_REV_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_REV_CNT*)0xF90A4C40u)

/** \brief 24C44, SPE[i] Revolution Counter Compare Value */
#define EGTM_CLS1_SPE_REV_CMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_REV_CMP*)0xF90A4C44u)

/** \brief 24C48, SPE[i] Control Status Register 2 */
#define EGTM_CLS1_SPE_CTRL_STAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CTRL_STAT2*)0xF90A4C48u)

/** \brief 24C4C, SPE[i] Command Register */
#define EGTM_CLS1_SPE_CMD /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CMD*)0xF90A4C4Cu)

/** \brief 40680, MON status register */
#define EGTM_CLS2_MON_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_MON_STATUS*)0xF90C0680u)

/** \brief 406C0, CMP comparator enable register */
#define EGTM_CLS2_CMP_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_EN*)0xF90C06C0u)

/** \brief 406C4, CMP event notification register */
#define EGTM_CLS2_CMP_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_NOTIFY*)0xF90C06C4u)

/** \brief 406C8, CMP interrupt enable register */
#define EGTM_CLS2_CMP_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_EN*)0xF90C06C8u)

/** \brief 406CC, CMP interrupt force register */
#define EGTM_CLS2_CMP_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_FORCINT*)0xF90C06CCu)

/** \brief 406D0, CMP interrupt mode configuration register */
#define EGTM_CLS2_CMP_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_IRQ_MODE*)0xF90C06D0u)

/** \brief 406D4, CMP error interrupt enable register */
#define EGTM_CLS2_CMP_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CMP_EIRQ_EN*)0xF90C06D4u)

/** \brief 40800, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH0_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0800u)

/** \brief 40804, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH0_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0804u)

/** \brief 40808, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH0_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0808u)

/** \brief 4080C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH0_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C080Cu)

/** \brief 40810, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH0_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0810u)

/** \brief 40814, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH0_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0814u)

/** \brief 40818, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH0_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0818u)

/** \brief 4081C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH0_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C081Cu)

/** \brief 40820, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH0_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C0820u)

/** \brief 40824, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C0824u)

/** \brief 40828, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH0_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C0828u)

/** \brief 4082C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C082Cu)

/** \brief 40830, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C0830u)

/** \brief 40834, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C0834u)

/** \brief 40838, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C0838u)

/** \brief 4083C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH0_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C083Cu)

/** \brief 40880, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH1_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0880u)

/** \brief 40884, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH1_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0884u)

/** \brief 40888, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH1_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0888u)

/** \brief 4088C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH1_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C088Cu)

/** \brief 40890, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH1_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0890u)

/** \brief 40894, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH1_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0894u)

/** \brief 40898, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH1_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0898u)

/** \brief 4089C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH1_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C089Cu)

/** \brief 408A0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH1_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C08A0u)

/** \brief 408A4, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C08A4u)

/** \brief 408A8, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH1_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C08A8u)

/** \brief 408AC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C08ACu)

/** \brief 408B0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C08B0u)

/** \brief 408B4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C08B4u)

/** \brief 408B8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C08B8u)

/** \brief 408BC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH1_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C08BCu)

/** \brief 40900, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH2_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0900u)

/** \brief 40904, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH2_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0904u)

/** \brief 40908, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH2_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0908u)

/** \brief 4090C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH2_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C090Cu)

/** \brief 40910, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH2_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0910u)

/** \brief 40914, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH2_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0914u)

/** \brief 40918, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH2_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0918u)

/** \brief 4091C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH2_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C091Cu)

/** \brief 40920, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH2_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C0920u)

/** \brief 40924, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C0924u)

/** \brief 40928, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH2_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C0928u)

/** \brief 4092C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C092Cu)

/** \brief 40930, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C0930u)

/** \brief 40934, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C0934u)

/** \brief 40938, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C0938u)

/** \brief 4093C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH2_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C093Cu)

/** \brief 40980, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH3_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0980u)

/** \brief 40984, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH3_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0984u)

/** \brief 40988, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH3_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0988u)

/** \brief 4098C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH3_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C098Cu)

/** \brief 40990, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH3_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0990u)

/** \brief 40994, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH3_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0994u)

/** \brief 40998, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH3_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0998u)

/** \brief 4099C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH3_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C099Cu)

/** \brief 409A0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH3_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C09A0u)

/** \brief 409A4, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C09A4u)

/** \brief 409A8, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH3_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C09A8u)

/** \brief 409AC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C09ACu)

/** \brief 409B0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C09B0u)

/** \brief 409B4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C09B4u)

/** \brief 409B8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C09B8u)

/** \brief 409BC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH3_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C09BCu)

/** \brief 40A00, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH4_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0A00u)

/** \brief 40A04, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH4_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0A04u)

/** \brief 40A08, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH4_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0A08u)

/** \brief 40A0C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH4_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C0A0Cu)

/** \brief 40A10, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH4_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0A10u)

/** \brief 40A14, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH4_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0A14u)

/** \brief 40A18, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH4_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0A18u)

/** \brief 40A1C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH4_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C0A1Cu)

/** \brief 40A20, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH4_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C0A20u)

/** \brief 40A24, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C0A24u)

/** \brief 40A28, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH4_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C0A28u)

/** \brief 40A2C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C0A2Cu)

/** \brief 40A30, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C0A30u)

/** \brief 40A34, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C0A34u)

/** \brief 40A38, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C0A38u)

/** \brief 40A3C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH4_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C0A3Cu)

/** \brief 40A80, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH5_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0A80u)

/** \brief 40A84, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH5_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0A84u)

/** \brief 40A88, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH5_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0A88u)

/** \brief 40A8C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH5_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C0A8Cu)

/** \brief 40A90, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH5_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0A90u)

/** \brief 40A94, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH5_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0A94u)

/** \brief 40A98, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH5_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0A98u)

/** \brief 40A9C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH5_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C0A9Cu)

/** \brief 40AA0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH5_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C0AA0u)

/** \brief 40AA4, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C0AA4u)

/** \brief 40AA8, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH5_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C0AA8u)

/** \brief 40AAC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C0AACu)

/** \brief 40AB0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C0AB0u)

/** \brief 40AB4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C0AB4u)

/** \brief 40AB8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C0AB8u)

/** \brief 40ABC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH5_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C0ABCu)

/** \brief 40B00, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH6_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0B00u)

/** \brief 40B04, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH6_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0B04u)

/** \brief 40B08, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH6_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0B08u)

/** \brief 40B0C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH6_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C0B0Cu)

/** \brief 40B10, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH6_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0B10u)

/** \brief 40B14, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH6_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0B14u)

/** \brief 40B18, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH6_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0B18u)

/** \brief 40B1C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH6_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C0B1Cu)

/** \brief 40B20, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH6_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C0B20u)

/** \brief 40B24, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C0B24u)

/** \brief 40B28, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH6_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C0B28u)

/** \brief 40B2C, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C0B2Cu)

/** \brief 40B30, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C0B30u)

/** \brief 40B34, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C0B34u)

/** \brief 40B38, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C0B38u)

/** \brief 40B3C, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH6_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C0B3Cu)

/** \brief 40B80, TIM[i] channel [x] general-purpose 0 register */
#define EGTM_CLS2_TIM_CH7_GPR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR0*)0xF90C0B80u)

/** \brief 40B84, TIM[i] channel [x] general-purpose 1 register */
#define EGTM_CLS2_TIM_CH7_GPR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_GPR1*)0xF90C0B84u)

/** \brief 40B88, TIM[i] channel [x] SMU counter register */
#define EGTM_CLS2_TIM_CH7_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNT*)0xF90C0B88u)

/** \brief 40B8C, TIM[i] channel [x] SMU edge counter register */
#define EGTM_CLS2_TIM_CH7_ECNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECNT*)0xF90C0B8Cu)

/** \brief 40B90, TIM[i] channel [x] SMU shadow counter register */
#define EGTM_CLS2_TIM_CH7_CNTS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CNTS*)0xF90C0B90u)

/** \brief 40B94, TIM[i]_CH[x]_TDUC */
#define EGTM_CLS2_TIM_CH7_TDUC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUC*)0xF90C0B94u)

/** \brief 40B98, TIM[i]_CH[x]_TDUV */
#define EGTM_CLS2_TIM_CH7_TDUV /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_TDUV*)0xF90C0B98u)

/** \brief 40B9C, TIM[i] channel [x] filter parameter 0 register */
#define EGTM_CLS2_TIM_CH7_FLT_RE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_RE*)0xF90C0B9Cu)

/** \brief 40BA0, TIM[i] channel [x] filter parameter 1 register */
#define EGTM_CLS2_TIM_CH7_FLT_FE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_FLT_FE*)0xF90C0BA0u)

/** \brief 40BA4, TIM[i] channel [x] control register */
#define EGTM_CLS2_TIM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_CTRL*)0xF90C0BA4u)

/** \brief 40BA8, TIM[i] channel [x] extended control register */
#define EGTM_CLS2_TIM_CH7_ECTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_ECTRL*)0xF90C0BA8u)

/** \brief 40BAC, TIM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TIM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_NOTIFY*)0xF90C0BACu)

/** \brief 40BB0, TIM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TIM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_EN*)0xF90C0BB0u)

/** \brief 40BB4, TIM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TIM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_FORCINT*)0xF90C0BB4u)

/** \brief 40BB8, TIM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_TIM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_IRQ_MODE*)0xF90C0BB8u)

/** \brief 40BBC, TIM[i] channel [x] error interrupt enable register */
#define EGTM_CLS2_TIM_CH7_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_CH_EIRQ_EN*)0xF90C0BBCu)

/** \brief 40C00, TIM[i] input value observation register */
#define EGTM_CLS2_TIM_INP_VAL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_INP_VAL*)0xF90C0C00u)

/** \brief 40C04, TIM[i] AUX IN source selection register */
#define EGTM_CLS2_TIM_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_IN_SRC*)0xF90C0C04u)

/** \brief 40C08, TIM[i] global software reset register */
#define EGTM_CLS2_TIM_RST /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TIM_RST*)0xF90C0C08u)

/** \brief 41000, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1000u)

/** \brief 41004, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1004u)

/** \brief 41008, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1008u)

/** \brief 4100C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C100Cu)

/** \brief 41010, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1010u)

/** \brief 41014, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1014u)

/** \brief 41018, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1018u)

/** \brief 4101C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C101Cu)

/** \brief 41020, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1020u)

/** \brief 41024, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1024u)

/** \brief 41028, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1028u)

/** \brief 41030, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH0_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1030u)

/** \brief 41040, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1040u)

/** \brief 41044, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1044u)

/** \brief 41048, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1048u)

/** \brief 4104C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C104Cu)

/** \brief 41050, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1050u)

/** \brief 41054, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1054u)

/** \brief 41058, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1058u)

/** \brief 4105C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C105Cu)

/** \brief 41060, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1060u)

/** \brief 41064, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1064u)

/** \brief 41068, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1068u)

/** \brief 41070, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH1_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1070u)

/** \brief 41080, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1080u)

/** \brief 41084, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1084u)

/** \brief 41088, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1088u)

/** \brief 4108C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C108Cu)

/** \brief 41090, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1090u)

/** \brief 41094, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1094u)

/** \brief 41098, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1098u)

/** \brief 4109C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C109Cu)

/** \brief 410A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C10A0u)

/** \brief 410A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C10A4u)

/** \brief 410A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C10A8u)

/** \brief 410B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH2_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C10B0u)

/** \brief 410C0, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C10C0u)

/** \brief 410C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C10C4u)

/** \brief 410C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C10C8u)

/** \brief 410CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C10CCu)

/** \brief 410D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C10D0u)

/** \brief 410D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C10D4u)

/** \brief 410D8, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C10D8u)

/** \brief 410DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C10DCu)

/** \brief 410E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C10E0u)

/** \brief 410E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C10E4u)

/** \brief 410E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C10E8u)

/** \brief 410F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH3_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C10F0u)

/** \brief 41100, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1100u)

/** \brief 41104, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1104u)

/** \brief 41108, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1108u)

/** \brief 4110C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C110Cu)

/** \brief 41110, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1110u)

/** \brief 41114, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1114u)

/** \brief 41118, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1118u)

/** \brief 4111C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C111Cu)

/** \brief 41120, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1120u)

/** \brief 41124, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1124u)

/** \brief 41128, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1128u)

/** \brief 41130, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH4_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1130u)

/** \brief 41140, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1140u)

/** \brief 41144, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1144u)

/** \brief 41148, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1148u)

/** \brief 4114C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C114Cu)

/** \brief 41150, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1150u)

/** \brief 41154, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1154u)

/** \brief 41158, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1158u)

/** \brief 4115C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C115Cu)

/** \brief 41160, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1160u)

/** \brief 41164, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1164u)

/** \brief 41168, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1168u)

/** \brief 41170, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH5_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1170u)

/** \brief 41180, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1180u)

/** \brief 41184, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1184u)

/** \brief 41188, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1188u)

/** \brief 4118C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C118Cu)

/** \brief 41190, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1190u)

/** \brief 41194, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1194u)

/** \brief 41198, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1198u)

/** \brief 4119C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C119Cu)

/** \brief 411A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C11A0u)

/** \brief 411A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C11A4u)

/** \brief 411A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C11A8u)

/** \brief 411B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH6_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C11B0u)

/** \brief 411C0, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C11C0u)

/** \brief 411C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C11C4u)

/** \brief 411C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C11C8u)

/** \brief 411CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C11CCu)

/** \brief 411D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C11D0u)

/** \brief 411D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C11D4u)

/** \brief 411D8, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C11D8u)

/** \brief 411DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C11DCu)

/** \brief 411E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C11E0u)

/** \brief 411E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C11E4u)

/** \brief 411E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C11E8u)

/** \brief 411F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH7_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C11F0u)

/** \brief 41200, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH8_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1200u)

/** \brief 41204, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH8_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1204u)

/** \brief 41208, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH8_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1208u)

/** \brief 4120C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH8_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C120Cu)

/** \brief 41210, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH8_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1210u)

/** \brief 41214, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH8_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1214u)

/** \brief 41218, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH8_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1218u)

/** \brief 4121C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH8_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C121Cu)

/** \brief 41220, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH8_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1220u)

/** \brief 41224, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH8_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1224u)

/** \brief 41228, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH8_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1228u)

/** \brief 41230, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH8_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1230u)

/** \brief 41240, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH9_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1240u)

/** \brief 41244, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH9_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1244u)

/** \brief 41248, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH9_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1248u)

/** \brief 4124C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH9_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C124Cu)

/** \brief 41250, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH9_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1250u)

/** \brief 41254, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH9_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1254u)

/** \brief 41258, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH9_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1258u)

/** \brief 4125C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH9_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C125Cu)

/** \brief 41260, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH9_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1260u)

/** \brief 41264, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH9_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1264u)

/** \brief 41268, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH9_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1268u)

/** \brief 41270, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH9_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1270u)

/** \brief 41280, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH10_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1280u)

/** \brief 41284, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH10_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1284u)

/** \brief 41288, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH10_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1288u)

/** \brief 4128C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH10_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C128Cu)

/** \brief 41290, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH10_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1290u)

/** \brief 41294, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH10_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1294u)

/** \brief 41298, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH10_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1298u)

/** \brief 4129C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH10_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C129Cu)

/** \brief 412A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH10_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C12A0u)

/** \brief 412A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH10_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C12A4u)

/** \brief 412A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH10_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C12A8u)

/** \brief 412B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH10_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C12B0u)

/** \brief 412C0, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH11_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C12C0u)

/** \brief 412C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH11_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C12C4u)

/** \brief 412C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH11_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C12C8u)

/** \brief 412CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH11_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C12CCu)

/** \brief 412D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH11_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C12D0u)

/** \brief 412D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH11_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C12D4u)

/** \brief 412D8, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH11_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C12D8u)

/** \brief 412DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH11_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C12DCu)

/** \brief 412E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH11_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C12E0u)

/** \brief 412E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH11_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C12E4u)

/** \brief 412E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH11_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C12E8u)

/** \brief 412F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH11_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C12F0u)

/** \brief 41300, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH12_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1300u)

/** \brief 41304, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH12_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1304u)

/** \brief 41308, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH12_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1308u)

/** \brief 4130C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH12_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C130Cu)

/** \brief 41310, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH12_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1310u)

/** \brief 41314, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH12_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1314u)

/** \brief 41318, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH12_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1318u)

/** \brief 4131C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH12_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C131Cu)

/** \brief 41320, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH12_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1320u)

/** \brief 41324, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH12_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1324u)

/** \brief 41328, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH12_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1328u)

/** \brief 41330, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH12_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1330u)

/** \brief 41340, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH13_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1340u)

/** \brief 41344, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH13_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1344u)

/** \brief 41348, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH13_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1348u)

/** \brief 4134C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH13_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C134Cu)

/** \brief 41350, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH13_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1350u)

/** \brief 41354, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH13_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1354u)

/** \brief 41358, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH13_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1358u)

/** \brief 4135C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH13_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C135Cu)

/** \brief 41360, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH13_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C1360u)

/** \brief 41364, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH13_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C1364u)

/** \brief 41368, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH13_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C1368u)

/** \brief 41370, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH13_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C1370u)

/** \brief 41380, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH14_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C1380u)

/** \brief 41384, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH14_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C1384u)

/** \brief 41388, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH14_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C1388u)

/** \brief 4138C, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH14_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C138Cu)

/** \brief 41390, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH14_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C1390u)

/** \brief 41394, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH14_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C1394u)

/** \brief 41398, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH14_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C1398u)

/** \brief 4139C, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH14_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C139Cu)

/** \brief 413A0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH14_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C13A0u)

/** \brief 413A4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH14_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C13A4u)

/** \brief 413A8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH14_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C13A8u)

/** \brief 413B0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH14_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C13B0u)

/** \brief 413C0, TOM[i] channel [x] control register */
#define EGTM_CLS2_TOM_CH15_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL*)0xF90C13C0u)

/** \brief 413C4, TOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_TOM_CH15_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR0*)0xF90C13C4u)

/** \brief 413C8, TOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_TOM_CH15_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_SR1*)0xF90C13C8u)

/** \brief 413CC, TOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_TOM_CH15_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM0*)0xF90C13CCu)

/** \brief 413D0, TOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_TOM_CH15_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CM1*)0xF90C13D0u)

/** \brief 413D4, TOM[i] channel [x] CCU0 counter */
#define EGTM_CLS2_TOM_CH15_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CN0*)0xF90C13D4u)

/** \brief 413D8, TOM[i] channel [x] status register */
#define EGTM_CLS2_TOM_CH15_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_STAT*)0xF90C13D8u)

/** \brief 413DC, TOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_TOM_CH15_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_NOTIFY*)0xF90C13DCu)

/** \brief 413E0, TOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_TOM_CH15_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_EN*)0xF90C13E0u)

/** \brief 413E4, TOM[i] channel [x] force interrupt register */
#define EGTM_CLS2_TOM_CH15_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_FORCINT*)0xF90C13E4u)

/** \brief 413E8, TOM[i] channel [x] interrupt mode register */
#define EGTM_CLS2_TOM_CH15_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_IRQ_MODE*)0xF90C13E8u)

/** \brief 413F0, TOM[i] channel [x] control shadow register */
#define EGTM_CLS2_TOM_CH15_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_CH_CTRL_SR*)0xF90C13F0u)

/** \brief 41430, TOM[i] TGC [g] global control register */
#define EGTM_CLS2_TOM_TGC0_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_GLB_CTRL*)0xF90C1430u)

/** \brief 41434, TOM[i] TGC [g] action time base register */
#define EGTM_CLS2_TOM_TGC0_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ACT_TB*)0xF90C1434u)

/** \brief 41438, TOM[i] TGC [g] force update control register */
#define EGTM_CLS2_TOM_TGC0_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_FUPD_CTRL*)0xF90C1438u)

/** \brief 4143C, TOM[i] TGC [g] internal trigger control register */
#define EGTM_CLS2_TOM_TGC0_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_INT_TRIG*)0xF90C143Cu)

/** \brief 41470, TOM[i] TGC [g] enable/disable control register */
#define EGTM_CLS2_TOM_TGC0_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_CTRL*)0xF90C1470u)

/** \brief 41474, TOM[i] TGC [g] enable/disable status register */
#define EGTM_CLS2_TOM_TGC0_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_STAT*)0xF90C1474u)

/** \brief 41478, TOM[i] TGC [g] output enable control register */
#define EGTM_CLS2_TOM_TGC0_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_CTRL*)0xF90C1478u)

/** \brief 4147C, TOM[i] TGC [g] output enable status register */
#define EGTM_CLS2_TOM_TGC0_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_STAT*)0xF90C147Cu)

/** \brief 414B0, TOM[i] TGC [g] global control register */
#define EGTM_CLS2_TOM_TGC1_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_GLB_CTRL*)0xF90C14B0u)

/** \brief 414B4, TOM[i] TGC [g] action time base register */
#define EGTM_CLS2_TOM_TGC1_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ACT_TB*)0xF90C14B4u)

/** \brief 414B8, TOM[i] TGC [g] force update control register */
#define EGTM_CLS2_TOM_TGC1_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_FUPD_CTRL*)0xF90C14B8u)

/** \brief 414BC, TOM[i] TGC [g] internal trigger control register */
#define EGTM_CLS2_TOM_TGC1_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_INT_TRIG*)0xF90C14BCu)

/** \brief 414F0, TOM[i] TGC [g] enable/disable control register */
#define EGTM_CLS2_TOM_TGC1_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_CTRL*)0xF90C14F0u)

/** \brief 414F4, TOM[i] TGC [g] enable/disable status register */
#define EGTM_CLS2_TOM_TGC1_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_ENDIS_STAT*)0xF90C14F4u)

/** \brief 414F8, TOM[i] TGC [g] output enable control register */
#define EGTM_CLS2_TOM_TGC1_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_CTRL*)0xF90C14F8u)

/** \brief 414FC, TOM[i] TGC [g] output enable status register */
#define EGTM_CLS2_TOM_TGC1_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_TOM_TGC_OUTEN_STAT*)0xF90C14FCu)

/** \brief 41804, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH0_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1804u)

/** \brief 41804, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH0_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1804u)

/** \brief 41804, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH0_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1804u)

/** \brief 41804, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH0_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1804u)

/** \brief 41804, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH0_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1804u)

/** \brief 41804, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1804u)

/** \brief 41808, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH0_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1808u)

/** \brief 4180C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH0_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C180Cu)

/** \brief 41810, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH0_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1810u)

/** \brief 41814, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH0_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1814u)

/** \brief 41818, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH0_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1818u)

/** \brief 4181C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C181Cu)

/** \brief 41820, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH0_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C1820u)

/** \brief 41824, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH0_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C1824u)

/** \brief 41828, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH0_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C1828u)

/** \brief 4182C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH0_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C182Cu)

/** \brief 41830, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH0_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C1830u)

/** \brief 41834, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH0_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C1834u)

/** \brief 41884, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH1_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1884u)

/** \brief 41884, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH1_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1884u)

/** \brief 41884, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH1_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1884u)

/** \brief 41884, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH1_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1884u)

/** \brief 41884, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH1_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1884u)

/** \brief 41884, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1884u)

/** \brief 41888, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH1_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1888u)

/** \brief 4188C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH1_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C188Cu)

/** \brief 41890, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH1_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1890u)

/** \brief 41894, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH1_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1894u)

/** \brief 41898, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH1_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1898u)

/** \brief 4189C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C189Cu)

/** \brief 418A0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH1_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C18A0u)

/** \brief 418A4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH1_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C18A4u)

/** \brief 418A8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH1_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C18A8u)

/** \brief 418AC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH1_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C18ACu)

/** \brief 418B0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH1_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C18B0u)

/** \brief 418B4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH1_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C18B4u)

/** \brief 41904, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH2_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1904u)

/** \brief 41904, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH2_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1904u)

/** \brief 41904, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH2_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1904u)

/** \brief 41904, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH2_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1904u)

/** \brief 41904, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH2_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1904u)

/** \brief 41904, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1904u)

/** \brief 41908, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH2_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1908u)

/** \brief 4190C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH2_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C190Cu)

/** \brief 41910, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH2_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1910u)

/** \brief 41914, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH2_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1914u)

/** \brief 41918, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH2_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1918u)

/** \brief 4191C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C191Cu)

/** \brief 41920, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH2_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C1920u)

/** \brief 41924, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH2_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C1924u)

/** \brief 41928, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH2_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C1928u)

/** \brief 4192C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH2_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C192Cu)

/** \brief 41930, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH2_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C1930u)

/** \brief 41934, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH2_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C1934u)

/** \brief 41984, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH3_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1984u)

/** \brief 41984, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH3_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1984u)

/** \brief 41984, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH3_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1984u)

/** \brief 41984, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH3_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1984u)

/** \brief 41984, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH3_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1984u)

/** \brief 41984, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1984u)

/** \brief 41988, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH3_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1988u)

/** \brief 4198C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH3_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C198Cu)

/** \brief 41990, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH3_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1990u)

/** \brief 41994, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH3_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1994u)

/** \brief 41998, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH3_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1998u)

/** \brief 4199C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C199Cu)

/** \brief 419A0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH3_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C19A0u)

/** \brief 419A4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH3_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C19A4u)

/** \brief 419A8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH3_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C19A8u)

/** \brief 419AC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH3_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C19ACu)

/** \brief 419B0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH3_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C19B0u)

/** \brief 419B4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH3_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C19B4u)

/** \brief 41A04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH4_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1A04u)

/** \brief 41A04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH4_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1A04u)

/** \brief 41A04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH4_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1A04u)

/** \brief 41A04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH4_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1A04u)

/** \brief 41A04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH4_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1A04u)

/** \brief 41A04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1A04u)

/** \brief 41A08, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH4_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1A08u)

/** \brief 41A0C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH4_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C1A0Cu)

/** \brief 41A10, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH4_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1A10u)

/** \brief 41A14, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH4_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1A14u)

/** \brief 41A18, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH4_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1A18u)

/** \brief 41A1C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C1A1Cu)

/** \brief 41A20, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH4_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C1A20u)

/** \brief 41A24, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH4_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C1A24u)

/** \brief 41A28, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH4_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C1A28u)

/** \brief 41A2C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH4_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C1A2Cu)

/** \brief 41A30, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH4_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C1A30u)

/** \brief 41A34, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH4_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C1A34u)

/** \brief 41A84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH5_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1A84u)

/** \brief 41A84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH5_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1A84u)

/** \brief 41A84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH5_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1A84u)

/** \brief 41A84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH5_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1A84u)

/** \brief 41A84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH5_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1A84u)

/** \brief 41A84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1A84u)

/** \brief 41A88, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH5_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1A88u)

/** \brief 41A8C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH5_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C1A8Cu)

/** \brief 41A90, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH5_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1A90u)

/** \brief 41A94, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH5_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1A94u)

/** \brief 41A98, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH5_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1A98u)

/** \brief 41A9C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C1A9Cu)

/** \brief 41AA0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH5_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C1AA0u)

/** \brief 41AA4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH5_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C1AA4u)

/** \brief 41AA8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH5_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C1AA8u)

/** \brief 41AAC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH5_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C1AACu)

/** \brief 41AB0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH5_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C1AB0u)

/** \brief 41AB4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH5_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C1AB4u)

/** \brief 41B04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH6_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1B04u)

/** \brief 41B04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH6_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1B04u)

/** \brief 41B04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH6_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1B04u)

/** \brief 41B04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH6_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1B04u)

/** \brief 41B04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH6_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1B04u)

/** \brief 41B04, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1B04u)

/** \brief 41B08, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH6_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1B08u)

/** \brief 41B0C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH6_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C1B0Cu)

/** \brief 41B10, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH6_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1B10u)

/** \brief 41B14, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH6_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1B14u)

/** \brief 41B18, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH6_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1B18u)

/** \brief 41B1C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C1B1Cu)

/** \brief 41B20, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH6_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C1B20u)

/** \brief 41B24, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH6_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C1B24u)

/** \brief 41B28, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH6_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C1B28u)

/** \brief 41B2C, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH6_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C1B2Cu)

/** \brief 41B30, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH6_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C1B30u)

/** \brief 41B34, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH6_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C1B34u)

/** \brief 41B84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH7_CTRL_SOMI /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMI*)0xF90C1B84u)

/** \brief 41B84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH7_CTRL_SOMC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMC*)0xF90C1B84u)

/** \brief 41B84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH7_CTRL_SOMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMP*)0xF90C1B84u)

/** \brief 41B84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH7_CTRL_SOMS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMS*)0xF90C1B84u)

/** \brief 41B84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH7_CTRL_SOMB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SOMB*)0xF90C1B84u)

/** \brief 41B84, ATOM[i] channel [x] control register */
#define EGTM_CLS2_ATOM_CH7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL*)0xF90C1B84u)

/** \brief 41B88, ATOM[i] channel [x] CCU0 compare shadow register */
#define EGTM_CLS2_ATOM_CH7_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR0*)0xF90C1B88u)

/** \brief 41B8C, ATOM[i] channel [x] CCU1 compare shadow register */
#define EGTM_CLS2_ATOM_CH7_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_SR1*)0xF90C1B8Cu)

/** \brief 41B90, ATOM[i] channel [x] CCU0 compare register */
#define EGTM_CLS2_ATOM_CH7_CM0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM0*)0xF90C1B90u)

/** \brief 41B94, ATOM[i] channel [x] CCU1 compare register */
#define EGTM_CLS2_ATOM_CH7_CM1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CM1*)0xF90C1B94u)

/** \brief 41B98, ATOM[i] channel [x] CCU0 counter register */
#define EGTM_CLS2_ATOM_CH7_CN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CN0*)0xF90C1B98u)

/** \brief 41B9C, ATOM[i] channel [x] status register */
#define EGTM_CLS2_ATOM_CH7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_STAT*)0xF90C1B9Cu)

/** \brief 41BA0, ATOM[i] channel [x] interrupt notification register */
#define EGTM_CLS2_ATOM_CH7_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_NOTIFY*)0xF90C1BA0u)

/** \brief 41BA4, ATOM[i] channel [x] interrupt enable register */
#define EGTM_CLS2_ATOM_CH7_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_EN*)0xF90C1BA4u)

/** \brief 41BA8, ATOM[i] channel [x] software interrupt generation */
#define EGTM_CLS2_ATOM_CH7_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_FORCINT*)0xF90C1BA8u)

/** \brief 41BAC, ATOM[i] channel [x] interrupt mode configuration register */
#define EGTM_CLS2_ATOM_CH7_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_IRQ_MODE*)0xF90C1BACu)

/** \brief 41BB0, ATOM[i] channel [x] control2 register */
#define EGTM_CLS2_ATOM_CH7_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL2*)0xF90C1BB0u)

/** \brief 41BB4, ATOM[i] channel [x] control shadow register */
#define EGTM_CLS2_ATOM_CH7_CTRL_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_CH_CTRL_SR*)0xF90C1BB4u)

/** \brief 41C40, ATOM[i] AGC global control register */
#define EGTM_CLS2_ATOM_AGC_GLB_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_GLB_CTRL*)0xF90C1C40u)

/** \brief 41C44, ATOM[i] AGC enable/disable control register */
#define EGTM_CLS2_ATOM_AGC_ENDIS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ENDIS_CTRL*)0xF90C1C44u)

/** \brief 41C48, ATOM[i] AGC enable/disable status register */
#define EGTM_CLS2_ATOM_AGC_ENDIS_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ENDIS_STAT*)0xF90C1C48u)

/** \brief 41C4C, ATOM[i] AGC action time base register */
#define EGTM_CLS2_ATOM_AGC_ACT_TB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_ACT_TB*)0xF90C1C4Cu)

/** \brief 41C50, ATOM[i] AGC output enable control register */
#define EGTM_CLS2_ATOM_AGC_OUTEN_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_OUTEN_CTRL*)0xF90C1C50u)

/** \brief 41C54, ATOM[i] AGC output enable status register */
#define EGTM_CLS2_ATOM_AGC_OUTEN_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_OUTEN_STAT*)0xF90C1C54u)

/** \brief 41C58, ATOM[i] AGC force update control register */
#define EGTM_CLS2_ATOM_AGC_FUPD_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_FUPD_CTRL*)0xF90C1C58u)

/** \brief 41C5C, ATOM[i] AGC internal trigger control register */
#define EGTM_CLS2_ATOM_AGC_INT_TRIG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_ATOM_AGC_INT_TRIG*)0xF90C1C5Cu)

/** \brief 441D4, CCM[i] 2. Hardware Configuration Register */
#define EGTM_CLS2_CCM_HW_CONF2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_HW_CONF2*)0xF90C41D4u)

/** \brief 441DC, CCM[i] Hardware Configuration Register */
#define EGTM_CLS2_CCM_HW_CONF /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_HW_CONF*)0xF90C41DCu)

/** \brief 441E0, CCM[i] TIM AUX Input Source Register */
#define EGTM_CLS2_CCM_TIM_AUX_IN_SRC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_TIM_AUX_IN_SRC*)0xF90C41E0u)

/** \brief 441E8, CCM[i] TOM Output Register */
#define EGTM_CLS2_CCM_TOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_TOM_OUT*)0xF90C41E8u)

/** \brief 441EC, CCM[i] ATOM Output Register */
#define EGTM_CLS2_CCM_ATOM_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_ATOM_OUT*)0xF90C41ECu)

/** \brief 441F0, CCM[i] CMU Clock Configuration Register */
#define EGTM_CLS2_CCM_CMU_CLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CMU_CLK_CFG*)0xF90C41F0u)

/** \brief 441F4, CCM[i] CMU Fixed Clock Configuration Register */
#define EGTM_CLS2_CCM_CMU_FXCLK_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CMU_FXCLK_CFG*)0xF90C41F4u)

/** \brief 441F8, CCM[i] Configuration Register */
#define EGTM_CLS2_CCM_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_CFG*)0xF90C41F8u)

/** \brief 441FC, CCM[i] Protection Register */
#define EGTM_CLS2_CCM_PROT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CCM_PROT*)0xF90C41FCu)

/** \brief 44400, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS2_CDTM_DTM0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90C4400u)

/** \brief 44404, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS2_CDTM_DTM0_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90C4404u)

/** \brief 44408, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS2_CDTM_DTM0_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90C4408u)

/** \brief 4440C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS2_CDTM_DTM0_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90C440Cu)

/** \brief 44410, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS2_CDTM_DTM0_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90C4410u)

/** \brief 44414, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4414u)

/** \brief 44418, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4418u)

/** \brief 4441C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C441Cu)

/** \brief 44420, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4420u)

/** \brief 44424, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS2_CDTM_DTM0_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90C4424u)

/** \brief 44428, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS2_CDTM_DTM0_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90C4428u)

/** \brief 4442C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS2_CDTM_DTM0_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90C442Cu)

/** \brief 44430, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4430u)

/** \brief 44434, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4434u)

/** \brief 44438, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4438u)

/** \brief 4443C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM0_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C443Cu)

/** \brief 44440, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS2_CDTM_DTM1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90C4440u)

/** \brief 44444, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS2_CDTM_DTM1_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90C4444u)

/** \brief 44448, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS2_CDTM_DTM1_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90C4448u)

/** \brief 4444C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS2_CDTM_DTM1_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90C444Cu)

/** \brief 44450, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS2_CDTM_DTM1_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90C4450u)

/** \brief 44454, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4454u)

/** \brief 44458, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4458u)

/** \brief 4445C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C445Cu)

/** \brief 44460, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4460u)

/** \brief 44464, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS2_CDTM_DTM1_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90C4464u)

/** \brief 44468, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS2_CDTM_DTM1_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90C4468u)

/** \brief 4446C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS2_CDTM_DTM1_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90C446Cu)

/** \brief 44470, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4470u)

/** \brief 44474, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4474u)

/** \brief 44478, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4478u)

/** \brief 4447C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM1_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C447Cu)

/** \brief 44480, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS2_CDTM_DTM2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90C4480u)

/** \brief 44484, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS2_CDTM_DTM2_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90C4484u)

/** \brief 44488, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS2_CDTM_DTM2_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90C4488u)

/** \brief 4448C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS2_CDTM_DTM2_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90C448Cu)

/** \brief 44490, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS2_CDTM_DTM2_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90C4490u)

/** \brief 44494, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4494u)

/** \brief 44498, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4498u)

/** \brief 4449C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C449Cu)

/** \brief 444A0, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C44A0u)

/** \brief 444A4, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS2_CDTM_DTM2_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90C44A4u)

/** \brief 444A8, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS2_CDTM_DTM2_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90C44A8u)

/** \brief 444AC, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS2_CDTM_DTM2_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90C44ACu)

/** \brief 444B0, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44B0u)

/** \brief 444B4, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44B4u)

/** \brief 444B8, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44B8u)

/** \brief 444BC, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM2_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44BCu)

/** \brief 444C0, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS2_CDTM_DTM3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90C44C0u)

/** \brief 444C4, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS2_CDTM_DTM3_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90C44C4u)

/** \brief 444C8, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS2_CDTM_DTM3_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90C44C8u)

/** \brief 444CC, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS2_CDTM_DTM3_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90C44CCu)

/** \brief 444D0, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS2_CDTM_DTM3_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90C44D0u)

/** \brief 444D4, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C44D4u)

/** \brief 444D8, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C44D8u)

/** \brief 444DC, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C44DCu)

/** \brief 444E0, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C44E0u)

/** \brief 444E4, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS2_CDTM_DTM3_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90C44E4u)

/** \brief 444E8, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS2_CDTM_DTM3_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90C44E8u)

/** \brief 444EC, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS2_CDTM_DTM3_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90C44ECu)

/** \brief 444F0, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44F0u)

/** \brief 444F4, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44F4u)

/** \brief 444F8, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44F8u)

/** \brief 444FC, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM3_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C44FCu)

/** \brief 44500, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS2_CDTM_DTM4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90C4500u)

/** \brief 44504, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS2_CDTM_DTM4_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90C4504u)

/** \brief 44508, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS2_CDTM_DTM4_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90C4508u)

/** \brief 4450C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS2_CDTM_DTM4_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90C450Cu)

/** \brief 44510, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS2_CDTM_DTM4_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90C4510u)

/** \brief 44514, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4514u)

/** \brief 44518, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4518u)

/** \brief 4451C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C451Cu)

/** \brief 44520, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4520u)

/** \brief 44524, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS2_CDTM_DTM4_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90C4524u)

/** \brief 44528, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS2_CDTM_DTM4_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90C4528u)

/** \brief 4452C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS2_CDTM_DTM4_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90C452Cu)

/** \brief 44530, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4530u)

/** \brief 44534, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4534u)

/** \brief 44538, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4538u)

/** \brief 4453C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM4_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C453Cu)

/** \brief 44540, CDTM[i]_DTM[d] global configuration and control register */
#define EGTM_CLS2_CDTM_DTM5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL*)0xF90C4540u)

/** \brief 44544, CDTM[i]_DTM[d] channel control register 1 */
#define EGTM_CLS2_CDTM_DTM5_CH_CTRL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL1*)0xF90C4544u)

/** \brief 44548, CDTM[i]_DTM[d] channel control register 2 */
#define EGTM_CLS2_CDTM_DTM5_CH_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2*)0xF90C4548u)

/** \brief 4454C, CDTM[i] DTM[d] channel control register 2 shadow */
#define EGTM_CLS2_CDTM_DTM5_CH_CTRL2_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL2_SR*)0xF90C454Cu)

/** \brief 44550, CDTM[i]_DTM[d] phase shift unit configuration and control register */
#define EGTM_CLS2_CDTM_DTM5_PS_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_PS_CTRL*)0xF90C4550u)

/** \brief 44554, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4554u)

/** \brief 44558, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4558u)

/** \brief 4455C, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C455Cu)

/** \brief 44560, CDTM[i]_DTM[d] channel [x] dead-time reload values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV*)0xF90C4560u)

/** \brief 44564, CDTM[i]_DTM[d] channel shadow register */
#define EGTM_CLS2_CDTM_DTM5_CH_SR /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_SR*)0xF90C4564u)

/** \brief 44568, CDTM[i]_DTM[d] channel control register 3 */
#define EGTM_CLS2_CDTM_DTM5_CH_CTRL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_CTRL3*)0xF90C4568u)

/** \brief 4456C, CDTM[i]_DTM[d] global configuration and control register 2 */
#define EGTM_CLS2_CDTM_DTM5_CTRL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CTRL2*)0xF90C456Cu)

/** \brief 44570, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV_SR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4570u)

/** \brief 44574, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV_SR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4574u)

/** \brief 44578, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV_SR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C4578u)

/** \brief 4457C, CDTM[i]_DTM[d] channel [x] dead-time shadow values */
#define EGTM_CLS2_CDTM_DTM5_CH_DTV_SR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_CDTM_DTM_CH_DTV_SR*)0xF90C457Cu)

/** \brief 44C00, SPE[i] Control Status Register */
#define EGTM_CLS2_SPE_CTRL_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CTRL_STAT*)0xF90C4C00u)

/** \brief 44C04, SPE[i] Input Pattern Definition Register */
#define EGTM_CLS2_SPE_PAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_PAT*)0xF90C4C04u)

/** \brief 44C08, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C08u)

/** \brief 44C0C, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C0Cu)

/** \brief 44C10, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C10u)

/** \brief 44C14, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C14u)

/** \brief 44C18, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C18u)

/** \brief 44C1C, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C1Cu)

/** \brief 44C20, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C20u)

/** \brief 44C24, SPE[i] Output Definition Register [p] */
#define EGTM_CLS2_SPE_OUT_PAT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_PAT*)0xF90C4C24u)

/** \brief 44C28, SPE[i] Output Control Register */
#define EGTM_CLS2_SPE_OUT_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_OUT_CTRL*)0xF90C4C28u)

/** \brief 44C2C, SPE[i] Interrupt Notification Register */
#define EGTM_CLS2_SPE_IRQ_NOTIFY /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_NOTIFY*)0xF90C4C2Cu)

/** \brief 44C30, SPE[i] Interrupt Enable Register */
#define EGTM_CLS2_SPE_IRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_EN*)0xF90C4C30u)

/** \brief 44C34, SPE[i] Interrupt Generation By Software */
#define EGTM_CLS2_SPE_IRQ_FORCINT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_FORCINT*)0xF90C4C34u)

/** \brief 44C38, SPE[i] Interrupt Mode Configuration Register */
#define EGTM_CLS2_SPE_IRQ_MODE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_IRQ_MODE*)0xF90C4C38u)

/** \brief 44C3C, SPE[i] Error Interrupt Enable Register */
#define EGTM_CLS2_SPE_EIRQ_EN /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_EIRQ_EN*)0xF90C4C3Cu)

/** \brief 44C40, SPE[i] Input Revolution Counter */
#define EGTM_CLS2_SPE_REV_CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_REV_CNT*)0xF90C4C40u)

/** \brief 44C44, SPE[i] Revolution Counter Compare Value */
#define EGTM_CLS2_SPE_REV_CMP /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_REV_CMP*)0xF90C4C44u)

/** \brief 44C48, SPE[i] Control Status Register 2 */
#define EGTM_CLS2_SPE_CTRL_STAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CTRL_STAT2*)0xF90C4C48u)

/** \brief 44C4C, SPE[i] Command Register */
#define EGTM_CLS2_SPE_CMD /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLS_SPE_CMD*)0xF90C4C4Cu)

/** \brief 0, Clock control register */
#define EGTM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CLC*)0xF90E0000u)

/** \brief 4, OCDS control and status register */
#define EGTM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_OCS*)0xF90E0004u)

/** \brief 10, Reset control register A */
#define EGTM_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_RST_CTRLA*)0xF90E0010u)

/** \brief 14, Reset control register B */
#define EGTM_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_RST_CTRLB*)0xF90E0014u)

/** \brief 18, Reset status register */
#define EGTM_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_RST_STAT*)0xF90E0018u)

/** \brief 1C, PROT register Safe Endinit */
#define EGTM_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_PROT*)0xF90E001Cu)

/** \brief 24, Write access enable register A for cluster 0 */
#define EGTM_CL0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRA*)0xF90E0024u)

/** \brief 28, Write access enable register B for cluster 0 */
#define EGTM_CL0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRB_FPI*)0xF90E0028u)

/** \brief 2C, Read access enable register A for cluster 0 */
#define EGTM_CL0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDA*)0xF90E002Cu)

/** \brief 30, Read access enable register B for cluster 0 */
#define EGTM_CL0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDB_FPI*)0xF90E0030u)

/** \brief 34, VM access enable register for cluster 0 */
#define EGTM_CL0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_VM*)0xF90E0034u)

/** \brief 38, PRS access enable register for cluster 0 */
#define EGTM_CL0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_PRS*)0xF90E0038u)

/** \brief 48, Write access enable register A for cluster 1 */
#define EGTM_CL1_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRA*)0xF90E0048u)

/** \brief 4C, Write access enable register B for cluster 1 */
#define EGTM_CL1_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRB_FPI*)0xF90E004Cu)

/** \brief 50, Read access enable register A for cluster 1 */
#define EGTM_CL1_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDA*)0xF90E0050u)

/** \brief 54, Read access enable register B for cluster 1 */
#define EGTM_CL1_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDB_FPI*)0xF90E0054u)

/** \brief 58, VM access enable register for cluster 1 */
#define EGTM_CL1_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_VM*)0xF90E0058u)

/** \brief 5C, PRS access enable register for cluster 1 */
#define EGTM_CL1_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_PRS*)0xF90E005Cu)

/** \brief 6C, Write access enable register A for cluster 2 */
#define EGTM_CL2_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRA*)0xF90E006Cu)

/** \brief 70, Write access enable register B for cluster 2 */
#define EGTM_CL2_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRB_FPI*)0xF90E0070u)

/** \brief 74, Read access enable register A for cluster 2 */
#define EGTM_CL2_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDA*)0xF90E0074u)

/** \brief 78, Read access enable register B for cluster 2 */
#define EGTM_CL2_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDB_FPI*)0xF90E0078u)

/** \brief 7C, VM access enable register for cluster 2 */
#define EGTM_CL2_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_VM*)0xF90E007Cu)

/** \brief 80, PRS access enable register for cluster 2 */
#define EGTM_CL2_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_PRS*)0xF90E0080u)

/** \brief 1D0, PROT register Endinit for control logic */
#define EGTM_CTRL_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_PROT*)0xF90E01D0u)

/** \brief 1D4, Write access enable register A for control logic */
#define EGTM_CTRL_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRA*)0xF90E01D4u)

/** \brief 1D8, Write access enable register B for control logic */
#define EGTM_CTRL_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRB_FPI*)0xF90E01D8u)

/** \brief 1DC, Read access enable register A for control logic */
#define EGTM_CTRL_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDA*)0xF90E01DCu)

/** \brief 1E0, Read access enable register B for control logic */
#define EGTM_CTRL_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDB_FPI*)0xF90E01E0u)

/** \brief 1E4, VM access enable register for control logic */
#define EGTM_CTRL_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_VM*)0xF90E01E4u)

/** \brief 1E8, PRS access enable register for control logic */
#define EGTM_CTRL_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_PRS*)0xF90E01E8u)

/** \brief 1F8, Write access enable register A for wrapper logic */
#define EGTM_WRAP_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRA*)0xF90E01F8u)

/** \brief 1FC, Write access enable register B for wrapper logic */
#define EGTM_WRAP_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRB_FPI*)0xF90E01FCu)

/** \brief 200, Read access enable register A for wrapper logic */
#define EGTM_WRAP_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDA*)0xF90E0200u)

/** \brief 204, Read access enable register B for wrapper logic */
#define EGTM_WRAP_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDB_FPI*)0xF90E0204u)

/** \brief 208, VM access enable register for wrapper logic */
#define EGTM_WRAP_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_VM*)0xF90E0208u)

/** \brief 20C, PRS access enable register for wrapper logic */
#define EGTM_WRAP_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_PRS*)0xF90E020Cu)

/** \brief 21C, Write access enable register A for wrapper logic */
#define EGTM_CTRLGTM_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRA*)0xF90E021Cu)

/** \brief 220, Write access enable register B for wrapper logic */
#define EGTM_CTRLGTM_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRB_FPI*)0xF90E0220u)

/** \brief 224, Read access enable register A for wrapper logic */
#define EGTM_CTRLGTM_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDA*)0xF90E0224u)

/** \brief 228, Read access enable register B for wrapper logic */
#define EGTM_CTRLGTM_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDB_FPI*)0xF90E0228u)

/** \brief 22C, VM access enable register for wrapper logic */
#define EGTM_CTRLGTM_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_VM*)0xF90E022Cu)

/** \brief 230, PRS access enable register for wrapper logic */
#define EGTM_CTRLGTM_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_PRS*)0xF90E0230u)

/** \brief 240, Write access enable register A for wrapper logic */
#define EGTM_SAFEGTM_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRA*)0xF90E0240u)

/** \brief 244, Write access enable register B for wrapper logic */
#define EGTM_SAFEGTM_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_WRB_FPI*)0xF90E0244u)

/** \brief 248, Read access enable register A for wrapper logic */
#define EGTM_SAFEGTM_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDA*)0xF90E0248u)

/** \brief 24C, Read access enable register B for wrapper logic */
#define EGTM_SAFEGTM_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_RDB_FPI*)0xF90E024Cu)

/** \brief 250, VM access enable register for wrapper logic */
#define EGTM_SAFEGTM_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_VM*)0xF90E0250u)

/** \brief 254, PRS access enable register for wrapper logic */
#define EGTM_SAFEGTM_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ACCEN_PRS*)0xF90E0254u)

/** \brief 480, Spare Bits */
#define EGTM_SPARE /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_SPARE*)0xF90E0480u)

/** \brief 500, OCDS TBU0 trigger register */
#define EGTM_OCDS_OTBU0T /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_OCDS_OTBU0T*)0xF90E0500u)

/** \brief 504, OCDS TBU1 trigger register */
#define EGTM_OCDS_OTBU1T /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_OCDS_OTBU1T*)0xF90E0504u)

/** \brief 508, OCDS TBU2 trigger register */
#define EGTM_OCDS_OTBU2T /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_OCDS_OTBU2T*)0xF90E0508u)

/** \brief 510, OCDS trigger set select register */
#define EGTM_OCDS_OTSS /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_OCDS_OTSS*)0xF90E0510u)

/** \brief 514, OCDS trigger set control 0 register */
#define EGTM_OCDS_OTSC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_OCDS_OTSC0*)0xF90E0514u)

/** \brief 1000, TIM0 input selection register */
#define EGTM_TIMINSEL0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMINSEL*)0xF90E1000u)
/** Alias (User Manual Name) for EGTM_TIMINSEL0 */
#define EGTM_TIM0INSEL (EGTM_TIMINSEL0)

/** \brief 1004, TIM1 input selection register */
#define EGTM_TIMINSEL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMINSEL*)0xF90E1004u)
/** Alias (User Manual Name) for EGTM_TIMINSEL1 */
#define EGTM_TIM1INSEL (EGTM_TIMINSEL1)

/** \brief 1008, TIM2 input selection register */
#define EGTM_TIMINSEL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMINSEL*)0xF90E1008u)
/** Alias (User Manual Name) for EGTM_TIMINSEL2 */
#define EGTM_TIM2INSEL (EGTM_TIMINSEL2)

/** \brief 1050, TIM0 input selection register group B */
#define EGTM_TIMINSELB0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMINSELB*)0xF90E1050u)
/** Alias (User Manual Name) for EGTM_TIMINSELB0 */
#define EGTM_TIM0INSELB (EGTM_TIMINSELB0)

/** \brief 1054, TIM1 input selection register group B */
#define EGTM_TIMINSELB1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMINSELB*)0xF90E1054u)
/** Alias (User Manual Name) for EGTM_TIMINSELB1 */
#define EGTM_TIM1INSELB (EGTM_TIMINSELB1)

/** \brief 1058, TIM2 input selection register group B */
#define EGTM_TIMINSELB2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMINSELB*)0xF90E1058u)
/** Alias (User Manual Name) for EGTM_TIMINSELB2 */
#define EGTM_TIM2INSELB (EGTM_TIMINSELB2)

/** \brief 1100, eGTM to Ports signal TOUT output selection register 0 */
#define EGTM_TOUTSEL0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1100u)

/** \brief 1104, eGTM to Ports signal TOUT output selection register 1 */
#define EGTM_TOUTSEL1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1104u)

/** \brief 1108, eGTM to Ports signal TOUT output selection register 2 */
#define EGTM_TOUTSEL2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1108u)

/** \brief 110C, eGTM to Ports signal TOUT output selection register 3 */
#define EGTM_TOUTSEL3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E110Cu)

/** \brief 1110, eGTM to Ports signal TOUT output selection register 4 */
#define EGTM_TOUTSEL4 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1110u)

/** \brief 1114, eGTM to Ports signal TOUT output selection register 5 */
#define EGTM_TOUTSEL5 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1114u)

/** \brief 1118, eGTM to Ports signal TOUT output selection register 6 */
#define EGTM_TOUTSEL6 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1118u)

/** \brief 111C, eGTM to Ports signal TOUT output selection register 7 */
#define EGTM_TOUTSEL7 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E111Cu)

/** \brief 1120, eGTM to Ports signal TOUT output selection register 8 */
#define EGTM_TOUTSEL8 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1120u)

/** \brief 1124, eGTM to Ports signal TOUT output selection register 9 */
#define EGTM_TOUTSEL9 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1124u)

/** \brief 1128, eGTM to Ports signal TOUT output selection register 10 */
#define EGTM_TOUTSEL10 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1128u)

/** \brief 112C, eGTM to Ports signal TOUT output selection register 11 */
#define EGTM_TOUTSEL11 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E112Cu)

/** \brief 1130, eGTM to Ports signal TOUT output selection register 12 */
#define EGTM_TOUTSEL12 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1130u)

/** \brief 1134, eGTM to Ports signal TOUT output selection register 13 */
#define EGTM_TOUTSEL13 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1134u)

/** \brief 1138, eGTM to Ports signal TOUT output selection register 14 */
#define EGTM_TOUTSEL14 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1138u)

/** \brief 113C, eGTM to Ports signal TOUT output selection register 15 */
#define EGTM_TOUTSEL15 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E113Cu)

/** \brief 1140, eGTM to Ports signal TOUT output selection register 16 */
#define EGTM_TOUTSEL16 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1140u)

/** \brief 1144, eGTM to Ports signal TOUT output selection register 17 */
#define EGTM_TOUTSEL17 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1144u)

/** \brief 1148, eGTM to Ports signal TOUT output selection register 18 */
#define EGTM_TOUTSEL18 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1148u)

/** \brief 114C, eGTM to Ports signal TOUT output selection register 19 */
#define EGTM_TOUTSEL19 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E114Cu)

/** \brief 1150, eGTM to Ports signal TOUT output selection register 20 */
#define EGTM_TOUTSEL20 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1150u)

/** \brief 1154, eGTM to Ports signal TOUT output selection register 21 */
#define EGTM_TOUTSEL21 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1154u)

/** \brief 1158, eGTM to Ports signal TOUT output selection register 22 */
#define EGTM_TOUTSEL22 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1158u)

/** \brief 115C, eGTM to Ports signal TOUT output selection register 23 */
#define EGTM_TOUTSEL23 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E115Cu)

/** \brief 1160, eGTM to Ports signal TOUT output selection register 24 */
#define EGTM_TOUTSEL24 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1160u)

/** \brief 1164, eGTM to Ports signal TOUT output selection register 25 */
#define EGTM_TOUTSEL25 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1164u)

/** \brief 1168, eGTM to Ports signal TOUT output selection register 26 */
#define EGTM_TOUTSEL26 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1168u)

/** \brief 116C, eGTM to Ports signal TOUT output selection register 27 */
#define EGTM_TOUTSEL27 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E116Cu)

/** \brief 1170, eGTM to Ports signal TOUT output selection register 28 */
#define EGTM_TOUTSEL28 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1170u)

/** \brief 1174, eGTM to Ports signal TOUT output selection register 29 */
#define EGTM_TOUTSEL29 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1174u)

/** \brief 1178, eGTM to Ports signal TOUT output selection register 30 */
#define EGTM_TOUTSEL30 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1178u)

/** \brief 117C, eGTM to Ports signal TOUT output selection register 31 */
#define EGTM_TOUTSEL31 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E117Cu)

/** \brief 1180, eGTM to Ports signal TOUT output selection register 32 */
#define EGTM_TOUTSEL32 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1180u)

/** \brief 1184, eGTM to Ports signal TOUT output selection register 33 */
#define EGTM_TOUTSEL33 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1184u)

/** \brief 1188, eGTM to Ports signal TOUT output selection register 34 */
#define EGTM_TOUTSEL34 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1188u)

/** \brief 118C, eGTM to Ports signal TOUT output selection register 35 */
#define EGTM_TOUTSEL35 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E118Cu)

/** \brief 1190, eGTM to Ports signal TOUT output selection register 36 */
#define EGTM_TOUTSEL36 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1190u)

/** \brief 1194, eGTM to Ports signal TOUT output selection register 37 */
#define EGTM_TOUTSEL37 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1194u)

/** \brief 1198, eGTM to Ports signal TOUT output selection register 38 */
#define EGTM_TOUTSEL38 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E1198u)

/** \brief 119C, eGTM to Ports signal TOUT output selection register 39 */
#define EGTM_TOUTSEL39 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E119Cu)

/** \brief 11A0, eGTM to Ports signal TOUT output selection register 40 */
#define EGTM_TOUTSEL40 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11A0u)

/** \brief 11A4, eGTM to Ports signal TOUT output selection register 41 */
#define EGTM_TOUTSEL41 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11A4u)

/** \brief 11A8, eGTM to Ports signal TOUT output selection register 42 */
#define EGTM_TOUTSEL42 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11A8u)

/** \brief 11AC, eGTM to Ports signal TOUT output selection register 43 */
#define EGTM_TOUTSEL43 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11ACu)

/** \brief 11B0, eGTM to Ports signal TOUT output selection register 44 */
#define EGTM_TOUTSEL44 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11B0u)

/** \brief 11B4, eGTM to Ports signal TOUT output selection register 45 */
#define EGTM_TOUTSEL45 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11B4u)

/** \brief 11B8, eGTM to Ports signal TOUT output selection register 46 */
#define EGTM_TOUTSEL46 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11B8u)

/** \brief 11BC, eGTM to Ports signal TOUT output selection register 47 */
#define EGTM_TOUTSEL47 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11BCu)

/** \brief 11C0, eGTM to Ports signal TOUT output selection register 48 */
#define EGTM_TOUTSEL48 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TOUTSEL*)0xF90E11C0u)

/** \brief 1200, eGTM to MSC SET0 output selection register 0 */
#define EGTM_MSCSET0_CON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON0*)0xF90E1200u)

/** \brief 1204, eGTM to MSC SET0 output selection register 1 */
#define EGTM_MSCSET0_CON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON1*)0xF90E1204u)

/** \brief 1208, eGTM to MSC SET0 output selection register 2 */
#define EGTM_MSCSET0_CON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON2*)0xF90E1208u)

/** \brief 120C, eGTM to MSC SET0 output selection register 3 */
#define EGTM_MSCSET0_CON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON3*)0xF90E120Cu)

/** \brief 1210, eGTM to MSC SET1 output selection register 0 */
#define EGTM_MSCSET1_CON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON0*)0xF90E1210u)

/** \brief 1214, eGTM to MSC SET1 output selection register 1 */
#define EGTM_MSCSET1_CON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON1*)0xF90E1214u)

/** \brief 1218, eGTM to MSC SET1 output selection register 2 */
#define EGTM_MSCSET1_CON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON2*)0xF90E1218u)

/** \brief 121C, eGTM to MSC SET1 output selection register 3 */
#define EGTM_MSCSET1_CON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON3*)0xF90E121Cu)

/** \brief 1220, eGTM to MSC SET2 output selection register 0 */
#define EGTM_MSCSET2_CON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON0*)0xF90E1220u)

/** \brief 1224, eGTM to MSC SET2 output selection register 1 */
#define EGTM_MSCSET2_CON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON1*)0xF90E1224u)

/** \brief 1228, eGTM to MSC SET2 output selection register 2 */
#define EGTM_MSCSET2_CON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON2*)0xF90E1228u)

/** \brief 122C, eGTM to MSC SET2 output selection register 3 */
#define EGTM_MSCSET2_CON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON3*)0xF90E122Cu)

/** \brief 1230, eGTM to MSC SET3 output selection register 0 */
#define EGTM_MSCSET3_CON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON0*)0xF90E1230u)

/** \brief 1234, eGTM to MSC SET3 output selection register 1 */
#define EGTM_MSCSET3_CON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON1*)0xF90E1234u)

/** \brief 1238, eGTM to MSC SET3 output selection register 2 */
#define EGTM_MSCSET3_CON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON2*)0xF90E1238u)

/** \brief 123C, eGTM to MSC SET3 output selection register 3 */
#define EGTM_MSCSET3_CON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSET_CON3*)0xF90E123Cu)

/** \brief 1290, eGTM to input bus MSC0_INLCON signal selection register */
#define EGTM_MSC0_INLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INLCON*)0xF90E1290u)

/** \brief 1294, eGTM to input bus MSC0_INHCON signal selection register */
#define EGTM_MSC0_INHCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INHCON*)0xF90E1294u)

/** \brief 1298, eGTM to input bus MSC0_INLECON signal selection register */
#define EGTM_MSC0_INLECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INLECON*)0xF90E1298u)

/** \brief 129C, eGTM to input bus MSC0_INHECON signal selection register */
#define EGTM_MSC0_INHECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INHECON*)0xF90E129Cu)

/** \brief 12A0, eGTM to input bus MSC1_INLCON signal selection register */
#define EGTM_MSC1_INLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INLCON*)0xF90E12A0u)

/** \brief 12A4, eGTM to input bus MSC1_INHCON signal selection register */
#define EGTM_MSC1_INHCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INHCON*)0xF90E12A4u)

/** \brief 12A8, eGTM to input bus MSC1_INLECON signal selection register */
#define EGTM_MSC1_INLECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INLECON*)0xF90E12A8u)

/** \brief 12AC, eGTM to input bus MSC1_INHECON signal selection register */
#define EGTM_MSC1_INHECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INHECON*)0xF90E12ACu)

/** \brief 12B0, eGTM to input bus MSC2_INLCON signal selection register */
#define EGTM_MSC2_INLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INLCON*)0xF90E12B0u)

/** \brief 12B4, eGTM to input bus MSC2_INHCON signal selection register */
#define EGTM_MSC2_INHCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INHCON*)0xF90E12B4u)

/** \brief 12B8, eGTM to input bus MSC2_INLECON signal selection register */
#define EGTM_MSC2_INLECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INLECON*)0xF90E12B8u)

/** \brief 12BC, eGTM to input bus MSC2_INHECON signal selection register */
#define EGTM_MSC2_INHECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSC_INHECON*)0xF90E12BCu)

/** \brief 12D0, Selection of INLCON stream for MSC */
#define EGTM_MSCSELIN_INLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSELIN_INLCON*)0xF90E12D0u)

/** \brief 12D4, Selection of INHCON stream for MSC  */
#define EGTM_MSCSELIN_INHCON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSELIN_INHCON*)0xF90E12D4u)

/** \brief 12D8, Selection of INLECON stream for MSC */
#define EGTM_MSCSELIN_INLECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSELIN_INLECON*)0xF90E12D8u)

/** \brief 12DC, Selection of INHECON stream for MSC */
#define EGTM_MSCSELIN_INHECON /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_MSCSELIN_INHECON*)0xF90E12DCu)

/** \brief 1400, eGTM to PSI5 output trigger selection register */
#define EGTM_PSI5_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_PSI5_OUT*)0xF90E1400u)

/** \brief 1410, eGTM to PSI5-S0 output trigger selection register */
#define EGTM_PSI5S0_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_PSI5S_OUT*)0xF90E1410u)

/** \brief 1414, eGTM to PSI5-S1 output trigger selection register */
#define EGTM_PSI5S1_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_PSI5S_OUT*)0xF90E1414u)

/** \brief 1420, eGTM to LCDCDC output trigger selection register */
#define EGTM_LCDCDC_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_LCDCDC_OUT*)0xF90E1420u)

/** \brief 1480, eGTM to CAN0 output selection register 0. 0*4+ 0<24 then interface exists.  */
#define EGTM_CAN0_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E1480u)

/** \brief 1484, eGTM to CAN0 output selection register 1. 0*4+ 1<24 then interface exists.  */
#define EGTM_CAN0_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E1484u)

/** \brief 1488, eGTM to CAN0 output selection register 2. 0*4+ 2<24 then interface exists.  */
#define EGTM_CAN0_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E1488u)

/** \brief 148C, eGTM to CAN0 output selection register 3. 0*4+ 3<24 then interface exists.  */
#define EGTM_CAN0_OUT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E148Cu)

/** \brief 1490, eGTM to CAN1 output selection register 0. 1*4+ 0<24 then interface exists.  */
#define EGTM_CAN1_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E1490u)

/** \brief 1494, eGTM to CAN1 output selection register 1. 1*4+ 1<24 then interface exists.  */
#define EGTM_CAN1_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E1494u)

/** \brief 1498, eGTM to CAN1 output selection register 2. 1*4+ 2<24 then interface exists.  */
#define EGTM_CAN1_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E1498u)

/** \brief 149C, eGTM to CAN1 output selection register 3. 1*4+ 3<24 then interface exists.  */
#define EGTM_CAN1_OUT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E149Cu)

/** \brief 14A0, eGTM to CAN2 output selection register 0. 2*4+ 0<24 then interface exists.  */
#define EGTM_CAN2_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14A0u)

/** \brief 14A4, eGTM to CAN2 output selection register 1. 2*4+ 1<24 then interface exists.  */
#define EGTM_CAN2_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14A4u)

/** \brief 14A8, eGTM to CAN2 output selection register 2. 2*4+ 2<24 then interface exists.  */
#define EGTM_CAN2_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14A8u)

/** \brief 14AC, eGTM to CAN2 output selection register 3. 2*4+ 3<24 then interface exists.  */
#define EGTM_CAN2_OUT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14ACu)

/** \brief 14B0, eGTM to CAN3 output selection register 0. 3*4+ 0<24 then interface exists.  */
#define EGTM_CAN3_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14B0u)

/** \brief 14B4, eGTM to CAN3 output selection register 1. 3*4+ 1<24 then interface exists.  */
#define EGTM_CAN3_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14B4u)

/** \brief 14B8, eGTM to CAN3 output selection register 2. 3*4+ 2<24 then interface exists.  */
#define EGTM_CAN3_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14B8u)

/** \brief 14BC, eGTM to CAN3 output selection register 3. 3*4+ 3<24 then interface exists.  */
#define EGTM_CAN3_OUT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14BCu)

/** \brief 14C0, eGTM to CAN4 output selection register 0. 4*4+ 0<24 then interface exists.  */
#define EGTM_CAN4_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14C0u)

/** \brief 14C4, eGTM to CAN4 output selection register 1. 4*4+ 1<24 then interface exists.  */
#define EGTM_CAN4_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14C4u)

/** \brief 14C8, eGTM to CAN4 output selection register 2. 4*4+ 2<24 then interface exists.  */
#define EGTM_CAN4_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14C8u)

/** \brief 14CC, eGTM to CAN4 output selection register 3. 4*4+ 3<24 then interface exists.  */
#define EGTM_CAN4_OUT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14CCu)

/** \brief 14D0, eGTM to CAN5 output selection register 0. 5*4+ 0<24 then interface exists.  */
#define EGTM_CAN5_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14D0u)

/** \brief 14D4, eGTM to CAN5 output selection register 1. 5*4+ 1<24 then interface exists.  */
#define EGTM_CAN5_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14D4u)

/** \brief 14D8, eGTM to CAN5 output selection register 2. 5*4+ 2<24 then interface exists.  */
#define EGTM_CAN5_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14D8u)

/** \brief 14DC, eGTM to CAN5 output selection register 3. 5*4+ 3<24 then interface exists.  */
#define EGTM_CAN5_OUT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_CAN_OUT*)0xF90E14DCu)

/** \brief 1500, FOUT Selection for Encoder Interface 0 */
#define EGTM_FOUTENC0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_FOUTENC*)0xF90E1500u)

/** \brief 1580, eGTM to QSPI0 output selection register. 0<8 then interface exists. */
#define EGTM_QSPI0_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E1580u)

/** \brief 1584, eGTM to QSPI1 output selection register. 1<8 then interface exists. */
#define EGTM_QSPI1_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E1584u)

/** \brief 1588, eGTM to QSPI2 output selection register. 2<8 then interface exists. */
#define EGTM_QSPI2_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E1588u)

/** \brief 158C, eGTM to QSPI3 output selection register. 3<8 then interface exists. */
#define EGTM_QSPI3_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E158Cu)

/** \brief 1590, eGTM to QSPI4 output selection register. 4<8 then interface exists. */
#define EGTM_QSPI4_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E1590u)

/** \brief 1594, eGTM to QSPI5 output selection register. 5<8 then interface exists. */
#define EGTM_QSPI5_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E1594u)

/** \brief 1598, eGTM to QSPI6 output selection register. 6<8 then interface exists. */
#define EGTM_QSPI6_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E1598u)

/** \brief 159C, eGTM to QSPI7 output selection register. 7<8 then interface exists. */
#define EGTM_QSPI7_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_QSPI_OUT*)0xF90E159Cu)

/** \brief 1600, eGTM to ASCLIN0 output selection register. 0<28 then interface exists.  */
#define EGTM_ASCLIN0_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1600u)

/** \brief 1604, eGTM to ASCLIN1 output selection register. 1<28 then interface exists.  */
#define EGTM_ASCLIN1_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1604u)

/** \brief 1608, eGTM to ASCLIN2 output selection register. 2<28 then interface exists.  */
#define EGTM_ASCLIN2_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1608u)

/** \brief 160C, eGTM to ASCLIN3 output selection register. 3<28 then interface exists.  */
#define EGTM_ASCLIN3_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E160Cu)

/** \brief 1610, eGTM to ASCLIN4 output selection register. 4<28 then interface exists.  */
#define EGTM_ASCLIN4_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1610u)

/** \brief 1614, eGTM to ASCLIN5 output selection register. 5<28 then interface exists.  */
#define EGTM_ASCLIN5_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1614u)

/** \brief 1618, eGTM to ASCLIN6 output selection register. 6<28 then interface exists.  */
#define EGTM_ASCLIN6_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1618u)

/** \brief 161C, eGTM to ASCLIN7 output selection register. 7<28 then interface exists.  */
#define EGTM_ASCLIN7_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E161Cu)

/** \brief 1620, eGTM to ASCLIN8 output selection register. 8<28 then interface exists.  */
#define EGTM_ASCLIN8_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1620u)

/** \brief 1624, eGTM to ASCLIN9 output selection register. 9<28 then interface exists.  */
#define EGTM_ASCLIN9_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1624u)

/** \brief 1628, eGTM to ASCLIN10 output selection register. 10<28 then interface exists.  */
#define EGTM_ASCLIN10_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1628u)

/** \brief 162C, eGTM to ASCLIN11 output selection register. 11<28 then interface exists.  */
#define EGTM_ASCLIN11_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E162Cu)

/** \brief 1630, eGTM to ASCLIN12 output selection register. 12<28 then interface exists.  */
#define EGTM_ASCLIN12_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1630u)

/** \brief 1634, eGTM to ASCLIN13 output selection register. 13<28 then interface exists.  */
#define EGTM_ASCLIN13_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1634u)

/** \brief 1638, eGTM to ASCLIN14 output selection register. 14<28 then interface exists.  */
#define EGTM_ASCLIN14_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1638u)

/** \brief 163C, eGTM to ASCLIN15 output selection register. 15<28 then interface exists.  */
#define EGTM_ASCLIN15_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E163Cu)

/** \brief 1640, eGTM to ASCLIN16 output selection register. 16<28 then interface exists.  */
#define EGTM_ASCLIN16_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1640u)

/** \brief 1644, eGTM to ASCLIN17 output selection register. 17<28 then interface exists.  */
#define EGTM_ASCLIN17_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1644u)

/** \brief 1648, eGTM to ASCLIN18 output selection register. 18<28 then interface exists.  */
#define EGTM_ASCLIN18_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1648u)

/** \brief 164C, eGTM to ASCLIN19 output selection register. 19<28 then interface exists.  */
#define EGTM_ASCLIN19_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E164Cu)

/** \brief 1650, eGTM to ASCLIN20 output selection register. 20<28 then interface exists.  */
#define EGTM_ASCLIN20_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1650u)

/** \brief 1654, eGTM to ASCLIN21 output selection register. 21<28 then interface exists.  */
#define EGTM_ASCLIN21_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1654u)

/** \brief 1658, eGTM to ASCLIN22 output selection register. 22<28 then interface exists.  */
#define EGTM_ASCLIN22_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1658u)

/** \brief 165C, eGTM to ASCLIN23 output selection register. 23<28 then interface exists.  */
#define EGTM_ASCLIN23_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E165Cu)

/** \brief 1660, eGTM to ASCLIN24 output selection register. 24<28 then interface exists.  */
#define EGTM_ASCLIN24_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1660u)

/** \brief 1664, eGTM to ASCLIN25 output selection register. 25<28 then interface exists.  */
#define EGTM_ASCLIN25_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1664u)

/** \brief 1668, eGTM to ASCLIN26 output selection register. 26<28 then interface exists.  */
#define EGTM_ASCLIN26_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E1668u)

/** \brief 166C, eGTM to ASCLIN27 output selection register. 27<28 then interface exists.  */
#define EGTM_ASCLIN27_OUT /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ASCLIN_OUT*)0xF90E166Cu)

/** \brief 1680, eGTM to SENT0 trigger x output selection register A */
#define EGTM_SENT0_OUTA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_SENT_OUTA*)0xF90E1680u)

/** \brief 1688, eGTM to SENT1 trigger x output selection register A */
#define EGTM_SENT1_OUTA /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_SENT_OUTA*)0xF90E1688u)

/** \brief 1700, eGTM to ADC output selection register 0 */
#define EGTM_ADC_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ADC_OUT*)0xF90E1700u)

/** \brief 1704, eGTM to ADC output selection register 1 */
#define EGTM_ADC_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ADC_OUT*)0xF90E1704u)

/** \brief 1708, eGTM to ADC output selection register 2 */
#define EGTM_ADC_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_ADC_OUT*)0xF90E1708u)

/** \brief 1780, Cluster 0 DTMAUX input 0 selection register */
#define EGTM_DTMAUX0_IN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DTMAUX_IN*)0xF90E1780u)

/** \brief 1784, Cluster 0 DTMAUX input 1 selection register */
#define EGTM_DTMAUX0_IN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DTMAUX_IN*)0xF90E1784u)

/** \brief 1788, Cluster 1 DTMAUX input 0 selection register */
#define EGTM_DTMAUX1_IN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DTMAUX_IN*)0xF90E1788u)

/** \brief 178C, Cluster 1 DTMAUX input 1 selection register */
#define EGTM_DTMAUX1_IN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DTMAUX_IN*)0xF90E178Cu)

/** \brief 1790, Cluster 2 DTMAUX input 0 selection register */
#define EGTM_DTMAUX2_IN0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DTMAUX_IN*)0xF90E1790u)

/** \brief 1794, Cluster 2 DTMAUX input 1 selection register */
#define EGTM_DTMAUX2_IN1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DTMAUX_IN*)0xF90E1794u)

/** \brief 1800, eGTM to SCU output selection register 0 eGTM_SCU_TRIG(0) */
#define EGTM_SCU_OUT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_SCU_OUT*)0xF90E1800u)

/** \brief 1804, eGTM to SCU output selection register 1 eGTM_SCU_TRIG(1) */
#define EGTM_SCU_OUT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_SCU_OUT*)0xF90E1804u)

/** \brief 1808, eGTM to SCU output selection register 2 eGTM_SCU_TRIG(2) */
#define EGTM_SCU_OUT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_SCU_OUT*)0xF90E1808u)

/** \brief 1840, Dither ATOM 0 Channel 0 passing the DTMs */
#define EGTM_DITH0_ATCH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1840u)

/** \brief 1844, Dither ATOM 0 Channel 1 passing the DTMs */
#define EGTM_DITH0_ATCH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1844u)

/** \brief 1848, Dither ATOM 0 Channel 2 passing the DTMs */
#define EGTM_DITH0_ATCH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1848u)

/** \brief 184C, Dither ATOM 0 Channel 3 passing the DTMs */
#define EGTM_DITH0_ATCH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E184Cu)

/** \brief 1850, Dither ATOM 0 Channel 4 passing the DTMs */
#define EGTM_DITH0_ATCH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1850u)

/** \brief 1854, Dither ATOM 0 Channel 5 passing the DTMs */
#define EGTM_DITH0_ATCH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1854u)

/** \brief 1858, Dither ATOM 0 Channel 6 passing the DTMs */
#define EGTM_DITH0_ATCH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1858u)

/** \brief 185C, Dither ATOM 0 Channel 7 passing the DTMs */
#define EGTM_DITH0_ATCH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E185Cu)

/** \brief 1860, Dither ATOM 1 Channel 0 passing the DTMs */
#define EGTM_DITH1_ATCH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1860u)

/** \brief 1864, Dither ATOM 1 Channel 1 passing the DTMs */
#define EGTM_DITH1_ATCH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1864u)

/** \brief 1868, Dither ATOM 1 Channel 2 passing the DTMs */
#define EGTM_DITH1_ATCH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1868u)

/** \brief 186C, Dither ATOM 1 Channel 3 passing the DTMs */
#define EGTM_DITH1_ATCH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E186Cu)

/** \brief 1870, Dither ATOM 1 Channel 4 passing the DTMs */
#define EGTM_DITH1_ATCH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1870u)

/** \brief 1874, Dither ATOM 1 Channel 5 passing the DTMs */
#define EGTM_DITH1_ATCH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1874u)

/** \brief 1878, Dither ATOM 1 Channel 6 passing the DTMs */
#define EGTM_DITH1_ATCH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1878u)

/** \brief 187C, Dither ATOM 1 Channel 7 passing the DTMs */
#define EGTM_DITH1_ATCH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E187Cu)

/** \brief 1880, Dither ATOM 2 Channel 0 passing the DTMs */
#define EGTM_DITH2_ATCH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1880u)

/** \brief 1884, Dither ATOM 2 Channel 1 passing the DTMs */
#define EGTM_DITH2_ATCH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1884u)

/** \brief 1888, Dither ATOM 2 Channel 2 passing the DTMs */
#define EGTM_DITH2_ATCH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1888u)

/** \brief 188C, Dither ATOM 2 Channel 3 passing the DTMs */
#define EGTM_DITH2_ATCH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E188Cu)

/** \brief 1890, Dither ATOM 2 Channel 4 passing the DTMs */
#define EGTM_DITH2_ATCH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1890u)

/** \brief 1894, Dither ATOM 2 Channel 5 passing the DTMs */
#define EGTM_DITH2_ATCH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1894u)

/** \brief 1898, Dither ATOM 2 Channel 6 passing the DTMs */
#define EGTM_DITH2_ATCH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E1898u)

/** \brief 189C, Dither ATOM 2 Channel 7 passing the DTMs */
#define EGTM_DITH2_ATCH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_DITH_ATCH*)0xF90E189Cu)

/** \brief 1B00, Instance Selection for TIM[0] channel[0] */
#define EGTM_TIMS0_CH0_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B00u)
/** Alias (User Manual Name) for EGTM_TIMS0_CH0_ADCSEL */
#define EGTM_TIM0_ADCSELCH0 (EGTM_TIMS0_CH0_ADCSEL)

/** \brief 1B04, Instance Selection for TIM[0] channel[1] */
#define EGTM_TIMS0_CH1_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B04u)
/** Alias (User Manual Name) for EGTM_TIMS0_CH1_ADCSEL */
#define EGTM_TIM0_ADCSELCH1 (EGTM_TIMS0_CH1_ADCSEL)

/** \brief 1B08, Instance Selection for TIM[0] channel[2] */
#define EGTM_TIMS0_CH2_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B08u)
/** Alias (User Manual Name) for EGTM_TIMS0_CH2_ADCSEL */
#define EGTM_TIM0_ADCSELCH2 (EGTM_TIMS0_CH2_ADCSEL)

/** \brief 1B0C, Instance Selection for TIM[0] channel[3] */
#define EGTM_TIMS0_CH3_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B0Cu)
/** Alias (User Manual Name) for EGTM_TIMS0_CH3_ADCSEL */
#define EGTM_TIM0_ADCSELCH3 (EGTM_TIMS0_CH3_ADCSEL)

/** \brief 1B10, Instance Selection for TIM[0] channel[4] */
#define EGTM_TIMS0_CH4_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B10u)
/** Alias (User Manual Name) for EGTM_TIMS0_CH4_ADCSEL */
#define EGTM_TIM0_ADCSELCH4 (EGTM_TIMS0_CH4_ADCSEL)

/** \brief 1B14, Instance Selection for TIM[0] channel[5] */
#define EGTM_TIMS0_CH5_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B14u)
/** Alias (User Manual Name) for EGTM_TIMS0_CH5_ADCSEL */
#define EGTM_TIM0_ADCSELCH5 (EGTM_TIMS0_CH5_ADCSEL)

/** \brief 1B18, Instance Selection for TIM[0] channel[6] */
#define EGTM_TIMS0_CH6_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B18u)
/** Alias (User Manual Name) for EGTM_TIMS0_CH6_ADCSEL */
#define EGTM_TIM0_ADCSELCH6 (EGTM_TIMS0_CH6_ADCSEL)

/** \brief 1B1C, Instance Selection for TIM[0] channel[7] */
#define EGTM_TIMS0_CH7_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B1Cu)
/** Alias (User Manual Name) for EGTM_TIMS0_CH7_ADCSEL */
#define EGTM_TIM0_ADCSELCH7 (EGTM_TIMS0_CH7_ADCSEL)

/** \brief 1B20, Instance Selection for TIM[1] channel[0] */
#define EGTM_TIMS1_CH0_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B20u)
/** Alias (User Manual Name) for EGTM_TIMS1_CH0_ADCSEL */
#define EGTM_TIM1_ADCSELCH0 (EGTM_TIMS1_CH0_ADCSEL)

/** \brief 1B24, Instance Selection for TIM[1] channel[1] */
#define EGTM_TIMS1_CH1_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B24u)
/** Alias (User Manual Name) for EGTM_TIMS1_CH1_ADCSEL */
#define EGTM_TIM1_ADCSELCH1 (EGTM_TIMS1_CH1_ADCSEL)

/** \brief 1B28, Instance Selection for TIM[1] channel[2] */
#define EGTM_TIMS1_CH2_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B28u)
/** Alias (User Manual Name) for EGTM_TIMS1_CH2_ADCSEL */
#define EGTM_TIM1_ADCSELCH2 (EGTM_TIMS1_CH2_ADCSEL)

/** \brief 1B2C, Instance Selection for TIM[1] channel[3] */
#define EGTM_TIMS1_CH3_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B2Cu)
/** Alias (User Manual Name) for EGTM_TIMS1_CH3_ADCSEL */
#define EGTM_TIM1_ADCSELCH3 (EGTM_TIMS1_CH3_ADCSEL)

/** \brief 1B30, Instance Selection for TIM[1] channel[4] */
#define EGTM_TIMS1_CH4_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B30u)
/** Alias (User Manual Name) for EGTM_TIMS1_CH4_ADCSEL */
#define EGTM_TIM1_ADCSELCH4 (EGTM_TIMS1_CH4_ADCSEL)

/** \brief 1B34, Instance Selection for TIM[1] channel[5] */
#define EGTM_TIMS1_CH5_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B34u)
/** Alias (User Manual Name) for EGTM_TIMS1_CH5_ADCSEL */
#define EGTM_TIM1_ADCSELCH5 (EGTM_TIMS1_CH5_ADCSEL)

/** \brief 1B38, Instance Selection for TIM[1] channel[6] */
#define EGTM_TIMS1_CH6_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B38u)
/** Alias (User Manual Name) for EGTM_TIMS1_CH6_ADCSEL */
#define EGTM_TIM1_ADCSELCH6 (EGTM_TIMS1_CH6_ADCSEL)

/** \brief 1B3C, Instance Selection for TIM[1] channel[7] */
#define EGTM_TIMS1_CH7_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B3Cu)
/** Alias (User Manual Name) for EGTM_TIMS1_CH7_ADCSEL */
#define EGTM_TIM1_ADCSELCH7 (EGTM_TIMS1_CH7_ADCSEL)

/** \brief 1B40, Instance Selection for TIM[2] channel[0] */
#define EGTM_TIMS2_CH0_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B40u)
/** Alias (User Manual Name) for EGTM_TIMS2_CH0_ADCSEL */
#define EGTM_TIM2_ADCSELCH0 (EGTM_TIMS2_CH0_ADCSEL)

/** \brief 1B44, Instance Selection for TIM[2] channel[1] */
#define EGTM_TIMS2_CH1_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B44u)
/** Alias (User Manual Name) for EGTM_TIMS2_CH1_ADCSEL */
#define EGTM_TIM2_ADCSELCH1 (EGTM_TIMS2_CH1_ADCSEL)

/** \brief 1B48, Instance Selection for TIM[2] channel[2] */
#define EGTM_TIMS2_CH2_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B48u)
/** Alias (User Manual Name) for EGTM_TIMS2_CH2_ADCSEL */
#define EGTM_TIM2_ADCSELCH2 (EGTM_TIMS2_CH2_ADCSEL)

/** \brief 1B4C, Instance Selection for TIM[2] channel[3] */
#define EGTM_TIMS2_CH3_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B4Cu)
/** Alias (User Manual Name) for EGTM_TIMS2_CH3_ADCSEL */
#define EGTM_TIM2_ADCSELCH3 (EGTM_TIMS2_CH3_ADCSEL)

/** \brief 1B50, Instance Selection for TIM[2] channel[4] */
#define EGTM_TIMS2_CH4_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B50u)
/** Alias (User Manual Name) for EGTM_TIMS2_CH4_ADCSEL */
#define EGTM_TIM2_ADCSELCH4 (EGTM_TIMS2_CH4_ADCSEL)

/** \brief 1B54, Instance Selection for TIM[2] channel[5] */
#define EGTM_TIMS2_CH5_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B54u)
/** Alias (User Manual Name) for EGTM_TIMS2_CH5_ADCSEL */
#define EGTM_TIM2_ADCSELCH5 (EGTM_TIMS2_CH5_ADCSEL)

/** \brief 1B58, Instance Selection for TIM[2] channel[6] */
#define EGTM_TIMS2_CH6_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B58u)
/** Alias (User Manual Name) for EGTM_TIMS2_CH6_ADCSEL */
#define EGTM_TIM2_ADCSELCH6 (EGTM_TIMS2_CH6_ADCSEL)

/** \brief 1B5C, Instance Selection for TIM[2] channel[7] */
#define EGTM_TIMS2_CH7_ADCSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_EGTM_TIMS_CH_ADCSEL*)0xF90E1B5Cu)
/** Alias (User Manual Name) for EGTM_TIMS2_CH7_ADCSEL */
#define EGTM_TIM2_ADCSELCH7 (EGTM_TIMS2_CH7_ADCSEL)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXEGTM_REG_H */
