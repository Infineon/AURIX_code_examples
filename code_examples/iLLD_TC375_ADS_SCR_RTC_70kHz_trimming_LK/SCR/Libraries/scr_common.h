/**********************************************************************************************************************
 * \file scr_common.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef SCR_COMMON_H_
#define SCR_COMMON_H_ 1

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "scr_scu_sdcc.h"
#include "scr_sfr_sdcc.h"

/*********************************************************************************************************************/
/*--------------------------------------------------Data Structures--------------------------------------------------*/
/*********************************************************************************************************************/
typedef enum
{
    DIV5   = 0,     /**< \brief DIV = 5; fSYS = 20 MHz */
    DIV8   = 1,     /**< \brief DIV = 8; fSYS = 12.5 MHz */
    DIV10  = 2,     /**< \brief DIV = 10; fSYS = 10 MHz */
    DIV16  = 3,     /**< \brief DIV = 16; fSYS = 6.25 MHz */
    DIV20  = 4,     /**< \brief DIV = 20; fSYS = 5 MHz */
    DIV32  = 5,     /**< \brief DIV = 32; fSYS = 3.125 MHz */
    DIV40  = 6,     /**< \brief DIV = 40; fSYS = 2.5 MHz */
    DIV50  = 7,     /**< \brief DIV = 50; fSYS = 2 MHz */
    DIV80  = 8,     /**< \brief DIV = 80; fSYS = 1.25 MHz */
    DIV100 = 9,     /**< \brief DIV = 100; fSYS = 1 MHz */
    DIV125 = 0xA,   /**< \brief DIV = 125; fSYS = 0.8 MHz */
    DIV160 = 0xB,   /**< \brief DIV = 160; fSYS = 0.625 MHz */
    DIV200 = 0xC,   /**< \brief DIV = 200; fSYS = 0.5 MHz */
    DIV250 = 0xD,   /**< \brief DIV = 250; fSYS = 0.4 MHz */
} ScrClkDiv;

/*********************************************************************************************************************/
/*-------------------------------------------------Inline Functions--------------------------------------------------*/
/*********************************************************************************************************************/
SCR_INLINE void Scr_set_fsys(ScrClkDiv div)
{
    SCR_UNLOCK_PROTECTED_BITS();          /* Open access to write protected bits  */

    SCR_SET_SCU_PAGE(MOD_PAGE_1);
    /* Change the Clock Control register
     *      DIV5    = 0, fSYS = 20MHz
     *      OSCWAKE = 1, modules can clear OSCPD and enable 100 MHz oscillator
     *      OSCPD   = 0, 100 MHz oscillator is not powered down in standby mode */
    SCR_SCU_CMCON = ((div & DIV_MASK) | OSCWAKE_MASK);

    SCR_LOCK_PROTECTED_BITS();            /* Close access to write protected bits */
}

SCR_INLINE void Scr_set_fsys_70kHz(void)
{
    SCR_UNLOCK_PROTECTED_BITS();          /* Open access to write protected bits  */

    SCR_SET_SCU_PAGE(MOD_PAGE_1);
    /* Change the Clock Control register
     *      DIV5    = not modified
     *      OSCWAKE = 0, Modules cannot clear OSCPD
     *      OSCPD   = 1, 100 MHz oscillator is powered down in standby mode     */
    SCR_SCU_CMCON &= (OSCPD_MASK | DIV_MASK);

    SCR_LOCK_PROTECTED_BITS();            /* Close access to write protected bits */
}

SCR_INLINE boolean Scr_is_in_standby(void)
{
    return (SCR_SCU_SR == STBY_MASK);
}

#endif /* SCR_COMMON_H_ */
