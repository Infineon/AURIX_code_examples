/**********************************************************************************************************************
 * \file Master_QSPI_SafeCommunication.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef QSPI_SAFE_COMMUNICATION_MASTER_QSPI_SAFECOMMUNICATION_H_
#define QSPI_SAFE_COMMUNICATION_MASTER_QSPI_SAFECOMMUNICATION_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxQspi_SpiMaster.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define MASTER_BUFFER_SIZE     4                            /* Buffers size                                          */
#define MASTER_FRAME_SIZE      MASTER_BUFFER_SIZE + 3              /* Buffers size                                   */

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
extern uint32 g_cyclTimeQSPI;

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
typedef union
{
   struct {
       uint32 data_id;
       uint32 spi4MasterTxBuffer[MASTER_BUFFER_SIZE];       /* QSPI Master Transmit buffer   */
       uint32 frame_counter;
       uint32 crc;
   }dataM;
   uint32 data[MASTER_FRAME_SIZE];
} qspiMasterTransmit;

typedef enum
{
    ExpectedFrame,
    EarlyFrame,
    LateFrame
} QspiSafeTimingError;

typedef struct
{
    qspiMasterTransmit        qspiMasterTx;                /* Buffers instance              */
    IfxQspi_SpiMaster         spiSafeComMaster;            /* QSPI Master handle            */
    IfxQspi_SpiMaster_Channel spiSafeComMasterChannel;     /* QSPI Master Channel handle    */
    QspiSafeTimingError       qpsiSafeTimingErrorInjection;
} qspiMasterSafeComm;

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void initQspiMasterSafeComm(void);
void masterTransmitDataSafeCommQSPI(void);
void updateQspiCycleTime(void);

#endif /* QSPI_SAFE_COMMUNICATION_MASTER_QSPI_SAFECOMMUNICATION_H_ */
