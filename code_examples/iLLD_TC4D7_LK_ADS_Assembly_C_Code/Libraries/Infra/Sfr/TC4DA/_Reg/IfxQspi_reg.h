/**
 * \file IfxQspi_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_QSPI/V0.2.2.1.1
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg Qspi address
 * \ingroup IfxSfr_Qspi_Registers
 * 
 * \defgroup IfxSfr_Qspi_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi0 2-QSPI0
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi1 2-QSPI1
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi2 2-QSPI2
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi3 2-QSPI3
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi4 2-QSPI4
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi5 2-QSPI5
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi6 2-QSPI6
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 * \defgroup IfxSfr_Qspi_Registers_Cfg_Qspi7 2-QSPI7
 * \ingroup IfxSfr_Qspi_Registers_Cfg
 *
 *
 */
#ifndef IFXQSPI_REG_H
#define IFXQSPI_REG_H 1
/******************************************************************************/
#include "IfxQspi_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Qspi_Registers_Cfg_BaseAddress
 * \{  */

/** \brief QSPI object */
#define MODULE_QSPI0 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401000u))
#define MODULE_QSPI1 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401200u))
#define MODULE_QSPI2 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401400u))
#define MODULE_QSPI3 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401600u))
#define MODULE_QSPI4 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401800u))
#define MODULE_QSPI5 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401A00u))
#define MODULE_QSPI6 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401C00u))
#define MODULE_QSPI7 /*lint --e(923, 9078)*/ ((*(Ifx_QSPI*)0xF4401E00u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi0
 * \{  */
/** \brief 0, Clock control register */
#define QSPI0_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401000u)

/** \brief 4, OCDS control and status register */
#define QSPI0_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401004u)

/** \brief 8, Module identification register */
#define QSPI0_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401008u)

/** \brief C, Reset control register A */
#define QSPI0_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF440100Cu)

/** \brief 10, Reset control register B */
#define QSPI0_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401010u)

/** \brief 14, Reset status register */
#define QSPI0_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401014u)

/** \brief 20, PROT register endinit */
#define QSPI0_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401020u)

/** \brief 24, PROT register safe endinit */
#define QSPI0_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401024u)

/** \brief 40, Write access enable register A */
#define QSPI0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401040u)

/** \brief 44, Write access enable register B */
#define QSPI0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401044u)

/** \brief 48, Read access enable register A */
#define QSPI0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401048u)

/** \brief 4C, Read access enable register B */
#define QSPI0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF440104Cu)

/** \brief 50, VM access enable register */
#define QSPI0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401050u)

/** \brief 54, PRS access enable register */
#define QSPI0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401054u)

/** \brief 104, Port input select register */
#define QSPI0_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401104u)

/** \brief 110, Global configuration register */
#define QSPI0_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401110u)

/** \brief 114, Global configuration register 1 */
#define QSPI0_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401114u)

/** \brief 118, Basic configuration register */
#define QSPI0_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401118u)

/** \brief 120, Configuration extension 0 */
#define QSPI0_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401120u)

/** \brief 124, Configuration extension 1 */
#define QSPI0_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401124u)

/** \brief 128, Configuration extension 2 */
#define QSPI0_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401128u)

/** \brief 12C, Configuration extension 3 */
#define QSPI0_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440112Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI0_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401130u)

/** \brief 134, Configuration extension 5 */
#define QSPI0_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401134u)

/** \brief 138, Configuration extension 6 */
#define QSPI0_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401138u)

/** \brief 13C, Configuration extension 7 */
#define QSPI0_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440113Cu)

/** \brief 140, Status register */
#define QSPI0_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401140u)

/** \brief 144, Status register 1 */
#define QSPI0_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401144u)

/** \brief 148, Slave select output control register */
#define QSPI0_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401148u)

/** \brief 150, Flags clear register */
#define QSPI0_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401150u)

/** \brief 154, Extra large data configuration register */
#define QSPI0_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401154u)

/** \brief 158, MIX_ENTRY register */
#define QSPI0_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401158u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI0_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF440115Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI0_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401160u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI0_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401164u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI0_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401168u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI0_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440116Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI0_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401170u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI0_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401174u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI0_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401178u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI0_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440117Cu)

/** \brief F4401180, RX_EXIT register */
#define QSPI0_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401180u)
/** Alias (User Manual Name) for QSPI0_RXEXIT0, Base Mirror Register */
#define QSPI0_RXEXIT (QSPI0_RXEXIT0)

/** \brief F4401184, RX_EXIT register */
#define QSPI0_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401184u)

/** \brief F4401188, RX_EXIT register */
#define QSPI0_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401188u)

/** \brief F440118C, RX_EXIT register */
#define QSPI0_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440118Cu)

/** \brief F4401190, RX_EXIT register */
#define QSPI0_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401190u)

/** \brief F4401194, RX_EXIT register */
#define QSPI0_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401194u)

/** \brief F4401198, RX_EXIT register */
#define QSPI0_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401198u)

/** \brief F440119C, RX_EXIT register */
#define QSPI0_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440119Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI0_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF44011A0u)

/** \brief 1B4, Move counter register */
#define QSPI0_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF44011B4u)

/** \brief 1B8, Move counter control register */
#define QSPI0_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF44011B8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI0_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF44011BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi1
 * \{  */
/** \brief 0, Clock control register */
#define QSPI1_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401200u)

/** \brief 4, OCDS control and status register */
#define QSPI1_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401204u)

/** \brief 8, Module identification register */
#define QSPI1_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401208u)

/** \brief C, Reset control register A */
#define QSPI1_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF440120Cu)

/** \brief 10, Reset control register B */
#define QSPI1_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401210u)

/** \brief 14, Reset status register */
#define QSPI1_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401214u)

/** \brief 20, PROT register endinit */
#define QSPI1_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401220u)

/** \brief 24, PROT register safe endinit */
#define QSPI1_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401224u)

/** \brief 40, Write access enable register A */
#define QSPI1_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401240u)

/** \brief 44, Write access enable register B */
#define QSPI1_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401244u)

/** \brief 48, Read access enable register A */
#define QSPI1_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401248u)

/** \brief 4C, Read access enable register B */
#define QSPI1_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF440124Cu)

/** \brief 50, VM access enable register */
#define QSPI1_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401250u)

/** \brief 54, PRS access enable register */
#define QSPI1_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401254u)

/** \brief 104, Port input select register */
#define QSPI1_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401304u)

/** \brief 110, Global configuration register */
#define QSPI1_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401310u)

/** \brief 114, Global configuration register 1 */
#define QSPI1_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401314u)

/** \brief 118, Basic configuration register */
#define QSPI1_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401318u)

/** \brief 120, Configuration extension 0 */
#define QSPI1_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401320u)

/** \brief 124, Configuration extension 1 */
#define QSPI1_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401324u)

/** \brief 128, Configuration extension 2 */
#define QSPI1_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401328u)

/** \brief 12C, Configuration extension 3 */
#define QSPI1_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440132Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI1_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401330u)

/** \brief 134, Configuration extension 5 */
#define QSPI1_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401334u)

/** \brief 138, Configuration extension 6 */
#define QSPI1_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401338u)

/** \brief 13C, Configuration extension 7 */
#define QSPI1_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440133Cu)

/** \brief 140, Status register */
#define QSPI1_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401340u)

/** \brief 144, Status register 1 */
#define QSPI1_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401344u)

/** \brief 148, Slave select output control register */
#define QSPI1_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401348u)

/** \brief 150, Flags clear register */
#define QSPI1_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401350u)

/** \brief 154, Extra large data configuration register */
#define QSPI1_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401354u)

/** \brief 158, MIX_ENTRY register */
#define QSPI1_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401358u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI1_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF440135Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI1_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401360u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI1_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401364u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI1_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401368u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI1_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440136Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI1_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401370u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI1_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401374u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI1_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401378u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI1_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440137Cu)

/** \brief F4401380, RX_EXIT register */
#define QSPI1_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401380u)
/** Alias (User Manual Name) for QSPI1_RXEXIT0, Base Mirror Register */
#define QSPI1_RXEXIT (QSPI1_RXEXIT0)

/** \brief F4401384, RX_EXIT register */
#define QSPI1_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401384u)

/** \brief F4401388, RX_EXIT register */
#define QSPI1_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401388u)

/** \brief F440138C, RX_EXIT register */
#define QSPI1_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440138Cu)

/** \brief F4401390, RX_EXIT register */
#define QSPI1_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401390u)

/** \brief F4401394, RX_EXIT register */
#define QSPI1_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401394u)

/** \brief F4401398, RX_EXIT register */
#define QSPI1_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401398u)

/** \brief F440139C, RX_EXIT register */
#define QSPI1_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440139Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI1_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF44013A0u)

/** \brief 1B4, Move counter register */
#define QSPI1_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF44013B4u)

/** \brief 1B8, Move counter control register */
#define QSPI1_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF44013B8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI1_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF44013BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi2
 * \{  */
/** \brief 0, Clock control register */
#define QSPI2_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401400u)

/** \brief 4, OCDS control and status register */
#define QSPI2_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401404u)

/** \brief 8, Module identification register */
#define QSPI2_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401408u)

/** \brief C, Reset control register A */
#define QSPI2_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF440140Cu)

/** \brief 10, Reset control register B */
#define QSPI2_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401410u)

/** \brief 14, Reset status register */
#define QSPI2_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401414u)

/** \brief 20, PROT register endinit */
#define QSPI2_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401420u)

/** \brief 24, PROT register safe endinit */
#define QSPI2_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401424u)

/** \brief 40, Write access enable register A */
#define QSPI2_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401440u)

/** \brief 44, Write access enable register B */
#define QSPI2_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401444u)

/** \brief 48, Read access enable register A */
#define QSPI2_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401448u)

/** \brief 4C, Read access enable register B */
#define QSPI2_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF440144Cu)

/** \brief 50, VM access enable register */
#define QSPI2_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401450u)

/** \brief 54, PRS access enable register */
#define QSPI2_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401454u)

/** \brief 104, Port input select register */
#define QSPI2_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401504u)

/** \brief 110, Global configuration register */
#define QSPI2_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401510u)

/** \brief 114, Global configuration register 1 */
#define QSPI2_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401514u)

/** \brief 118, Basic configuration register */
#define QSPI2_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401518u)

/** \brief 120, Configuration extension 0 */
#define QSPI2_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401520u)

/** \brief 124, Configuration extension 1 */
#define QSPI2_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401524u)

/** \brief 128, Configuration extension 2 */
#define QSPI2_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401528u)

/** \brief 12C, Configuration extension 3 */
#define QSPI2_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440152Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI2_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401530u)

/** \brief 134, Configuration extension 5 */
#define QSPI2_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401534u)

/** \brief 138, Configuration extension 6 */
#define QSPI2_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401538u)

/** \brief 13C, Configuration extension 7 */
#define QSPI2_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440153Cu)

/** \brief 140, Status register */
#define QSPI2_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401540u)

/** \brief 144, Status register 1 */
#define QSPI2_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401544u)

/** \brief 148, Slave select output control register */
#define QSPI2_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401548u)

/** \brief 150, Flags clear register */
#define QSPI2_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401550u)

/** \brief 154, Extra large data configuration register */
#define QSPI2_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401554u)

/** \brief 158, MIX_ENTRY register */
#define QSPI2_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401558u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI2_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF440155Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI2_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401560u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI2_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401564u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI2_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401568u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI2_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440156Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI2_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401570u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI2_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401574u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI2_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401578u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI2_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440157Cu)

/** \brief F4401580, RX_EXIT register */
#define QSPI2_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401580u)
/** Alias (User Manual Name) for QSPI2_RXEXIT0, Base Mirror Register */
#define QSPI2_RXEXIT (QSPI2_RXEXIT0)

/** \brief F4401584, RX_EXIT register */
#define QSPI2_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401584u)

/** \brief F4401588, RX_EXIT register */
#define QSPI2_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401588u)

/** \brief F440158C, RX_EXIT register */
#define QSPI2_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440158Cu)

/** \brief F4401590, RX_EXIT register */
#define QSPI2_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401590u)

/** \brief F4401594, RX_EXIT register */
#define QSPI2_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401594u)

/** \brief F4401598, RX_EXIT register */
#define QSPI2_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401598u)

/** \brief F440159C, RX_EXIT register */
#define QSPI2_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440159Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI2_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF44015A0u)

/** \brief 1B4, Move counter register */
#define QSPI2_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF44015B4u)

/** \brief 1B8, Move counter control register */
#define QSPI2_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF44015B8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI2_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF44015BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi3
 * \{  */
/** \brief 0, Clock control register */
#define QSPI3_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401600u)

/** \brief 4, OCDS control and status register */
#define QSPI3_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401604u)

/** \brief 8, Module identification register */
#define QSPI3_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401608u)

/** \brief C, Reset control register A */
#define QSPI3_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF440160Cu)

/** \brief 10, Reset control register B */
#define QSPI3_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401610u)

/** \brief 14, Reset status register */
#define QSPI3_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401614u)

/** \brief 20, PROT register endinit */
#define QSPI3_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401620u)

/** \brief 24, PROT register safe endinit */
#define QSPI3_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401624u)

/** \brief 40, Write access enable register A */
#define QSPI3_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401640u)

/** \brief 44, Write access enable register B */
#define QSPI3_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401644u)

/** \brief 48, Read access enable register A */
#define QSPI3_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401648u)

/** \brief 4C, Read access enable register B */
#define QSPI3_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF440164Cu)

/** \brief 50, VM access enable register */
#define QSPI3_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401650u)

/** \brief 54, PRS access enable register */
#define QSPI3_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401654u)

/** \brief 104, Port input select register */
#define QSPI3_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401704u)

/** \brief 110, Global configuration register */
#define QSPI3_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401710u)

/** \brief 114, Global configuration register 1 */
#define QSPI3_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401714u)

/** \brief 118, Basic configuration register */
#define QSPI3_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401718u)

/** \brief 120, Configuration extension 0 */
#define QSPI3_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401720u)

/** \brief 124, Configuration extension 1 */
#define QSPI3_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401724u)

/** \brief 128, Configuration extension 2 */
#define QSPI3_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401728u)

/** \brief 12C, Configuration extension 3 */
#define QSPI3_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440172Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI3_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401730u)

/** \brief 134, Configuration extension 5 */
#define QSPI3_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401734u)

/** \brief 138, Configuration extension 6 */
#define QSPI3_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401738u)

/** \brief 13C, Configuration extension 7 */
#define QSPI3_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440173Cu)

/** \brief 140, Status register */
#define QSPI3_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401740u)

/** \brief 144, Status register 1 */
#define QSPI3_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401744u)

/** \brief 148, Slave select output control register */
#define QSPI3_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401748u)

/** \brief 150, Flags clear register */
#define QSPI3_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401750u)

/** \brief 154, Extra large data configuration register */
#define QSPI3_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401754u)

/** \brief 158, MIX_ENTRY register */
#define QSPI3_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401758u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI3_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF440175Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI3_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401760u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI3_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401764u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI3_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401768u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI3_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440176Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI3_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401770u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI3_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401774u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI3_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401778u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI3_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440177Cu)

/** \brief F4401780, RX_EXIT register */
#define QSPI3_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401780u)
/** Alias (User Manual Name) for QSPI3_RXEXIT0, Base Mirror Register */
#define QSPI3_RXEXIT (QSPI3_RXEXIT0)

/** \brief F4401784, RX_EXIT register */
#define QSPI3_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401784u)

/** \brief F4401788, RX_EXIT register */
#define QSPI3_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401788u)

/** \brief F440178C, RX_EXIT register */
#define QSPI3_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440178Cu)

/** \brief F4401790, RX_EXIT register */
#define QSPI3_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401790u)

/** \brief F4401794, RX_EXIT register */
#define QSPI3_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401794u)

/** \brief F4401798, RX_EXIT register */
#define QSPI3_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401798u)

/** \brief F440179C, RX_EXIT register */
#define QSPI3_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440179Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI3_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF44017A0u)

/** \brief 1B4, Move counter register */
#define QSPI3_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF44017B4u)

/** \brief 1B8, Move counter control register */
#define QSPI3_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF44017B8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI3_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF44017BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi4
 * \{  */
/** \brief 0, Clock control register */
#define QSPI4_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401800u)

/** \brief 4, OCDS control and status register */
#define QSPI4_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401804u)

/** \brief 8, Module identification register */
#define QSPI4_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401808u)

/** \brief C, Reset control register A */
#define QSPI4_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF440180Cu)

/** \brief 10, Reset control register B */
#define QSPI4_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401810u)

/** \brief 14, Reset status register */
#define QSPI4_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401814u)

/** \brief 20, PROT register endinit */
#define QSPI4_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401820u)

/** \brief 24, PROT register safe endinit */
#define QSPI4_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401824u)

/** \brief 40, Write access enable register A */
#define QSPI4_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401840u)

/** \brief 44, Write access enable register B */
#define QSPI4_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401844u)

/** \brief 48, Read access enable register A */
#define QSPI4_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401848u)

/** \brief 4C, Read access enable register B */
#define QSPI4_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF440184Cu)

/** \brief 50, VM access enable register */
#define QSPI4_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401850u)

/** \brief 54, PRS access enable register */
#define QSPI4_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401854u)

/** \brief 104, Port input select register */
#define QSPI4_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401904u)

/** \brief 110, Global configuration register */
#define QSPI4_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401910u)

/** \brief 114, Global configuration register 1 */
#define QSPI4_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401914u)

/** \brief 118, Basic configuration register */
#define QSPI4_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401918u)

/** \brief 120, Configuration extension 0 */
#define QSPI4_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401920u)

/** \brief 124, Configuration extension 1 */
#define QSPI4_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401924u)

/** \brief 128, Configuration extension 2 */
#define QSPI4_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401928u)

/** \brief 12C, Configuration extension 3 */
#define QSPI4_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440192Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI4_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401930u)

/** \brief 134, Configuration extension 5 */
#define QSPI4_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401934u)

/** \brief 138, Configuration extension 6 */
#define QSPI4_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401938u)

/** \brief 13C, Configuration extension 7 */
#define QSPI4_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF440193Cu)

/** \brief 140, Status register */
#define QSPI4_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401940u)

/** \brief 144, Status register 1 */
#define QSPI4_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401944u)

/** \brief 148, Slave select output control register */
#define QSPI4_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401948u)

/** \brief 150, Flags clear register */
#define QSPI4_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401950u)

/** \brief 154, Extra large data configuration register */
#define QSPI4_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401954u)

/** \brief 158, MIX_ENTRY register */
#define QSPI4_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401958u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI4_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF440195Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI4_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401960u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI4_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401964u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI4_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401968u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI4_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440196Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI4_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401970u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI4_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401974u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI4_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401978u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI4_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF440197Cu)

/** \brief F4401980, RX_EXIT register */
#define QSPI4_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401980u)
/** Alias (User Manual Name) for QSPI4_RXEXIT0, Base Mirror Register */
#define QSPI4_RXEXIT (QSPI4_RXEXIT0)

/** \brief F4401984, RX_EXIT register */
#define QSPI4_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401984u)

/** \brief F4401988, RX_EXIT register */
#define QSPI4_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401988u)

/** \brief F440198C, RX_EXIT register */
#define QSPI4_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440198Cu)

/** \brief F4401990, RX_EXIT register */
#define QSPI4_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401990u)

/** \brief F4401994, RX_EXIT register */
#define QSPI4_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401994u)

/** \brief F4401998, RX_EXIT register */
#define QSPI4_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401998u)

/** \brief F440199C, RX_EXIT register */
#define QSPI4_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF440199Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI4_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF44019A0u)

/** \brief 1B4, Move counter register */
#define QSPI4_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF44019B4u)

/** \brief 1B8, Move counter control register */
#define QSPI4_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF44019B8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI4_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF44019BCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi5
 * \{  */
/** \brief 0, Clock control register */
#define QSPI5_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401A00u)

/** \brief 4, OCDS control and status register */
#define QSPI5_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401A04u)

/** \brief 8, Module identification register */
#define QSPI5_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401A08u)

/** \brief C, Reset control register A */
#define QSPI5_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF4401A0Cu)

/** \brief 10, Reset control register B */
#define QSPI5_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401A10u)

/** \brief 14, Reset status register */
#define QSPI5_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401A14u)

/** \brief 20, PROT register endinit */
#define QSPI5_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401A20u)

/** \brief 24, PROT register safe endinit */
#define QSPI5_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401A24u)

/** \brief 40, Write access enable register A */
#define QSPI5_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401A40u)

/** \brief 44, Write access enable register B */
#define QSPI5_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401A44u)

/** \brief 48, Read access enable register A */
#define QSPI5_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401A48u)

/** \brief 4C, Read access enable register B */
#define QSPI5_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF4401A4Cu)

/** \brief 50, VM access enable register */
#define QSPI5_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401A50u)

/** \brief 54, PRS access enable register */
#define QSPI5_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401A54u)

/** \brief 104, Port input select register */
#define QSPI5_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401B04u)

/** \brief 110, Global configuration register */
#define QSPI5_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401B10u)

/** \brief 114, Global configuration register 1 */
#define QSPI5_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401B14u)

/** \brief 118, Basic configuration register */
#define QSPI5_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401B18u)

/** \brief 120, Configuration extension 0 */
#define QSPI5_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B20u)

/** \brief 124, Configuration extension 1 */
#define QSPI5_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B24u)

/** \brief 128, Configuration extension 2 */
#define QSPI5_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B28u)

/** \brief 12C, Configuration extension 3 */
#define QSPI5_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B2Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI5_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B30u)

/** \brief 134, Configuration extension 5 */
#define QSPI5_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B34u)

/** \brief 138, Configuration extension 6 */
#define QSPI5_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B38u)

/** \brief 13C, Configuration extension 7 */
#define QSPI5_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401B3Cu)

/** \brief 140, Status register */
#define QSPI5_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401B40u)

/** \brief 144, Status register 1 */
#define QSPI5_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401B44u)

/** \brief 148, Slave select output control register */
#define QSPI5_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401B48u)

/** \brief 150, Flags clear register */
#define QSPI5_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401B50u)

/** \brief 154, Extra large data configuration register */
#define QSPI5_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401B54u)

/** \brief 158, MIX_ENTRY register */
#define QSPI5_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401B58u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI5_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF4401B5Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI5_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B60u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI5_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B64u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI5_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B68u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI5_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B6Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI5_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B70u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI5_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B74u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI5_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B78u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI5_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401B7Cu)

/** \brief F4401B80, RX_EXIT register */
#define QSPI5_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B80u)
/** Alias (User Manual Name) for QSPI5_RXEXIT0, Base Mirror Register */
#define QSPI5_RXEXIT (QSPI5_RXEXIT0)

/** \brief F4401B84, RX_EXIT register */
#define QSPI5_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B84u)

/** \brief F4401B88, RX_EXIT register */
#define QSPI5_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B88u)

/** \brief F4401B8C, RX_EXIT register */
#define QSPI5_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B8Cu)

/** \brief F4401B90, RX_EXIT register */
#define QSPI5_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B90u)

/** \brief F4401B94, RX_EXIT register */
#define QSPI5_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B94u)

/** \brief F4401B98, RX_EXIT register */
#define QSPI5_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B98u)

/** \brief F4401B9C, RX_EXIT register */
#define QSPI5_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401B9Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI5_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF4401BA0u)

/** \brief 1B4, Move counter register */
#define QSPI5_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF4401BB4u)

/** \brief 1B8, Move counter control register */
#define QSPI5_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF4401BB8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI5_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF4401BBCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi6
 * \{  */
/** \brief 0, Clock control register */
#define QSPI6_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401C00u)

/** \brief 4, OCDS control and status register */
#define QSPI6_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401C04u)

/** \brief 8, Module identification register */
#define QSPI6_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401C08u)

/** \brief C, Reset control register A */
#define QSPI6_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF4401C0Cu)

/** \brief 10, Reset control register B */
#define QSPI6_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401C10u)

/** \brief 14, Reset status register */
#define QSPI6_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401C14u)

/** \brief 20, PROT register endinit */
#define QSPI6_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401C20u)

/** \brief 24, PROT register safe endinit */
#define QSPI6_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401C24u)

/** \brief 40, Write access enable register A */
#define QSPI6_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401C40u)

/** \brief 44, Write access enable register B */
#define QSPI6_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401C44u)

/** \brief 48, Read access enable register A */
#define QSPI6_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401C48u)

/** \brief 4C, Read access enable register B */
#define QSPI6_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF4401C4Cu)

/** \brief 50, VM access enable register */
#define QSPI6_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401C50u)

/** \brief 54, PRS access enable register */
#define QSPI6_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401C54u)

/** \brief 104, Port input select register */
#define QSPI6_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401D04u)

/** \brief 110, Global configuration register */
#define QSPI6_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401D10u)

/** \brief 114, Global configuration register 1 */
#define QSPI6_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401D14u)

/** \brief 118, Basic configuration register */
#define QSPI6_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401D18u)

/** \brief 120, Configuration extension 0 */
#define QSPI6_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D20u)

/** \brief 124, Configuration extension 1 */
#define QSPI6_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D24u)

/** \brief 128, Configuration extension 2 */
#define QSPI6_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D28u)

/** \brief 12C, Configuration extension 3 */
#define QSPI6_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D2Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI6_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D30u)

/** \brief 134, Configuration extension 5 */
#define QSPI6_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D34u)

/** \brief 138, Configuration extension 6 */
#define QSPI6_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D38u)

/** \brief 13C, Configuration extension 7 */
#define QSPI6_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401D3Cu)

/** \brief 140, Status register */
#define QSPI6_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401D40u)

/** \brief 144, Status register 1 */
#define QSPI6_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401D44u)

/** \brief 148, Slave select output control register */
#define QSPI6_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401D48u)

/** \brief 150, Flags clear register */
#define QSPI6_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401D50u)

/** \brief 154, Extra large data configuration register */
#define QSPI6_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401D54u)

/** \brief 158, MIX_ENTRY register */
#define QSPI6_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401D58u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI6_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF4401D5Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI6_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D60u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI6_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D64u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI6_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D68u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI6_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D6Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI6_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D70u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI6_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D74u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI6_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D78u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI6_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401D7Cu)

/** \brief F4401D80, RX_EXIT register */
#define QSPI6_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D80u)
/** Alias (User Manual Name) for QSPI6_RXEXIT0, Base Mirror Register */
#define QSPI6_RXEXIT (QSPI6_RXEXIT0)

/** \brief F4401D84, RX_EXIT register */
#define QSPI6_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D84u)

/** \brief F4401D88, RX_EXIT register */
#define QSPI6_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D88u)

/** \brief F4401D8C, RX_EXIT register */
#define QSPI6_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D8Cu)

/** \brief F4401D90, RX_EXIT register */
#define QSPI6_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D90u)

/** \brief F4401D94, RX_EXIT register */
#define QSPI6_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D94u)

/** \brief F4401D98, RX_EXIT register */
#define QSPI6_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D98u)

/** \brief F4401D9C, RX_EXIT register */
#define QSPI6_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401D9Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI6_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF4401DA0u)

/** \brief 1B4, Move counter register */
#define QSPI6_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF4401DB4u)

/** \brief 1B8, Move counter control register */
#define QSPI6_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF4401DB8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI6_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF4401DBCu)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Qspi_Registers_Cfg_Qspi7
 * \{  */
/** \brief 0, Clock control register */
#define QSPI7_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_CLC*)0xF4401E00u)

/** \brief 4, OCDS control and status register */
#define QSPI7_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_OCS*)0xF4401E04u)

/** \brief 8, Module identification register */
#define QSPI7_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ID*)0xF4401E08u)

/** \brief C, Reset control register A */
#define QSPI7_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLA*)0xF4401E0Cu)

/** \brief 10, Reset control register B */
#define QSPI7_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_CTRLB*)0xF4401E10u)

/** \brief 14, Reset status register */
#define QSPI7_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RST_STAT*)0xF4401E14u)

/** \brief 20, PROT register endinit */
#define QSPI7_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401E20u)

/** \brief 24, PROT register safe endinit */
#define QSPI7_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PROT*)0xF4401E24u)

/** \brief 40, Write access enable register A */
#define QSPI7_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRA*)0xF4401E40u)

/** \brief 44, Write access enable register B */
#define QSPI7_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_WRB_FPI*)0xF4401E44u)

/** \brief 48, Read access enable register A */
#define QSPI7_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDA*)0xF4401E48u)

/** \brief 4C, Read access enable register B */
#define QSPI7_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_RDB_FPI*)0xF4401E4Cu)

/** \brief 50, VM access enable register */
#define QSPI7_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_VM*)0xF4401E50u)

/** \brief 54, PRS access enable register */
#define QSPI7_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ACCEN_PRS*)0xF4401E54u)

/** \brief 104, Port input select register */
#define QSPI7_PISEL /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_PISEL*)0xF4401F04u)

/** \brief 110, Global configuration register */
#define QSPI7_GLOBALCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON*)0xF4401F10u)

/** \brief 114, Global configuration register 1 */
#define QSPI7_GLOBALCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_GLOBALCON1*)0xF4401F14u)

/** \brief 118, Basic configuration register */
#define QSPI7_BACON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACON*)0xF4401F18u)

/** \brief 120, Configuration extension 0 */
#define QSPI7_ECON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F20u)

/** \brief 124, Configuration extension 1 */
#define QSPI7_ECON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F24u)

/** \brief 128, Configuration extension 2 */
#define QSPI7_ECON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F28u)

/** \brief 12C, Configuration extension 3 */
#define QSPI7_ECON3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F2Cu)

/** \brief 130, Configuration extension 4 */
#define QSPI7_ECON4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F30u)

/** \brief 134, Configuration extension 5 */
#define QSPI7_ECON5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F34u)

/** \brief 138, Configuration extension 6 */
#define QSPI7_ECON6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F38u)

/** \brief 13C, Configuration extension 7 */
#define QSPI7_ECON7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_ECON*)0xF4401F3Cu)

/** \brief 140, Status register */
#define QSPI7_STATUS /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS*)0xF4401F40u)

/** \brief 144, Status register 1 */
#define QSPI7_STATUS1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_STATUS1*)0xF4401F44u)

/** \brief 148, Slave select output control register */
#define QSPI7_SSOC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_SSOC*)0xF4401F48u)

/** \brief 150, Flags clear register */
#define QSPI7_FLAGSCLEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF4401F50u)

/** \brief 154, Extra large data configuration register */
#define QSPI7_XXLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_XXLCON*)0xF4401F54u)

/** \brief 158, MIX_ENTRY register */
#define QSPI7_MIXENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MIXENTRY*)0xF4401F58u)

/** \brief 15C, BACON_ENTRY register */
#define QSPI7_BACONENTRY /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_BACONENTRY*)0xF4401F5Cu)

/** \brief 160, DATA_ENTRY register 0 */
#define QSPI7_DATAENTRY0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F60u)

/** \brief 164, DATA_ENTRY register 1 */
#define QSPI7_DATAENTRY1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F64u)

/** \brief 168, DATA_ENTRY register 2 */
#define QSPI7_DATAENTRY2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F68u)

/** \brief 16C, DATA_ENTRY register 3 */
#define QSPI7_DATAENTRY3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F6Cu)

/** \brief 170, DATA_ENTRY register 4 */
#define QSPI7_DATAENTRY4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F70u)

/** \brief 174, DATA_ENTRY register 5 */
#define QSPI7_DATAENTRY5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F74u)

/** \brief 178, DATA_ENTRY register 6 */
#define QSPI7_DATAENTRY6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F78u)

/** \brief 17C, DATA_ENTRY register 7 */
#define QSPI7_DATAENTRY7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_DATAENTRY*)0xF4401F7Cu)

/** \brief F4401F80, RX_EXIT register */
#define QSPI7_RXEXIT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F80u)
/** Alias (User Manual Name) for QSPI7_RXEXIT0, Base Mirror Register */
#define QSPI7_RXEXIT (QSPI7_RXEXIT0)

/** \brief F4401F84, RX_EXIT register */
#define QSPI7_RXEXIT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F84u)

/** \brief F4401F88, RX_EXIT register */
#define QSPI7_RXEXIT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F88u)

/** \brief F4401F8C, RX_EXIT register */
#define QSPI7_RXEXIT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F8Cu)

/** \brief F4401F90, RX_EXIT register */
#define QSPI7_RXEXIT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F90u)

/** \brief F4401F94, RX_EXIT register */
#define QSPI7_RXEXIT5 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F94u)

/** \brief F4401F98, RX_EXIT register */
#define QSPI7_RXEXIT6 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F98u)

/** \brief F4401F9C, RX_EXIT register */
#define QSPI7_RXEXIT7 /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXIT*)0xF4401F9Cu)

/** \brief 1A0, RX_EXIT debug register */
#define QSPI7_RXEXITD /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_RXEXITD*)0xF4401FA0u)

/** \brief 1B4, Move counter register */
#define QSPI7_MC /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MC*)0xF4401FB4u)

/** \brief 1B8, Move counter control register */
#define QSPI7_MCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MCCON*)0xF4401FB8u)

/** \brief 1BC, Multiple slave select register */
#define QSPI7_MSSMUX /*lint --e(923, 9078)*/ (*(volatile Ifx_QSPI_MSSMUX*)0xF4401FBCu)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXQSPI_REG_H */
