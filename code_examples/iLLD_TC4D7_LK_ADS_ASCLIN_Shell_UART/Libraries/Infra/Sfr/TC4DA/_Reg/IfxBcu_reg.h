/**
 * \file IfxBcu_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_FPI/V13.1.1.0.3
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Bcu_Registers_Cfg Bcu address
 * \ingroup IfxSfr_Bcu_Registers
 * 
 * \defgroup IfxSfr_Bcu_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Bcu_Registers_Cfg
 *
 * \defgroup IfxSfr_Bcu_Registers_Cfg_Tbcu 2-TBCU
 * \ingroup IfxSfr_Bcu_Registers_Cfg
 *
 * \defgroup IfxSfr_Bcu_Registers_Cfg_Csbcu 2-CSBCU
 * \ingroup IfxSfr_Bcu_Registers_Cfg
 *
 * \defgroup IfxSfr_Bcu_Registers_Cfg_Sbcu 2-SBCU
 * \ingroup IfxSfr_Bcu_Registers_Cfg
 *
 * \defgroup IfxSfr_Bcu_Registers_Cfg_Combcu 2-COMBCU
 * \ingroup IfxSfr_Bcu_Registers_Cfg
 *
 *
 */
#ifndef IFXBCU_REG_H
#define IFXBCU_REG_H 1
/******************************************************************************/
#include "IfxBcu_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Bcu_Registers_Cfg_BaseAddress
 * \{  */

/** \brief BCU object */
#define MODULE_TBCU /*lint --e(923, 9078)*/ ((*(Ifx_BCU*)0xFAFFFC00u))
#define MODULE_CSBCU /*lint --e(923, 9078)*/ ((*(Ifx_BCU*)0xF6FFFC00u))
#define MODULE_SBCU /*lint --e(923, 9078)*/ ((*(Ifx_BCU*)0xF1FFFC00u))
#define MODULE_COMBCU /*lint --e(923, 9078)*/ ((*(Ifx_BCU*)0xF5FFFC00u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Bcu_Registers_Cfg_Tbcu
 * \{  */
/** \brief 4, OCDS control and status register */
#define TBCU_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_OCS*)0xFAFFFC04u)

/** \brief 8, Module identification register */
#define TBCU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ID*)0xFAFFFC08u)

/** \brief C, PROT register endinit */
#define TBCU_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xFAFFFC0Cu)

/** \brief 10, PROT register safe endinit */
#define TBCU_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xFAFFFC10u)

/** \brief 14, Write access enable register A */
#define TBCU_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRA*)0xFAFFFC14u)

/** \brief 18, Write access enable register B */
#define TBCU_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRB_FPI*)0xFAFFFC18u)

/** \brief 1C, Read access enable register A */
#define TBCU_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDA*)0xFAFFFC1Cu)

/** \brief 20, Read access enable register B */
#define TBCU_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDB_FPI*)0xFAFFFC20u)

/** \brief 24, VM access enable register */
#define TBCU_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_VM*)0xFAFFFC24u)

/** \brief 28, PRS access enable register */
#define TBCU_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_PRS*)0xFAFFFC28u)

/** \brief 30, Round-robin group control */
#define TBCU_RRCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_RRCTRL*)0xFAFFFC30u)

/** \brief 34, Master agent priority register high */
#define TBCU_PRIOH /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOH*)0xFAFFFC34u)

/** \brief 38, Master agent priority register low */
#define TBCU_PRIOL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOL*)0xFAFFFC38u)

/** \brief 3C, BCU control register */
#define TBCU_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CON*)0xFAFFFC3Cu)

/** \brief 40, BCU error control capture register */
#define TBCU_ECON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ECON*)0xFAFFFC40u)

/** \brief 44, BCU error address capture register */
#define TBCU_EADD /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EADD*)0xFAFFFC44u)

/** \brief 48, BCU error data capture register */
#define TBCU_EDAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EDAT*)0xFAFFFC48u)

/** \brief 4C, CSAV status register */
#define TBCU_CSAVSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CSAVSTAT*)0xFAFFFC4Cu)

/** \brief 50, BCU EDC alarm status register 0.  */
#define TBCU_ALSTAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xFAFFFC50u)

/** \brief 54, BCU EDC alarm status register 1.  */
#define TBCU_ALSTAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xFAFFFC54u)

/** \brief 58, BCU EDC alarm status register 2.  */
#define TBCU_ALSTAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xFAFFFC58u)

/** \brief 5C, BCU EDC alarm status register 3.  */
#define TBCU_ALSTAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xFAFFFC5Cu)

/** \brief 60, BCU EDC alarm status register 4.  */
#define TBCU_ALSTAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xFAFFFC60u)

/** \brief 70, BCU EDC alarm clear register 0 */
#define TBCU_ALCLR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xFAFFFC70u)

/** \brief 74, BCU EDC alarm clear register 1 */
#define TBCU_ALCLR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xFAFFFC74u)

/** \brief 78, BCU EDC alarm clear register 2 */
#define TBCU_ALCLR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xFAFFFC78u)

/** \brief 7C, BCU EDC alarm clear register 3 */
#define TBCU_ALCLR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xFAFFFC7Cu)

/** \brief 80, BCU EDC alarm clear register 4 */
#define TBCU_ALCLR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xFAFFFC80u)

/** \brief 90, BCU EDC alarm control register */
#define TBCU_ALCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCTRL*)0xFAFFFC90u)

/** \brief 94, FPI error generation control register */
#define TBCU_FEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_FEGEN*)0xFAFFFC94u)

/** \brief 98, BCU performance event select */
#define TBCU_PSELECT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PSELECT*)0xFAFFFC98u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Bcu_Registers_Cfg_Csbcu
 * \{  */
/** \brief 4, OCDS control and status register */
#define CSBCU_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_OCS*)0xF6FFFC04u)

/** \brief 8, Module identification register */
#define CSBCU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ID*)0xF6FFFC08u)

/** \brief C, PROT register endinit (CS specific default configuration) */
#define CSBCU_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xF6FFFC0Cu)

/** \brief 10, PROT register safe endinit  (CS specific default configuration) */
#define CSBCU_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xF6FFFC10u)

/** \brief 14, Write access enable register A (CS specific default configuration) */
#define CSBCU_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRA*)0xF6FFFC14u)

/** \brief 18, Write access enable register B */
#define CSBCU_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRB_FPI*)0xF6FFFC18u)

/** \brief 1C, Read access enable register A (CS specific default configuration) */
#define CSBCU_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDA*)0xF6FFFC1Cu)

/** \brief 20, Read access enable register B (CS specific default configuration) */
#define CSBCU_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDB_FPI*)0xF6FFFC20u)

/** \brief 24, VM access enable register */
#define CSBCU_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_VM*)0xF6FFFC24u)

/** \brief 28, PRS access enable register */
#define CSBCU_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_PRS*)0xF6FFFC28u)

/** \brief 30, Round-robin group control */
#define CSBCU_RRCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_RRCTRL*)0xF6FFFC30u)

/** \brief 34, Master agent priority register high */
#define CSBCU_PRIOH /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOH*)0xF6FFFC34u)

/** \brief 38, Master agent priority register low */
#define CSBCU_PRIOL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOL*)0xF6FFFC38u)

/** \brief 3C, BCU control register */
#define CSBCU_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CON*)0xF6FFFC3Cu)

/** \brief 40, BCU error control capture register */
#define CSBCU_ECON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ECON*)0xF6FFFC40u)

/** \brief 44, BCU error address capture register */
#define CSBCU_EADD /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EADD*)0xF6FFFC44u)

/** \brief 48, BCU error data capture register */
#define CSBCU_EDAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EDAT*)0xF6FFFC48u)

/** \brief 4C, CSAV status register */
#define CSBCU_CSAVSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CSAVSTAT*)0xF6FFFC4Cu)

/** \brief 50, BCU EDC alarm status register 0.  */
#define CSBCU_ALSTAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF6FFFC50u)

/** \brief 54, BCU EDC alarm status register 1.  */
#define CSBCU_ALSTAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF6FFFC54u)

/** \brief 58, BCU EDC alarm status register 2.  */
#define CSBCU_ALSTAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF6FFFC58u)

/** \brief 5C, BCU EDC alarm status register 3.  */
#define CSBCU_ALSTAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF6FFFC5Cu)

/** \brief 60, BCU EDC alarm status register 4.  */
#define CSBCU_ALSTAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF6FFFC60u)

/** \brief 70, BCU EDC alarm clear register 0 */
#define CSBCU_ALCLR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF6FFFC70u)

/** \brief 74, BCU EDC alarm clear register 1 */
#define CSBCU_ALCLR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF6FFFC74u)

/** \brief 78, BCU EDC alarm clear register 2 */
#define CSBCU_ALCLR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF6FFFC78u)

/** \brief 7C, BCU EDC alarm clear register 3 */
#define CSBCU_ALCLR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF6FFFC7Cu)

/** \brief 80, BCU EDC alarm clear register 4 */
#define CSBCU_ALCLR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF6FFFC80u)

/** \brief 90, BCU EDC alarm control register */
#define CSBCU_ALCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCTRL*)0xF6FFFC90u)

/** \brief 94, FPI error generation control register */
#define CSBCU_FEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_FEGEN*)0xF6FFFC94u)

/** \brief 98, BCU performance event select */
#define CSBCU_PSELECT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PSELECT*)0xF6FFFC98u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Bcu_Registers_Cfg_Sbcu
 * \{  */
/** \brief 4, OCDS control and status register */
#define SBCU_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_OCS*)0xF1FFFC04u)

/** \brief 8, Module identification register */
#define SBCU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ID*)0xF1FFFC08u)

/** \brief C, PROT register endinit */
#define SBCU_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xF1FFFC0Cu)

/** \brief 10, PROT register safe endinit */
#define SBCU_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xF1FFFC10u)

/** \brief 14, Write access enable register A */
#define SBCU_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRA*)0xF1FFFC14u)

/** \brief 18, Write access enable register B */
#define SBCU_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRB_FPI*)0xF1FFFC18u)

/** \brief 1C, Read access enable register A */
#define SBCU_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDA*)0xF1FFFC1Cu)

/** \brief 20, Read access enable register B */
#define SBCU_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDB_FPI*)0xF1FFFC20u)

/** \brief 24, VM access enable register */
#define SBCU_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_VM*)0xF1FFFC24u)

/** \brief 28, PRS access enable register */
#define SBCU_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_PRS*)0xF1FFFC28u)

/** \brief 30, Round-robin group control */
#define SBCU_RRCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_RRCTRL*)0xF1FFFC30u)

/** \brief 34, Master agent priority register high */
#define SBCU_PRIOH /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOH*)0xF1FFFC34u)

/** \brief 38, Master agent priority register low */
#define SBCU_PRIOL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOL*)0xF1FFFC38u)

/** \brief 3C, BCU control register */
#define SBCU_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CON*)0xF1FFFC3Cu)

/** \brief 40, BCU error control capture register */
#define SBCU_ECON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ECON*)0xF1FFFC40u)

/** \brief 44, BCU error address capture register */
#define SBCU_EADD /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EADD*)0xF1FFFC44u)

/** \brief 48, BCU error data capture register */
#define SBCU_EDAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EDAT*)0xF1FFFC48u)

/** \brief 4C, CSAV status register */
#define SBCU_CSAVSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CSAVSTAT*)0xF1FFFC4Cu)

/** \brief 50, BCU EDC alarm status register 0.  */
#define SBCU_ALSTAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF1FFFC50u)

/** \brief 54, BCU EDC alarm status register 1.  */
#define SBCU_ALSTAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF1FFFC54u)

/** \brief 58, BCU EDC alarm status register 2.  */
#define SBCU_ALSTAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF1FFFC58u)

/** \brief 5C, BCU EDC alarm status register 3.  */
#define SBCU_ALSTAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF1FFFC5Cu)

/** \brief 60, BCU EDC alarm status register 4.  */
#define SBCU_ALSTAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF1FFFC60u)

/** \brief 70, BCU EDC alarm clear register 0 */
#define SBCU_ALCLR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF1FFFC70u)

/** \brief 74, BCU EDC alarm clear register 1 */
#define SBCU_ALCLR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF1FFFC74u)

/** \brief 78, BCU EDC alarm clear register 2 */
#define SBCU_ALCLR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF1FFFC78u)

/** \brief 7C, BCU EDC alarm clear register 3 */
#define SBCU_ALCLR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF1FFFC7Cu)

/** \brief 80, BCU EDC alarm clear register 4 */
#define SBCU_ALCLR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF1FFFC80u)

/** \brief 90, BCU EDC alarm control register */
#define SBCU_ALCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCTRL*)0xF1FFFC90u)

/** \brief 94, FPI error generation control register */
#define SBCU_FEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_FEGEN*)0xF1FFFC94u)

/** \brief 98, BCU performance event select */
#define SBCU_PSELECT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PSELECT*)0xF1FFFC98u)

/** \brief 100, QoS time interval control register */
#define SBCU_QOSICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSICTRL*)0xF1FFFD00u)

/** \brief 104, QoS time interval counter status */
#define SBCU_QOSISTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSISTAT*)0xF1FFFD04u)

/** \brief 110, QoS master agent  0 control register */
#define SBCU_QOSM0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD10u)

/** \brief 114, QoS master agent 0 status register */
#define SBCU_QOSM0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD14u)

/** \brief 118, QoS master agent  1 control register */
#define SBCU_QOSM1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD18u)

/** \brief 11C, QoS master agent 1 status register */
#define SBCU_QOSM1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD1Cu)

/** \brief 120, QoS master agent  2 control register */
#define SBCU_QOSM2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD20u)

/** \brief 124, QoS master agent 2 status register */
#define SBCU_QOSM2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD24u)

/** \brief 128, QoS master agent  3 control register */
#define SBCU_QOSM3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD28u)

/** \brief 12C, QoS master agent 3 status register */
#define SBCU_QOSM3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD2Cu)

/** \brief 130, QoS master agent  4 control register */
#define SBCU_QOSM4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD30u)

/** \brief 134, QoS master agent 4 status register */
#define SBCU_QOSM4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD34u)

/** \brief 138, QoS master agent  5 control register */
#define SBCU_QOSM5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD38u)

/** \brief 13C, QoS master agent 5 status register */
#define SBCU_QOSM5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD3Cu)

/** \brief 140, QoS master agent  6 control register */
#define SBCU_QOSM6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD40u)

/** \brief 144, QoS master agent 6 status register */
#define SBCU_QOSM6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD44u)

/** \brief 148, QoS master agent  7 control register */
#define SBCU_QOSM7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD48u)

/** \brief 14C, QoS master agent 7 status register */
#define SBCU_QOSM7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD4Cu)

/** \brief 150, QoS master agent  8 control register */
#define SBCU_QOSM8_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD50u)

/** \brief 154, QoS master agent 8 status register */
#define SBCU_QOSM8_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD54u)

/** \brief 158, QoS master agent  9 control register */
#define SBCU_QOSM9_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD58u)

/** \brief 15C, QoS master agent 9 status register */
#define SBCU_QOSM9_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD5Cu)

/** \brief 160, QoS master agent  10 control register */
#define SBCU_QOSM10_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD60u)

/** \brief 164, QoS master agent 10 status register */
#define SBCU_QOSM10_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD64u)

/** \brief 168, QoS master agent  11 control register */
#define SBCU_QOSM11_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD68u)

/** \brief 16C, QoS master agent 11 status register */
#define SBCU_QOSM11_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD6Cu)

/** \brief 170, QoS master agent  12 control register */
#define SBCU_QOSM12_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD70u)

/** \brief 174, QoS master agent 12 status register */
#define SBCU_QOSM12_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD74u)

/** \brief 178, QoS master agent  13 control register */
#define SBCU_QOSM13_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD78u)

/** \brief 17C, QoS master agent 13 status register */
#define SBCU_QOSM13_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD7Cu)

/** \brief 180, QoS master agent  14 control register */
#define SBCU_QOSM14_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD80u)

/** \brief 184, QoS master agent 14 status register */
#define SBCU_QOSM14_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD84u)

/** \brief 188, QoS master agent  15 control register */
#define SBCU_QOSM15_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF1FFFD88u)

/** \brief 18C, QoS master agent 15 status register */
#define SBCU_QOSM15_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF1FFFD8Cu)

/** \brief 190, ARP 0 TAG-ID assignment register A */
#define SBCU_QOSARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFD90u)
/** Alias (User Manual Name) for SBCU_QOSARP0_TAGIDA */
#define SBCU_ARP0_TAGIDA (SBCU_QOSARP0_TAGIDA)

/** \brief 194, ARP 0 TAG-ID assignment register B */
#define SBCU_QOSARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFD94u)
/** Alias (User Manual Name) for SBCU_QOSARP0_TAGIDB */
#define SBCU_ARP0_TAGIDB (SBCU_QOSARP0_TAGIDB)

/** \brief 198, ARP 0 VM assignment register */
#define SBCU_QOSARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFD98u)
/** Alias (User Manual Name) for SBCU_QOSARP0_VM */
#define SBCU_ARP0_VM (SBCU_QOSARP0_VM)

/** \brief 19C, ARP 0 threshold register */
#define SBCU_QOSARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFD9Cu)
/** Alias (User Manual Name) for SBCU_QOSARP0_THR */
#define SBCU_ARP0_THR (SBCU_QOSARP0_THR)

/** \brief 1A0, ARP 0 control register */
#define SBCU_QOSARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFDA0u)
/** Alias (User Manual Name) for SBCU_QOSARP0_CTRL */
#define SBCU_ARP0_CTRL (SBCU_QOSARP0_CTRL)

/** \brief 1A4, ARP 0 cycle count capture register */
#define SBCU_QOSARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFDA4u)
/** Alias (User Manual Name) for SBCU_QOSARP0_CCC */
#define SBCU_ARP0_CCC (SBCU_QOSARP0_CCC)

/** \brief 1A8, ARP 0 current counter value register */
#define SBCU_QOSARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFDA8u)
/** Alias (User Manual Name) for SBCU_QOSARP0_CCV */
#define SBCU_ARP0_CCV (SBCU_QOSARP0_CCV)

/** \brief 1AC, ARP 1 TAG-ID assignment register A */
#define SBCU_QOSARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFDACu)
/** Alias (User Manual Name) for SBCU_QOSARP1_TAGIDA */
#define SBCU_ARP1_TAGIDA (SBCU_QOSARP1_TAGIDA)

/** \brief 1B0, ARP 1 TAG-ID assignment register B */
#define SBCU_QOSARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFDB0u)
/** Alias (User Manual Name) for SBCU_QOSARP1_TAGIDB */
#define SBCU_ARP1_TAGIDB (SBCU_QOSARP1_TAGIDB)

/** \brief 1B4, ARP 1 VM assignment register */
#define SBCU_QOSARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFDB4u)
/** Alias (User Manual Name) for SBCU_QOSARP1_VM */
#define SBCU_ARP1_VM (SBCU_QOSARP1_VM)

/** \brief 1B8, ARP 1 threshold register */
#define SBCU_QOSARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFDB8u)
/** Alias (User Manual Name) for SBCU_QOSARP1_THR */
#define SBCU_ARP1_THR (SBCU_QOSARP1_THR)

/** \brief 1BC, ARP 1 control register */
#define SBCU_QOSARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFDBCu)
/** Alias (User Manual Name) for SBCU_QOSARP1_CTRL */
#define SBCU_ARP1_CTRL (SBCU_QOSARP1_CTRL)

/** \brief 1C0, ARP 1 cycle count capture register */
#define SBCU_QOSARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFDC0u)
/** Alias (User Manual Name) for SBCU_QOSARP1_CCC */
#define SBCU_ARP1_CCC (SBCU_QOSARP1_CCC)

/** \brief 1C4, ARP 1 current counter value register */
#define SBCU_QOSARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFDC4u)
/** Alias (User Manual Name) for SBCU_QOSARP1_CCV */
#define SBCU_ARP1_CCV (SBCU_QOSARP1_CCV)

/** \brief 1C8, ARP 2 TAG-ID assignment register A */
#define SBCU_QOSARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFDC8u)
/** Alias (User Manual Name) for SBCU_QOSARP2_TAGIDA */
#define SBCU_ARP2_TAGIDA (SBCU_QOSARP2_TAGIDA)

/** \brief 1CC, ARP 2 TAG-ID assignment register B */
#define SBCU_QOSARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFDCCu)
/** Alias (User Manual Name) for SBCU_QOSARP2_TAGIDB */
#define SBCU_ARP2_TAGIDB (SBCU_QOSARP2_TAGIDB)

/** \brief 1D0, ARP 2 VM assignment register */
#define SBCU_QOSARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFDD0u)
/** Alias (User Manual Name) for SBCU_QOSARP2_VM */
#define SBCU_ARP2_VM (SBCU_QOSARP2_VM)

/** \brief 1D4, ARP 2 threshold register */
#define SBCU_QOSARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFDD4u)
/** Alias (User Manual Name) for SBCU_QOSARP2_THR */
#define SBCU_ARP2_THR (SBCU_QOSARP2_THR)

/** \brief 1D8, ARP 2 control register */
#define SBCU_QOSARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFDD8u)
/** Alias (User Manual Name) for SBCU_QOSARP2_CTRL */
#define SBCU_ARP2_CTRL (SBCU_QOSARP2_CTRL)

/** \brief 1DC, ARP 2 cycle count capture register */
#define SBCU_QOSARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFDDCu)
/** Alias (User Manual Name) for SBCU_QOSARP2_CCC */
#define SBCU_ARP2_CCC (SBCU_QOSARP2_CCC)

/** \brief 1E0, ARP 2 current counter value register */
#define SBCU_QOSARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFDE0u)
/** Alias (User Manual Name) for SBCU_QOSARP2_CCV */
#define SBCU_ARP2_CCV (SBCU_QOSARP2_CCV)

/** \brief 1E4, ARP 3 TAG-ID assignment register A */
#define SBCU_QOSARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFDE4u)
/** Alias (User Manual Name) for SBCU_QOSARP3_TAGIDA */
#define SBCU_ARP3_TAGIDA (SBCU_QOSARP3_TAGIDA)

/** \brief 1E8, ARP 3 TAG-ID assignment register B */
#define SBCU_QOSARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFDE8u)
/** Alias (User Manual Name) for SBCU_QOSARP3_TAGIDB */
#define SBCU_ARP3_TAGIDB (SBCU_QOSARP3_TAGIDB)

/** \brief 1EC, ARP 3 VM assignment register */
#define SBCU_QOSARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFDECu)
/** Alias (User Manual Name) for SBCU_QOSARP3_VM */
#define SBCU_ARP3_VM (SBCU_QOSARP3_VM)

/** \brief 1F0, ARP 3 threshold register */
#define SBCU_QOSARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFDF0u)
/** Alias (User Manual Name) for SBCU_QOSARP3_THR */
#define SBCU_ARP3_THR (SBCU_QOSARP3_THR)

/** \brief 1F4, ARP 3 control register */
#define SBCU_QOSARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFDF4u)
/** Alias (User Manual Name) for SBCU_QOSARP3_CTRL */
#define SBCU_ARP3_CTRL (SBCU_QOSARP3_CTRL)

/** \brief 1F8, ARP 3 cycle count capture register */
#define SBCU_QOSARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFDF8u)
/** Alias (User Manual Name) for SBCU_QOSARP3_CCC */
#define SBCU_ARP3_CCC (SBCU_QOSARP3_CCC)

/** \brief 1FC, ARP 3 current counter value register */
#define SBCU_QOSARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFDFCu)
/** Alias (User Manual Name) for SBCU_QOSARP3_CCV */
#define SBCU_ARP3_CCV (SBCU_QOSARP3_CCV)

/** \brief 200, ARP 4 TAG-ID assignment register A */
#define SBCU_QOSARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFE00u)
/** Alias (User Manual Name) for SBCU_QOSARP4_TAGIDA */
#define SBCU_ARP4_TAGIDA (SBCU_QOSARP4_TAGIDA)

/** \brief 204, ARP 4 TAG-ID assignment register B */
#define SBCU_QOSARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFE04u)
/** Alias (User Manual Name) for SBCU_QOSARP4_TAGIDB */
#define SBCU_ARP4_TAGIDB (SBCU_QOSARP4_TAGIDB)

/** \brief 208, ARP 4 VM assignment register */
#define SBCU_QOSARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFE08u)
/** Alias (User Manual Name) for SBCU_QOSARP4_VM */
#define SBCU_ARP4_VM (SBCU_QOSARP4_VM)

/** \brief 20C, ARP 4 threshold register */
#define SBCU_QOSARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFE0Cu)
/** Alias (User Manual Name) for SBCU_QOSARP4_THR */
#define SBCU_ARP4_THR (SBCU_QOSARP4_THR)

/** \brief 210, ARP 4 control register */
#define SBCU_QOSARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFE10u)
/** Alias (User Manual Name) for SBCU_QOSARP4_CTRL */
#define SBCU_ARP4_CTRL (SBCU_QOSARP4_CTRL)

/** \brief 214, ARP 4 cycle count capture register */
#define SBCU_QOSARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFE14u)
/** Alias (User Manual Name) for SBCU_QOSARP4_CCC */
#define SBCU_ARP4_CCC (SBCU_QOSARP4_CCC)

/** \brief 218, ARP 4 current counter value register */
#define SBCU_QOSARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFE18u)
/** Alias (User Manual Name) for SBCU_QOSARP4_CCV */
#define SBCU_ARP4_CCV (SBCU_QOSARP4_CCV)

/** \brief 21C, ARP 5 TAG-ID assignment register A */
#define SBCU_QOSARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFE1Cu)
/** Alias (User Manual Name) for SBCU_QOSARP5_TAGIDA */
#define SBCU_ARP5_TAGIDA (SBCU_QOSARP5_TAGIDA)

/** \brief 220, ARP 5 TAG-ID assignment register B */
#define SBCU_QOSARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFE20u)
/** Alias (User Manual Name) for SBCU_QOSARP5_TAGIDB */
#define SBCU_ARP5_TAGIDB (SBCU_QOSARP5_TAGIDB)

/** \brief 224, ARP 5 VM assignment register */
#define SBCU_QOSARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFE24u)
/** Alias (User Manual Name) for SBCU_QOSARP5_VM */
#define SBCU_ARP5_VM (SBCU_QOSARP5_VM)

/** \brief 228, ARP 5 threshold register */
#define SBCU_QOSARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFE28u)
/** Alias (User Manual Name) for SBCU_QOSARP5_THR */
#define SBCU_ARP5_THR (SBCU_QOSARP5_THR)

/** \brief 22C, ARP 5 control register */
#define SBCU_QOSARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFE2Cu)
/** Alias (User Manual Name) for SBCU_QOSARP5_CTRL */
#define SBCU_ARP5_CTRL (SBCU_QOSARP5_CTRL)

/** \brief 230, ARP 5 cycle count capture register */
#define SBCU_QOSARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFE30u)
/** Alias (User Manual Name) for SBCU_QOSARP5_CCC */
#define SBCU_ARP5_CCC (SBCU_QOSARP5_CCC)

/** \brief 234, ARP 5 current counter value register */
#define SBCU_QOSARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFE34u)
/** Alias (User Manual Name) for SBCU_QOSARP5_CCV */
#define SBCU_ARP5_CCV (SBCU_QOSARP5_CCV)

/** \brief 238, ARP 6 TAG-ID assignment register A */
#define SBCU_QOSARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFE38u)
/** Alias (User Manual Name) for SBCU_QOSARP6_TAGIDA */
#define SBCU_ARP6_TAGIDA (SBCU_QOSARP6_TAGIDA)

/** \brief 23C, ARP 6 TAG-ID assignment register B */
#define SBCU_QOSARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFE3Cu)
/** Alias (User Manual Name) for SBCU_QOSARP6_TAGIDB */
#define SBCU_ARP6_TAGIDB (SBCU_QOSARP6_TAGIDB)

/** \brief 240, ARP 6 VM assignment register */
#define SBCU_QOSARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFE40u)
/** Alias (User Manual Name) for SBCU_QOSARP6_VM */
#define SBCU_ARP6_VM (SBCU_QOSARP6_VM)

/** \brief 244, ARP 6 threshold register */
#define SBCU_QOSARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFE44u)
/** Alias (User Manual Name) for SBCU_QOSARP6_THR */
#define SBCU_ARP6_THR (SBCU_QOSARP6_THR)

/** \brief 248, ARP 6 control register */
#define SBCU_QOSARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFE48u)
/** Alias (User Manual Name) for SBCU_QOSARP6_CTRL */
#define SBCU_ARP6_CTRL (SBCU_QOSARP6_CTRL)

/** \brief 24C, ARP 6 cycle count capture register */
#define SBCU_QOSARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFE4Cu)
/** Alias (User Manual Name) for SBCU_QOSARP6_CCC */
#define SBCU_ARP6_CCC (SBCU_QOSARP6_CCC)

/** \brief 250, ARP 6 current counter value register */
#define SBCU_QOSARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFE50u)
/** Alias (User Manual Name) for SBCU_QOSARP6_CCV */
#define SBCU_ARP6_CCV (SBCU_QOSARP6_CCV)

/** \brief 254, ARP 7 TAG-ID assignment register A */
#define SBCU_QOSARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF1FFFE54u)
/** Alias (User Manual Name) for SBCU_QOSARP7_TAGIDA */
#define SBCU_ARP7_TAGIDA (SBCU_QOSARP7_TAGIDA)

/** \brief 258, ARP 7 TAG-ID assignment register B */
#define SBCU_QOSARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF1FFFE58u)
/** Alias (User Manual Name) for SBCU_QOSARP7_TAGIDB */
#define SBCU_ARP7_TAGIDB (SBCU_QOSARP7_TAGIDB)

/** \brief 25C, ARP 7 VM assignment register */
#define SBCU_QOSARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF1FFFE5Cu)
/** Alias (User Manual Name) for SBCU_QOSARP7_VM */
#define SBCU_ARP7_VM (SBCU_QOSARP7_VM)

/** \brief 260, ARP 7 threshold register */
#define SBCU_QOSARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF1FFFE60u)
/** Alias (User Manual Name) for SBCU_QOSARP7_THR */
#define SBCU_ARP7_THR (SBCU_QOSARP7_THR)

/** \brief 264, ARP 7 control register */
#define SBCU_QOSARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF1FFFE64u)
/** Alias (User Manual Name) for SBCU_QOSARP7_CTRL */
#define SBCU_ARP7_CTRL (SBCU_QOSARP7_CTRL)

/** \brief 268, ARP 7 cycle count capture register */
#define SBCU_QOSARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF1FFFE68u)
/** Alias (User Manual Name) for SBCU_QOSARP7_CCC */
#define SBCU_ARP7_CCC (SBCU_QOSARP7_CCC)

/** \brief 26C, ARP 7 current counter value register */
#define SBCU_QOSARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF1FFFE6Cu)
/** Alias (User Manual Name) for SBCU_QOSARP7_CCV */
#define SBCU_ARP7_CCV (SBCU_QOSARP7_CCV)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Bcu_Registers_Cfg_Combcu
 * \{  */
/** \brief 4, OCDS control and status register */
#define COMBCU_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_OCS*)0xF5FFFC04u)

/** \brief 8, Module identification register */
#define COMBCU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ID*)0xF5FFFC08u)

/** \brief C, PROT register endinit */
#define COMBCU_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xF5FFFC0Cu)

/** \brief 10, PROT register safe endinit */
#define COMBCU_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PROT*)0xF5FFFC10u)

/** \brief 14, Write access enable register A */
#define COMBCU_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRA*)0xF5FFFC14u)

/** \brief 18, Write access enable register B */
#define COMBCU_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_WRB_FPI*)0xF5FFFC18u)

/** \brief 1C, Read access enable register A */
#define COMBCU_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDA*)0xF5FFFC1Cu)

/** \brief 20, Read access enable register B */
#define COMBCU_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_RDB_FPI*)0xF5FFFC20u)

/** \brief 24, VM access enable register */
#define COMBCU_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_VM*)0xF5FFFC24u)

/** \brief 28, PRS access enable register */
#define COMBCU_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ACCEN_PRS*)0xF5FFFC28u)

/** \brief 30, Round-robin group control */
#define COMBCU_RRCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_RRCTRL*)0xF5FFFC30u)

/** \brief 34, Master agent priority register high */
#define COMBCU_PRIOH /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOH*)0xF5FFFC34u)

/** \brief 38, Master agent priority register low */
#define COMBCU_PRIOL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PRIOL*)0xF5FFFC38u)

/** \brief 3C, BCU control register */
#define COMBCU_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CON*)0xF5FFFC3Cu)

/** \brief 40, BCU error control capture register */
#define COMBCU_ECON /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ECON*)0xF5FFFC40u)

/** \brief 44, BCU error address capture register */
#define COMBCU_EADD /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EADD*)0xF5FFFC44u)

/** \brief 48, BCU error data capture register */
#define COMBCU_EDAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_EDAT*)0xF5FFFC48u)

/** \brief 4C, CSAV status register */
#define COMBCU_CSAVSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_CSAVSTAT*)0xF5FFFC4Cu)

/** \brief 50, BCU EDC alarm status register 0.  */
#define COMBCU_ALSTAT0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF5FFFC50u)

/** \brief 54, BCU EDC alarm status register 1.  */
#define COMBCU_ALSTAT1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF5FFFC54u)

/** \brief 58, BCU EDC alarm status register 2.  */
#define COMBCU_ALSTAT2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF5FFFC58u)

/** \brief 5C, BCU EDC alarm status register 3.  */
#define COMBCU_ALSTAT3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF5FFFC5Cu)

/** \brief 60, BCU EDC alarm status register 4.  */
#define COMBCU_ALSTAT4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALSTAT*)0xF5FFFC60u)

/** \brief 70, BCU EDC alarm clear register 0 */
#define COMBCU_ALCLR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF5FFFC70u)

/** \brief 74, BCU EDC alarm clear register 1 */
#define COMBCU_ALCLR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF5FFFC74u)

/** \brief 78, BCU EDC alarm clear register 2 */
#define COMBCU_ALCLR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF5FFFC78u)

/** \brief 7C, BCU EDC alarm clear register 3 */
#define COMBCU_ALCLR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF5FFFC7Cu)

/** \brief 80, BCU EDC alarm clear register 4 */
#define COMBCU_ALCLR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCLR*)0xF5FFFC80u)

/** \brief 90, BCU EDC alarm control register */
#define COMBCU_ALCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_ALCTRL*)0xF5FFFC90u)

/** \brief 94, FPI error generation control register */
#define COMBCU_FEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_FEGEN*)0xF5FFFC94u)

/** \brief 98, BCU performance event select */
#define COMBCU_PSELECT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_PSELECT*)0xF5FFFC98u)

/** \brief 100, QoS time interval control register */
#define COMBCU_QOSICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSICTRL*)0xF5FFFD00u)

/** \brief 104, QoS time interval counter status */
#define COMBCU_QOSISTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSISTAT*)0xF5FFFD04u)

/** \brief 110, QoS master agent  0 control register */
#define COMBCU_QOSM0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD10u)

/** \brief 114, QoS master agent 0 status register */
#define COMBCU_QOSM0_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD14u)

/** \brief 118, QoS master agent  1 control register */
#define COMBCU_QOSM1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD18u)

/** \brief 11C, QoS master agent 1 status register */
#define COMBCU_QOSM1_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD1Cu)

/** \brief 120, QoS master agent  2 control register */
#define COMBCU_QOSM2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD20u)

/** \brief 124, QoS master agent 2 status register */
#define COMBCU_QOSM2_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD24u)

/** \brief 128, QoS master agent  3 control register */
#define COMBCU_QOSM3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD28u)

/** \brief 12C, QoS master agent 3 status register */
#define COMBCU_QOSM3_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD2Cu)

/** \brief 130, QoS master agent  4 control register */
#define COMBCU_QOSM4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD30u)

/** \brief 134, QoS master agent 4 status register */
#define COMBCU_QOSM4_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD34u)

/** \brief 138, QoS master agent  5 control register */
#define COMBCU_QOSM5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD38u)

/** \brief 13C, QoS master agent 5 status register */
#define COMBCU_QOSM5_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD3Cu)

/** \brief 140, QoS master agent  6 control register */
#define COMBCU_QOSM6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD40u)

/** \brief 144, QoS master agent 6 status register */
#define COMBCU_QOSM6_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD44u)

/** \brief 148, QoS master agent  7 control register */
#define COMBCU_QOSM7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD48u)

/** \brief 14C, QoS master agent 7 status register */
#define COMBCU_QOSM7_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD4Cu)

/** \brief 150, QoS master agent  8 control register */
#define COMBCU_QOSM8_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD50u)

/** \brief 154, QoS master agent 8 status register */
#define COMBCU_QOSM8_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD54u)

/** \brief 158, QoS master agent  9 control register */
#define COMBCU_QOSM9_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD58u)

/** \brief 15C, QoS master agent 9 status register */
#define COMBCU_QOSM9_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD5Cu)

/** \brief 160, QoS master agent  10 control register */
#define COMBCU_QOSM10_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD60u)

/** \brief 164, QoS master agent 10 status register */
#define COMBCU_QOSM10_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD64u)

/** \brief 168, QoS master agent  11 control register */
#define COMBCU_QOSM11_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD68u)

/** \brief 16C, QoS master agent 11 status register */
#define COMBCU_QOSM11_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD6Cu)

/** \brief 170, QoS master agent  12 control register */
#define COMBCU_QOSM12_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD70u)

/** \brief 174, QoS master agent 12 status register */
#define COMBCU_QOSM12_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD74u)

/** \brief 178, QoS master agent  13 control register */
#define COMBCU_QOSM13_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD78u)

/** \brief 17C, QoS master agent 13 status register */
#define COMBCU_QOSM13_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD7Cu)

/** \brief 180, QoS master agent  14 control register */
#define COMBCU_QOSM14_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD80u)

/** \brief 184, QoS master agent 14 status register */
#define COMBCU_QOSM14_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD84u)

/** \brief 188, QoS master agent  15 control register */
#define COMBCU_QOSM15_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_CTRL*)0xF5FFFD88u)

/** \brief 18C, QoS master agent 15 status register */
#define COMBCU_QOSM15_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSM_STAT*)0xF5FFFD8Cu)

/** \brief 190, ARP 0 TAG-ID assignment register A */
#define COMBCU_QOSARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFD90u)
/** Alias (User Manual Name) for COMBCU_QOSARP0_TAGIDA */
#define COMBCU_ARP0_TAGIDA (COMBCU_QOSARP0_TAGIDA)

/** \brief 194, ARP 0 TAG-ID assignment register B */
#define COMBCU_QOSARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFD94u)
/** Alias (User Manual Name) for COMBCU_QOSARP0_TAGIDB */
#define COMBCU_ARP0_TAGIDB (COMBCU_QOSARP0_TAGIDB)

/** \brief 198, ARP 0 VM assignment register */
#define COMBCU_QOSARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFD98u)
/** Alias (User Manual Name) for COMBCU_QOSARP0_VM */
#define COMBCU_ARP0_VM (COMBCU_QOSARP0_VM)

/** \brief 19C, ARP 0 threshold register */
#define COMBCU_QOSARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFD9Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP0_THR */
#define COMBCU_ARP0_THR (COMBCU_QOSARP0_THR)

/** \brief 1A0, ARP 0 control register */
#define COMBCU_QOSARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFDA0u)
/** Alias (User Manual Name) for COMBCU_QOSARP0_CTRL */
#define COMBCU_ARP0_CTRL (COMBCU_QOSARP0_CTRL)

/** \brief 1A4, ARP 0 cycle count capture register */
#define COMBCU_QOSARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFDA4u)
/** Alias (User Manual Name) for COMBCU_QOSARP0_CCC */
#define COMBCU_ARP0_CCC (COMBCU_QOSARP0_CCC)

/** \brief 1A8, ARP 0 current counter value register */
#define COMBCU_QOSARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFDA8u)
/** Alias (User Manual Name) for COMBCU_QOSARP0_CCV */
#define COMBCU_ARP0_CCV (COMBCU_QOSARP0_CCV)

/** \brief 1AC, ARP 1 TAG-ID assignment register A */
#define COMBCU_QOSARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFDACu)
/** Alias (User Manual Name) for COMBCU_QOSARP1_TAGIDA */
#define COMBCU_ARP1_TAGIDA (COMBCU_QOSARP1_TAGIDA)

/** \brief 1B0, ARP 1 TAG-ID assignment register B */
#define COMBCU_QOSARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFDB0u)
/** Alias (User Manual Name) for COMBCU_QOSARP1_TAGIDB */
#define COMBCU_ARP1_TAGIDB (COMBCU_QOSARP1_TAGIDB)

/** \brief 1B4, ARP 1 VM assignment register */
#define COMBCU_QOSARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFDB4u)
/** Alias (User Manual Name) for COMBCU_QOSARP1_VM */
#define COMBCU_ARP1_VM (COMBCU_QOSARP1_VM)

/** \brief 1B8, ARP 1 threshold register */
#define COMBCU_QOSARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFDB8u)
/** Alias (User Manual Name) for COMBCU_QOSARP1_THR */
#define COMBCU_ARP1_THR (COMBCU_QOSARP1_THR)

/** \brief 1BC, ARP 1 control register */
#define COMBCU_QOSARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFDBCu)
/** Alias (User Manual Name) for COMBCU_QOSARP1_CTRL */
#define COMBCU_ARP1_CTRL (COMBCU_QOSARP1_CTRL)

/** \brief 1C0, ARP 1 cycle count capture register */
#define COMBCU_QOSARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFDC0u)
/** Alias (User Manual Name) for COMBCU_QOSARP1_CCC */
#define COMBCU_ARP1_CCC (COMBCU_QOSARP1_CCC)

/** \brief 1C4, ARP 1 current counter value register */
#define COMBCU_QOSARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFDC4u)
/** Alias (User Manual Name) for COMBCU_QOSARP1_CCV */
#define COMBCU_ARP1_CCV (COMBCU_QOSARP1_CCV)

/** \brief 1C8, ARP 2 TAG-ID assignment register A */
#define COMBCU_QOSARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFDC8u)
/** Alias (User Manual Name) for COMBCU_QOSARP2_TAGIDA */
#define COMBCU_ARP2_TAGIDA (COMBCU_QOSARP2_TAGIDA)

/** \brief 1CC, ARP 2 TAG-ID assignment register B */
#define COMBCU_QOSARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFDCCu)
/** Alias (User Manual Name) for COMBCU_QOSARP2_TAGIDB */
#define COMBCU_ARP2_TAGIDB (COMBCU_QOSARP2_TAGIDB)

/** \brief 1D0, ARP 2 VM assignment register */
#define COMBCU_QOSARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFDD0u)
/** Alias (User Manual Name) for COMBCU_QOSARP2_VM */
#define COMBCU_ARP2_VM (COMBCU_QOSARP2_VM)

/** \brief 1D4, ARP 2 threshold register */
#define COMBCU_QOSARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFDD4u)
/** Alias (User Manual Name) for COMBCU_QOSARP2_THR */
#define COMBCU_ARP2_THR (COMBCU_QOSARP2_THR)

/** \brief 1D8, ARP 2 control register */
#define COMBCU_QOSARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFDD8u)
/** Alias (User Manual Name) for COMBCU_QOSARP2_CTRL */
#define COMBCU_ARP2_CTRL (COMBCU_QOSARP2_CTRL)

/** \brief 1DC, ARP 2 cycle count capture register */
#define COMBCU_QOSARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFDDCu)
/** Alias (User Manual Name) for COMBCU_QOSARP2_CCC */
#define COMBCU_ARP2_CCC (COMBCU_QOSARP2_CCC)

/** \brief 1E0, ARP 2 current counter value register */
#define COMBCU_QOSARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFDE0u)
/** Alias (User Manual Name) for COMBCU_QOSARP2_CCV */
#define COMBCU_ARP2_CCV (COMBCU_QOSARP2_CCV)

/** \brief 1E4, ARP 3 TAG-ID assignment register A */
#define COMBCU_QOSARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFDE4u)
/** Alias (User Manual Name) for COMBCU_QOSARP3_TAGIDA */
#define COMBCU_ARP3_TAGIDA (COMBCU_QOSARP3_TAGIDA)

/** \brief 1E8, ARP 3 TAG-ID assignment register B */
#define COMBCU_QOSARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFDE8u)
/** Alias (User Manual Name) for COMBCU_QOSARP3_TAGIDB */
#define COMBCU_ARP3_TAGIDB (COMBCU_QOSARP3_TAGIDB)

/** \brief 1EC, ARP 3 VM assignment register */
#define COMBCU_QOSARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFDECu)
/** Alias (User Manual Name) for COMBCU_QOSARP3_VM */
#define COMBCU_ARP3_VM (COMBCU_QOSARP3_VM)

/** \brief 1F0, ARP 3 threshold register */
#define COMBCU_QOSARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFDF0u)
/** Alias (User Manual Name) for COMBCU_QOSARP3_THR */
#define COMBCU_ARP3_THR (COMBCU_QOSARP3_THR)

/** \brief 1F4, ARP 3 control register */
#define COMBCU_QOSARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFDF4u)
/** Alias (User Manual Name) for COMBCU_QOSARP3_CTRL */
#define COMBCU_ARP3_CTRL (COMBCU_QOSARP3_CTRL)

/** \brief 1F8, ARP 3 cycle count capture register */
#define COMBCU_QOSARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFDF8u)
/** Alias (User Manual Name) for COMBCU_QOSARP3_CCC */
#define COMBCU_ARP3_CCC (COMBCU_QOSARP3_CCC)

/** \brief 1FC, ARP 3 current counter value register */
#define COMBCU_QOSARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFDFCu)
/** Alias (User Manual Name) for COMBCU_QOSARP3_CCV */
#define COMBCU_ARP3_CCV (COMBCU_QOSARP3_CCV)

/** \brief 200, ARP 4 TAG-ID assignment register A */
#define COMBCU_QOSARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFE00u)
/** Alias (User Manual Name) for COMBCU_QOSARP4_TAGIDA */
#define COMBCU_ARP4_TAGIDA (COMBCU_QOSARP4_TAGIDA)

/** \brief 204, ARP 4 TAG-ID assignment register B */
#define COMBCU_QOSARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFE04u)
/** Alias (User Manual Name) for COMBCU_QOSARP4_TAGIDB */
#define COMBCU_ARP4_TAGIDB (COMBCU_QOSARP4_TAGIDB)

/** \brief 208, ARP 4 VM assignment register */
#define COMBCU_QOSARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFE08u)
/** Alias (User Manual Name) for COMBCU_QOSARP4_VM */
#define COMBCU_ARP4_VM (COMBCU_QOSARP4_VM)

/** \brief 20C, ARP 4 threshold register */
#define COMBCU_QOSARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFE0Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP4_THR */
#define COMBCU_ARP4_THR (COMBCU_QOSARP4_THR)

/** \brief 210, ARP 4 control register */
#define COMBCU_QOSARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFE10u)
/** Alias (User Manual Name) for COMBCU_QOSARP4_CTRL */
#define COMBCU_ARP4_CTRL (COMBCU_QOSARP4_CTRL)

/** \brief 214, ARP 4 cycle count capture register */
#define COMBCU_QOSARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFE14u)
/** Alias (User Manual Name) for COMBCU_QOSARP4_CCC */
#define COMBCU_ARP4_CCC (COMBCU_QOSARP4_CCC)

/** \brief 218, ARP 4 current counter value register */
#define COMBCU_QOSARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFE18u)
/** Alias (User Manual Name) for COMBCU_QOSARP4_CCV */
#define COMBCU_ARP4_CCV (COMBCU_QOSARP4_CCV)

/** \brief 21C, ARP 5 TAG-ID assignment register A */
#define COMBCU_QOSARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFE1Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP5_TAGIDA */
#define COMBCU_ARP5_TAGIDA (COMBCU_QOSARP5_TAGIDA)

/** \brief 220, ARP 5 TAG-ID assignment register B */
#define COMBCU_QOSARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFE20u)
/** Alias (User Manual Name) for COMBCU_QOSARP5_TAGIDB */
#define COMBCU_ARP5_TAGIDB (COMBCU_QOSARP5_TAGIDB)

/** \brief 224, ARP 5 VM assignment register */
#define COMBCU_QOSARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFE24u)
/** Alias (User Manual Name) for COMBCU_QOSARP5_VM */
#define COMBCU_ARP5_VM (COMBCU_QOSARP5_VM)

/** \brief 228, ARP 5 threshold register */
#define COMBCU_QOSARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFE28u)
/** Alias (User Manual Name) for COMBCU_QOSARP5_THR */
#define COMBCU_ARP5_THR (COMBCU_QOSARP5_THR)

/** \brief 22C, ARP 5 control register */
#define COMBCU_QOSARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFE2Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP5_CTRL */
#define COMBCU_ARP5_CTRL (COMBCU_QOSARP5_CTRL)

/** \brief 230, ARP 5 cycle count capture register */
#define COMBCU_QOSARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFE30u)
/** Alias (User Manual Name) for COMBCU_QOSARP5_CCC */
#define COMBCU_ARP5_CCC (COMBCU_QOSARP5_CCC)

/** \brief 234, ARP 5 current counter value register */
#define COMBCU_QOSARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFE34u)
/** Alias (User Manual Name) for COMBCU_QOSARP5_CCV */
#define COMBCU_ARP5_CCV (COMBCU_QOSARP5_CCV)

/** \brief 238, ARP 6 TAG-ID assignment register A */
#define COMBCU_QOSARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFE38u)
/** Alias (User Manual Name) for COMBCU_QOSARP6_TAGIDA */
#define COMBCU_ARP6_TAGIDA (COMBCU_QOSARP6_TAGIDA)

/** \brief 23C, ARP 6 TAG-ID assignment register B */
#define COMBCU_QOSARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFE3Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP6_TAGIDB */
#define COMBCU_ARP6_TAGIDB (COMBCU_QOSARP6_TAGIDB)

/** \brief 240, ARP 6 VM assignment register */
#define COMBCU_QOSARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFE40u)
/** Alias (User Manual Name) for COMBCU_QOSARP6_VM */
#define COMBCU_ARP6_VM (COMBCU_QOSARP6_VM)

/** \brief 244, ARP 6 threshold register */
#define COMBCU_QOSARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFE44u)
/** Alias (User Manual Name) for COMBCU_QOSARP6_THR */
#define COMBCU_ARP6_THR (COMBCU_QOSARP6_THR)

/** \brief 248, ARP 6 control register */
#define COMBCU_QOSARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFE48u)
/** Alias (User Manual Name) for COMBCU_QOSARP6_CTRL */
#define COMBCU_ARP6_CTRL (COMBCU_QOSARP6_CTRL)

/** \brief 24C, ARP 6 cycle count capture register */
#define COMBCU_QOSARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFE4Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP6_CCC */
#define COMBCU_ARP6_CCC (COMBCU_QOSARP6_CCC)

/** \brief 250, ARP 6 current counter value register */
#define COMBCU_QOSARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFE50u)
/** Alias (User Manual Name) for COMBCU_QOSARP6_CCV */
#define COMBCU_ARP6_CCV (COMBCU_QOSARP6_CCV)

/** \brief 254, ARP 7 TAG-ID assignment register A */
#define COMBCU_QOSARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDA*)0xF5FFFE54u)
/** Alias (User Manual Name) for COMBCU_QOSARP7_TAGIDA */
#define COMBCU_ARP7_TAGIDA (COMBCU_QOSARP7_TAGIDA)

/** \brief 258, ARP 7 TAG-ID assignment register B */
#define COMBCU_QOSARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_TAGIDB*)0xF5FFFE58u)
/** Alias (User Manual Name) for COMBCU_QOSARP7_TAGIDB */
#define COMBCU_ARP7_TAGIDB (COMBCU_QOSARP7_TAGIDB)

/** \brief 25C, ARP 7 VM assignment register */
#define COMBCU_QOSARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_VM*)0xF5FFFE5Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP7_VM */
#define COMBCU_ARP7_VM (COMBCU_QOSARP7_VM)

/** \brief 260, ARP 7 threshold register */
#define COMBCU_QOSARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_THR*)0xF5FFFE60u)
/** Alias (User Manual Name) for COMBCU_QOSARP7_THR */
#define COMBCU_ARP7_THR (COMBCU_QOSARP7_THR)

/** \brief 264, ARP 7 control register */
#define COMBCU_QOSARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CTRL*)0xF5FFFE64u)
/** Alias (User Manual Name) for COMBCU_QOSARP7_CTRL */
#define COMBCU_ARP7_CTRL (COMBCU_QOSARP7_CTRL)

/** \brief 268, ARP 7 cycle count capture register */
#define COMBCU_QOSARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCC*)0xF5FFFE68u)
/** Alias (User Manual Name) for COMBCU_QOSARP7_CCC */
#define COMBCU_ARP7_CCC (COMBCU_QOSARP7_CCC)

/** \brief 26C, ARP 7 current counter value register */
#define COMBCU_QOSARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_BCU_QOSARP_CCV*)0xF5FFFE6Cu)
/** Alias (User Manual Name) for COMBCU_QOSARP7_CCV */
#define COMBCU_ARP7_CCV (COMBCU_QOSARP7_CCV)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXBCU_REG_H */
