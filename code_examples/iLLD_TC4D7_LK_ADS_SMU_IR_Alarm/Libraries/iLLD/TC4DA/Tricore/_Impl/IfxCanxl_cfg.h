/**
 * \file IfxCanxl_cfg.h
 * \brief CANXL on-chip implementation data
 * \ingroup IfxLld_Canxl
 *
 * \version iLLD-TC4-v2.1.1
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 * \defgroup IfxLld_Canxl CANXL
 * \ingroup IfxLld
 * \defgroup IfxLld_Canxl_Impl Implementation
 * \ingroup IfxLld_Canxl
 * \defgroup IfxLld_Canxl_Std Standard Driver
 * \ingroup IfxLld_Canxl
 */

#ifndef IFXCANXL_CFG_H
#define IFXCANXL_CFG_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "Cpu/Std/Ifx_Types.h"
#include "IfxCanxl_reg.h"

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/

/** \brief Number of CANXL modules
 */
#define IFXCANXL_NUM_MODULES            (1)

/** \brief Number of nodes per each CANXL module
 */
#define IFXCANXL_NUM_NODES              (4)

/** \brief Number of Tx Fifo Queues per XCAN node
 */
#define IFXCANXL_NUM_TX_QUEUES          8

/** \brief Number of Rx Fifo Queues per XCAN node
 */
#define IFXCANXL_NUM_RX_QUEUES          8

/** \brief Key 1 of unlock sequence for functional registers
 */
#define IFXCANXL_FUNCTIONAL_UNLOCK_KEY1 0x1234u

/** \brief Key 2 of unlock sequence for functional registers
 */
#define IFXCANXL_FUNCTIONAL_UNLOCK_KEY2 0x4321u

/** \brief Key 1 of unlock sequence for test registers
 */
#define IFXCANXL_TEST_MODE_UNLOCK_KEY1  0x6789u

/** \brief Key 2 of unlock sequence for test registers
 */
#define IFXCANXL_TEST_MODE_UNLOCK_KEY2  0x9876u

/** \brief Default number of max TX descriptors per queue
 */
#ifndef IFXCANXL_MAX_TX_DESCRIPTORS
#define IFXCANXL_MAX_TX_DESCRIPTORS     4u
#endif

/** \brief Default number of max RX descriptors per queue
 */
#ifndef IFXCANXL_MAX_RX_DESCRIPTORS
#define IFXCANXL_MAX_RX_DESCRIPTORS     4u
#endif

/******************************************************************************/
/*-------------------------------Enumerations---------------------------------*/
/******************************************************************************/

/** \brief List of the available CANXL Resources
 */
typedef enum
{
    IfxCanxl_Index_none = -1,  /**< \brief Not Selected */
    IfxCanxl_Index_0    = 0    /**< \brief CANXL index 0 */
} IfxCanxl_Index;

/** \brief XCAN Node number
 */
typedef enum
{
    IfxCanxl_NodeId_none = -1,  /**< \brief None of the XCAN Nodes */
    IfxCanxl_NodeId_0    = 0,   /**< \brief Node Id 0 */
    IfxCanxl_NodeId_1    = 1,   /**< \brief Node Id 1 */
    IfxCanxl_NodeId_2    = 2,   /**< \brief Node Id 2 */
    IfxCanxl_NodeId_3    = 3    /**< \brief Node Id 3 */
} IfxCanxl_NodeId;

/******************************************************************************/
/*-------------------Global Exported Variables/Constants----------------------*/
/******************************************************************************/

IFX_EXTERN IFX_CONST IfxModule_IndexMap IfxCanxl_cfg_indexMap[IFXCANXL_NUM_MODULES];

#endif /* IFXCANXL_CFG_H */
