/**
 * \file IfxDom_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_SRI/V0.2.1.1.8
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg Dom address
 * \ingroup IfxSfr_Dom_Registers
 * 
 * \defgroup IfxSfr_Dom_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom0 2-DOM0
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom1 2-DOM1
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom3 2-DOM3
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom6 2-DOM6
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom7 2-DOM7
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom4 2-DOM4
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom2 2-DOM2
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 * \defgroup IfxSfr_Dom_Registers_Cfg_Dom5 2-DOM5
 * \ingroup IfxSfr_Dom_Registers_Cfg
 *
 *
 */
#ifndef IFXDOM_REG_H
#define IFXDOM_REG_H 1
/******************************************************************************/
#include "IfxDom_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Dom_Registers_Cfg_BaseAddress
 * \{  */

/** \brief DOM object */
#define MODULE_DOM0 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F00000u))
#define MODULE_DOM1 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F10000u))
#define MODULE_DOM3 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F30000u))
#define MODULE_DOM6 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F60000u))
#define MODULE_DOM7 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F70000u))
#define MODULE_DOM4 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F40000u))
#define MODULE_DOM2 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F20000u))
#define MODULE_DOM5 /*lint --e(923, 9078)*/ ((*(Ifx_DOM*)0xF8F50000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom0
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM0_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00000u)
/** Alias (User Manual Name) for DOM0_SCICTRL0_PECON */
#define DOM0_PECON0 (DOM0_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM0_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00008u)
/** Alias (User Manual Name) for DOM0_SCICTRL0_PRIORITY */
#define DOM0_PRIORITY0 (DOM0_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM0_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00010u)
/** Alias (User Manual Name) for DOM0_SCICTRL0_ERRADDR */
#define DOM0_ERRADDR0 (DOM0_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM0_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00018u)
/** Alias (User Manual Name) for DOM0_SCICTRL0_ERR */
#define DOM0_ERR0 (DOM0_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM0_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00020u)
/** Alias (User Manual Name) for DOM0_SCICTRL1_PECON */
#define DOM0_PECON1 (DOM0_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM0_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00028u)
/** Alias (User Manual Name) for DOM0_SCICTRL1_PRIORITY */
#define DOM0_PRIORITY1 (DOM0_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM0_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00030u)
/** Alias (User Manual Name) for DOM0_SCICTRL1_ERRADDR */
#define DOM0_ERRADDR1 (DOM0_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM0_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00038u)
/** Alias (User Manual Name) for DOM0_SCICTRL1_ERR */
#define DOM0_ERR1 (DOM0_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM0_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00040u)
/** Alias (User Manual Name) for DOM0_SCICTRL2_PECON */
#define DOM0_PECON2 (DOM0_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM0_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00048u)
/** Alias (User Manual Name) for DOM0_SCICTRL2_PRIORITY */
#define DOM0_PRIORITY2 (DOM0_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM0_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00050u)
/** Alias (User Manual Name) for DOM0_SCICTRL2_ERRADDR */
#define DOM0_ERRADDR2 (DOM0_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM0_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00058u)
/** Alias (User Manual Name) for DOM0_SCICTRL2_ERR */
#define DOM0_ERR2 (DOM0_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM0_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00060u)
/** Alias (User Manual Name) for DOM0_SCICTRL3_PECON */
#define DOM0_PECON3 (DOM0_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM0_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00068u)
/** Alias (User Manual Name) for DOM0_SCICTRL3_PRIORITY */
#define DOM0_PRIORITY3 (DOM0_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM0_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00070u)
/** Alias (User Manual Name) for DOM0_SCICTRL3_ERRADDR */
#define DOM0_ERRADDR3 (DOM0_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM0_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00078u)
/** Alias (User Manual Name) for DOM0_SCICTRL3_ERR */
#define DOM0_ERR3 (DOM0_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM0_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00080u)
/** Alias (User Manual Name) for DOM0_SCICTRL4_PECON */
#define DOM0_PECON4 (DOM0_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM0_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00088u)
/** Alias (User Manual Name) for DOM0_SCICTRL4_PRIORITY */
#define DOM0_PRIORITY4 (DOM0_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM0_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00090u)
/** Alias (User Manual Name) for DOM0_SCICTRL4_ERRADDR */
#define DOM0_ERRADDR4 (DOM0_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM0_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00098u)
/** Alias (User Manual Name) for DOM0_SCICTRL4_ERR */
#define DOM0_ERR4 (DOM0_SCICTRL4_ERR)

/** \brief A0, Protocol error control register 5 */
#define DOM0_SCICTRL5_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F000A0u)
/** Alias (User Manual Name) for DOM0_SCICTRL5_PECON */
#define DOM0_PECON5 (DOM0_SCICTRL5_PECON)

/** \brief A8, SCI5 arbiter priority register */
#define DOM0_SCICTRL5_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F000A8u)
/** Alias (User Manual Name) for DOM0_SCICTRL5_PRIORITY */
#define DOM0_PRIORITY5 (DOM0_SCICTRL5_PRIORITY)

/** \brief B0, SCI5 error address capture register */
#define DOM0_SCICTRL5_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F000B0u)
/** Alias (User Manual Name) for DOM0_SCICTRL5_ERRADDR */
#define DOM0_ERRADDR5 (DOM0_SCICTRL5_ERRADDR)

/** \brief B8, SCI5 error capture register */
#define DOM0_SCICTRL5_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F000B8u)
/** Alias (User Manual Name) for DOM0_SCICTRL5_ERR */
#define DOM0_ERR5 (DOM0_SCICTRL5_ERR)

/** \brief C0, Protocol error control register 6 */
#define DOM0_SCICTRL6_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F000C0u)
/** Alias (User Manual Name) for DOM0_SCICTRL6_PECON */
#define DOM0_PECON6 (DOM0_SCICTRL6_PECON)

/** \brief C8, SCI6 arbiter priority register */
#define DOM0_SCICTRL6_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F000C8u)
/** Alias (User Manual Name) for DOM0_SCICTRL6_PRIORITY */
#define DOM0_PRIORITY6 (DOM0_SCICTRL6_PRIORITY)

/** \brief D0, SCI6 error address capture register */
#define DOM0_SCICTRL6_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F000D0u)
/** Alias (User Manual Name) for DOM0_SCICTRL6_ERRADDR */
#define DOM0_ERRADDR6 (DOM0_SCICTRL6_ERRADDR)

/** \brief D8, SCI6 error capture register */
#define DOM0_SCICTRL6_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F000D8u)
/** Alias (User Manual Name) for DOM0_SCICTRL6_ERR */
#define DOM0_ERR6 (DOM0_SCICTRL6_ERR)

/** \brief E0, Protocol error control register 7 */
#define DOM0_SCICTRL7_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F000E0u)
/** Alias (User Manual Name) for DOM0_SCICTRL7_PECON */
#define DOM0_PECON7 (DOM0_SCICTRL7_PECON)

/** \brief E8, SCI7 arbiter priority register */
#define DOM0_SCICTRL7_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F000E8u)
/** Alias (User Manual Name) for DOM0_SCICTRL7_PRIORITY */
#define DOM0_PRIORITY7 (DOM0_SCICTRL7_PRIORITY)

/** \brief F0, SCI7 error address capture register */
#define DOM0_SCICTRL7_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F000F0u)
/** Alias (User Manual Name) for DOM0_SCICTRL7_ERRADDR */
#define DOM0_ERRADDR7 (DOM0_SCICTRL7_ERRADDR)

/** \brief F8, SCI7 error capture register */
#define DOM0_SCICTRL7_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F000F8u)
/** Alias (User Manual Name) for DOM0_SCICTRL7_ERR */
#define DOM0_ERR7 (DOM0_SCICTRL7_ERR)

/** \brief 100, Protocol error control register 8 */
#define DOM0_SCICTRL8_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00100u)
/** Alias (User Manual Name) for DOM0_SCICTRL8_PECON */
#define DOM0_PECON8 (DOM0_SCICTRL8_PECON)

/** \brief 108, SCI8 arbiter priority register */
#define DOM0_SCICTRL8_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00108u)
/** Alias (User Manual Name) for DOM0_SCICTRL8_PRIORITY */
#define DOM0_PRIORITY8 (DOM0_SCICTRL8_PRIORITY)

/** \brief 110, SCI8 error address capture register */
#define DOM0_SCICTRL8_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00110u)
/** Alias (User Manual Name) for DOM0_SCICTRL8_ERRADDR */
#define DOM0_ERRADDR8 (DOM0_SCICTRL8_ERRADDR)

/** \brief 118, SCI8 error capture register */
#define DOM0_SCICTRL8_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00118u)
/** Alias (User Manual Name) for DOM0_SCICTRL8_ERR */
#define DOM0_ERR8 (DOM0_SCICTRL8_ERR)

/** \brief 120, Protocol error control register 9 */
#define DOM0_SCICTRL9_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00120u)
/** Alias (User Manual Name) for DOM0_SCICTRL9_PECON */
#define DOM0_PECON9 (DOM0_SCICTRL9_PECON)

/** \brief 128, SCI9 arbiter priority register */
#define DOM0_SCICTRL9_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00128u)
/** Alias (User Manual Name) for DOM0_SCICTRL9_PRIORITY */
#define DOM0_PRIORITY9 (DOM0_SCICTRL9_PRIORITY)

/** \brief 130, SCI9 error address capture register */
#define DOM0_SCICTRL9_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00130u)
/** Alias (User Manual Name) for DOM0_SCICTRL9_ERRADDR */
#define DOM0_ERRADDR9 (DOM0_SCICTRL9_ERRADDR)

/** \brief 138, SCI9 error capture register */
#define DOM0_SCICTRL9_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00138u)
/** Alias (User Manual Name) for DOM0_SCICTRL9_ERR */
#define DOM0_ERR9 (DOM0_SCICTRL9_ERR)

/** \brief 140, Protocol error control register 10 */
#define DOM0_SCICTRL10_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00140u)
/** Alias (User Manual Name) for DOM0_SCICTRL10_PECON */
#define DOM0_PECON10 (DOM0_SCICTRL10_PECON)

/** \brief 148, SCI10 arbiter priority register */
#define DOM0_SCICTRL10_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00148u)
/** Alias (User Manual Name) for DOM0_SCICTRL10_PRIORITY */
#define DOM0_PRIORITY10 (DOM0_SCICTRL10_PRIORITY)

/** \brief 150, SCI10 error address capture register */
#define DOM0_SCICTRL10_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00150u)
/** Alias (User Manual Name) for DOM0_SCICTRL10_ERRADDR */
#define DOM0_ERRADDR10 (DOM0_SCICTRL10_ERRADDR)

/** \brief 158, SCI10 error capture register */
#define DOM0_SCICTRL10_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00158u)
/** Alias (User Manual Name) for DOM0_SCICTRL10_ERR */
#define DOM0_ERR10 (DOM0_SCICTRL10_ERR)

/** \brief 160, Protocol error control register 11 */
#define DOM0_SCICTRL11_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00160u)
/** Alias (User Manual Name) for DOM0_SCICTRL11_PECON */
#define DOM0_PECON11 (DOM0_SCICTRL11_PECON)

/** \brief 168, SCI11 arbiter priority register */
#define DOM0_SCICTRL11_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00168u)
/** Alias (User Manual Name) for DOM0_SCICTRL11_PRIORITY */
#define DOM0_PRIORITY11 (DOM0_SCICTRL11_PRIORITY)

/** \brief 170, SCI11 error address capture register */
#define DOM0_SCICTRL11_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00170u)
/** Alias (User Manual Name) for DOM0_SCICTRL11_ERRADDR */
#define DOM0_ERRADDR11 (DOM0_SCICTRL11_ERRADDR)

/** \brief 178, SCI11 error capture register */
#define DOM0_SCICTRL11_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00178u)
/** Alias (User Manual Name) for DOM0_SCICTRL11_ERR */
#define DOM0_ERR11 (DOM0_SCICTRL11_ERR)

/** \brief 180, Protocol error control register 12 */
#define DOM0_SCICTRL12_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F00180u)
/** Alias (User Manual Name) for DOM0_SCICTRL12_PECON */
#define DOM0_PECON12 (DOM0_SCICTRL12_PECON)

/** \brief 188, SCI12 arbiter priority register */
#define DOM0_SCICTRL12_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F00188u)
/** Alias (User Manual Name) for DOM0_SCICTRL12_PRIORITY */
#define DOM0_PRIORITY12 (DOM0_SCICTRL12_PRIORITY)

/** \brief 190, SCI12 error address capture register */
#define DOM0_SCICTRL12_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F00190u)
/** Alias (User Manual Name) for DOM0_SCICTRL12_ERRADDR */
#define DOM0_ERRADDR12 (DOM0_SCICTRL12_ERRADDR)

/** \brief 198, SCI12 error capture register */
#define DOM0_SCICTRL12_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F00198u)
/** Alias (User Manual Name) for DOM0_SCICTRL12_ERR */
#define DOM0_ERR12 (DOM0_SCICTRL12_ERR)

/** \brief 1A0, Protocol error control register 13 */
#define DOM0_SCICTRL13_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F001A0u)
/** Alias (User Manual Name) for DOM0_SCICTRL13_PECON */
#define DOM0_PECON13 (DOM0_SCICTRL13_PECON)

/** \brief 1A8, SCI13 arbiter priority register */
#define DOM0_SCICTRL13_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F001A8u)
/** Alias (User Manual Name) for DOM0_SCICTRL13_PRIORITY */
#define DOM0_PRIORITY13 (DOM0_SCICTRL13_PRIORITY)

/** \brief 1B0, SCI13 error address capture register */
#define DOM0_SCICTRL13_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F001B0u)
/** Alias (User Manual Name) for DOM0_SCICTRL13_ERRADDR */
#define DOM0_ERRADDR13 (DOM0_SCICTRL13_ERRADDR)

/** \brief 1B8, SCI13 error capture register */
#define DOM0_SCICTRL13_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F001B8u)
/** Alias (User Manual Name) for DOM0_SCICTRL13_ERR */
#define DOM0_ERR13 (DOM0_SCICTRL13_ERR)

/** \brief 1C0, Protocol error control register 14 */
#define DOM0_SCICTRL14_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F001C0u)
/** Alias (User Manual Name) for DOM0_SCICTRL14_PECON */
#define DOM0_PECON14 (DOM0_SCICTRL14_PECON)

/** \brief 1C8, SCI14 arbiter priority register */
#define DOM0_SCICTRL14_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F001C8u)
/** Alias (User Manual Name) for DOM0_SCICTRL14_PRIORITY */
#define DOM0_PRIORITY14 (DOM0_SCICTRL14_PRIORITY)

/** \brief 1D0, SCI14 error address capture register */
#define DOM0_SCICTRL14_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F001D0u)
/** Alias (User Manual Name) for DOM0_SCICTRL14_ERRADDR */
#define DOM0_ERRADDR14 (DOM0_SCICTRL14_ERRADDR)

/** \brief 1D8, SCI14 error capture register */
#define DOM0_SCICTRL14_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F001D8u)
/** Alias (User Manual Name) for DOM0_SCICTRL14_ERR */
#define DOM0_ERR14 (DOM0_SCICTRL14_ERR)

/** \brief 408, Identification register */
#define DOM0_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F00408u)

/** \brief 410, Protocol error status register */
#define DOM0_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F00410u)

/** \brief 418, Transaction ID status register */
#define DOM0_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F00418u)

/** \brief 420, Transaction ID enable register */
#define DOM0_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F00420u)

/** \brief 430, Bridge control register */
#define DOM0_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F00430u)

/** \brief 4C0, Write access enable register A */
#define DOM0_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F004C0u)

/** \brief 4C4, Write access enable register B */
#define DOM0_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F004C4u)

/** \brief 4C8, Read access enable register A */
#define DOM0_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F004C8u)

/** \brief 4CC, Read access enable register B */
#define DOM0_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F004CCu)

/** \brief 4D0, VM access enable register */
#define DOM0_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F004D0u)

/** \brief 4D4, PRS access enable register */
#define DOM0_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F004D4u)

/** \brief 4E0, Resource protection register */
#define DOM0_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F004E0u)

/** \brief 1000, QoS time interval control register */
#define DOM0_QOS_ICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICTRL*)0xF8F01000u)

/** \brief 1004, QoS time interval counter */
#define DOM0_QOS_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICNT*)0xF8F01004u)

/** \brief 1220, ARP0 TAG-ID assignment register A */
#define DOM0_QOS1_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01220u)

/** \brief 1224, ARP0 TAG-ID assignment register B */
#define DOM0_QOS1_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01224u)

/** \brief 1228, ARP0 VM assignment register */
#define DOM0_QOS1_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01228u)

/** \brief 122C, ARP0 threshold register */
#define DOM0_QOS1_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0122Cu)

/** \brief 1230, ARP0 control register */
#define DOM0_QOS1_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01230u)

/** \brief 1234, ARP0 cycle count capture register */
#define DOM0_QOS1_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01234u)

/** \brief 1238, ARP0 current counter value register */
#define DOM0_QOS1_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01238u)

/** \brief 1240, ARP1 TAG-ID assignment register A */
#define DOM0_QOS1_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01240u)

/** \brief 1244, ARP1 TAG-ID assignment register B */
#define DOM0_QOS1_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01244u)

/** \brief 1248, ARP1 VM assignment register */
#define DOM0_QOS1_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01248u)

/** \brief 124C, ARP1 threshold register */
#define DOM0_QOS1_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0124Cu)

/** \brief 1250, ARP1 control register */
#define DOM0_QOS1_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01250u)

/** \brief 1254, ARP1 cycle count capture register */
#define DOM0_QOS1_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01254u)

/** \brief 1258, ARP1 current counter value register */
#define DOM0_QOS1_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01258u)

/** \brief 1260, ARP2 TAG-ID assignment register A */
#define DOM0_QOS1_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01260u)

/** \brief 1264, ARP2 TAG-ID assignment register B */
#define DOM0_QOS1_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01264u)

/** \brief 1268, ARP2 VM assignment register */
#define DOM0_QOS1_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01268u)

/** \brief 126C, ARP2 threshold register */
#define DOM0_QOS1_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0126Cu)

/** \brief 1270, ARP2 control register */
#define DOM0_QOS1_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01270u)

/** \brief 1274, ARP2 cycle count capture register */
#define DOM0_QOS1_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01274u)

/** \brief 1278, ARP2 current counter value register */
#define DOM0_QOS1_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01278u)

/** \brief 1280, ARP3 TAG-ID assignment register A */
#define DOM0_QOS1_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01280u)

/** \brief 1284, ARP3 TAG-ID assignment register B */
#define DOM0_QOS1_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01284u)

/** \brief 1288, ARP3 VM assignment register */
#define DOM0_QOS1_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01288u)

/** \brief 128C, ARP3 threshold register */
#define DOM0_QOS1_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0128Cu)

/** \brief 1290, ARP3 control register */
#define DOM0_QOS1_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01290u)

/** \brief 1294, ARP3 cycle count capture register */
#define DOM0_QOS1_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01294u)

/** \brief 1298, ARP3 current counter value register */
#define DOM0_QOS1_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01298u)

/** \brief 12A0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS1_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F012A0u)

/** \brief 12A4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS1_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F012A4u)

/** \brief 12A8, ARP4 VM assignment register */
#define DOM0_QOS1_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F012A8u)

/** \brief 12AC, ARP4 threshold register */
#define DOM0_QOS1_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F012ACu)

/** \brief 12B0, ARP4 control register */
#define DOM0_QOS1_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F012B0u)

/** \brief 12B4, ARP4 cycle count capture register */
#define DOM0_QOS1_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F012B4u)

/** \brief 12B8, ARP4 current counter value register */
#define DOM0_QOS1_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F012B8u)

/** \brief 12C0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS1_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F012C0u)

/** \brief 12C4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS1_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F012C4u)

/** \brief 12C8, ARP5 VM assignment register */
#define DOM0_QOS1_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F012C8u)

/** \brief 12CC, ARP5 threshold register */
#define DOM0_QOS1_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F012CCu)

/** \brief 12D0, ARP5 control register */
#define DOM0_QOS1_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F012D0u)

/** \brief 12D4, ARP5 cycle count capture register */
#define DOM0_QOS1_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F012D4u)

/** \brief 12D8, ARP5 current counter value register */
#define DOM0_QOS1_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F012D8u)

/** \brief 12E0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS1_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F012E0u)

/** \brief 12E4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS1_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F012E4u)

/** \brief 12E8, ARP6 VM assignment register */
#define DOM0_QOS1_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F012E8u)

/** \brief 12EC, ARP6 threshold register */
#define DOM0_QOS1_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F012ECu)

/** \brief 12F0, ARP6 control register */
#define DOM0_QOS1_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F012F0u)

/** \brief 12F4, ARP6 cycle count capture register */
#define DOM0_QOS1_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F012F4u)

/** \brief 12F8, ARP6 current counter value register */
#define DOM0_QOS1_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F012F8u)

/** \brief 1300, ARP7 TAG-ID assignment register A */
#define DOM0_QOS1_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01300u)

/** \brief 1304, ARP7 TAG-ID assignment register B */
#define DOM0_QOS1_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01304u)

/** \brief 1308, ARP7 VM assignment register */
#define DOM0_QOS1_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01308u)

/** \brief 130C, ARP7 threshold register */
#define DOM0_QOS1_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0130Cu)

/** \brief 1310, ARP7 control register */
#define DOM0_QOS1_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01310u)

/** \brief 1314, ARP7 cycle count capture register */
#define DOM0_QOS1_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01314u)

/** \brief 1318, ARP7 current counter value register */
#define DOM0_QOS1_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01318u)

/** \brief 1620, ARP0 TAG-ID assignment register A */
#define DOM0_QOS3_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01620u)

/** \brief 1624, ARP0 TAG-ID assignment register B */
#define DOM0_QOS3_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01624u)

/** \brief 1628, ARP0 VM assignment register */
#define DOM0_QOS3_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01628u)

/** \brief 162C, ARP0 threshold register */
#define DOM0_QOS3_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0162Cu)

/** \brief 1630, ARP0 control register */
#define DOM0_QOS3_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01630u)

/** \brief 1634, ARP0 cycle count capture register */
#define DOM0_QOS3_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01634u)

/** \brief 1638, ARP0 current counter value register */
#define DOM0_QOS3_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01638u)

/** \brief 1640, ARP1 TAG-ID assignment register A */
#define DOM0_QOS3_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01640u)

/** \brief 1644, ARP1 TAG-ID assignment register B */
#define DOM0_QOS3_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01644u)

/** \brief 1648, ARP1 VM assignment register */
#define DOM0_QOS3_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01648u)

/** \brief 164C, ARP1 threshold register */
#define DOM0_QOS3_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0164Cu)

/** \brief 1650, ARP1 control register */
#define DOM0_QOS3_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01650u)

/** \brief 1654, ARP1 cycle count capture register */
#define DOM0_QOS3_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01654u)

/** \brief 1658, ARP1 current counter value register */
#define DOM0_QOS3_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01658u)

/** \brief 1660, ARP2 TAG-ID assignment register A */
#define DOM0_QOS3_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01660u)

/** \brief 1664, ARP2 TAG-ID assignment register B */
#define DOM0_QOS3_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01664u)

/** \brief 1668, ARP2 VM assignment register */
#define DOM0_QOS3_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01668u)

/** \brief 166C, ARP2 threshold register */
#define DOM0_QOS3_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0166Cu)

/** \brief 1670, ARP2 control register */
#define DOM0_QOS3_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01670u)

/** \brief 1674, ARP2 cycle count capture register */
#define DOM0_QOS3_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01674u)

/** \brief 1678, ARP2 current counter value register */
#define DOM0_QOS3_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01678u)

/** \brief 1680, ARP3 TAG-ID assignment register A */
#define DOM0_QOS3_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01680u)

/** \brief 1684, ARP3 TAG-ID assignment register B */
#define DOM0_QOS3_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01684u)

/** \brief 1688, ARP3 VM assignment register */
#define DOM0_QOS3_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01688u)

/** \brief 168C, ARP3 threshold register */
#define DOM0_QOS3_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0168Cu)

/** \brief 1690, ARP3 control register */
#define DOM0_QOS3_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01690u)

/** \brief 1694, ARP3 cycle count capture register */
#define DOM0_QOS3_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01694u)

/** \brief 1698, ARP3 current counter value register */
#define DOM0_QOS3_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01698u)

/** \brief 16A0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS3_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F016A0u)

/** \brief 16A4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS3_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F016A4u)

/** \brief 16A8, ARP4 VM assignment register */
#define DOM0_QOS3_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F016A8u)

/** \brief 16AC, ARP4 threshold register */
#define DOM0_QOS3_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F016ACu)

/** \brief 16B0, ARP4 control register */
#define DOM0_QOS3_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F016B0u)

/** \brief 16B4, ARP4 cycle count capture register */
#define DOM0_QOS3_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F016B4u)

/** \brief 16B8, ARP4 current counter value register */
#define DOM0_QOS3_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F016B8u)

/** \brief 16C0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS3_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F016C0u)

/** \brief 16C4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS3_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F016C4u)

/** \brief 16C8, ARP5 VM assignment register */
#define DOM0_QOS3_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F016C8u)

/** \brief 16CC, ARP5 threshold register */
#define DOM0_QOS3_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F016CCu)

/** \brief 16D0, ARP5 control register */
#define DOM0_QOS3_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F016D0u)

/** \brief 16D4, ARP5 cycle count capture register */
#define DOM0_QOS3_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F016D4u)

/** \brief 16D8, ARP5 current counter value register */
#define DOM0_QOS3_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F016D8u)

/** \brief 16E0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS3_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F016E0u)

/** \brief 16E4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS3_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F016E4u)

/** \brief 16E8, ARP6 VM assignment register */
#define DOM0_QOS3_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F016E8u)

/** \brief 16EC, ARP6 threshold register */
#define DOM0_QOS3_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F016ECu)

/** \brief 16F0, ARP6 control register */
#define DOM0_QOS3_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F016F0u)

/** \brief 16F4, ARP6 cycle count capture register */
#define DOM0_QOS3_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F016F4u)

/** \brief 16F8, ARP6 current counter value register */
#define DOM0_QOS3_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F016F8u)

/** \brief 1700, ARP7 TAG-ID assignment register A */
#define DOM0_QOS3_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01700u)

/** \brief 1704, ARP7 TAG-ID assignment register B */
#define DOM0_QOS3_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01704u)

/** \brief 1708, ARP7 VM assignment register */
#define DOM0_QOS3_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01708u)

/** \brief 170C, ARP7 threshold register */
#define DOM0_QOS3_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0170Cu)

/** \brief 1710, ARP7 control register */
#define DOM0_QOS3_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01710u)

/** \brief 1714, ARP7 cycle count capture register */
#define DOM0_QOS3_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01714u)

/** \brief 1718, ARP7 current counter value register */
#define DOM0_QOS3_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01718u)

/** \brief 1A20, ARP0 TAG-ID assignment register A */
#define DOM0_QOS5_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01A20u)

/** \brief 1A24, ARP0 TAG-ID assignment register B */
#define DOM0_QOS5_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01A24u)

/** \brief 1A28, ARP0 VM assignment register */
#define DOM0_QOS5_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01A28u)

/** \brief 1A2C, ARP0 threshold register */
#define DOM0_QOS5_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01A2Cu)

/** \brief 1A30, ARP0 control register */
#define DOM0_QOS5_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01A30u)

/** \brief 1A34, ARP0 cycle count capture register */
#define DOM0_QOS5_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01A34u)

/** \brief 1A38, ARP0 current counter value register */
#define DOM0_QOS5_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01A38u)

/** \brief 1A40, ARP1 TAG-ID assignment register A */
#define DOM0_QOS5_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01A40u)

/** \brief 1A44, ARP1 TAG-ID assignment register B */
#define DOM0_QOS5_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01A44u)

/** \brief 1A48, ARP1 VM assignment register */
#define DOM0_QOS5_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01A48u)

/** \brief 1A4C, ARP1 threshold register */
#define DOM0_QOS5_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01A4Cu)

/** \brief 1A50, ARP1 control register */
#define DOM0_QOS5_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01A50u)

/** \brief 1A54, ARP1 cycle count capture register */
#define DOM0_QOS5_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01A54u)

/** \brief 1A58, ARP1 current counter value register */
#define DOM0_QOS5_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01A58u)

/** \brief 1A60, ARP2 TAG-ID assignment register A */
#define DOM0_QOS5_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01A60u)

/** \brief 1A64, ARP2 TAG-ID assignment register B */
#define DOM0_QOS5_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01A64u)

/** \brief 1A68, ARP2 VM assignment register */
#define DOM0_QOS5_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01A68u)

/** \brief 1A6C, ARP2 threshold register */
#define DOM0_QOS5_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01A6Cu)

/** \brief 1A70, ARP2 control register */
#define DOM0_QOS5_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01A70u)

/** \brief 1A74, ARP2 cycle count capture register */
#define DOM0_QOS5_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01A74u)

/** \brief 1A78, ARP2 current counter value register */
#define DOM0_QOS5_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01A78u)

/** \brief 1A80, ARP3 TAG-ID assignment register A */
#define DOM0_QOS5_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01A80u)

/** \brief 1A84, ARP3 TAG-ID assignment register B */
#define DOM0_QOS5_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01A84u)

/** \brief 1A88, ARP3 VM assignment register */
#define DOM0_QOS5_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01A88u)

/** \brief 1A8C, ARP3 threshold register */
#define DOM0_QOS5_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01A8Cu)

/** \brief 1A90, ARP3 control register */
#define DOM0_QOS5_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01A90u)

/** \brief 1A94, ARP3 cycle count capture register */
#define DOM0_QOS5_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01A94u)

/** \brief 1A98, ARP3 current counter value register */
#define DOM0_QOS5_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01A98u)

/** \brief 1AA0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS5_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01AA0u)

/** \brief 1AA4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS5_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01AA4u)

/** \brief 1AA8, ARP4 VM assignment register */
#define DOM0_QOS5_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01AA8u)

/** \brief 1AAC, ARP4 threshold register */
#define DOM0_QOS5_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01AACu)

/** \brief 1AB0, ARP4 control register */
#define DOM0_QOS5_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01AB0u)

/** \brief 1AB4, ARP4 cycle count capture register */
#define DOM0_QOS5_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01AB4u)

/** \brief 1AB8, ARP4 current counter value register */
#define DOM0_QOS5_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01AB8u)

/** \brief 1AC0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS5_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01AC0u)

/** \brief 1AC4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS5_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01AC4u)

/** \brief 1AC8, ARP5 VM assignment register */
#define DOM0_QOS5_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01AC8u)

/** \brief 1ACC, ARP5 threshold register */
#define DOM0_QOS5_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01ACCu)

/** \brief 1AD0, ARP5 control register */
#define DOM0_QOS5_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01AD0u)

/** \brief 1AD4, ARP5 cycle count capture register */
#define DOM0_QOS5_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01AD4u)

/** \brief 1AD8, ARP5 current counter value register */
#define DOM0_QOS5_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01AD8u)

/** \brief 1AE0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS5_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01AE0u)

/** \brief 1AE4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS5_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01AE4u)

/** \brief 1AE8, ARP6 VM assignment register */
#define DOM0_QOS5_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01AE8u)

/** \brief 1AEC, ARP6 threshold register */
#define DOM0_QOS5_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01AECu)

/** \brief 1AF0, ARP6 control register */
#define DOM0_QOS5_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01AF0u)

/** \brief 1AF4, ARP6 cycle count capture register */
#define DOM0_QOS5_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01AF4u)

/** \brief 1AF8, ARP6 current counter value register */
#define DOM0_QOS5_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01AF8u)

/** \brief 1B00, ARP7 TAG-ID assignment register A */
#define DOM0_QOS5_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01B00u)

/** \brief 1B04, ARP7 TAG-ID assignment register B */
#define DOM0_QOS5_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01B04u)

/** \brief 1B08, ARP7 VM assignment register */
#define DOM0_QOS5_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01B08u)

/** \brief 1B0C, ARP7 threshold register */
#define DOM0_QOS5_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01B0Cu)

/** \brief 1B10, ARP7 control register */
#define DOM0_QOS5_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01B10u)

/** \brief 1B14, ARP7 cycle count capture register */
#define DOM0_QOS5_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01B14u)

/** \brief 1B18, ARP7 current counter value register */
#define DOM0_QOS5_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01B18u)

/** \brief 1E20, ARP0 TAG-ID assignment register A */
#define DOM0_QOS7_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01E20u)

/** \brief 1E24, ARP0 TAG-ID assignment register B */
#define DOM0_QOS7_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01E24u)

/** \brief 1E28, ARP0 VM assignment register */
#define DOM0_QOS7_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01E28u)

/** \brief 1E2C, ARP0 threshold register */
#define DOM0_QOS7_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01E2Cu)

/** \brief 1E30, ARP0 control register */
#define DOM0_QOS7_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01E30u)

/** \brief 1E34, ARP0 cycle count capture register */
#define DOM0_QOS7_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01E34u)

/** \brief 1E38, ARP0 current counter value register */
#define DOM0_QOS7_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01E38u)

/** \brief 1E40, ARP1 TAG-ID assignment register A */
#define DOM0_QOS7_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01E40u)

/** \brief 1E44, ARP1 TAG-ID assignment register B */
#define DOM0_QOS7_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01E44u)

/** \brief 1E48, ARP1 VM assignment register */
#define DOM0_QOS7_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01E48u)

/** \brief 1E4C, ARP1 threshold register */
#define DOM0_QOS7_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01E4Cu)

/** \brief 1E50, ARP1 control register */
#define DOM0_QOS7_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01E50u)

/** \brief 1E54, ARP1 cycle count capture register */
#define DOM0_QOS7_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01E54u)

/** \brief 1E58, ARP1 current counter value register */
#define DOM0_QOS7_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01E58u)

/** \brief 1E60, ARP2 TAG-ID assignment register A */
#define DOM0_QOS7_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01E60u)

/** \brief 1E64, ARP2 TAG-ID assignment register B */
#define DOM0_QOS7_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01E64u)

/** \brief 1E68, ARP2 VM assignment register */
#define DOM0_QOS7_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01E68u)

/** \brief 1E6C, ARP2 threshold register */
#define DOM0_QOS7_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01E6Cu)

/** \brief 1E70, ARP2 control register */
#define DOM0_QOS7_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01E70u)

/** \brief 1E74, ARP2 cycle count capture register */
#define DOM0_QOS7_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01E74u)

/** \brief 1E78, ARP2 current counter value register */
#define DOM0_QOS7_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01E78u)

/** \brief 1E80, ARP3 TAG-ID assignment register A */
#define DOM0_QOS7_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01E80u)

/** \brief 1E84, ARP3 TAG-ID assignment register B */
#define DOM0_QOS7_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01E84u)

/** \brief 1E88, ARP3 VM assignment register */
#define DOM0_QOS7_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01E88u)

/** \brief 1E8C, ARP3 threshold register */
#define DOM0_QOS7_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01E8Cu)

/** \brief 1E90, ARP3 control register */
#define DOM0_QOS7_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01E90u)

/** \brief 1E94, ARP3 cycle count capture register */
#define DOM0_QOS7_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01E94u)

/** \brief 1E98, ARP3 current counter value register */
#define DOM0_QOS7_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01E98u)

/** \brief 1EA0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS7_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01EA0u)

/** \brief 1EA4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS7_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01EA4u)

/** \brief 1EA8, ARP4 VM assignment register */
#define DOM0_QOS7_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01EA8u)

/** \brief 1EAC, ARP4 threshold register */
#define DOM0_QOS7_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01EACu)

/** \brief 1EB0, ARP4 control register */
#define DOM0_QOS7_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01EB0u)

/** \brief 1EB4, ARP4 cycle count capture register */
#define DOM0_QOS7_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01EB4u)

/** \brief 1EB8, ARP4 current counter value register */
#define DOM0_QOS7_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01EB8u)

/** \brief 1EC0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS7_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01EC0u)

/** \brief 1EC4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS7_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01EC4u)

/** \brief 1EC8, ARP5 VM assignment register */
#define DOM0_QOS7_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01EC8u)

/** \brief 1ECC, ARP5 threshold register */
#define DOM0_QOS7_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01ECCu)

/** \brief 1ED0, ARP5 control register */
#define DOM0_QOS7_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01ED0u)

/** \brief 1ED4, ARP5 cycle count capture register */
#define DOM0_QOS7_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01ED4u)

/** \brief 1ED8, ARP5 current counter value register */
#define DOM0_QOS7_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01ED8u)

/** \brief 1EE0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS7_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01EE0u)

/** \brief 1EE4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS7_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01EE4u)

/** \brief 1EE8, ARP6 VM assignment register */
#define DOM0_QOS7_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01EE8u)

/** \brief 1EEC, ARP6 threshold register */
#define DOM0_QOS7_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01EECu)

/** \brief 1EF0, ARP6 control register */
#define DOM0_QOS7_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01EF0u)

/** \brief 1EF4, ARP6 cycle count capture register */
#define DOM0_QOS7_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01EF4u)

/** \brief 1EF8, ARP6 current counter value register */
#define DOM0_QOS7_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01EF8u)

/** \brief 1F00, ARP7 TAG-ID assignment register A */
#define DOM0_QOS7_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F01F00u)

/** \brief 1F04, ARP7 TAG-ID assignment register B */
#define DOM0_QOS7_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F01F04u)

/** \brief 1F08, ARP7 VM assignment register */
#define DOM0_QOS7_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F01F08u)

/** \brief 1F0C, ARP7 threshold register */
#define DOM0_QOS7_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F01F0Cu)

/** \brief 1F10, ARP7 control register */
#define DOM0_QOS7_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F01F10u)

/** \brief 1F14, ARP7 cycle count capture register */
#define DOM0_QOS7_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F01F14u)

/** \brief 1F18, ARP7 current counter value register */
#define DOM0_QOS7_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F01F18u)

/** \brief 2020, ARP0 TAG-ID assignment register A */
#define DOM0_QOS8_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02020u)

/** \brief 2024, ARP0 TAG-ID assignment register B */
#define DOM0_QOS8_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02024u)

/** \brief 2028, ARP0 VM assignment register */
#define DOM0_QOS8_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02028u)

/** \brief 202C, ARP0 threshold register */
#define DOM0_QOS8_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0202Cu)

/** \brief 2030, ARP0 control register */
#define DOM0_QOS8_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02030u)

/** \brief 2034, ARP0 cycle count capture register */
#define DOM0_QOS8_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02034u)

/** \brief 2038, ARP0 current counter value register */
#define DOM0_QOS8_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02038u)

/** \brief 2040, ARP1 TAG-ID assignment register A */
#define DOM0_QOS8_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02040u)

/** \brief 2044, ARP1 TAG-ID assignment register B */
#define DOM0_QOS8_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02044u)

/** \brief 2048, ARP1 VM assignment register */
#define DOM0_QOS8_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02048u)

/** \brief 204C, ARP1 threshold register */
#define DOM0_QOS8_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0204Cu)

/** \brief 2050, ARP1 control register */
#define DOM0_QOS8_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02050u)

/** \brief 2054, ARP1 cycle count capture register */
#define DOM0_QOS8_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02054u)

/** \brief 2058, ARP1 current counter value register */
#define DOM0_QOS8_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02058u)

/** \brief 2060, ARP2 TAG-ID assignment register A */
#define DOM0_QOS8_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02060u)

/** \brief 2064, ARP2 TAG-ID assignment register B */
#define DOM0_QOS8_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02064u)

/** \brief 2068, ARP2 VM assignment register */
#define DOM0_QOS8_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02068u)

/** \brief 206C, ARP2 threshold register */
#define DOM0_QOS8_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0206Cu)

/** \brief 2070, ARP2 control register */
#define DOM0_QOS8_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02070u)

/** \brief 2074, ARP2 cycle count capture register */
#define DOM0_QOS8_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02074u)

/** \brief 2078, ARP2 current counter value register */
#define DOM0_QOS8_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02078u)

/** \brief 2080, ARP3 TAG-ID assignment register A */
#define DOM0_QOS8_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02080u)

/** \brief 2084, ARP3 TAG-ID assignment register B */
#define DOM0_QOS8_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02084u)

/** \brief 2088, ARP3 VM assignment register */
#define DOM0_QOS8_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02088u)

/** \brief 208C, ARP3 threshold register */
#define DOM0_QOS8_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0208Cu)

/** \brief 2090, ARP3 control register */
#define DOM0_QOS8_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02090u)

/** \brief 2094, ARP3 cycle count capture register */
#define DOM0_QOS8_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02094u)

/** \brief 2098, ARP3 current counter value register */
#define DOM0_QOS8_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02098u)

/** \brief 20A0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS8_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F020A0u)

/** \brief 20A4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS8_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F020A4u)

/** \brief 20A8, ARP4 VM assignment register */
#define DOM0_QOS8_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F020A8u)

/** \brief 20AC, ARP4 threshold register */
#define DOM0_QOS8_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F020ACu)

/** \brief 20B0, ARP4 control register */
#define DOM0_QOS8_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F020B0u)

/** \brief 20B4, ARP4 cycle count capture register */
#define DOM0_QOS8_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F020B4u)

/** \brief 20B8, ARP4 current counter value register */
#define DOM0_QOS8_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F020B8u)

/** \brief 20C0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS8_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F020C0u)

/** \brief 20C4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS8_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F020C4u)

/** \brief 20C8, ARP5 VM assignment register */
#define DOM0_QOS8_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F020C8u)

/** \brief 20CC, ARP5 threshold register */
#define DOM0_QOS8_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F020CCu)

/** \brief 20D0, ARP5 control register */
#define DOM0_QOS8_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F020D0u)

/** \brief 20D4, ARP5 cycle count capture register */
#define DOM0_QOS8_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F020D4u)

/** \brief 20D8, ARP5 current counter value register */
#define DOM0_QOS8_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F020D8u)

/** \brief 20E0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS8_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F020E0u)

/** \brief 20E4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS8_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F020E4u)

/** \brief 20E8, ARP6 VM assignment register */
#define DOM0_QOS8_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F020E8u)

/** \brief 20EC, ARP6 threshold register */
#define DOM0_QOS8_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F020ECu)

/** \brief 20F0, ARP6 control register */
#define DOM0_QOS8_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F020F0u)

/** \brief 20F4, ARP6 cycle count capture register */
#define DOM0_QOS8_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F020F4u)

/** \brief 20F8, ARP6 current counter value register */
#define DOM0_QOS8_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F020F8u)

/** \brief 2100, ARP7 TAG-ID assignment register A */
#define DOM0_QOS8_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02100u)

/** \brief 2104, ARP7 TAG-ID assignment register B */
#define DOM0_QOS8_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02104u)

/** \brief 2108, ARP7 VM assignment register */
#define DOM0_QOS8_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02108u)

/** \brief 210C, ARP7 threshold register */
#define DOM0_QOS8_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0210Cu)

/** \brief 2110, ARP7 control register */
#define DOM0_QOS8_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02110u)

/** \brief 2114, ARP7 cycle count capture register */
#define DOM0_QOS8_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02114u)

/** \brief 2118, ARP7 current counter value register */
#define DOM0_QOS8_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02118u)

/** \brief 2220, ARP0 TAG-ID assignment register A */
#define DOM0_QOS9_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02220u)

/** \brief 2224, ARP0 TAG-ID assignment register B */
#define DOM0_QOS9_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02224u)

/** \brief 2228, ARP0 VM assignment register */
#define DOM0_QOS9_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02228u)

/** \brief 222C, ARP0 threshold register */
#define DOM0_QOS9_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0222Cu)

/** \brief 2230, ARP0 control register */
#define DOM0_QOS9_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02230u)

/** \brief 2234, ARP0 cycle count capture register */
#define DOM0_QOS9_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02234u)

/** \brief 2238, ARP0 current counter value register */
#define DOM0_QOS9_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02238u)

/** \brief 2240, ARP1 TAG-ID assignment register A */
#define DOM0_QOS9_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02240u)

/** \brief 2244, ARP1 TAG-ID assignment register B */
#define DOM0_QOS9_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02244u)

/** \brief 2248, ARP1 VM assignment register */
#define DOM0_QOS9_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02248u)

/** \brief 224C, ARP1 threshold register */
#define DOM0_QOS9_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0224Cu)

/** \brief 2250, ARP1 control register */
#define DOM0_QOS9_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02250u)

/** \brief 2254, ARP1 cycle count capture register */
#define DOM0_QOS9_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02254u)

/** \brief 2258, ARP1 current counter value register */
#define DOM0_QOS9_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02258u)

/** \brief 2260, ARP2 TAG-ID assignment register A */
#define DOM0_QOS9_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02260u)

/** \brief 2264, ARP2 TAG-ID assignment register B */
#define DOM0_QOS9_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02264u)

/** \brief 2268, ARP2 VM assignment register */
#define DOM0_QOS9_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02268u)

/** \brief 226C, ARP2 threshold register */
#define DOM0_QOS9_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0226Cu)

/** \brief 2270, ARP2 control register */
#define DOM0_QOS9_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02270u)

/** \brief 2274, ARP2 cycle count capture register */
#define DOM0_QOS9_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02274u)

/** \brief 2278, ARP2 current counter value register */
#define DOM0_QOS9_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02278u)

/** \brief 2280, ARP3 TAG-ID assignment register A */
#define DOM0_QOS9_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02280u)

/** \brief 2284, ARP3 TAG-ID assignment register B */
#define DOM0_QOS9_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02284u)

/** \brief 2288, ARP3 VM assignment register */
#define DOM0_QOS9_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02288u)

/** \brief 228C, ARP3 threshold register */
#define DOM0_QOS9_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0228Cu)

/** \brief 2290, ARP3 control register */
#define DOM0_QOS9_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02290u)

/** \brief 2294, ARP3 cycle count capture register */
#define DOM0_QOS9_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02294u)

/** \brief 2298, ARP3 current counter value register */
#define DOM0_QOS9_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02298u)

/** \brief 22A0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS9_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F022A0u)

/** \brief 22A4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS9_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F022A4u)

/** \brief 22A8, ARP4 VM assignment register */
#define DOM0_QOS9_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F022A8u)

/** \brief 22AC, ARP4 threshold register */
#define DOM0_QOS9_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F022ACu)

/** \brief 22B0, ARP4 control register */
#define DOM0_QOS9_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F022B0u)

/** \brief 22B4, ARP4 cycle count capture register */
#define DOM0_QOS9_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F022B4u)

/** \brief 22B8, ARP4 current counter value register */
#define DOM0_QOS9_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F022B8u)

/** \brief 22C0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS9_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F022C0u)

/** \brief 22C4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS9_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F022C4u)

/** \brief 22C8, ARP5 VM assignment register */
#define DOM0_QOS9_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F022C8u)

/** \brief 22CC, ARP5 threshold register */
#define DOM0_QOS9_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F022CCu)

/** \brief 22D0, ARP5 control register */
#define DOM0_QOS9_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F022D0u)

/** \brief 22D4, ARP5 cycle count capture register */
#define DOM0_QOS9_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F022D4u)

/** \brief 22D8, ARP5 current counter value register */
#define DOM0_QOS9_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F022D8u)

/** \brief 22E0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS9_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F022E0u)

/** \brief 22E4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS9_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F022E4u)

/** \brief 22E8, ARP6 VM assignment register */
#define DOM0_QOS9_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F022E8u)

/** \brief 22EC, ARP6 threshold register */
#define DOM0_QOS9_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F022ECu)

/** \brief 22F0, ARP6 control register */
#define DOM0_QOS9_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F022F0u)

/** \brief 22F4, ARP6 cycle count capture register */
#define DOM0_QOS9_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F022F4u)

/** \brief 22F8, ARP6 current counter value register */
#define DOM0_QOS9_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F022F8u)

/** \brief 2300, ARP7 TAG-ID assignment register A */
#define DOM0_QOS9_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02300u)

/** \brief 2304, ARP7 TAG-ID assignment register B */
#define DOM0_QOS9_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02304u)

/** \brief 2308, ARP7 VM assignment register */
#define DOM0_QOS9_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02308u)

/** \brief 230C, ARP7 threshold register */
#define DOM0_QOS9_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0230Cu)

/** \brief 2310, ARP7 control register */
#define DOM0_QOS9_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02310u)

/** \brief 2314, ARP7 cycle count capture register */
#define DOM0_QOS9_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02314u)

/** \brief 2318, ARP7 current counter value register */
#define DOM0_QOS9_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02318u)

/** \brief 2420, ARP0 TAG-ID assignment register A */
#define DOM0_QOS10_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02420u)

/** \brief 2424, ARP0 TAG-ID assignment register B */
#define DOM0_QOS10_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02424u)

/** \brief 2428, ARP0 VM assignment register */
#define DOM0_QOS10_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02428u)

/** \brief 242C, ARP0 threshold register */
#define DOM0_QOS10_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0242Cu)

/** \brief 2430, ARP0 control register */
#define DOM0_QOS10_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02430u)

/** \brief 2434, ARP0 cycle count capture register */
#define DOM0_QOS10_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02434u)

/** \brief 2438, ARP0 current counter value register */
#define DOM0_QOS10_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02438u)

/** \brief 2440, ARP1 TAG-ID assignment register A */
#define DOM0_QOS10_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02440u)

/** \brief 2444, ARP1 TAG-ID assignment register B */
#define DOM0_QOS10_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02444u)

/** \brief 2448, ARP1 VM assignment register */
#define DOM0_QOS10_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02448u)

/** \brief 244C, ARP1 threshold register */
#define DOM0_QOS10_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0244Cu)

/** \brief 2450, ARP1 control register */
#define DOM0_QOS10_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02450u)

/** \brief 2454, ARP1 cycle count capture register */
#define DOM0_QOS10_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02454u)

/** \brief 2458, ARP1 current counter value register */
#define DOM0_QOS10_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02458u)

/** \brief 2460, ARP2 TAG-ID assignment register A */
#define DOM0_QOS10_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02460u)

/** \brief 2464, ARP2 TAG-ID assignment register B */
#define DOM0_QOS10_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02464u)

/** \brief 2468, ARP2 VM assignment register */
#define DOM0_QOS10_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02468u)

/** \brief 246C, ARP2 threshold register */
#define DOM0_QOS10_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0246Cu)

/** \brief 2470, ARP2 control register */
#define DOM0_QOS10_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02470u)

/** \brief 2474, ARP2 cycle count capture register */
#define DOM0_QOS10_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02474u)

/** \brief 2478, ARP2 current counter value register */
#define DOM0_QOS10_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02478u)

/** \brief 2480, ARP3 TAG-ID assignment register A */
#define DOM0_QOS10_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02480u)

/** \brief 2484, ARP3 TAG-ID assignment register B */
#define DOM0_QOS10_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02484u)

/** \brief 2488, ARP3 VM assignment register */
#define DOM0_QOS10_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02488u)

/** \brief 248C, ARP3 threshold register */
#define DOM0_QOS10_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0248Cu)

/** \brief 2490, ARP3 control register */
#define DOM0_QOS10_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02490u)

/** \brief 2494, ARP3 cycle count capture register */
#define DOM0_QOS10_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02494u)

/** \brief 2498, ARP3 current counter value register */
#define DOM0_QOS10_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02498u)

/** \brief 24A0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS10_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F024A0u)

/** \brief 24A4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS10_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F024A4u)

/** \brief 24A8, ARP4 VM assignment register */
#define DOM0_QOS10_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F024A8u)

/** \brief 24AC, ARP4 threshold register */
#define DOM0_QOS10_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F024ACu)

/** \brief 24B0, ARP4 control register */
#define DOM0_QOS10_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F024B0u)

/** \brief 24B4, ARP4 cycle count capture register */
#define DOM0_QOS10_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F024B4u)

/** \brief 24B8, ARP4 current counter value register */
#define DOM0_QOS10_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F024B8u)

/** \brief 24C0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS10_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F024C0u)

/** \brief 24C4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS10_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F024C4u)

/** \brief 24C8, ARP5 VM assignment register */
#define DOM0_QOS10_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F024C8u)

/** \brief 24CC, ARP5 threshold register */
#define DOM0_QOS10_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F024CCu)

/** \brief 24D0, ARP5 control register */
#define DOM0_QOS10_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F024D0u)

/** \brief 24D4, ARP5 cycle count capture register */
#define DOM0_QOS10_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F024D4u)

/** \brief 24D8, ARP5 current counter value register */
#define DOM0_QOS10_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F024D8u)

/** \brief 24E0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS10_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F024E0u)

/** \brief 24E4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS10_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F024E4u)

/** \brief 24E8, ARP6 VM assignment register */
#define DOM0_QOS10_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F024E8u)

/** \brief 24EC, ARP6 threshold register */
#define DOM0_QOS10_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F024ECu)

/** \brief 24F0, ARP6 control register */
#define DOM0_QOS10_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F024F0u)

/** \brief 24F4, ARP6 cycle count capture register */
#define DOM0_QOS10_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F024F4u)

/** \brief 24F8, ARP6 current counter value register */
#define DOM0_QOS10_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F024F8u)

/** \brief 2500, ARP7 TAG-ID assignment register A */
#define DOM0_QOS10_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02500u)

/** \brief 2504, ARP7 TAG-ID assignment register B */
#define DOM0_QOS10_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02504u)

/** \brief 2508, ARP7 VM assignment register */
#define DOM0_QOS10_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02508u)

/** \brief 250C, ARP7 threshold register */
#define DOM0_QOS10_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0250Cu)

/** \brief 2510, ARP7 control register */
#define DOM0_QOS10_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02510u)

/** \brief 2514, ARP7 cycle count capture register */
#define DOM0_QOS10_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02514u)

/** \brief 2518, ARP7 current counter value register */
#define DOM0_QOS10_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02518u)

/** \brief 2620, ARP0 TAG-ID assignment register A */
#define DOM0_QOS11_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02620u)

/** \brief 2624, ARP0 TAG-ID assignment register B */
#define DOM0_QOS11_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02624u)

/** \brief 2628, ARP0 VM assignment register */
#define DOM0_QOS11_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02628u)

/** \brief 262C, ARP0 threshold register */
#define DOM0_QOS11_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0262Cu)

/** \brief 2630, ARP0 control register */
#define DOM0_QOS11_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02630u)

/** \brief 2634, ARP0 cycle count capture register */
#define DOM0_QOS11_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02634u)

/** \brief 2638, ARP0 current counter value register */
#define DOM0_QOS11_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02638u)

/** \brief 2640, ARP1 TAG-ID assignment register A */
#define DOM0_QOS11_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02640u)

/** \brief 2644, ARP1 TAG-ID assignment register B */
#define DOM0_QOS11_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02644u)

/** \brief 2648, ARP1 VM assignment register */
#define DOM0_QOS11_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02648u)

/** \brief 264C, ARP1 threshold register */
#define DOM0_QOS11_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0264Cu)

/** \brief 2650, ARP1 control register */
#define DOM0_QOS11_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02650u)

/** \brief 2654, ARP1 cycle count capture register */
#define DOM0_QOS11_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02654u)

/** \brief 2658, ARP1 current counter value register */
#define DOM0_QOS11_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02658u)

/** \brief 2660, ARP2 TAG-ID assignment register A */
#define DOM0_QOS11_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02660u)

/** \brief 2664, ARP2 TAG-ID assignment register B */
#define DOM0_QOS11_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02664u)

/** \brief 2668, ARP2 VM assignment register */
#define DOM0_QOS11_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02668u)

/** \brief 266C, ARP2 threshold register */
#define DOM0_QOS11_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0266Cu)

/** \brief 2670, ARP2 control register */
#define DOM0_QOS11_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02670u)

/** \brief 2674, ARP2 cycle count capture register */
#define DOM0_QOS11_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02674u)

/** \brief 2678, ARP2 current counter value register */
#define DOM0_QOS11_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02678u)

/** \brief 2680, ARP3 TAG-ID assignment register A */
#define DOM0_QOS11_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02680u)

/** \brief 2684, ARP3 TAG-ID assignment register B */
#define DOM0_QOS11_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02684u)

/** \brief 2688, ARP3 VM assignment register */
#define DOM0_QOS11_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02688u)

/** \brief 268C, ARP3 threshold register */
#define DOM0_QOS11_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0268Cu)

/** \brief 2690, ARP3 control register */
#define DOM0_QOS11_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02690u)

/** \brief 2694, ARP3 cycle count capture register */
#define DOM0_QOS11_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02694u)

/** \brief 2698, ARP3 current counter value register */
#define DOM0_QOS11_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02698u)

/** \brief 26A0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS11_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F026A0u)

/** \brief 26A4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS11_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F026A4u)

/** \brief 26A8, ARP4 VM assignment register */
#define DOM0_QOS11_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F026A8u)

/** \brief 26AC, ARP4 threshold register */
#define DOM0_QOS11_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F026ACu)

/** \brief 26B0, ARP4 control register */
#define DOM0_QOS11_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F026B0u)

/** \brief 26B4, ARP4 cycle count capture register */
#define DOM0_QOS11_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F026B4u)

/** \brief 26B8, ARP4 current counter value register */
#define DOM0_QOS11_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F026B8u)

/** \brief 26C0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS11_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F026C0u)

/** \brief 26C4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS11_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F026C4u)

/** \brief 26C8, ARP5 VM assignment register */
#define DOM0_QOS11_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F026C8u)

/** \brief 26CC, ARP5 threshold register */
#define DOM0_QOS11_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F026CCu)

/** \brief 26D0, ARP5 control register */
#define DOM0_QOS11_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F026D0u)

/** \brief 26D4, ARP5 cycle count capture register */
#define DOM0_QOS11_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F026D4u)

/** \brief 26D8, ARP5 current counter value register */
#define DOM0_QOS11_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F026D8u)

/** \brief 26E0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS11_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F026E0u)

/** \brief 26E4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS11_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F026E4u)

/** \brief 26E8, ARP6 VM assignment register */
#define DOM0_QOS11_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F026E8u)

/** \brief 26EC, ARP6 threshold register */
#define DOM0_QOS11_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F026ECu)

/** \brief 26F0, ARP6 control register */
#define DOM0_QOS11_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F026F0u)

/** \brief 26F4, ARP6 cycle count capture register */
#define DOM0_QOS11_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F026F4u)

/** \brief 26F8, ARP6 current counter value register */
#define DOM0_QOS11_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F026F8u)

/** \brief 2700, ARP7 TAG-ID assignment register A */
#define DOM0_QOS11_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02700u)

/** \brief 2704, ARP7 TAG-ID assignment register B */
#define DOM0_QOS11_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02704u)

/** \brief 2708, ARP7 VM assignment register */
#define DOM0_QOS11_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02708u)

/** \brief 270C, ARP7 threshold register */
#define DOM0_QOS11_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0270Cu)

/** \brief 2710, ARP7 control register */
#define DOM0_QOS11_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02710u)

/** \brief 2714, ARP7 cycle count capture register */
#define DOM0_QOS11_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02714u)

/** \brief 2718, ARP7 current counter value register */
#define DOM0_QOS11_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02718u)

/** \brief 2820, ARP0 TAG-ID assignment register A */
#define DOM0_QOS12_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02820u)

/** \brief 2824, ARP0 TAG-ID assignment register B */
#define DOM0_QOS12_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02824u)

/** \brief 2828, ARP0 VM assignment register */
#define DOM0_QOS12_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02828u)

/** \brief 282C, ARP0 threshold register */
#define DOM0_QOS12_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0282Cu)

/** \brief 2830, ARP0 control register */
#define DOM0_QOS12_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02830u)

/** \brief 2834, ARP0 cycle count capture register */
#define DOM0_QOS12_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02834u)

/** \brief 2838, ARP0 current counter value register */
#define DOM0_QOS12_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02838u)

/** \brief 2840, ARP1 TAG-ID assignment register A */
#define DOM0_QOS12_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02840u)

/** \brief 2844, ARP1 TAG-ID assignment register B */
#define DOM0_QOS12_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02844u)

/** \brief 2848, ARP1 VM assignment register */
#define DOM0_QOS12_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02848u)

/** \brief 284C, ARP1 threshold register */
#define DOM0_QOS12_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0284Cu)

/** \brief 2850, ARP1 control register */
#define DOM0_QOS12_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02850u)

/** \brief 2854, ARP1 cycle count capture register */
#define DOM0_QOS12_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02854u)

/** \brief 2858, ARP1 current counter value register */
#define DOM0_QOS12_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02858u)

/** \brief 2860, ARP2 TAG-ID assignment register A */
#define DOM0_QOS12_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02860u)

/** \brief 2864, ARP2 TAG-ID assignment register B */
#define DOM0_QOS12_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02864u)

/** \brief 2868, ARP2 VM assignment register */
#define DOM0_QOS12_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02868u)

/** \brief 286C, ARP2 threshold register */
#define DOM0_QOS12_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0286Cu)

/** \brief 2870, ARP2 control register */
#define DOM0_QOS12_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02870u)

/** \brief 2874, ARP2 cycle count capture register */
#define DOM0_QOS12_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02874u)

/** \brief 2878, ARP2 current counter value register */
#define DOM0_QOS12_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02878u)

/** \brief 2880, ARP3 TAG-ID assignment register A */
#define DOM0_QOS12_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02880u)

/** \brief 2884, ARP3 TAG-ID assignment register B */
#define DOM0_QOS12_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02884u)

/** \brief 2888, ARP3 VM assignment register */
#define DOM0_QOS12_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02888u)

/** \brief 288C, ARP3 threshold register */
#define DOM0_QOS12_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0288Cu)

/** \brief 2890, ARP3 control register */
#define DOM0_QOS12_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02890u)

/** \brief 2894, ARP3 cycle count capture register */
#define DOM0_QOS12_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02894u)

/** \brief 2898, ARP3 current counter value register */
#define DOM0_QOS12_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02898u)

/** \brief 28A0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS12_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F028A0u)

/** \brief 28A4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS12_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F028A4u)

/** \brief 28A8, ARP4 VM assignment register */
#define DOM0_QOS12_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F028A8u)

/** \brief 28AC, ARP4 threshold register */
#define DOM0_QOS12_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F028ACu)

/** \brief 28B0, ARP4 control register */
#define DOM0_QOS12_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F028B0u)

/** \brief 28B4, ARP4 cycle count capture register */
#define DOM0_QOS12_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F028B4u)

/** \brief 28B8, ARP4 current counter value register */
#define DOM0_QOS12_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F028B8u)

/** \brief 28C0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS12_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F028C0u)

/** \brief 28C4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS12_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F028C4u)

/** \brief 28C8, ARP5 VM assignment register */
#define DOM0_QOS12_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F028C8u)

/** \brief 28CC, ARP5 threshold register */
#define DOM0_QOS12_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F028CCu)

/** \brief 28D0, ARP5 control register */
#define DOM0_QOS12_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F028D0u)

/** \brief 28D4, ARP5 cycle count capture register */
#define DOM0_QOS12_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F028D4u)

/** \brief 28D8, ARP5 current counter value register */
#define DOM0_QOS12_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F028D8u)

/** \brief 28E0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS12_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F028E0u)

/** \brief 28E4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS12_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F028E4u)

/** \brief 28E8, ARP6 VM assignment register */
#define DOM0_QOS12_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F028E8u)

/** \brief 28EC, ARP6 threshold register */
#define DOM0_QOS12_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F028ECu)

/** \brief 28F0, ARP6 control register */
#define DOM0_QOS12_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F028F0u)

/** \brief 28F4, ARP6 cycle count capture register */
#define DOM0_QOS12_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F028F4u)

/** \brief 28F8, ARP6 current counter value register */
#define DOM0_QOS12_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F028F8u)

/** \brief 2900, ARP7 TAG-ID assignment register A */
#define DOM0_QOS12_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02900u)

/** \brief 2904, ARP7 TAG-ID assignment register B */
#define DOM0_QOS12_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02904u)

/** \brief 2908, ARP7 VM assignment register */
#define DOM0_QOS12_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02908u)

/** \brief 290C, ARP7 threshold register */
#define DOM0_QOS12_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F0290Cu)

/** \brief 2910, ARP7 control register */
#define DOM0_QOS12_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02910u)

/** \brief 2914, ARP7 cycle count capture register */
#define DOM0_QOS12_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02914u)

/** \brief 2918, ARP7 current counter value register */
#define DOM0_QOS12_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02918u)

/** \brief 2A20, ARP0 TAG-ID assignment register A */
#define DOM0_QOS13_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02A20u)

/** \brief 2A24, ARP0 TAG-ID assignment register B */
#define DOM0_QOS13_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02A24u)

/** \brief 2A28, ARP0 VM assignment register */
#define DOM0_QOS13_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02A28u)

/** \brief 2A2C, ARP0 threshold register */
#define DOM0_QOS13_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02A2Cu)

/** \brief 2A30, ARP0 control register */
#define DOM0_QOS13_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02A30u)

/** \brief 2A34, ARP0 cycle count capture register */
#define DOM0_QOS13_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02A34u)

/** \brief 2A38, ARP0 current counter value register */
#define DOM0_QOS13_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02A38u)

/** \brief 2A40, ARP1 TAG-ID assignment register A */
#define DOM0_QOS13_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02A40u)

/** \brief 2A44, ARP1 TAG-ID assignment register B */
#define DOM0_QOS13_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02A44u)

/** \brief 2A48, ARP1 VM assignment register */
#define DOM0_QOS13_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02A48u)

/** \brief 2A4C, ARP1 threshold register */
#define DOM0_QOS13_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02A4Cu)

/** \brief 2A50, ARP1 control register */
#define DOM0_QOS13_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02A50u)

/** \brief 2A54, ARP1 cycle count capture register */
#define DOM0_QOS13_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02A54u)

/** \brief 2A58, ARP1 current counter value register */
#define DOM0_QOS13_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02A58u)

/** \brief 2A60, ARP2 TAG-ID assignment register A */
#define DOM0_QOS13_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02A60u)

/** \brief 2A64, ARP2 TAG-ID assignment register B */
#define DOM0_QOS13_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02A64u)

/** \brief 2A68, ARP2 VM assignment register */
#define DOM0_QOS13_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02A68u)

/** \brief 2A6C, ARP2 threshold register */
#define DOM0_QOS13_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02A6Cu)

/** \brief 2A70, ARP2 control register */
#define DOM0_QOS13_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02A70u)

/** \brief 2A74, ARP2 cycle count capture register */
#define DOM0_QOS13_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02A74u)

/** \brief 2A78, ARP2 current counter value register */
#define DOM0_QOS13_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02A78u)

/** \brief 2A80, ARP3 TAG-ID assignment register A */
#define DOM0_QOS13_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02A80u)

/** \brief 2A84, ARP3 TAG-ID assignment register B */
#define DOM0_QOS13_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02A84u)

/** \brief 2A88, ARP3 VM assignment register */
#define DOM0_QOS13_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02A88u)

/** \brief 2A8C, ARP3 threshold register */
#define DOM0_QOS13_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02A8Cu)

/** \brief 2A90, ARP3 control register */
#define DOM0_QOS13_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02A90u)

/** \brief 2A94, ARP3 cycle count capture register */
#define DOM0_QOS13_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02A94u)

/** \brief 2A98, ARP3 current counter value register */
#define DOM0_QOS13_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02A98u)

/** \brief 2AA0, ARP4 TAG-ID assignment register A */
#define DOM0_QOS13_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02AA0u)

/** \brief 2AA4, ARP4 TAG-ID assignment register B */
#define DOM0_QOS13_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02AA4u)

/** \brief 2AA8, ARP4 VM assignment register */
#define DOM0_QOS13_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02AA8u)

/** \brief 2AAC, ARP4 threshold register */
#define DOM0_QOS13_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02AACu)

/** \brief 2AB0, ARP4 control register */
#define DOM0_QOS13_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02AB0u)

/** \brief 2AB4, ARP4 cycle count capture register */
#define DOM0_QOS13_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02AB4u)

/** \brief 2AB8, ARP4 current counter value register */
#define DOM0_QOS13_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02AB8u)

/** \brief 2AC0, ARP5 TAG-ID assignment register A */
#define DOM0_QOS13_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02AC0u)

/** \brief 2AC4, ARP5 TAG-ID assignment register B */
#define DOM0_QOS13_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02AC4u)

/** \brief 2AC8, ARP5 VM assignment register */
#define DOM0_QOS13_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02AC8u)

/** \brief 2ACC, ARP5 threshold register */
#define DOM0_QOS13_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02ACCu)

/** \brief 2AD0, ARP5 control register */
#define DOM0_QOS13_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02AD0u)

/** \brief 2AD4, ARP5 cycle count capture register */
#define DOM0_QOS13_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02AD4u)

/** \brief 2AD8, ARP5 current counter value register */
#define DOM0_QOS13_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02AD8u)

/** \brief 2AE0, ARP6 TAG-ID assignment register A */
#define DOM0_QOS13_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02AE0u)

/** \brief 2AE4, ARP6 TAG-ID assignment register B */
#define DOM0_QOS13_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02AE4u)

/** \brief 2AE8, ARP6 VM assignment register */
#define DOM0_QOS13_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02AE8u)

/** \brief 2AEC, ARP6 threshold register */
#define DOM0_QOS13_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02AECu)

/** \brief 2AF0, ARP6 control register */
#define DOM0_QOS13_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02AF0u)

/** \brief 2AF4, ARP6 cycle count capture register */
#define DOM0_QOS13_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02AF4u)

/** \brief 2AF8, ARP6 current counter value register */
#define DOM0_QOS13_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02AF8u)

/** \brief 2B00, ARP7 TAG-ID assignment register A */
#define DOM0_QOS13_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F02B00u)

/** \brief 2B04, ARP7 TAG-ID assignment register B */
#define DOM0_QOS13_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F02B04u)

/** \brief 2B08, ARP7 VM assignment register */
#define DOM0_QOS13_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F02B08u)

/** \brief 2B0C, ARP7 threshold register */
#define DOM0_QOS13_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F02B0Cu)

/** \brief 2B10, ARP7 control register */
#define DOM0_QOS13_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F02B10u)

/** \brief 2B14, ARP7 cycle count capture register */
#define DOM0_QOS13_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F02B14u)

/** \brief 2B18, ARP7 current counter value register */
#define DOM0_QOS13_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F02B18u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom1
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM1_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10000u)
/** Alias (User Manual Name) for DOM1_SCICTRL0_PECON */
#define DOM1_PECON0 (DOM1_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM1_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10008u)
/** Alias (User Manual Name) for DOM1_SCICTRL0_PRIORITY */
#define DOM1_PRIORITY0 (DOM1_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM1_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10010u)
/** Alias (User Manual Name) for DOM1_SCICTRL0_ERRADDR */
#define DOM1_ERRADDR0 (DOM1_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM1_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10018u)
/** Alias (User Manual Name) for DOM1_SCICTRL0_ERR */
#define DOM1_ERR0 (DOM1_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM1_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10020u)
/** Alias (User Manual Name) for DOM1_SCICTRL1_PECON */
#define DOM1_PECON1 (DOM1_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM1_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10028u)
/** Alias (User Manual Name) for DOM1_SCICTRL1_PRIORITY */
#define DOM1_PRIORITY1 (DOM1_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM1_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10030u)
/** Alias (User Manual Name) for DOM1_SCICTRL1_ERRADDR */
#define DOM1_ERRADDR1 (DOM1_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM1_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10038u)
/** Alias (User Manual Name) for DOM1_SCICTRL1_ERR */
#define DOM1_ERR1 (DOM1_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM1_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10040u)
/** Alias (User Manual Name) for DOM1_SCICTRL2_PECON */
#define DOM1_PECON2 (DOM1_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM1_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10048u)
/** Alias (User Manual Name) for DOM1_SCICTRL2_PRIORITY */
#define DOM1_PRIORITY2 (DOM1_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM1_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10050u)
/** Alias (User Manual Name) for DOM1_SCICTRL2_ERRADDR */
#define DOM1_ERRADDR2 (DOM1_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM1_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10058u)
/** Alias (User Manual Name) for DOM1_SCICTRL2_ERR */
#define DOM1_ERR2 (DOM1_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM1_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10060u)
/** Alias (User Manual Name) for DOM1_SCICTRL3_PECON */
#define DOM1_PECON3 (DOM1_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM1_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10068u)
/** Alias (User Manual Name) for DOM1_SCICTRL3_PRIORITY */
#define DOM1_PRIORITY3 (DOM1_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM1_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10070u)
/** Alias (User Manual Name) for DOM1_SCICTRL3_ERRADDR */
#define DOM1_ERRADDR3 (DOM1_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM1_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10078u)
/** Alias (User Manual Name) for DOM1_SCICTRL3_ERR */
#define DOM1_ERR3 (DOM1_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM1_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10080u)
/** Alias (User Manual Name) for DOM1_SCICTRL4_PECON */
#define DOM1_PECON4 (DOM1_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM1_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10088u)
/** Alias (User Manual Name) for DOM1_SCICTRL4_PRIORITY */
#define DOM1_PRIORITY4 (DOM1_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM1_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10090u)
/** Alias (User Manual Name) for DOM1_SCICTRL4_ERRADDR */
#define DOM1_ERRADDR4 (DOM1_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM1_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10098u)
/** Alias (User Manual Name) for DOM1_SCICTRL4_ERR */
#define DOM1_ERR4 (DOM1_SCICTRL4_ERR)

/** \brief A0, Protocol error control register 5 */
#define DOM1_SCICTRL5_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F100A0u)
/** Alias (User Manual Name) for DOM1_SCICTRL5_PECON */
#define DOM1_PECON5 (DOM1_SCICTRL5_PECON)

/** \brief A8, SCI5 arbiter priority register */
#define DOM1_SCICTRL5_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F100A8u)
/** Alias (User Manual Name) for DOM1_SCICTRL5_PRIORITY */
#define DOM1_PRIORITY5 (DOM1_SCICTRL5_PRIORITY)

/** \brief B0, SCI5 error address capture register */
#define DOM1_SCICTRL5_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F100B0u)
/** Alias (User Manual Name) for DOM1_SCICTRL5_ERRADDR */
#define DOM1_ERRADDR5 (DOM1_SCICTRL5_ERRADDR)

/** \brief B8, SCI5 error capture register */
#define DOM1_SCICTRL5_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F100B8u)
/** Alias (User Manual Name) for DOM1_SCICTRL5_ERR */
#define DOM1_ERR5 (DOM1_SCICTRL5_ERR)

/** \brief C0, Protocol error control register 6 */
#define DOM1_SCICTRL6_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F100C0u)
/** Alias (User Manual Name) for DOM1_SCICTRL6_PECON */
#define DOM1_PECON6 (DOM1_SCICTRL6_PECON)

/** \brief C8, SCI6 arbiter priority register */
#define DOM1_SCICTRL6_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F100C8u)
/** Alias (User Manual Name) for DOM1_SCICTRL6_PRIORITY */
#define DOM1_PRIORITY6 (DOM1_SCICTRL6_PRIORITY)

/** \brief D0, SCI6 error address capture register */
#define DOM1_SCICTRL6_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F100D0u)
/** Alias (User Manual Name) for DOM1_SCICTRL6_ERRADDR */
#define DOM1_ERRADDR6 (DOM1_SCICTRL6_ERRADDR)

/** \brief D8, SCI6 error capture register */
#define DOM1_SCICTRL6_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F100D8u)
/** Alias (User Manual Name) for DOM1_SCICTRL6_ERR */
#define DOM1_ERR6 (DOM1_SCICTRL6_ERR)

/** \brief E0, Protocol error control register 7 */
#define DOM1_SCICTRL7_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F100E0u)
/** Alias (User Manual Name) for DOM1_SCICTRL7_PECON */
#define DOM1_PECON7 (DOM1_SCICTRL7_PECON)

/** \brief E8, SCI7 arbiter priority register */
#define DOM1_SCICTRL7_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F100E8u)
/** Alias (User Manual Name) for DOM1_SCICTRL7_PRIORITY */
#define DOM1_PRIORITY7 (DOM1_SCICTRL7_PRIORITY)

/** \brief F0, SCI7 error address capture register */
#define DOM1_SCICTRL7_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F100F0u)
/** Alias (User Manual Name) for DOM1_SCICTRL7_ERRADDR */
#define DOM1_ERRADDR7 (DOM1_SCICTRL7_ERRADDR)

/** \brief F8, SCI7 error capture register */
#define DOM1_SCICTRL7_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F100F8u)
/** Alias (User Manual Name) for DOM1_SCICTRL7_ERR */
#define DOM1_ERR7 (DOM1_SCICTRL7_ERR)

/** \brief 100, Protocol error control register 8 */
#define DOM1_SCICTRL8_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10100u)
/** Alias (User Manual Name) for DOM1_SCICTRL8_PECON */
#define DOM1_PECON8 (DOM1_SCICTRL8_PECON)

/** \brief 108, SCI8 arbiter priority register */
#define DOM1_SCICTRL8_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10108u)
/** Alias (User Manual Name) for DOM1_SCICTRL8_PRIORITY */
#define DOM1_PRIORITY8 (DOM1_SCICTRL8_PRIORITY)

/** \brief 110, SCI8 error address capture register */
#define DOM1_SCICTRL8_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10110u)
/** Alias (User Manual Name) for DOM1_SCICTRL8_ERRADDR */
#define DOM1_ERRADDR8 (DOM1_SCICTRL8_ERRADDR)

/** \brief 118, SCI8 error capture register */
#define DOM1_SCICTRL8_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10118u)
/** Alias (User Manual Name) for DOM1_SCICTRL8_ERR */
#define DOM1_ERR8 (DOM1_SCICTRL8_ERR)

/** \brief 120, Protocol error control register 9 */
#define DOM1_SCICTRL9_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10120u)
/** Alias (User Manual Name) for DOM1_SCICTRL9_PECON */
#define DOM1_PECON9 (DOM1_SCICTRL9_PECON)

/** \brief 128, SCI9 arbiter priority register */
#define DOM1_SCICTRL9_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10128u)
/** Alias (User Manual Name) for DOM1_SCICTRL9_PRIORITY */
#define DOM1_PRIORITY9 (DOM1_SCICTRL9_PRIORITY)

/** \brief 130, SCI9 error address capture register */
#define DOM1_SCICTRL9_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10130u)
/** Alias (User Manual Name) for DOM1_SCICTRL9_ERRADDR */
#define DOM1_ERRADDR9 (DOM1_SCICTRL9_ERRADDR)

/** \brief 138, SCI9 error capture register */
#define DOM1_SCICTRL9_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10138u)
/** Alias (User Manual Name) for DOM1_SCICTRL9_ERR */
#define DOM1_ERR9 (DOM1_SCICTRL9_ERR)

/** \brief 140, Protocol error control register 10 */
#define DOM1_SCICTRL10_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10140u)
/** Alias (User Manual Name) for DOM1_SCICTRL10_PECON */
#define DOM1_PECON10 (DOM1_SCICTRL10_PECON)

/** \brief 148, SCI10 arbiter priority register */
#define DOM1_SCICTRL10_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10148u)
/** Alias (User Manual Name) for DOM1_SCICTRL10_PRIORITY */
#define DOM1_PRIORITY10 (DOM1_SCICTRL10_PRIORITY)

/** \brief 150, SCI10 error address capture register */
#define DOM1_SCICTRL10_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10150u)
/** Alias (User Manual Name) for DOM1_SCICTRL10_ERRADDR */
#define DOM1_ERRADDR10 (DOM1_SCICTRL10_ERRADDR)

/** \brief 158, SCI10 error capture register */
#define DOM1_SCICTRL10_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10158u)
/** Alias (User Manual Name) for DOM1_SCICTRL10_ERR */
#define DOM1_ERR10 (DOM1_SCICTRL10_ERR)

/** \brief 160, Protocol error control register 11 */
#define DOM1_SCICTRL11_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10160u)
/** Alias (User Manual Name) for DOM1_SCICTRL11_PECON */
#define DOM1_PECON11 (DOM1_SCICTRL11_PECON)

/** \brief 168, SCI11 arbiter priority register */
#define DOM1_SCICTRL11_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10168u)
/** Alias (User Manual Name) for DOM1_SCICTRL11_PRIORITY */
#define DOM1_PRIORITY11 (DOM1_SCICTRL11_PRIORITY)

/** \brief 170, SCI11 error address capture register */
#define DOM1_SCICTRL11_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10170u)
/** Alias (User Manual Name) for DOM1_SCICTRL11_ERRADDR */
#define DOM1_ERRADDR11 (DOM1_SCICTRL11_ERRADDR)

/** \brief 178, SCI11 error capture register */
#define DOM1_SCICTRL11_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10178u)
/** Alias (User Manual Name) for DOM1_SCICTRL11_ERR */
#define DOM1_ERR11 (DOM1_SCICTRL11_ERR)

/** \brief 180, Protocol error control register 12 */
#define DOM1_SCICTRL12_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F10180u)
/** Alias (User Manual Name) for DOM1_SCICTRL12_PECON */
#define DOM1_PECON12 (DOM1_SCICTRL12_PECON)

/** \brief 188, SCI12 arbiter priority register */
#define DOM1_SCICTRL12_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F10188u)
/** Alias (User Manual Name) for DOM1_SCICTRL12_PRIORITY */
#define DOM1_PRIORITY12 (DOM1_SCICTRL12_PRIORITY)

/** \brief 190, SCI12 error address capture register */
#define DOM1_SCICTRL12_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F10190u)
/** Alias (User Manual Name) for DOM1_SCICTRL12_ERRADDR */
#define DOM1_ERRADDR12 (DOM1_SCICTRL12_ERRADDR)

/** \brief 198, SCI12 error capture register */
#define DOM1_SCICTRL12_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F10198u)
/** Alias (User Manual Name) for DOM1_SCICTRL12_ERR */
#define DOM1_ERR12 (DOM1_SCICTRL12_ERR)

/** \brief 1A0, Protocol error control register 13 */
#define DOM1_SCICTRL13_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F101A0u)
/** Alias (User Manual Name) for DOM1_SCICTRL13_PECON */
#define DOM1_PECON13 (DOM1_SCICTRL13_PECON)

/** \brief 1A8, SCI13 arbiter priority register */
#define DOM1_SCICTRL13_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F101A8u)
/** Alias (User Manual Name) for DOM1_SCICTRL13_PRIORITY */
#define DOM1_PRIORITY13 (DOM1_SCICTRL13_PRIORITY)

/** \brief 1B0, SCI13 error address capture register */
#define DOM1_SCICTRL13_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F101B0u)
/** Alias (User Manual Name) for DOM1_SCICTRL13_ERRADDR */
#define DOM1_ERRADDR13 (DOM1_SCICTRL13_ERRADDR)

/** \brief 1B8, SCI13 error capture register */
#define DOM1_SCICTRL13_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F101B8u)
/** Alias (User Manual Name) for DOM1_SCICTRL13_ERR */
#define DOM1_ERR13 (DOM1_SCICTRL13_ERR)

/** \brief 408, Identification register */
#define DOM1_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F10408u)

/** \brief 410, Protocol error status register */
#define DOM1_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F10410u)

/** \brief 418, Transaction ID status register */
#define DOM1_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F10418u)

/** \brief 420, Transaction ID enable register */
#define DOM1_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F10420u)

/** \brief 430, Bridge control register */
#define DOM1_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F10430u)

/** \brief 4C0, Write access enable register A */
#define DOM1_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F104C0u)

/** \brief 4C4, Write access enable register B */
#define DOM1_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F104C4u)

/** \brief 4C8, Read access enable register A */
#define DOM1_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F104C8u)

/** \brief 4CC, Read access enable register B */
#define DOM1_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F104CCu)

/** \brief 4D0, VM access enable register */
#define DOM1_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F104D0u)

/** \brief 4D4, PRS access enable register */
#define DOM1_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F104D4u)

/** \brief 4E0, Resource protection register */
#define DOM1_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F104E0u)

/** \brief 1000, QoS time interval control register */
#define DOM1_QOS_ICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICTRL*)0xF8F11000u)

/** \brief 1004, QoS time interval counter */
#define DOM1_QOS_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICNT*)0xF8F11004u)

/** \brief 1420, ARP0 TAG-ID assignment register A */
#define DOM1_QOS2_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11420u)

/** \brief 1424, ARP0 TAG-ID assignment register B */
#define DOM1_QOS2_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11424u)

/** \brief 1428, ARP0 VM assignment register */
#define DOM1_QOS2_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11428u)

/** \brief 142C, ARP0 threshold register */
#define DOM1_QOS2_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1142Cu)

/** \brief 1430, ARP0 control register */
#define DOM1_QOS2_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11430u)

/** \brief 1434, ARP0 cycle count capture register */
#define DOM1_QOS2_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11434u)

/** \brief 1438, ARP0 current counter value register */
#define DOM1_QOS2_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11438u)

/** \brief 1440, ARP1 TAG-ID assignment register A */
#define DOM1_QOS2_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11440u)

/** \brief 1444, ARP1 TAG-ID assignment register B */
#define DOM1_QOS2_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11444u)

/** \brief 1448, ARP1 VM assignment register */
#define DOM1_QOS2_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11448u)

/** \brief 144C, ARP1 threshold register */
#define DOM1_QOS2_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1144Cu)

/** \brief 1450, ARP1 control register */
#define DOM1_QOS2_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11450u)

/** \brief 1454, ARP1 cycle count capture register */
#define DOM1_QOS2_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11454u)

/** \brief 1458, ARP1 current counter value register */
#define DOM1_QOS2_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11458u)

/** \brief 1460, ARP2 TAG-ID assignment register A */
#define DOM1_QOS2_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11460u)

/** \brief 1464, ARP2 TAG-ID assignment register B */
#define DOM1_QOS2_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11464u)

/** \brief 1468, ARP2 VM assignment register */
#define DOM1_QOS2_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11468u)

/** \brief 146C, ARP2 threshold register */
#define DOM1_QOS2_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1146Cu)

/** \brief 1470, ARP2 control register */
#define DOM1_QOS2_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11470u)

/** \brief 1474, ARP2 cycle count capture register */
#define DOM1_QOS2_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11474u)

/** \brief 1478, ARP2 current counter value register */
#define DOM1_QOS2_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11478u)

/** \brief 1480, ARP3 TAG-ID assignment register A */
#define DOM1_QOS2_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11480u)

/** \brief 1484, ARP3 TAG-ID assignment register B */
#define DOM1_QOS2_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11484u)

/** \brief 1488, ARP3 VM assignment register */
#define DOM1_QOS2_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11488u)

/** \brief 148C, ARP3 threshold register */
#define DOM1_QOS2_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1148Cu)

/** \brief 1490, ARP3 control register */
#define DOM1_QOS2_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11490u)

/** \brief 1494, ARP3 cycle count capture register */
#define DOM1_QOS2_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11494u)

/** \brief 1498, ARP3 current counter value register */
#define DOM1_QOS2_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11498u)

/** \brief 14A0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS2_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F114A0u)

/** \brief 14A4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS2_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F114A4u)

/** \brief 14A8, ARP4 VM assignment register */
#define DOM1_QOS2_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F114A8u)

/** \brief 14AC, ARP4 threshold register */
#define DOM1_QOS2_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F114ACu)

/** \brief 14B0, ARP4 control register */
#define DOM1_QOS2_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F114B0u)

/** \brief 14B4, ARP4 cycle count capture register */
#define DOM1_QOS2_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F114B4u)

/** \brief 14B8, ARP4 current counter value register */
#define DOM1_QOS2_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F114B8u)

/** \brief 14C0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS2_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F114C0u)

/** \brief 14C4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS2_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F114C4u)

/** \brief 14C8, ARP5 VM assignment register */
#define DOM1_QOS2_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F114C8u)

/** \brief 14CC, ARP5 threshold register */
#define DOM1_QOS2_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F114CCu)

/** \brief 14D0, ARP5 control register */
#define DOM1_QOS2_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F114D0u)

/** \brief 14D4, ARP5 cycle count capture register */
#define DOM1_QOS2_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F114D4u)

/** \brief 14D8, ARP5 current counter value register */
#define DOM1_QOS2_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F114D8u)

/** \brief 14E0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS2_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F114E0u)

/** \brief 14E4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS2_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F114E4u)

/** \brief 14E8, ARP6 VM assignment register */
#define DOM1_QOS2_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F114E8u)

/** \brief 14EC, ARP6 threshold register */
#define DOM1_QOS2_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F114ECu)

/** \brief 14F0, ARP6 control register */
#define DOM1_QOS2_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F114F0u)

/** \brief 14F4, ARP6 cycle count capture register */
#define DOM1_QOS2_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F114F4u)

/** \brief 14F8, ARP6 current counter value register */
#define DOM1_QOS2_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F114F8u)

/** \brief 1500, ARP7 TAG-ID assignment register A */
#define DOM1_QOS2_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11500u)

/** \brief 1504, ARP7 TAG-ID assignment register B */
#define DOM1_QOS2_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11504u)

/** \brief 1508, ARP7 VM assignment register */
#define DOM1_QOS2_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11508u)

/** \brief 150C, ARP7 threshold register */
#define DOM1_QOS2_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1150Cu)

/** \brief 1510, ARP7 control register */
#define DOM1_QOS2_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11510u)

/** \brief 1514, ARP7 cycle count capture register */
#define DOM1_QOS2_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11514u)

/** \brief 1518, ARP7 current counter value register */
#define DOM1_QOS2_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11518u)

/** \brief 1820, ARP0 TAG-ID assignment register A */
#define DOM1_QOS4_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11820u)

/** \brief 1824, ARP0 TAG-ID assignment register B */
#define DOM1_QOS4_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11824u)

/** \brief 1828, ARP0 VM assignment register */
#define DOM1_QOS4_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11828u)

/** \brief 182C, ARP0 threshold register */
#define DOM1_QOS4_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1182Cu)

/** \brief 1830, ARP0 control register */
#define DOM1_QOS4_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11830u)

/** \brief 1834, ARP0 cycle count capture register */
#define DOM1_QOS4_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11834u)

/** \brief 1838, ARP0 current counter value register */
#define DOM1_QOS4_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11838u)

/** \brief 1840, ARP1 TAG-ID assignment register A */
#define DOM1_QOS4_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11840u)

/** \brief 1844, ARP1 TAG-ID assignment register B */
#define DOM1_QOS4_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11844u)

/** \brief 1848, ARP1 VM assignment register */
#define DOM1_QOS4_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11848u)

/** \brief 184C, ARP1 threshold register */
#define DOM1_QOS4_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1184Cu)

/** \brief 1850, ARP1 control register */
#define DOM1_QOS4_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11850u)

/** \brief 1854, ARP1 cycle count capture register */
#define DOM1_QOS4_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11854u)

/** \brief 1858, ARP1 current counter value register */
#define DOM1_QOS4_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11858u)

/** \brief 1860, ARP2 TAG-ID assignment register A */
#define DOM1_QOS4_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11860u)

/** \brief 1864, ARP2 TAG-ID assignment register B */
#define DOM1_QOS4_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11864u)

/** \brief 1868, ARP2 VM assignment register */
#define DOM1_QOS4_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11868u)

/** \brief 186C, ARP2 threshold register */
#define DOM1_QOS4_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1186Cu)

/** \brief 1870, ARP2 control register */
#define DOM1_QOS4_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11870u)

/** \brief 1874, ARP2 cycle count capture register */
#define DOM1_QOS4_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11874u)

/** \brief 1878, ARP2 current counter value register */
#define DOM1_QOS4_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11878u)

/** \brief 1880, ARP3 TAG-ID assignment register A */
#define DOM1_QOS4_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11880u)

/** \brief 1884, ARP3 TAG-ID assignment register B */
#define DOM1_QOS4_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11884u)

/** \brief 1888, ARP3 VM assignment register */
#define DOM1_QOS4_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11888u)

/** \brief 188C, ARP3 threshold register */
#define DOM1_QOS4_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1188Cu)

/** \brief 1890, ARP3 control register */
#define DOM1_QOS4_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11890u)

/** \brief 1894, ARP3 cycle count capture register */
#define DOM1_QOS4_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11894u)

/** \brief 1898, ARP3 current counter value register */
#define DOM1_QOS4_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11898u)

/** \brief 18A0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS4_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F118A0u)

/** \brief 18A4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS4_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F118A4u)

/** \brief 18A8, ARP4 VM assignment register */
#define DOM1_QOS4_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F118A8u)

/** \brief 18AC, ARP4 threshold register */
#define DOM1_QOS4_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F118ACu)

/** \brief 18B0, ARP4 control register */
#define DOM1_QOS4_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F118B0u)

/** \brief 18B4, ARP4 cycle count capture register */
#define DOM1_QOS4_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F118B4u)

/** \brief 18B8, ARP4 current counter value register */
#define DOM1_QOS4_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F118B8u)

/** \brief 18C0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS4_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F118C0u)

/** \brief 18C4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS4_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F118C4u)

/** \brief 18C8, ARP5 VM assignment register */
#define DOM1_QOS4_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F118C8u)

/** \brief 18CC, ARP5 threshold register */
#define DOM1_QOS4_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F118CCu)

/** \brief 18D0, ARP5 control register */
#define DOM1_QOS4_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F118D0u)

/** \brief 18D4, ARP5 cycle count capture register */
#define DOM1_QOS4_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F118D4u)

/** \brief 18D8, ARP5 current counter value register */
#define DOM1_QOS4_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F118D8u)

/** \brief 18E0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS4_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F118E0u)

/** \brief 18E4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS4_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F118E4u)

/** \brief 18E8, ARP6 VM assignment register */
#define DOM1_QOS4_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F118E8u)

/** \brief 18EC, ARP6 threshold register */
#define DOM1_QOS4_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F118ECu)

/** \brief 18F0, ARP6 control register */
#define DOM1_QOS4_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F118F0u)

/** \brief 18F4, ARP6 cycle count capture register */
#define DOM1_QOS4_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F118F4u)

/** \brief 18F8, ARP6 current counter value register */
#define DOM1_QOS4_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F118F8u)

/** \brief 1900, ARP7 TAG-ID assignment register A */
#define DOM1_QOS4_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11900u)

/** \brief 1904, ARP7 TAG-ID assignment register B */
#define DOM1_QOS4_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11904u)

/** \brief 1908, ARP7 VM assignment register */
#define DOM1_QOS4_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11908u)

/** \brief 190C, ARP7 threshold register */
#define DOM1_QOS4_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1190Cu)

/** \brief 1910, ARP7 control register */
#define DOM1_QOS4_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11910u)

/** \brief 1914, ARP7 cycle count capture register */
#define DOM1_QOS4_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11914u)

/** \brief 1918, ARP7 current counter value register */
#define DOM1_QOS4_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11918u)

/** \brief 1C20, ARP0 TAG-ID assignment register A */
#define DOM1_QOS6_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11C20u)

/** \brief 1C24, ARP0 TAG-ID assignment register B */
#define DOM1_QOS6_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11C24u)

/** \brief 1C28, ARP0 VM assignment register */
#define DOM1_QOS6_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11C28u)

/** \brief 1C2C, ARP0 threshold register */
#define DOM1_QOS6_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11C2Cu)

/** \brief 1C30, ARP0 control register */
#define DOM1_QOS6_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11C30u)

/** \brief 1C34, ARP0 cycle count capture register */
#define DOM1_QOS6_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11C34u)

/** \brief 1C38, ARP0 current counter value register */
#define DOM1_QOS6_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11C38u)

/** \brief 1C40, ARP1 TAG-ID assignment register A */
#define DOM1_QOS6_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11C40u)

/** \brief 1C44, ARP1 TAG-ID assignment register B */
#define DOM1_QOS6_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11C44u)

/** \brief 1C48, ARP1 VM assignment register */
#define DOM1_QOS6_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11C48u)

/** \brief 1C4C, ARP1 threshold register */
#define DOM1_QOS6_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11C4Cu)

/** \brief 1C50, ARP1 control register */
#define DOM1_QOS6_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11C50u)

/** \brief 1C54, ARP1 cycle count capture register */
#define DOM1_QOS6_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11C54u)

/** \brief 1C58, ARP1 current counter value register */
#define DOM1_QOS6_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11C58u)

/** \brief 1C60, ARP2 TAG-ID assignment register A */
#define DOM1_QOS6_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11C60u)

/** \brief 1C64, ARP2 TAG-ID assignment register B */
#define DOM1_QOS6_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11C64u)

/** \brief 1C68, ARP2 VM assignment register */
#define DOM1_QOS6_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11C68u)

/** \brief 1C6C, ARP2 threshold register */
#define DOM1_QOS6_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11C6Cu)

/** \brief 1C70, ARP2 control register */
#define DOM1_QOS6_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11C70u)

/** \brief 1C74, ARP2 cycle count capture register */
#define DOM1_QOS6_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11C74u)

/** \brief 1C78, ARP2 current counter value register */
#define DOM1_QOS6_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11C78u)

/** \brief 1C80, ARP3 TAG-ID assignment register A */
#define DOM1_QOS6_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11C80u)

/** \brief 1C84, ARP3 TAG-ID assignment register B */
#define DOM1_QOS6_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11C84u)

/** \brief 1C88, ARP3 VM assignment register */
#define DOM1_QOS6_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11C88u)

/** \brief 1C8C, ARP3 threshold register */
#define DOM1_QOS6_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11C8Cu)

/** \brief 1C90, ARP3 control register */
#define DOM1_QOS6_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11C90u)

/** \brief 1C94, ARP3 cycle count capture register */
#define DOM1_QOS6_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11C94u)

/** \brief 1C98, ARP3 current counter value register */
#define DOM1_QOS6_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11C98u)

/** \brief 1CA0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS6_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11CA0u)

/** \brief 1CA4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS6_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11CA4u)

/** \brief 1CA8, ARP4 VM assignment register */
#define DOM1_QOS6_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11CA8u)

/** \brief 1CAC, ARP4 threshold register */
#define DOM1_QOS6_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11CACu)

/** \brief 1CB0, ARP4 control register */
#define DOM1_QOS6_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11CB0u)

/** \brief 1CB4, ARP4 cycle count capture register */
#define DOM1_QOS6_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11CB4u)

/** \brief 1CB8, ARP4 current counter value register */
#define DOM1_QOS6_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11CB8u)

/** \brief 1CC0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS6_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11CC0u)

/** \brief 1CC4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS6_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11CC4u)

/** \brief 1CC8, ARP5 VM assignment register */
#define DOM1_QOS6_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11CC8u)

/** \brief 1CCC, ARP5 threshold register */
#define DOM1_QOS6_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11CCCu)

/** \brief 1CD0, ARP5 control register */
#define DOM1_QOS6_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11CD0u)

/** \brief 1CD4, ARP5 cycle count capture register */
#define DOM1_QOS6_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11CD4u)

/** \brief 1CD8, ARP5 current counter value register */
#define DOM1_QOS6_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11CD8u)

/** \brief 1CE0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS6_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11CE0u)

/** \brief 1CE4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS6_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11CE4u)

/** \brief 1CE8, ARP6 VM assignment register */
#define DOM1_QOS6_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11CE8u)

/** \brief 1CEC, ARP6 threshold register */
#define DOM1_QOS6_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11CECu)

/** \brief 1CF0, ARP6 control register */
#define DOM1_QOS6_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11CF0u)

/** \brief 1CF4, ARP6 cycle count capture register */
#define DOM1_QOS6_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11CF4u)

/** \brief 1CF8, ARP6 current counter value register */
#define DOM1_QOS6_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11CF8u)

/** \brief 1D00, ARP7 TAG-ID assignment register A */
#define DOM1_QOS6_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11D00u)

/** \brief 1D04, ARP7 TAG-ID assignment register B */
#define DOM1_QOS6_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11D04u)

/** \brief 1D08, ARP7 VM assignment register */
#define DOM1_QOS6_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11D08u)

/** \brief 1D0C, ARP7 threshold register */
#define DOM1_QOS6_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11D0Cu)

/** \brief 1D10, ARP7 control register */
#define DOM1_QOS6_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11D10u)

/** \brief 1D14, ARP7 cycle count capture register */
#define DOM1_QOS6_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11D14u)

/** \brief 1D18, ARP7 current counter value register */
#define DOM1_QOS6_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11D18u)

/** \brief 1E20, ARP0 TAG-ID assignment register A */
#define DOM1_QOS7_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11E20u)

/** \brief 1E24, ARP0 TAG-ID assignment register B */
#define DOM1_QOS7_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11E24u)

/** \brief 1E28, ARP0 VM assignment register */
#define DOM1_QOS7_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11E28u)

/** \brief 1E2C, ARP0 threshold register */
#define DOM1_QOS7_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11E2Cu)

/** \brief 1E30, ARP0 control register */
#define DOM1_QOS7_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11E30u)

/** \brief 1E34, ARP0 cycle count capture register */
#define DOM1_QOS7_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11E34u)

/** \brief 1E38, ARP0 current counter value register */
#define DOM1_QOS7_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11E38u)

/** \brief 1E40, ARP1 TAG-ID assignment register A */
#define DOM1_QOS7_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11E40u)

/** \brief 1E44, ARP1 TAG-ID assignment register B */
#define DOM1_QOS7_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11E44u)

/** \brief 1E48, ARP1 VM assignment register */
#define DOM1_QOS7_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11E48u)

/** \brief 1E4C, ARP1 threshold register */
#define DOM1_QOS7_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11E4Cu)

/** \brief 1E50, ARP1 control register */
#define DOM1_QOS7_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11E50u)

/** \brief 1E54, ARP1 cycle count capture register */
#define DOM1_QOS7_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11E54u)

/** \brief 1E58, ARP1 current counter value register */
#define DOM1_QOS7_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11E58u)

/** \brief 1E60, ARP2 TAG-ID assignment register A */
#define DOM1_QOS7_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11E60u)

/** \brief 1E64, ARP2 TAG-ID assignment register B */
#define DOM1_QOS7_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11E64u)

/** \brief 1E68, ARP2 VM assignment register */
#define DOM1_QOS7_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11E68u)

/** \brief 1E6C, ARP2 threshold register */
#define DOM1_QOS7_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11E6Cu)

/** \brief 1E70, ARP2 control register */
#define DOM1_QOS7_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11E70u)

/** \brief 1E74, ARP2 cycle count capture register */
#define DOM1_QOS7_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11E74u)

/** \brief 1E78, ARP2 current counter value register */
#define DOM1_QOS7_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11E78u)

/** \brief 1E80, ARP3 TAG-ID assignment register A */
#define DOM1_QOS7_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11E80u)

/** \brief 1E84, ARP3 TAG-ID assignment register B */
#define DOM1_QOS7_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11E84u)

/** \brief 1E88, ARP3 VM assignment register */
#define DOM1_QOS7_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11E88u)

/** \brief 1E8C, ARP3 threshold register */
#define DOM1_QOS7_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11E8Cu)

/** \brief 1E90, ARP3 control register */
#define DOM1_QOS7_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11E90u)

/** \brief 1E94, ARP3 cycle count capture register */
#define DOM1_QOS7_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11E94u)

/** \brief 1E98, ARP3 current counter value register */
#define DOM1_QOS7_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11E98u)

/** \brief 1EA0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS7_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11EA0u)

/** \brief 1EA4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS7_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11EA4u)

/** \brief 1EA8, ARP4 VM assignment register */
#define DOM1_QOS7_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11EA8u)

/** \brief 1EAC, ARP4 threshold register */
#define DOM1_QOS7_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11EACu)

/** \brief 1EB0, ARP4 control register */
#define DOM1_QOS7_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11EB0u)

/** \brief 1EB4, ARP4 cycle count capture register */
#define DOM1_QOS7_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11EB4u)

/** \brief 1EB8, ARP4 current counter value register */
#define DOM1_QOS7_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11EB8u)

/** \brief 1EC0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS7_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11EC0u)

/** \brief 1EC4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS7_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11EC4u)

/** \brief 1EC8, ARP5 VM assignment register */
#define DOM1_QOS7_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11EC8u)

/** \brief 1ECC, ARP5 threshold register */
#define DOM1_QOS7_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11ECCu)

/** \brief 1ED0, ARP5 control register */
#define DOM1_QOS7_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11ED0u)

/** \brief 1ED4, ARP5 cycle count capture register */
#define DOM1_QOS7_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11ED4u)

/** \brief 1ED8, ARP5 current counter value register */
#define DOM1_QOS7_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11ED8u)

/** \brief 1EE0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS7_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11EE0u)

/** \brief 1EE4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS7_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11EE4u)

/** \brief 1EE8, ARP6 VM assignment register */
#define DOM1_QOS7_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11EE8u)

/** \brief 1EEC, ARP6 threshold register */
#define DOM1_QOS7_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11EECu)

/** \brief 1EF0, ARP6 control register */
#define DOM1_QOS7_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11EF0u)

/** \brief 1EF4, ARP6 cycle count capture register */
#define DOM1_QOS7_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11EF4u)

/** \brief 1EF8, ARP6 current counter value register */
#define DOM1_QOS7_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11EF8u)

/** \brief 1F00, ARP7 TAG-ID assignment register A */
#define DOM1_QOS7_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F11F00u)

/** \brief 1F04, ARP7 TAG-ID assignment register B */
#define DOM1_QOS7_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F11F04u)

/** \brief 1F08, ARP7 VM assignment register */
#define DOM1_QOS7_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F11F08u)

/** \brief 1F0C, ARP7 threshold register */
#define DOM1_QOS7_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F11F0Cu)

/** \brief 1F10, ARP7 control register */
#define DOM1_QOS7_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F11F10u)

/** \brief 1F14, ARP7 cycle count capture register */
#define DOM1_QOS7_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F11F14u)

/** \brief 1F18, ARP7 current counter value register */
#define DOM1_QOS7_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F11F18u)

/** \brief 2020, ARP0 TAG-ID assignment register A */
#define DOM1_QOS8_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12020u)

/** \brief 2024, ARP0 TAG-ID assignment register B */
#define DOM1_QOS8_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12024u)

/** \brief 2028, ARP0 VM assignment register */
#define DOM1_QOS8_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12028u)

/** \brief 202C, ARP0 threshold register */
#define DOM1_QOS8_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1202Cu)

/** \brief 2030, ARP0 control register */
#define DOM1_QOS8_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12030u)

/** \brief 2034, ARP0 cycle count capture register */
#define DOM1_QOS8_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12034u)

/** \brief 2038, ARP0 current counter value register */
#define DOM1_QOS8_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12038u)

/** \brief 2040, ARP1 TAG-ID assignment register A */
#define DOM1_QOS8_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12040u)

/** \brief 2044, ARP1 TAG-ID assignment register B */
#define DOM1_QOS8_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12044u)

/** \brief 2048, ARP1 VM assignment register */
#define DOM1_QOS8_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12048u)

/** \brief 204C, ARP1 threshold register */
#define DOM1_QOS8_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1204Cu)

/** \brief 2050, ARP1 control register */
#define DOM1_QOS8_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12050u)

/** \brief 2054, ARP1 cycle count capture register */
#define DOM1_QOS8_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12054u)

/** \brief 2058, ARP1 current counter value register */
#define DOM1_QOS8_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12058u)

/** \brief 2060, ARP2 TAG-ID assignment register A */
#define DOM1_QOS8_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12060u)

/** \brief 2064, ARP2 TAG-ID assignment register B */
#define DOM1_QOS8_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12064u)

/** \brief 2068, ARP2 VM assignment register */
#define DOM1_QOS8_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12068u)

/** \brief 206C, ARP2 threshold register */
#define DOM1_QOS8_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1206Cu)

/** \brief 2070, ARP2 control register */
#define DOM1_QOS8_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12070u)

/** \brief 2074, ARP2 cycle count capture register */
#define DOM1_QOS8_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12074u)

/** \brief 2078, ARP2 current counter value register */
#define DOM1_QOS8_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12078u)

/** \brief 2080, ARP3 TAG-ID assignment register A */
#define DOM1_QOS8_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12080u)

/** \brief 2084, ARP3 TAG-ID assignment register B */
#define DOM1_QOS8_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12084u)

/** \brief 2088, ARP3 VM assignment register */
#define DOM1_QOS8_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12088u)

/** \brief 208C, ARP3 threshold register */
#define DOM1_QOS8_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1208Cu)

/** \brief 2090, ARP3 control register */
#define DOM1_QOS8_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12090u)

/** \brief 2094, ARP3 cycle count capture register */
#define DOM1_QOS8_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12094u)

/** \brief 2098, ARP3 current counter value register */
#define DOM1_QOS8_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12098u)

/** \brief 20A0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS8_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F120A0u)

/** \brief 20A4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS8_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F120A4u)

/** \brief 20A8, ARP4 VM assignment register */
#define DOM1_QOS8_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F120A8u)

/** \brief 20AC, ARP4 threshold register */
#define DOM1_QOS8_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F120ACu)

/** \brief 20B0, ARP4 control register */
#define DOM1_QOS8_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F120B0u)

/** \brief 20B4, ARP4 cycle count capture register */
#define DOM1_QOS8_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F120B4u)

/** \brief 20B8, ARP4 current counter value register */
#define DOM1_QOS8_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F120B8u)

/** \brief 20C0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS8_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F120C0u)

/** \brief 20C4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS8_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F120C4u)

/** \brief 20C8, ARP5 VM assignment register */
#define DOM1_QOS8_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F120C8u)

/** \brief 20CC, ARP5 threshold register */
#define DOM1_QOS8_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F120CCu)

/** \brief 20D0, ARP5 control register */
#define DOM1_QOS8_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F120D0u)

/** \brief 20D4, ARP5 cycle count capture register */
#define DOM1_QOS8_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F120D4u)

/** \brief 20D8, ARP5 current counter value register */
#define DOM1_QOS8_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F120D8u)

/** \brief 20E0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS8_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F120E0u)

/** \brief 20E4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS8_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F120E4u)

/** \brief 20E8, ARP6 VM assignment register */
#define DOM1_QOS8_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F120E8u)

/** \brief 20EC, ARP6 threshold register */
#define DOM1_QOS8_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F120ECu)

/** \brief 20F0, ARP6 control register */
#define DOM1_QOS8_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F120F0u)

/** \brief 20F4, ARP6 cycle count capture register */
#define DOM1_QOS8_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F120F4u)

/** \brief 20F8, ARP6 current counter value register */
#define DOM1_QOS8_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F120F8u)

/** \brief 2100, ARP7 TAG-ID assignment register A */
#define DOM1_QOS8_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12100u)

/** \brief 2104, ARP7 TAG-ID assignment register B */
#define DOM1_QOS8_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12104u)

/** \brief 2108, ARP7 VM assignment register */
#define DOM1_QOS8_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12108u)

/** \brief 210C, ARP7 threshold register */
#define DOM1_QOS8_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1210Cu)

/** \brief 2110, ARP7 control register */
#define DOM1_QOS8_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12110u)

/** \brief 2114, ARP7 cycle count capture register */
#define DOM1_QOS8_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12114u)

/** \brief 2118, ARP7 current counter value register */
#define DOM1_QOS8_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12118u)

/** \brief 2220, ARP0 TAG-ID assignment register A */
#define DOM1_QOS9_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12220u)

/** \brief 2224, ARP0 TAG-ID assignment register B */
#define DOM1_QOS9_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12224u)

/** \brief 2228, ARP0 VM assignment register */
#define DOM1_QOS9_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12228u)

/** \brief 222C, ARP0 threshold register */
#define DOM1_QOS9_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1222Cu)

/** \brief 2230, ARP0 control register */
#define DOM1_QOS9_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12230u)

/** \brief 2234, ARP0 cycle count capture register */
#define DOM1_QOS9_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12234u)

/** \brief 2238, ARP0 current counter value register */
#define DOM1_QOS9_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12238u)

/** \brief 2240, ARP1 TAG-ID assignment register A */
#define DOM1_QOS9_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12240u)

/** \brief 2244, ARP1 TAG-ID assignment register B */
#define DOM1_QOS9_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12244u)

/** \brief 2248, ARP1 VM assignment register */
#define DOM1_QOS9_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12248u)

/** \brief 224C, ARP1 threshold register */
#define DOM1_QOS9_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1224Cu)

/** \brief 2250, ARP1 control register */
#define DOM1_QOS9_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12250u)

/** \brief 2254, ARP1 cycle count capture register */
#define DOM1_QOS9_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12254u)

/** \brief 2258, ARP1 current counter value register */
#define DOM1_QOS9_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12258u)

/** \brief 2260, ARP2 TAG-ID assignment register A */
#define DOM1_QOS9_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12260u)

/** \brief 2264, ARP2 TAG-ID assignment register B */
#define DOM1_QOS9_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12264u)

/** \brief 2268, ARP2 VM assignment register */
#define DOM1_QOS9_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12268u)

/** \brief 226C, ARP2 threshold register */
#define DOM1_QOS9_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1226Cu)

/** \brief 2270, ARP2 control register */
#define DOM1_QOS9_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12270u)

/** \brief 2274, ARP2 cycle count capture register */
#define DOM1_QOS9_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12274u)

/** \brief 2278, ARP2 current counter value register */
#define DOM1_QOS9_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12278u)

/** \brief 2280, ARP3 TAG-ID assignment register A */
#define DOM1_QOS9_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12280u)

/** \brief 2284, ARP3 TAG-ID assignment register B */
#define DOM1_QOS9_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12284u)

/** \brief 2288, ARP3 VM assignment register */
#define DOM1_QOS9_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12288u)

/** \brief 228C, ARP3 threshold register */
#define DOM1_QOS9_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1228Cu)

/** \brief 2290, ARP3 control register */
#define DOM1_QOS9_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12290u)

/** \brief 2294, ARP3 cycle count capture register */
#define DOM1_QOS9_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12294u)

/** \brief 2298, ARP3 current counter value register */
#define DOM1_QOS9_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12298u)

/** \brief 22A0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS9_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F122A0u)

/** \brief 22A4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS9_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F122A4u)

/** \brief 22A8, ARP4 VM assignment register */
#define DOM1_QOS9_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F122A8u)

/** \brief 22AC, ARP4 threshold register */
#define DOM1_QOS9_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F122ACu)

/** \brief 22B0, ARP4 control register */
#define DOM1_QOS9_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F122B0u)

/** \brief 22B4, ARP4 cycle count capture register */
#define DOM1_QOS9_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F122B4u)

/** \brief 22B8, ARP4 current counter value register */
#define DOM1_QOS9_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F122B8u)

/** \brief 22C0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS9_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F122C0u)

/** \brief 22C4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS9_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F122C4u)

/** \brief 22C8, ARP5 VM assignment register */
#define DOM1_QOS9_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F122C8u)

/** \brief 22CC, ARP5 threshold register */
#define DOM1_QOS9_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F122CCu)

/** \brief 22D0, ARP5 control register */
#define DOM1_QOS9_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F122D0u)

/** \brief 22D4, ARP5 cycle count capture register */
#define DOM1_QOS9_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F122D4u)

/** \brief 22D8, ARP5 current counter value register */
#define DOM1_QOS9_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F122D8u)

/** \brief 22E0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS9_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F122E0u)

/** \brief 22E4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS9_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F122E4u)

/** \brief 22E8, ARP6 VM assignment register */
#define DOM1_QOS9_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F122E8u)

/** \brief 22EC, ARP6 threshold register */
#define DOM1_QOS9_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F122ECu)

/** \brief 22F0, ARP6 control register */
#define DOM1_QOS9_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F122F0u)

/** \brief 22F4, ARP6 cycle count capture register */
#define DOM1_QOS9_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F122F4u)

/** \brief 22F8, ARP6 current counter value register */
#define DOM1_QOS9_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F122F8u)

/** \brief 2300, ARP7 TAG-ID assignment register A */
#define DOM1_QOS9_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12300u)

/** \brief 2304, ARP7 TAG-ID assignment register B */
#define DOM1_QOS9_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12304u)

/** \brief 2308, ARP7 VM assignment register */
#define DOM1_QOS9_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12308u)

/** \brief 230C, ARP7 threshold register */
#define DOM1_QOS9_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1230Cu)

/** \brief 2310, ARP7 control register */
#define DOM1_QOS9_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12310u)

/** \brief 2314, ARP7 cycle count capture register */
#define DOM1_QOS9_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12314u)

/** \brief 2318, ARP7 current counter value register */
#define DOM1_QOS9_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12318u)

/** \brief 2420, ARP0 TAG-ID assignment register A */
#define DOM1_QOS10_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12420u)

/** \brief 2424, ARP0 TAG-ID assignment register B */
#define DOM1_QOS10_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12424u)

/** \brief 2428, ARP0 VM assignment register */
#define DOM1_QOS10_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12428u)

/** \brief 242C, ARP0 threshold register */
#define DOM1_QOS10_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1242Cu)

/** \brief 2430, ARP0 control register */
#define DOM1_QOS10_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12430u)

/** \brief 2434, ARP0 cycle count capture register */
#define DOM1_QOS10_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12434u)

/** \brief 2438, ARP0 current counter value register */
#define DOM1_QOS10_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12438u)

/** \brief 2440, ARP1 TAG-ID assignment register A */
#define DOM1_QOS10_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12440u)

/** \brief 2444, ARP1 TAG-ID assignment register B */
#define DOM1_QOS10_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12444u)

/** \brief 2448, ARP1 VM assignment register */
#define DOM1_QOS10_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12448u)

/** \brief 244C, ARP1 threshold register */
#define DOM1_QOS10_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1244Cu)

/** \brief 2450, ARP1 control register */
#define DOM1_QOS10_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12450u)

/** \brief 2454, ARP1 cycle count capture register */
#define DOM1_QOS10_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12454u)

/** \brief 2458, ARP1 current counter value register */
#define DOM1_QOS10_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12458u)

/** \brief 2460, ARP2 TAG-ID assignment register A */
#define DOM1_QOS10_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12460u)

/** \brief 2464, ARP2 TAG-ID assignment register B */
#define DOM1_QOS10_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12464u)

/** \brief 2468, ARP2 VM assignment register */
#define DOM1_QOS10_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12468u)

/** \brief 246C, ARP2 threshold register */
#define DOM1_QOS10_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1246Cu)

/** \brief 2470, ARP2 control register */
#define DOM1_QOS10_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12470u)

/** \brief 2474, ARP2 cycle count capture register */
#define DOM1_QOS10_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12474u)

/** \brief 2478, ARP2 current counter value register */
#define DOM1_QOS10_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12478u)

/** \brief 2480, ARP3 TAG-ID assignment register A */
#define DOM1_QOS10_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12480u)

/** \brief 2484, ARP3 TAG-ID assignment register B */
#define DOM1_QOS10_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12484u)

/** \brief 2488, ARP3 VM assignment register */
#define DOM1_QOS10_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12488u)

/** \brief 248C, ARP3 threshold register */
#define DOM1_QOS10_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1248Cu)

/** \brief 2490, ARP3 control register */
#define DOM1_QOS10_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12490u)

/** \brief 2494, ARP3 cycle count capture register */
#define DOM1_QOS10_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12494u)

/** \brief 2498, ARP3 current counter value register */
#define DOM1_QOS10_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12498u)

/** \brief 24A0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS10_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F124A0u)

/** \brief 24A4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS10_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F124A4u)

/** \brief 24A8, ARP4 VM assignment register */
#define DOM1_QOS10_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F124A8u)

/** \brief 24AC, ARP4 threshold register */
#define DOM1_QOS10_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F124ACu)

/** \brief 24B0, ARP4 control register */
#define DOM1_QOS10_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F124B0u)

/** \brief 24B4, ARP4 cycle count capture register */
#define DOM1_QOS10_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F124B4u)

/** \brief 24B8, ARP4 current counter value register */
#define DOM1_QOS10_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F124B8u)

/** \brief 24C0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS10_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F124C0u)

/** \brief 24C4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS10_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F124C4u)

/** \brief 24C8, ARP5 VM assignment register */
#define DOM1_QOS10_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F124C8u)

/** \brief 24CC, ARP5 threshold register */
#define DOM1_QOS10_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F124CCu)

/** \brief 24D0, ARP5 control register */
#define DOM1_QOS10_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F124D0u)

/** \brief 24D4, ARP5 cycle count capture register */
#define DOM1_QOS10_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F124D4u)

/** \brief 24D8, ARP5 current counter value register */
#define DOM1_QOS10_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F124D8u)

/** \brief 24E0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS10_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F124E0u)

/** \brief 24E4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS10_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F124E4u)

/** \brief 24E8, ARP6 VM assignment register */
#define DOM1_QOS10_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F124E8u)

/** \brief 24EC, ARP6 threshold register */
#define DOM1_QOS10_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F124ECu)

/** \brief 24F0, ARP6 control register */
#define DOM1_QOS10_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F124F0u)

/** \brief 24F4, ARP6 cycle count capture register */
#define DOM1_QOS10_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F124F4u)

/** \brief 24F8, ARP6 current counter value register */
#define DOM1_QOS10_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F124F8u)

/** \brief 2500, ARP7 TAG-ID assignment register A */
#define DOM1_QOS10_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12500u)

/** \brief 2504, ARP7 TAG-ID assignment register B */
#define DOM1_QOS10_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12504u)

/** \brief 2508, ARP7 VM assignment register */
#define DOM1_QOS10_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12508u)

/** \brief 250C, ARP7 threshold register */
#define DOM1_QOS10_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1250Cu)

/** \brief 2510, ARP7 control register */
#define DOM1_QOS10_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12510u)

/** \brief 2514, ARP7 cycle count capture register */
#define DOM1_QOS10_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12514u)

/** \brief 2518, ARP7 current counter value register */
#define DOM1_QOS10_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12518u)

/** \brief 2620, ARP0 TAG-ID assignment register A */
#define DOM1_QOS11_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12620u)

/** \brief 2624, ARP0 TAG-ID assignment register B */
#define DOM1_QOS11_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12624u)

/** \brief 2628, ARP0 VM assignment register */
#define DOM1_QOS11_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12628u)

/** \brief 262C, ARP0 threshold register */
#define DOM1_QOS11_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1262Cu)

/** \brief 2630, ARP0 control register */
#define DOM1_QOS11_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12630u)

/** \brief 2634, ARP0 cycle count capture register */
#define DOM1_QOS11_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12634u)

/** \brief 2638, ARP0 current counter value register */
#define DOM1_QOS11_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12638u)

/** \brief 2640, ARP1 TAG-ID assignment register A */
#define DOM1_QOS11_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12640u)

/** \brief 2644, ARP1 TAG-ID assignment register B */
#define DOM1_QOS11_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12644u)

/** \brief 2648, ARP1 VM assignment register */
#define DOM1_QOS11_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12648u)

/** \brief 264C, ARP1 threshold register */
#define DOM1_QOS11_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1264Cu)

/** \brief 2650, ARP1 control register */
#define DOM1_QOS11_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12650u)

/** \brief 2654, ARP1 cycle count capture register */
#define DOM1_QOS11_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12654u)

/** \brief 2658, ARP1 current counter value register */
#define DOM1_QOS11_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12658u)

/** \brief 2660, ARP2 TAG-ID assignment register A */
#define DOM1_QOS11_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12660u)

/** \brief 2664, ARP2 TAG-ID assignment register B */
#define DOM1_QOS11_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12664u)

/** \brief 2668, ARP2 VM assignment register */
#define DOM1_QOS11_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12668u)

/** \brief 266C, ARP2 threshold register */
#define DOM1_QOS11_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1266Cu)

/** \brief 2670, ARP2 control register */
#define DOM1_QOS11_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12670u)

/** \brief 2674, ARP2 cycle count capture register */
#define DOM1_QOS11_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12674u)

/** \brief 2678, ARP2 current counter value register */
#define DOM1_QOS11_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12678u)

/** \brief 2680, ARP3 TAG-ID assignment register A */
#define DOM1_QOS11_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12680u)

/** \brief 2684, ARP3 TAG-ID assignment register B */
#define DOM1_QOS11_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12684u)

/** \brief 2688, ARP3 VM assignment register */
#define DOM1_QOS11_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12688u)

/** \brief 268C, ARP3 threshold register */
#define DOM1_QOS11_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1268Cu)

/** \brief 2690, ARP3 control register */
#define DOM1_QOS11_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12690u)

/** \brief 2694, ARP3 cycle count capture register */
#define DOM1_QOS11_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12694u)

/** \brief 2698, ARP3 current counter value register */
#define DOM1_QOS11_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12698u)

/** \brief 26A0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS11_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F126A0u)

/** \brief 26A4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS11_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F126A4u)

/** \brief 26A8, ARP4 VM assignment register */
#define DOM1_QOS11_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F126A8u)

/** \brief 26AC, ARP4 threshold register */
#define DOM1_QOS11_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F126ACu)

/** \brief 26B0, ARP4 control register */
#define DOM1_QOS11_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F126B0u)

/** \brief 26B4, ARP4 cycle count capture register */
#define DOM1_QOS11_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F126B4u)

/** \brief 26B8, ARP4 current counter value register */
#define DOM1_QOS11_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F126B8u)

/** \brief 26C0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS11_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F126C0u)

/** \brief 26C4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS11_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F126C4u)

/** \brief 26C8, ARP5 VM assignment register */
#define DOM1_QOS11_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F126C8u)

/** \brief 26CC, ARP5 threshold register */
#define DOM1_QOS11_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F126CCu)

/** \brief 26D0, ARP5 control register */
#define DOM1_QOS11_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F126D0u)

/** \brief 26D4, ARP5 cycle count capture register */
#define DOM1_QOS11_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F126D4u)

/** \brief 26D8, ARP5 current counter value register */
#define DOM1_QOS11_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F126D8u)

/** \brief 26E0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS11_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F126E0u)

/** \brief 26E4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS11_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F126E4u)

/** \brief 26E8, ARP6 VM assignment register */
#define DOM1_QOS11_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F126E8u)

/** \brief 26EC, ARP6 threshold register */
#define DOM1_QOS11_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F126ECu)

/** \brief 26F0, ARP6 control register */
#define DOM1_QOS11_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F126F0u)

/** \brief 26F4, ARP6 cycle count capture register */
#define DOM1_QOS11_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F126F4u)

/** \brief 26F8, ARP6 current counter value register */
#define DOM1_QOS11_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F126F8u)

/** \brief 2700, ARP7 TAG-ID assignment register A */
#define DOM1_QOS11_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12700u)

/** \brief 2704, ARP7 TAG-ID assignment register B */
#define DOM1_QOS11_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12704u)

/** \brief 2708, ARP7 VM assignment register */
#define DOM1_QOS11_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12708u)

/** \brief 270C, ARP7 threshold register */
#define DOM1_QOS11_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1270Cu)

/** \brief 2710, ARP7 control register */
#define DOM1_QOS11_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12710u)

/** \brief 2714, ARP7 cycle count capture register */
#define DOM1_QOS11_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12714u)

/** \brief 2718, ARP7 current counter value register */
#define DOM1_QOS11_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12718u)

/** \brief 2820, ARP0 TAG-ID assignment register A */
#define DOM1_QOS12_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12820u)

/** \brief 2824, ARP0 TAG-ID assignment register B */
#define DOM1_QOS12_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12824u)

/** \brief 2828, ARP0 VM assignment register */
#define DOM1_QOS12_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12828u)

/** \brief 282C, ARP0 threshold register */
#define DOM1_QOS12_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1282Cu)

/** \brief 2830, ARP0 control register */
#define DOM1_QOS12_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12830u)

/** \brief 2834, ARP0 cycle count capture register */
#define DOM1_QOS12_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12834u)

/** \brief 2838, ARP0 current counter value register */
#define DOM1_QOS12_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12838u)

/** \brief 2840, ARP1 TAG-ID assignment register A */
#define DOM1_QOS12_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12840u)

/** \brief 2844, ARP1 TAG-ID assignment register B */
#define DOM1_QOS12_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12844u)

/** \brief 2848, ARP1 VM assignment register */
#define DOM1_QOS12_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12848u)

/** \brief 284C, ARP1 threshold register */
#define DOM1_QOS12_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1284Cu)

/** \brief 2850, ARP1 control register */
#define DOM1_QOS12_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12850u)

/** \brief 2854, ARP1 cycle count capture register */
#define DOM1_QOS12_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12854u)

/** \brief 2858, ARP1 current counter value register */
#define DOM1_QOS12_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12858u)

/** \brief 2860, ARP2 TAG-ID assignment register A */
#define DOM1_QOS12_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12860u)

/** \brief 2864, ARP2 TAG-ID assignment register B */
#define DOM1_QOS12_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12864u)

/** \brief 2868, ARP2 VM assignment register */
#define DOM1_QOS12_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12868u)

/** \brief 286C, ARP2 threshold register */
#define DOM1_QOS12_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1286Cu)

/** \brief 2870, ARP2 control register */
#define DOM1_QOS12_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12870u)

/** \brief 2874, ARP2 cycle count capture register */
#define DOM1_QOS12_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12874u)

/** \brief 2878, ARP2 current counter value register */
#define DOM1_QOS12_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12878u)

/** \brief 2880, ARP3 TAG-ID assignment register A */
#define DOM1_QOS12_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12880u)

/** \brief 2884, ARP3 TAG-ID assignment register B */
#define DOM1_QOS12_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12884u)

/** \brief 2888, ARP3 VM assignment register */
#define DOM1_QOS12_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12888u)

/** \brief 288C, ARP3 threshold register */
#define DOM1_QOS12_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1288Cu)

/** \brief 2890, ARP3 control register */
#define DOM1_QOS12_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12890u)

/** \brief 2894, ARP3 cycle count capture register */
#define DOM1_QOS12_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12894u)

/** \brief 2898, ARP3 current counter value register */
#define DOM1_QOS12_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12898u)

/** \brief 28A0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS12_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F128A0u)

/** \brief 28A4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS12_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F128A4u)

/** \brief 28A8, ARP4 VM assignment register */
#define DOM1_QOS12_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F128A8u)

/** \brief 28AC, ARP4 threshold register */
#define DOM1_QOS12_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F128ACu)

/** \brief 28B0, ARP4 control register */
#define DOM1_QOS12_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F128B0u)

/** \brief 28B4, ARP4 cycle count capture register */
#define DOM1_QOS12_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F128B4u)

/** \brief 28B8, ARP4 current counter value register */
#define DOM1_QOS12_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F128B8u)

/** \brief 28C0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS12_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F128C0u)

/** \brief 28C4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS12_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F128C4u)

/** \brief 28C8, ARP5 VM assignment register */
#define DOM1_QOS12_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F128C8u)

/** \brief 28CC, ARP5 threshold register */
#define DOM1_QOS12_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F128CCu)

/** \brief 28D0, ARP5 control register */
#define DOM1_QOS12_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F128D0u)

/** \brief 28D4, ARP5 cycle count capture register */
#define DOM1_QOS12_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F128D4u)

/** \brief 28D8, ARP5 current counter value register */
#define DOM1_QOS12_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F128D8u)

/** \brief 28E0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS12_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F128E0u)

/** \brief 28E4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS12_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F128E4u)

/** \brief 28E8, ARP6 VM assignment register */
#define DOM1_QOS12_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F128E8u)

/** \brief 28EC, ARP6 threshold register */
#define DOM1_QOS12_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F128ECu)

/** \brief 28F0, ARP6 control register */
#define DOM1_QOS12_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F128F0u)

/** \brief 28F4, ARP6 cycle count capture register */
#define DOM1_QOS12_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F128F4u)

/** \brief 28F8, ARP6 current counter value register */
#define DOM1_QOS12_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F128F8u)

/** \brief 2900, ARP7 TAG-ID assignment register A */
#define DOM1_QOS12_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12900u)

/** \brief 2904, ARP7 TAG-ID assignment register B */
#define DOM1_QOS12_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12904u)

/** \brief 2908, ARP7 VM assignment register */
#define DOM1_QOS12_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12908u)

/** \brief 290C, ARP7 threshold register */
#define DOM1_QOS12_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F1290Cu)

/** \brief 2910, ARP7 control register */
#define DOM1_QOS12_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12910u)

/** \brief 2914, ARP7 cycle count capture register */
#define DOM1_QOS12_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12914u)

/** \brief 2918, ARP7 current counter value register */
#define DOM1_QOS12_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12918u)

/** \brief 2A20, ARP0 TAG-ID assignment register A */
#define DOM1_QOS13_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12A20u)

/** \brief 2A24, ARP0 TAG-ID assignment register B */
#define DOM1_QOS13_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12A24u)

/** \brief 2A28, ARP0 VM assignment register */
#define DOM1_QOS13_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12A28u)

/** \brief 2A2C, ARP0 threshold register */
#define DOM1_QOS13_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12A2Cu)

/** \brief 2A30, ARP0 control register */
#define DOM1_QOS13_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12A30u)

/** \brief 2A34, ARP0 cycle count capture register */
#define DOM1_QOS13_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12A34u)

/** \brief 2A38, ARP0 current counter value register */
#define DOM1_QOS13_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12A38u)

/** \brief 2A40, ARP1 TAG-ID assignment register A */
#define DOM1_QOS13_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12A40u)

/** \brief 2A44, ARP1 TAG-ID assignment register B */
#define DOM1_QOS13_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12A44u)

/** \brief 2A48, ARP1 VM assignment register */
#define DOM1_QOS13_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12A48u)

/** \brief 2A4C, ARP1 threshold register */
#define DOM1_QOS13_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12A4Cu)

/** \brief 2A50, ARP1 control register */
#define DOM1_QOS13_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12A50u)

/** \brief 2A54, ARP1 cycle count capture register */
#define DOM1_QOS13_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12A54u)

/** \brief 2A58, ARP1 current counter value register */
#define DOM1_QOS13_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12A58u)

/** \brief 2A60, ARP2 TAG-ID assignment register A */
#define DOM1_QOS13_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12A60u)

/** \brief 2A64, ARP2 TAG-ID assignment register B */
#define DOM1_QOS13_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12A64u)

/** \brief 2A68, ARP2 VM assignment register */
#define DOM1_QOS13_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12A68u)

/** \brief 2A6C, ARP2 threshold register */
#define DOM1_QOS13_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12A6Cu)

/** \brief 2A70, ARP2 control register */
#define DOM1_QOS13_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12A70u)

/** \brief 2A74, ARP2 cycle count capture register */
#define DOM1_QOS13_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12A74u)

/** \brief 2A78, ARP2 current counter value register */
#define DOM1_QOS13_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12A78u)

/** \brief 2A80, ARP3 TAG-ID assignment register A */
#define DOM1_QOS13_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12A80u)

/** \brief 2A84, ARP3 TAG-ID assignment register B */
#define DOM1_QOS13_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12A84u)

/** \brief 2A88, ARP3 VM assignment register */
#define DOM1_QOS13_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12A88u)

/** \brief 2A8C, ARP3 threshold register */
#define DOM1_QOS13_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12A8Cu)

/** \brief 2A90, ARP3 control register */
#define DOM1_QOS13_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12A90u)

/** \brief 2A94, ARP3 cycle count capture register */
#define DOM1_QOS13_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12A94u)

/** \brief 2A98, ARP3 current counter value register */
#define DOM1_QOS13_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12A98u)

/** \brief 2AA0, ARP4 TAG-ID assignment register A */
#define DOM1_QOS13_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12AA0u)

/** \brief 2AA4, ARP4 TAG-ID assignment register B */
#define DOM1_QOS13_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12AA4u)

/** \brief 2AA8, ARP4 VM assignment register */
#define DOM1_QOS13_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12AA8u)

/** \brief 2AAC, ARP4 threshold register */
#define DOM1_QOS13_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12AACu)

/** \brief 2AB0, ARP4 control register */
#define DOM1_QOS13_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12AB0u)

/** \brief 2AB4, ARP4 cycle count capture register */
#define DOM1_QOS13_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12AB4u)

/** \brief 2AB8, ARP4 current counter value register */
#define DOM1_QOS13_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12AB8u)

/** \brief 2AC0, ARP5 TAG-ID assignment register A */
#define DOM1_QOS13_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12AC0u)

/** \brief 2AC4, ARP5 TAG-ID assignment register B */
#define DOM1_QOS13_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12AC4u)

/** \brief 2AC8, ARP5 VM assignment register */
#define DOM1_QOS13_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12AC8u)

/** \brief 2ACC, ARP5 threshold register */
#define DOM1_QOS13_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12ACCu)

/** \brief 2AD0, ARP5 control register */
#define DOM1_QOS13_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12AD0u)

/** \brief 2AD4, ARP5 cycle count capture register */
#define DOM1_QOS13_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12AD4u)

/** \brief 2AD8, ARP5 current counter value register */
#define DOM1_QOS13_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12AD8u)

/** \brief 2AE0, ARP6 TAG-ID assignment register A */
#define DOM1_QOS13_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12AE0u)

/** \brief 2AE4, ARP6 TAG-ID assignment register B */
#define DOM1_QOS13_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12AE4u)

/** \brief 2AE8, ARP6 VM assignment register */
#define DOM1_QOS13_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12AE8u)

/** \brief 2AEC, ARP6 threshold register */
#define DOM1_QOS13_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12AECu)

/** \brief 2AF0, ARP6 control register */
#define DOM1_QOS13_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12AF0u)

/** \brief 2AF4, ARP6 cycle count capture register */
#define DOM1_QOS13_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12AF4u)

/** \brief 2AF8, ARP6 current counter value register */
#define DOM1_QOS13_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12AF8u)

/** \brief 2B00, ARP7 TAG-ID assignment register A */
#define DOM1_QOS13_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F12B00u)

/** \brief 2B04, ARP7 TAG-ID assignment register B */
#define DOM1_QOS13_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F12B04u)

/** \brief 2B08, ARP7 VM assignment register */
#define DOM1_QOS13_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F12B08u)

/** \brief 2B0C, ARP7 threshold register */
#define DOM1_QOS13_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F12B0Cu)

/** \brief 2B10, ARP7 control register */
#define DOM1_QOS13_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F12B10u)

/** \brief 2B14, ARP7 cycle count capture register */
#define DOM1_QOS13_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F12B14u)

/** \brief 2B18, ARP7 current counter value register */
#define DOM1_QOS13_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F12B18u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom3
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM3_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30000u)
/** Alias (User Manual Name) for DOM3_SCICTRL0_PECON */
#define DOM3_PECON0 (DOM3_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM3_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30008u)
/** Alias (User Manual Name) for DOM3_SCICTRL0_PRIORITY */
#define DOM3_PRIORITY0 (DOM3_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM3_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30010u)
/** Alias (User Manual Name) for DOM3_SCICTRL0_ERRADDR */
#define DOM3_ERRADDR0 (DOM3_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM3_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30018u)
/** Alias (User Manual Name) for DOM3_SCICTRL0_ERR */
#define DOM3_ERR0 (DOM3_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM3_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30020u)
/** Alias (User Manual Name) for DOM3_SCICTRL1_PECON */
#define DOM3_PECON1 (DOM3_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM3_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30028u)
/** Alias (User Manual Name) for DOM3_SCICTRL1_PRIORITY */
#define DOM3_PRIORITY1 (DOM3_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM3_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30030u)
/** Alias (User Manual Name) for DOM3_SCICTRL1_ERRADDR */
#define DOM3_ERRADDR1 (DOM3_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM3_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30038u)
/** Alias (User Manual Name) for DOM3_SCICTRL1_ERR */
#define DOM3_ERR1 (DOM3_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM3_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30040u)
/** Alias (User Manual Name) for DOM3_SCICTRL2_PECON */
#define DOM3_PECON2 (DOM3_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM3_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30048u)
/** Alias (User Manual Name) for DOM3_SCICTRL2_PRIORITY */
#define DOM3_PRIORITY2 (DOM3_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM3_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30050u)
/** Alias (User Manual Name) for DOM3_SCICTRL2_ERRADDR */
#define DOM3_ERRADDR2 (DOM3_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM3_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30058u)
/** Alias (User Manual Name) for DOM3_SCICTRL2_ERR */
#define DOM3_ERR2 (DOM3_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM3_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30060u)
/** Alias (User Manual Name) for DOM3_SCICTRL3_PECON */
#define DOM3_PECON3 (DOM3_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM3_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30068u)
/** Alias (User Manual Name) for DOM3_SCICTRL3_PRIORITY */
#define DOM3_PRIORITY3 (DOM3_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM3_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30070u)
/** Alias (User Manual Name) for DOM3_SCICTRL3_ERRADDR */
#define DOM3_ERRADDR3 (DOM3_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM3_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30078u)
/** Alias (User Manual Name) for DOM3_SCICTRL3_ERR */
#define DOM3_ERR3 (DOM3_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM3_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30080u)
/** Alias (User Manual Name) for DOM3_SCICTRL4_PECON */
#define DOM3_PECON4 (DOM3_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM3_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30088u)
/** Alias (User Manual Name) for DOM3_SCICTRL4_PRIORITY */
#define DOM3_PRIORITY4 (DOM3_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM3_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30090u)
/** Alias (User Manual Name) for DOM3_SCICTRL4_ERRADDR */
#define DOM3_ERRADDR4 (DOM3_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM3_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30098u)
/** Alias (User Manual Name) for DOM3_SCICTRL4_ERR */
#define DOM3_ERR4 (DOM3_SCICTRL4_ERR)

/** \brief A0, Protocol error control register 5 */
#define DOM3_SCICTRL5_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F300A0u)
/** Alias (User Manual Name) for DOM3_SCICTRL5_PECON */
#define DOM3_PECON5 (DOM3_SCICTRL5_PECON)

/** \brief A8, SCI5 arbiter priority register */
#define DOM3_SCICTRL5_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F300A8u)
/** Alias (User Manual Name) for DOM3_SCICTRL5_PRIORITY */
#define DOM3_PRIORITY5 (DOM3_SCICTRL5_PRIORITY)

/** \brief B0, SCI5 error address capture register */
#define DOM3_SCICTRL5_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F300B0u)
/** Alias (User Manual Name) for DOM3_SCICTRL5_ERRADDR */
#define DOM3_ERRADDR5 (DOM3_SCICTRL5_ERRADDR)

/** \brief B8, SCI5 error capture register */
#define DOM3_SCICTRL5_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F300B8u)
/** Alias (User Manual Name) for DOM3_SCICTRL5_ERR */
#define DOM3_ERR5 (DOM3_SCICTRL5_ERR)

/** \brief C0, Protocol error control register 6 */
#define DOM3_SCICTRL6_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F300C0u)
/** Alias (User Manual Name) for DOM3_SCICTRL6_PECON */
#define DOM3_PECON6 (DOM3_SCICTRL6_PECON)

/** \brief C8, SCI6 arbiter priority register */
#define DOM3_SCICTRL6_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F300C8u)
/** Alias (User Manual Name) for DOM3_SCICTRL6_PRIORITY */
#define DOM3_PRIORITY6 (DOM3_SCICTRL6_PRIORITY)

/** \brief D0, SCI6 error address capture register */
#define DOM3_SCICTRL6_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F300D0u)
/** Alias (User Manual Name) for DOM3_SCICTRL6_ERRADDR */
#define DOM3_ERRADDR6 (DOM3_SCICTRL6_ERRADDR)

/** \brief D8, SCI6 error capture register */
#define DOM3_SCICTRL6_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F300D8u)
/** Alias (User Manual Name) for DOM3_SCICTRL6_ERR */
#define DOM3_ERR6 (DOM3_SCICTRL6_ERR)

/** \brief E0, Protocol error control register 7 */
#define DOM3_SCICTRL7_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F300E0u)
/** Alias (User Manual Name) for DOM3_SCICTRL7_PECON */
#define DOM3_PECON7 (DOM3_SCICTRL7_PECON)

/** \brief E8, SCI7 arbiter priority register */
#define DOM3_SCICTRL7_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F300E8u)
/** Alias (User Manual Name) for DOM3_SCICTRL7_PRIORITY */
#define DOM3_PRIORITY7 (DOM3_SCICTRL7_PRIORITY)

/** \brief F0, SCI7 error address capture register */
#define DOM3_SCICTRL7_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F300F0u)
/** Alias (User Manual Name) for DOM3_SCICTRL7_ERRADDR */
#define DOM3_ERRADDR7 (DOM3_SCICTRL7_ERRADDR)

/** \brief F8, SCI7 error capture register */
#define DOM3_SCICTRL7_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F300F8u)
/** Alias (User Manual Name) for DOM3_SCICTRL7_ERR */
#define DOM3_ERR7 (DOM3_SCICTRL7_ERR)

/** \brief 100, Protocol error control register 8 */
#define DOM3_SCICTRL8_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30100u)
/** Alias (User Manual Name) for DOM3_SCICTRL8_PECON */
#define DOM3_PECON8 (DOM3_SCICTRL8_PECON)

/** \brief 108, SCI8 arbiter priority register */
#define DOM3_SCICTRL8_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30108u)
/** Alias (User Manual Name) for DOM3_SCICTRL8_PRIORITY */
#define DOM3_PRIORITY8 (DOM3_SCICTRL8_PRIORITY)

/** \brief 110, SCI8 error address capture register */
#define DOM3_SCICTRL8_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30110u)
/** Alias (User Manual Name) for DOM3_SCICTRL8_ERRADDR */
#define DOM3_ERRADDR8 (DOM3_SCICTRL8_ERRADDR)

/** \brief 118, SCI8 error capture register */
#define DOM3_SCICTRL8_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30118u)
/** Alias (User Manual Name) for DOM3_SCICTRL8_ERR */
#define DOM3_ERR8 (DOM3_SCICTRL8_ERR)

/** \brief 120, Protocol error control register 9 */
#define DOM3_SCICTRL9_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30120u)
/** Alias (User Manual Name) for DOM3_SCICTRL9_PECON */
#define DOM3_PECON9 (DOM3_SCICTRL9_PECON)

/** \brief 128, SCI9 arbiter priority register */
#define DOM3_SCICTRL9_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30128u)
/** Alias (User Manual Name) for DOM3_SCICTRL9_PRIORITY */
#define DOM3_PRIORITY9 (DOM3_SCICTRL9_PRIORITY)

/** \brief 130, SCI9 error address capture register */
#define DOM3_SCICTRL9_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30130u)
/** Alias (User Manual Name) for DOM3_SCICTRL9_ERRADDR */
#define DOM3_ERRADDR9 (DOM3_SCICTRL9_ERRADDR)

/** \brief 138, SCI9 error capture register */
#define DOM3_SCICTRL9_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30138u)
/** Alias (User Manual Name) for DOM3_SCICTRL9_ERR */
#define DOM3_ERR9 (DOM3_SCICTRL9_ERR)

/** \brief 140, Protocol error control register 10 */
#define DOM3_SCICTRL10_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30140u)
/** Alias (User Manual Name) for DOM3_SCICTRL10_PECON */
#define DOM3_PECON10 (DOM3_SCICTRL10_PECON)

/** \brief 148, SCI10 arbiter priority register */
#define DOM3_SCICTRL10_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30148u)
/** Alias (User Manual Name) for DOM3_SCICTRL10_PRIORITY */
#define DOM3_PRIORITY10 (DOM3_SCICTRL10_PRIORITY)

/** \brief 150, SCI10 error address capture register */
#define DOM3_SCICTRL10_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30150u)
/** Alias (User Manual Name) for DOM3_SCICTRL10_ERRADDR */
#define DOM3_ERRADDR10 (DOM3_SCICTRL10_ERRADDR)

/** \brief 158, SCI10 error capture register */
#define DOM3_SCICTRL10_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30158u)
/** Alias (User Manual Name) for DOM3_SCICTRL10_ERR */
#define DOM3_ERR10 (DOM3_SCICTRL10_ERR)

/** \brief 160, Protocol error control register 11 */
#define DOM3_SCICTRL11_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F30160u)
/** Alias (User Manual Name) for DOM3_SCICTRL11_PECON */
#define DOM3_PECON11 (DOM3_SCICTRL11_PECON)

/** \brief 168, SCI11 arbiter priority register */
#define DOM3_SCICTRL11_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F30168u)
/** Alias (User Manual Name) for DOM3_SCICTRL11_PRIORITY */
#define DOM3_PRIORITY11 (DOM3_SCICTRL11_PRIORITY)

/** \brief 170, SCI11 error address capture register */
#define DOM3_SCICTRL11_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F30170u)
/** Alias (User Manual Name) for DOM3_SCICTRL11_ERRADDR */
#define DOM3_ERRADDR11 (DOM3_SCICTRL11_ERRADDR)

/** \brief 178, SCI11 error capture register */
#define DOM3_SCICTRL11_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F30178u)
/** Alias (User Manual Name) for DOM3_SCICTRL11_ERR */
#define DOM3_ERR11 (DOM3_SCICTRL11_ERR)

/** \brief 408, Identification register */
#define DOM3_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F30408u)

/** \brief 410, Protocol error status register */
#define DOM3_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F30410u)

/** \brief 418, Transaction ID status register */
#define DOM3_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F30418u)

/** \brief 420, Transaction ID enable register */
#define DOM3_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F30420u)

/** \brief 430, Bridge control register */
#define DOM3_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F30430u)

/** \brief 4C0, Write access enable register A */
#define DOM3_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F304C0u)

/** \brief 4C4, Write access enable register B */
#define DOM3_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F304C4u)

/** \brief 4C8, Read access enable register A */
#define DOM3_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F304C8u)

/** \brief 4CC, Read access enable register B */
#define DOM3_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F304CCu)

/** \brief 4D0, VM access enable register */
#define DOM3_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F304D0u)

/** \brief 4D4, PRS access enable register */
#define DOM3_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F304D4u)

/** \brief 4E0, Resource protection register */
#define DOM3_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F304E0u)

/** \brief 1000, QoS time interval control register */
#define DOM3_QOS_ICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICTRL*)0xF8F31000u)

/** \brief 1004, QoS time interval counter */
#define DOM3_QOS_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICNT*)0xF8F31004u)

/** \brief 1220, ARP0 TAG-ID assignment register A */
#define DOM3_QOS1_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31220u)

/** \brief 1224, ARP0 TAG-ID assignment register B */
#define DOM3_QOS1_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31224u)

/** \brief 1228, ARP0 VM assignment register */
#define DOM3_QOS1_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31228u)

/** \brief 122C, ARP0 threshold register */
#define DOM3_QOS1_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3122Cu)

/** \brief 1230, ARP0 control register */
#define DOM3_QOS1_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31230u)

/** \brief 1234, ARP0 cycle count capture register */
#define DOM3_QOS1_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31234u)

/** \brief 1238, ARP0 current counter value register */
#define DOM3_QOS1_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31238u)

/** \brief 1240, ARP1 TAG-ID assignment register A */
#define DOM3_QOS1_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31240u)

/** \brief 1244, ARP1 TAG-ID assignment register B */
#define DOM3_QOS1_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31244u)

/** \brief 1248, ARP1 VM assignment register */
#define DOM3_QOS1_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31248u)

/** \brief 124C, ARP1 threshold register */
#define DOM3_QOS1_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3124Cu)

/** \brief 1250, ARP1 control register */
#define DOM3_QOS1_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31250u)

/** \brief 1254, ARP1 cycle count capture register */
#define DOM3_QOS1_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31254u)

/** \brief 1258, ARP1 current counter value register */
#define DOM3_QOS1_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31258u)

/** \brief 1260, ARP2 TAG-ID assignment register A */
#define DOM3_QOS1_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31260u)

/** \brief 1264, ARP2 TAG-ID assignment register B */
#define DOM3_QOS1_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31264u)

/** \brief 1268, ARP2 VM assignment register */
#define DOM3_QOS1_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31268u)

/** \brief 126C, ARP2 threshold register */
#define DOM3_QOS1_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3126Cu)

/** \brief 1270, ARP2 control register */
#define DOM3_QOS1_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31270u)

/** \brief 1274, ARP2 cycle count capture register */
#define DOM3_QOS1_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31274u)

/** \brief 1278, ARP2 current counter value register */
#define DOM3_QOS1_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31278u)

/** \brief 1280, ARP3 TAG-ID assignment register A */
#define DOM3_QOS1_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31280u)

/** \brief 1284, ARP3 TAG-ID assignment register B */
#define DOM3_QOS1_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31284u)

/** \brief 1288, ARP3 VM assignment register */
#define DOM3_QOS1_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31288u)

/** \brief 128C, ARP3 threshold register */
#define DOM3_QOS1_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3128Cu)

/** \brief 1290, ARP3 control register */
#define DOM3_QOS1_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31290u)

/** \brief 1294, ARP3 cycle count capture register */
#define DOM3_QOS1_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31294u)

/** \brief 1298, ARP3 current counter value register */
#define DOM3_QOS1_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31298u)

/** \brief 12A0, ARP4 TAG-ID assignment register A */
#define DOM3_QOS1_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F312A0u)

/** \brief 12A4, ARP4 TAG-ID assignment register B */
#define DOM3_QOS1_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F312A4u)

/** \brief 12A8, ARP4 VM assignment register */
#define DOM3_QOS1_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F312A8u)

/** \brief 12AC, ARP4 threshold register */
#define DOM3_QOS1_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F312ACu)

/** \brief 12B0, ARP4 control register */
#define DOM3_QOS1_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F312B0u)

/** \brief 12B4, ARP4 cycle count capture register */
#define DOM3_QOS1_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F312B4u)

/** \brief 12B8, ARP4 current counter value register */
#define DOM3_QOS1_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F312B8u)

/** \brief 12C0, ARP5 TAG-ID assignment register A */
#define DOM3_QOS1_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F312C0u)

/** \brief 12C4, ARP5 TAG-ID assignment register B */
#define DOM3_QOS1_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F312C4u)

/** \brief 12C8, ARP5 VM assignment register */
#define DOM3_QOS1_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F312C8u)

/** \brief 12CC, ARP5 threshold register */
#define DOM3_QOS1_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F312CCu)

/** \brief 12D0, ARP5 control register */
#define DOM3_QOS1_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F312D0u)

/** \brief 12D4, ARP5 cycle count capture register */
#define DOM3_QOS1_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F312D4u)

/** \brief 12D8, ARP5 current counter value register */
#define DOM3_QOS1_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F312D8u)

/** \brief 12E0, ARP6 TAG-ID assignment register A */
#define DOM3_QOS1_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F312E0u)

/** \brief 12E4, ARP6 TAG-ID assignment register B */
#define DOM3_QOS1_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F312E4u)

/** \brief 12E8, ARP6 VM assignment register */
#define DOM3_QOS1_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F312E8u)

/** \brief 12EC, ARP6 threshold register */
#define DOM3_QOS1_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F312ECu)

/** \brief 12F0, ARP6 control register */
#define DOM3_QOS1_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F312F0u)

/** \brief 12F4, ARP6 cycle count capture register */
#define DOM3_QOS1_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F312F4u)

/** \brief 12F8, ARP6 current counter value register */
#define DOM3_QOS1_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F312F8u)

/** \brief 1300, ARP7 TAG-ID assignment register A */
#define DOM3_QOS1_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31300u)

/** \brief 1304, ARP7 TAG-ID assignment register B */
#define DOM3_QOS1_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31304u)

/** \brief 1308, ARP7 VM assignment register */
#define DOM3_QOS1_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31308u)

/** \brief 130C, ARP7 threshold register */
#define DOM3_QOS1_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3130Cu)

/** \brief 1310, ARP7 control register */
#define DOM3_QOS1_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31310u)

/** \brief 1314, ARP7 cycle count capture register */
#define DOM3_QOS1_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31314u)

/** \brief 1318, ARP7 current counter value register */
#define DOM3_QOS1_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31318u)

/** \brief 1420, ARP0 TAG-ID assignment register A */
#define DOM3_QOS2_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31420u)

/** \brief 1424, ARP0 TAG-ID assignment register B */
#define DOM3_QOS2_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31424u)

/** \brief 1428, ARP0 VM assignment register */
#define DOM3_QOS2_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31428u)

/** \brief 142C, ARP0 threshold register */
#define DOM3_QOS2_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3142Cu)

/** \brief 1430, ARP0 control register */
#define DOM3_QOS2_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31430u)

/** \brief 1434, ARP0 cycle count capture register */
#define DOM3_QOS2_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31434u)

/** \brief 1438, ARP0 current counter value register */
#define DOM3_QOS2_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31438u)

/** \brief 1440, ARP1 TAG-ID assignment register A */
#define DOM3_QOS2_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31440u)

/** \brief 1444, ARP1 TAG-ID assignment register B */
#define DOM3_QOS2_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31444u)

/** \brief 1448, ARP1 VM assignment register */
#define DOM3_QOS2_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31448u)

/** \brief 144C, ARP1 threshold register */
#define DOM3_QOS2_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3144Cu)

/** \brief 1450, ARP1 control register */
#define DOM3_QOS2_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31450u)

/** \brief 1454, ARP1 cycle count capture register */
#define DOM3_QOS2_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31454u)

/** \brief 1458, ARP1 current counter value register */
#define DOM3_QOS2_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31458u)

/** \brief 1460, ARP2 TAG-ID assignment register A */
#define DOM3_QOS2_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31460u)

/** \brief 1464, ARP2 TAG-ID assignment register B */
#define DOM3_QOS2_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31464u)

/** \brief 1468, ARP2 VM assignment register */
#define DOM3_QOS2_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31468u)

/** \brief 146C, ARP2 threshold register */
#define DOM3_QOS2_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3146Cu)

/** \brief 1470, ARP2 control register */
#define DOM3_QOS2_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31470u)

/** \brief 1474, ARP2 cycle count capture register */
#define DOM3_QOS2_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31474u)

/** \brief 1478, ARP2 current counter value register */
#define DOM3_QOS2_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31478u)

/** \brief 1480, ARP3 TAG-ID assignment register A */
#define DOM3_QOS2_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31480u)

/** \brief 1484, ARP3 TAG-ID assignment register B */
#define DOM3_QOS2_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31484u)

/** \brief 1488, ARP3 VM assignment register */
#define DOM3_QOS2_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31488u)

/** \brief 148C, ARP3 threshold register */
#define DOM3_QOS2_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3148Cu)

/** \brief 1490, ARP3 control register */
#define DOM3_QOS2_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31490u)

/** \brief 1494, ARP3 cycle count capture register */
#define DOM3_QOS2_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31494u)

/** \brief 1498, ARP3 current counter value register */
#define DOM3_QOS2_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31498u)

/** \brief 14A0, ARP4 TAG-ID assignment register A */
#define DOM3_QOS2_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F314A0u)

/** \brief 14A4, ARP4 TAG-ID assignment register B */
#define DOM3_QOS2_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F314A4u)

/** \brief 14A8, ARP4 VM assignment register */
#define DOM3_QOS2_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F314A8u)

/** \brief 14AC, ARP4 threshold register */
#define DOM3_QOS2_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F314ACu)

/** \brief 14B0, ARP4 control register */
#define DOM3_QOS2_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F314B0u)

/** \brief 14B4, ARP4 cycle count capture register */
#define DOM3_QOS2_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F314B4u)

/** \brief 14B8, ARP4 current counter value register */
#define DOM3_QOS2_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F314B8u)

/** \brief 14C0, ARP5 TAG-ID assignment register A */
#define DOM3_QOS2_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F314C0u)

/** \brief 14C4, ARP5 TAG-ID assignment register B */
#define DOM3_QOS2_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F314C4u)

/** \brief 14C8, ARP5 VM assignment register */
#define DOM3_QOS2_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F314C8u)

/** \brief 14CC, ARP5 threshold register */
#define DOM3_QOS2_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F314CCu)

/** \brief 14D0, ARP5 control register */
#define DOM3_QOS2_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F314D0u)

/** \brief 14D4, ARP5 cycle count capture register */
#define DOM3_QOS2_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F314D4u)

/** \brief 14D8, ARP5 current counter value register */
#define DOM3_QOS2_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F314D8u)

/** \brief 14E0, ARP6 TAG-ID assignment register A */
#define DOM3_QOS2_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F314E0u)

/** \brief 14E4, ARP6 TAG-ID assignment register B */
#define DOM3_QOS2_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F314E4u)

/** \brief 14E8, ARP6 VM assignment register */
#define DOM3_QOS2_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F314E8u)

/** \brief 14EC, ARP6 threshold register */
#define DOM3_QOS2_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F314ECu)

/** \brief 14F0, ARP6 control register */
#define DOM3_QOS2_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F314F0u)

/** \brief 14F4, ARP6 cycle count capture register */
#define DOM3_QOS2_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F314F4u)

/** \brief 14F8, ARP6 current counter value register */
#define DOM3_QOS2_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F314F8u)

/** \brief 1500, ARP7 TAG-ID assignment register A */
#define DOM3_QOS2_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31500u)

/** \brief 1504, ARP7 TAG-ID assignment register B */
#define DOM3_QOS2_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31504u)

/** \brief 1508, ARP7 VM assignment register */
#define DOM3_QOS2_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31508u)

/** \brief 150C, ARP7 threshold register */
#define DOM3_QOS2_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3150Cu)

/** \brief 1510, ARP7 control register */
#define DOM3_QOS2_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31510u)

/** \brief 1514, ARP7 cycle count capture register */
#define DOM3_QOS2_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31514u)

/** \brief 1518, ARP7 current counter value register */
#define DOM3_QOS2_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31518u)

/** \brief 1620, ARP0 TAG-ID assignment register A */
#define DOM3_QOS3_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31620u)

/** \brief 1624, ARP0 TAG-ID assignment register B */
#define DOM3_QOS3_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31624u)

/** \brief 1628, ARP0 VM assignment register */
#define DOM3_QOS3_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31628u)

/** \brief 162C, ARP0 threshold register */
#define DOM3_QOS3_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3162Cu)

/** \brief 1630, ARP0 control register */
#define DOM3_QOS3_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31630u)

/** \brief 1634, ARP0 cycle count capture register */
#define DOM3_QOS3_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31634u)

/** \brief 1638, ARP0 current counter value register */
#define DOM3_QOS3_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31638u)

/** \brief 1640, ARP1 TAG-ID assignment register A */
#define DOM3_QOS3_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31640u)

/** \brief 1644, ARP1 TAG-ID assignment register B */
#define DOM3_QOS3_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31644u)

/** \brief 1648, ARP1 VM assignment register */
#define DOM3_QOS3_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31648u)

/** \brief 164C, ARP1 threshold register */
#define DOM3_QOS3_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3164Cu)

/** \brief 1650, ARP1 control register */
#define DOM3_QOS3_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31650u)

/** \brief 1654, ARP1 cycle count capture register */
#define DOM3_QOS3_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31654u)

/** \brief 1658, ARP1 current counter value register */
#define DOM3_QOS3_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31658u)

/** \brief 1660, ARP2 TAG-ID assignment register A */
#define DOM3_QOS3_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31660u)

/** \brief 1664, ARP2 TAG-ID assignment register B */
#define DOM3_QOS3_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31664u)

/** \brief 1668, ARP2 VM assignment register */
#define DOM3_QOS3_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31668u)

/** \brief 166C, ARP2 threshold register */
#define DOM3_QOS3_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3166Cu)

/** \brief 1670, ARP2 control register */
#define DOM3_QOS3_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31670u)

/** \brief 1674, ARP2 cycle count capture register */
#define DOM3_QOS3_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31674u)

/** \brief 1678, ARP2 current counter value register */
#define DOM3_QOS3_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31678u)

/** \brief 1680, ARP3 TAG-ID assignment register A */
#define DOM3_QOS3_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31680u)

/** \brief 1684, ARP3 TAG-ID assignment register B */
#define DOM3_QOS3_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31684u)

/** \brief 1688, ARP3 VM assignment register */
#define DOM3_QOS3_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31688u)

/** \brief 168C, ARP3 threshold register */
#define DOM3_QOS3_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3168Cu)

/** \brief 1690, ARP3 control register */
#define DOM3_QOS3_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31690u)

/** \brief 1694, ARP3 cycle count capture register */
#define DOM3_QOS3_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31694u)

/** \brief 1698, ARP3 current counter value register */
#define DOM3_QOS3_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31698u)

/** \brief 16A0, ARP4 TAG-ID assignment register A */
#define DOM3_QOS3_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F316A0u)

/** \brief 16A4, ARP4 TAG-ID assignment register B */
#define DOM3_QOS3_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F316A4u)

/** \brief 16A8, ARP4 VM assignment register */
#define DOM3_QOS3_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F316A8u)

/** \brief 16AC, ARP4 threshold register */
#define DOM3_QOS3_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F316ACu)

/** \brief 16B0, ARP4 control register */
#define DOM3_QOS3_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F316B0u)

/** \brief 16B4, ARP4 cycle count capture register */
#define DOM3_QOS3_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F316B4u)

/** \brief 16B8, ARP4 current counter value register */
#define DOM3_QOS3_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F316B8u)

/** \brief 16C0, ARP5 TAG-ID assignment register A */
#define DOM3_QOS3_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F316C0u)

/** \brief 16C4, ARP5 TAG-ID assignment register B */
#define DOM3_QOS3_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F316C4u)

/** \brief 16C8, ARP5 VM assignment register */
#define DOM3_QOS3_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F316C8u)

/** \brief 16CC, ARP5 threshold register */
#define DOM3_QOS3_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F316CCu)

/** \brief 16D0, ARP5 control register */
#define DOM3_QOS3_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F316D0u)

/** \brief 16D4, ARP5 cycle count capture register */
#define DOM3_QOS3_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F316D4u)

/** \brief 16D8, ARP5 current counter value register */
#define DOM3_QOS3_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F316D8u)

/** \brief 16E0, ARP6 TAG-ID assignment register A */
#define DOM3_QOS3_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F316E0u)

/** \brief 16E4, ARP6 TAG-ID assignment register B */
#define DOM3_QOS3_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F316E4u)

/** \brief 16E8, ARP6 VM assignment register */
#define DOM3_QOS3_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F316E8u)

/** \brief 16EC, ARP6 threshold register */
#define DOM3_QOS3_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F316ECu)

/** \brief 16F0, ARP6 control register */
#define DOM3_QOS3_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F316F0u)

/** \brief 16F4, ARP6 cycle count capture register */
#define DOM3_QOS3_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F316F4u)

/** \brief 16F8, ARP6 current counter value register */
#define DOM3_QOS3_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F316F8u)

/** \brief 1700, ARP7 TAG-ID assignment register A */
#define DOM3_QOS3_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31700u)

/** \brief 1704, ARP7 TAG-ID assignment register B */
#define DOM3_QOS3_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31704u)

/** \brief 1708, ARP7 VM assignment register */
#define DOM3_QOS3_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31708u)

/** \brief 170C, ARP7 threshold register */
#define DOM3_QOS3_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3170Cu)

/** \brief 1710, ARP7 control register */
#define DOM3_QOS3_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31710u)

/** \brief 1714, ARP7 cycle count capture register */
#define DOM3_QOS3_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31714u)

/** \brief 1718, ARP7 current counter value register */
#define DOM3_QOS3_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31718u)

/** \brief 1820, ARP0 TAG-ID assignment register A */
#define DOM3_QOS4_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31820u)

/** \brief 1824, ARP0 TAG-ID assignment register B */
#define DOM3_QOS4_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31824u)

/** \brief 1828, ARP0 VM assignment register */
#define DOM3_QOS4_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31828u)

/** \brief 182C, ARP0 threshold register */
#define DOM3_QOS4_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3182Cu)

/** \brief 1830, ARP0 control register */
#define DOM3_QOS4_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31830u)

/** \brief 1834, ARP0 cycle count capture register */
#define DOM3_QOS4_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31834u)

/** \brief 1838, ARP0 current counter value register */
#define DOM3_QOS4_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31838u)

/** \brief 1840, ARP1 TAG-ID assignment register A */
#define DOM3_QOS4_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31840u)

/** \brief 1844, ARP1 TAG-ID assignment register B */
#define DOM3_QOS4_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31844u)

/** \brief 1848, ARP1 VM assignment register */
#define DOM3_QOS4_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31848u)

/** \brief 184C, ARP1 threshold register */
#define DOM3_QOS4_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3184Cu)

/** \brief 1850, ARP1 control register */
#define DOM3_QOS4_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31850u)

/** \brief 1854, ARP1 cycle count capture register */
#define DOM3_QOS4_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31854u)

/** \brief 1858, ARP1 current counter value register */
#define DOM3_QOS4_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31858u)

/** \brief 1860, ARP2 TAG-ID assignment register A */
#define DOM3_QOS4_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31860u)

/** \brief 1864, ARP2 TAG-ID assignment register B */
#define DOM3_QOS4_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31864u)

/** \brief 1868, ARP2 VM assignment register */
#define DOM3_QOS4_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31868u)

/** \brief 186C, ARP2 threshold register */
#define DOM3_QOS4_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3186Cu)

/** \brief 1870, ARP2 control register */
#define DOM3_QOS4_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31870u)

/** \brief 1874, ARP2 cycle count capture register */
#define DOM3_QOS4_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31874u)

/** \brief 1878, ARP2 current counter value register */
#define DOM3_QOS4_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31878u)

/** \brief 1880, ARP3 TAG-ID assignment register A */
#define DOM3_QOS4_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31880u)

/** \brief 1884, ARP3 TAG-ID assignment register B */
#define DOM3_QOS4_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31884u)

/** \brief 1888, ARP3 VM assignment register */
#define DOM3_QOS4_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31888u)

/** \brief 188C, ARP3 threshold register */
#define DOM3_QOS4_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3188Cu)

/** \brief 1890, ARP3 control register */
#define DOM3_QOS4_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31890u)

/** \brief 1894, ARP3 cycle count capture register */
#define DOM3_QOS4_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31894u)

/** \brief 1898, ARP3 current counter value register */
#define DOM3_QOS4_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31898u)

/** \brief 18A0, ARP4 TAG-ID assignment register A */
#define DOM3_QOS4_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F318A0u)

/** \brief 18A4, ARP4 TAG-ID assignment register B */
#define DOM3_QOS4_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F318A4u)

/** \brief 18A8, ARP4 VM assignment register */
#define DOM3_QOS4_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F318A8u)

/** \brief 18AC, ARP4 threshold register */
#define DOM3_QOS4_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F318ACu)

/** \brief 18B0, ARP4 control register */
#define DOM3_QOS4_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F318B0u)

/** \brief 18B4, ARP4 cycle count capture register */
#define DOM3_QOS4_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F318B4u)

/** \brief 18B8, ARP4 current counter value register */
#define DOM3_QOS4_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F318B8u)

/** \brief 18C0, ARP5 TAG-ID assignment register A */
#define DOM3_QOS4_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F318C0u)

/** \brief 18C4, ARP5 TAG-ID assignment register B */
#define DOM3_QOS4_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F318C4u)

/** \brief 18C8, ARP5 VM assignment register */
#define DOM3_QOS4_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F318C8u)

/** \brief 18CC, ARP5 threshold register */
#define DOM3_QOS4_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F318CCu)

/** \brief 18D0, ARP5 control register */
#define DOM3_QOS4_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F318D0u)

/** \brief 18D4, ARP5 cycle count capture register */
#define DOM3_QOS4_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F318D4u)

/** \brief 18D8, ARP5 current counter value register */
#define DOM3_QOS4_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F318D8u)

/** \brief 18E0, ARP6 TAG-ID assignment register A */
#define DOM3_QOS4_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F318E0u)

/** \brief 18E4, ARP6 TAG-ID assignment register B */
#define DOM3_QOS4_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F318E4u)

/** \brief 18E8, ARP6 VM assignment register */
#define DOM3_QOS4_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F318E8u)

/** \brief 18EC, ARP6 threshold register */
#define DOM3_QOS4_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F318ECu)

/** \brief 18F0, ARP6 control register */
#define DOM3_QOS4_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F318F0u)

/** \brief 18F4, ARP6 cycle count capture register */
#define DOM3_QOS4_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F318F4u)

/** \brief 18F8, ARP6 current counter value register */
#define DOM3_QOS4_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F318F8u)

/** \brief 1900, ARP7 TAG-ID assignment register A */
#define DOM3_QOS4_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31900u)

/** \brief 1904, ARP7 TAG-ID assignment register B */
#define DOM3_QOS4_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31904u)

/** \brief 1908, ARP7 VM assignment register */
#define DOM3_QOS4_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31908u)

/** \brief 190C, ARP7 threshold register */
#define DOM3_QOS4_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3190Cu)

/** \brief 1910, ARP7 control register */
#define DOM3_QOS4_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31910u)

/** \brief 1914, ARP7 cycle count capture register */
#define DOM3_QOS4_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31914u)

/** \brief 1918, ARP7 current counter value register */
#define DOM3_QOS4_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31918u)

/** \brief 1A20, ARP0 TAG-ID assignment register A */
#define DOM3_QOS5_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31A20u)

/** \brief 1A24, ARP0 TAG-ID assignment register B */
#define DOM3_QOS5_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31A24u)

/** \brief 1A28, ARP0 VM assignment register */
#define DOM3_QOS5_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31A28u)

/** \brief 1A2C, ARP0 threshold register */
#define DOM3_QOS5_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31A2Cu)

/** \brief 1A30, ARP0 control register */
#define DOM3_QOS5_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31A30u)

/** \brief 1A34, ARP0 cycle count capture register */
#define DOM3_QOS5_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31A34u)

/** \brief 1A38, ARP0 current counter value register */
#define DOM3_QOS5_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31A38u)

/** \brief 1A40, ARP1 TAG-ID assignment register A */
#define DOM3_QOS5_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31A40u)

/** \brief 1A44, ARP1 TAG-ID assignment register B */
#define DOM3_QOS5_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31A44u)

/** \brief 1A48, ARP1 VM assignment register */
#define DOM3_QOS5_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31A48u)

/** \brief 1A4C, ARP1 threshold register */
#define DOM3_QOS5_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31A4Cu)

/** \brief 1A50, ARP1 control register */
#define DOM3_QOS5_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31A50u)

/** \brief 1A54, ARP1 cycle count capture register */
#define DOM3_QOS5_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31A54u)

/** \brief 1A58, ARP1 current counter value register */
#define DOM3_QOS5_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31A58u)

/** \brief 1A60, ARP2 TAG-ID assignment register A */
#define DOM3_QOS5_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31A60u)

/** \brief 1A64, ARP2 TAG-ID assignment register B */
#define DOM3_QOS5_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31A64u)

/** \brief 1A68, ARP2 VM assignment register */
#define DOM3_QOS5_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31A68u)

/** \brief 1A6C, ARP2 threshold register */
#define DOM3_QOS5_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31A6Cu)

/** \brief 1A70, ARP2 control register */
#define DOM3_QOS5_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31A70u)

/** \brief 1A74, ARP2 cycle count capture register */
#define DOM3_QOS5_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31A74u)

/** \brief 1A78, ARP2 current counter value register */
#define DOM3_QOS5_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31A78u)

/** \brief 1A80, ARP3 TAG-ID assignment register A */
#define DOM3_QOS5_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31A80u)

/** \brief 1A84, ARP3 TAG-ID assignment register B */
#define DOM3_QOS5_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31A84u)

/** \brief 1A88, ARP3 VM assignment register */
#define DOM3_QOS5_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31A88u)

/** \brief 1A8C, ARP3 threshold register */
#define DOM3_QOS5_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31A8Cu)

/** \brief 1A90, ARP3 control register */
#define DOM3_QOS5_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31A90u)

/** \brief 1A94, ARP3 cycle count capture register */
#define DOM3_QOS5_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31A94u)

/** \brief 1A98, ARP3 current counter value register */
#define DOM3_QOS5_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31A98u)

/** \brief 1AA0, ARP4 TAG-ID assignment register A */
#define DOM3_QOS5_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31AA0u)

/** \brief 1AA4, ARP4 TAG-ID assignment register B */
#define DOM3_QOS5_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31AA4u)

/** \brief 1AA8, ARP4 VM assignment register */
#define DOM3_QOS5_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31AA8u)

/** \brief 1AAC, ARP4 threshold register */
#define DOM3_QOS5_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31AACu)

/** \brief 1AB0, ARP4 control register */
#define DOM3_QOS5_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31AB0u)

/** \brief 1AB4, ARP4 cycle count capture register */
#define DOM3_QOS5_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31AB4u)

/** \brief 1AB8, ARP4 current counter value register */
#define DOM3_QOS5_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31AB8u)

/** \brief 1AC0, ARP5 TAG-ID assignment register A */
#define DOM3_QOS5_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31AC0u)

/** \brief 1AC4, ARP5 TAG-ID assignment register B */
#define DOM3_QOS5_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31AC4u)

/** \brief 1AC8, ARP5 VM assignment register */
#define DOM3_QOS5_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31AC8u)

/** \brief 1ACC, ARP5 threshold register */
#define DOM3_QOS5_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31ACCu)

/** \brief 1AD0, ARP5 control register */
#define DOM3_QOS5_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31AD0u)

/** \brief 1AD4, ARP5 cycle count capture register */
#define DOM3_QOS5_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31AD4u)

/** \brief 1AD8, ARP5 current counter value register */
#define DOM3_QOS5_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31AD8u)

/** \brief 1AE0, ARP6 TAG-ID assignment register A */
#define DOM3_QOS5_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31AE0u)

/** \brief 1AE4, ARP6 TAG-ID assignment register B */
#define DOM3_QOS5_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31AE4u)

/** \brief 1AE8, ARP6 VM assignment register */
#define DOM3_QOS5_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31AE8u)

/** \brief 1AEC, ARP6 threshold register */
#define DOM3_QOS5_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31AECu)

/** \brief 1AF0, ARP6 control register */
#define DOM3_QOS5_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31AF0u)

/** \brief 1AF4, ARP6 cycle count capture register */
#define DOM3_QOS5_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31AF4u)

/** \brief 1AF8, ARP6 current counter value register */
#define DOM3_QOS5_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31AF8u)

/** \brief 1B00, ARP7 TAG-ID assignment register A */
#define DOM3_QOS5_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F31B00u)

/** \brief 1B04, ARP7 TAG-ID assignment register B */
#define DOM3_QOS5_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F31B04u)

/** \brief 1B08, ARP7 VM assignment register */
#define DOM3_QOS5_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F31B08u)

/** \brief 1B0C, ARP7 threshold register */
#define DOM3_QOS5_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F31B0Cu)

/** \brief 1B10, ARP7 control register */
#define DOM3_QOS5_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F31B10u)

/** \brief 1B14, ARP7 cycle count capture register */
#define DOM3_QOS5_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F31B14u)

/** \brief 1B18, ARP7 current counter value register */
#define DOM3_QOS5_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F31B18u)

/** \brief 2420, ARP0 TAG-ID assignment register A */
#define DOM3_QOS10_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32420u)

/** \brief 2424, ARP0 TAG-ID assignment register B */
#define DOM3_QOS10_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32424u)

/** \brief 2428, ARP0 VM assignment register */
#define DOM3_QOS10_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32428u)

/** \brief 242C, ARP0 threshold register */
#define DOM3_QOS10_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3242Cu)

/** \brief 2430, ARP0 control register */
#define DOM3_QOS10_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32430u)

/** \brief 2434, ARP0 cycle count capture register */
#define DOM3_QOS10_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32434u)

/** \brief 2438, ARP0 current counter value register */
#define DOM3_QOS10_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32438u)

/** \brief 2440, ARP1 TAG-ID assignment register A */
#define DOM3_QOS10_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32440u)

/** \brief 2444, ARP1 TAG-ID assignment register B */
#define DOM3_QOS10_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32444u)

/** \brief 2448, ARP1 VM assignment register */
#define DOM3_QOS10_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32448u)

/** \brief 244C, ARP1 threshold register */
#define DOM3_QOS10_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3244Cu)

/** \brief 2450, ARP1 control register */
#define DOM3_QOS10_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32450u)

/** \brief 2454, ARP1 cycle count capture register */
#define DOM3_QOS10_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32454u)

/** \brief 2458, ARP1 current counter value register */
#define DOM3_QOS10_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32458u)

/** \brief 2460, ARP2 TAG-ID assignment register A */
#define DOM3_QOS10_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32460u)

/** \brief 2464, ARP2 TAG-ID assignment register B */
#define DOM3_QOS10_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32464u)

/** \brief 2468, ARP2 VM assignment register */
#define DOM3_QOS10_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32468u)

/** \brief 246C, ARP2 threshold register */
#define DOM3_QOS10_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3246Cu)

/** \brief 2470, ARP2 control register */
#define DOM3_QOS10_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32470u)

/** \brief 2474, ARP2 cycle count capture register */
#define DOM3_QOS10_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32474u)

/** \brief 2478, ARP2 current counter value register */
#define DOM3_QOS10_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32478u)

/** \brief 2480, ARP3 TAG-ID assignment register A */
#define DOM3_QOS10_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32480u)

/** \brief 2484, ARP3 TAG-ID assignment register B */
#define DOM3_QOS10_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32484u)

/** \brief 2488, ARP3 VM assignment register */
#define DOM3_QOS10_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32488u)

/** \brief 248C, ARP3 threshold register */
#define DOM3_QOS10_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3248Cu)

/** \brief 2490, ARP3 control register */
#define DOM3_QOS10_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32490u)

/** \brief 2494, ARP3 cycle count capture register */
#define DOM3_QOS10_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32494u)

/** \brief 2498, ARP3 current counter value register */
#define DOM3_QOS10_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32498u)

/** \brief 24A0, ARP4 TAG-ID assignment register A */
#define DOM3_QOS10_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F324A0u)

/** \brief 24A4, ARP4 TAG-ID assignment register B */
#define DOM3_QOS10_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F324A4u)

/** \brief 24A8, ARP4 VM assignment register */
#define DOM3_QOS10_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F324A8u)

/** \brief 24AC, ARP4 threshold register */
#define DOM3_QOS10_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F324ACu)

/** \brief 24B0, ARP4 control register */
#define DOM3_QOS10_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F324B0u)

/** \brief 24B4, ARP4 cycle count capture register */
#define DOM3_QOS10_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F324B4u)

/** \brief 24B8, ARP4 current counter value register */
#define DOM3_QOS10_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F324B8u)

/** \brief 24C0, ARP5 TAG-ID assignment register A */
#define DOM3_QOS10_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F324C0u)

/** \brief 24C4, ARP5 TAG-ID assignment register B */
#define DOM3_QOS10_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F324C4u)

/** \brief 24C8, ARP5 VM assignment register */
#define DOM3_QOS10_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F324C8u)

/** \brief 24CC, ARP5 threshold register */
#define DOM3_QOS10_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F324CCu)

/** \brief 24D0, ARP5 control register */
#define DOM3_QOS10_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F324D0u)

/** \brief 24D4, ARP5 cycle count capture register */
#define DOM3_QOS10_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F324D4u)

/** \brief 24D8, ARP5 current counter value register */
#define DOM3_QOS10_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F324D8u)

/** \brief 24E0, ARP6 TAG-ID assignment register A */
#define DOM3_QOS10_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F324E0u)

/** \brief 24E4, ARP6 TAG-ID assignment register B */
#define DOM3_QOS10_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F324E4u)

/** \brief 24E8, ARP6 VM assignment register */
#define DOM3_QOS10_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F324E8u)

/** \brief 24EC, ARP6 threshold register */
#define DOM3_QOS10_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F324ECu)

/** \brief 24F0, ARP6 control register */
#define DOM3_QOS10_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F324F0u)

/** \brief 24F4, ARP6 cycle count capture register */
#define DOM3_QOS10_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F324F4u)

/** \brief 24F8, ARP6 current counter value register */
#define DOM3_QOS10_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F324F8u)

/** \brief 2500, ARP7 TAG-ID assignment register A */
#define DOM3_QOS10_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32500u)

/** \brief 2504, ARP7 TAG-ID assignment register B */
#define DOM3_QOS10_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32504u)

/** \brief 2508, ARP7 VM assignment register */
#define DOM3_QOS10_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32508u)

/** \brief 250C, ARP7 threshold register */
#define DOM3_QOS10_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3250Cu)

/** \brief 2510, ARP7 control register */
#define DOM3_QOS10_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32510u)

/** \brief 2514, ARP7 cycle count capture register */
#define DOM3_QOS10_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32514u)

/** \brief 2518, ARP7 current counter value register */
#define DOM3_QOS10_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32518u)

/** \brief 2620, ARP0 TAG-ID assignment register A */
#define DOM3_QOS11_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32620u)

/** \brief 2624, ARP0 TAG-ID assignment register B */
#define DOM3_QOS11_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32624u)

/** \brief 2628, ARP0 VM assignment register */
#define DOM3_QOS11_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32628u)

/** \brief 262C, ARP0 threshold register */
#define DOM3_QOS11_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3262Cu)

/** \brief 2630, ARP0 control register */
#define DOM3_QOS11_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32630u)

/** \brief 2634, ARP0 cycle count capture register */
#define DOM3_QOS11_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32634u)

/** \brief 2638, ARP0 current counter value register */
#define DOM3_QOS11_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32638u)

/** \brief 2640, ARP1 TAG-ID assignment register A */
#define DOM3_QOS11_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32640u)

/** \brief 2644, ARP1 TAG-ID assignment register B */
#define DOM3_QOS11_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32644u)

/** \brief 2648, ARP1 VM assignment register */
#define DOM3_QOS11_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32648u)

/** \brief 264C, ARP1 threshold register */
#define DOM3_QOS11_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3264Cu)

/** \brief 2650, ARP1 control register */
#define DOM3_QOS11_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32650u)

/** \brief 2654, ARP1 cycle count capture register */
#define DOM3_QOS11_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32654u)

/** \brief 2658, ARP1 current counter value register */
#define DOM3_QOS11_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32658u)

/** \brief 2660, ARP2 TAG-ID assignment register A */
#define DOM3_QOS11_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32660u)

/** \brief 2664, ARP2 TAG-ID assignment register B */
#define DOM3_QOS11_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32664u)

/** \brief 2668, ARP2 VM assignment register */
#define DOM3_QOS11_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32668u)

/** \brief 266C, ARP2 threshold register */
#define DOM3_QOS11_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3266Cu)

/** \brief 2670, ARP2 control register */
#define DOM3_QOS11_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32670u)

/** \brief 2674, ARP2 cycle count capture register */
#define DOM3_QOS11_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32674u)

/** \brief 2678, ARP2 current counter value register */
#define DOM3_QOS11_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32678u)

/** \brief 2680, ARP3 TAG-ID assignment register A */
#define DOM3_QOS11_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32680u)

/** \brief 2684, ARP3 TAG-ID assignment register B */
#define DOM3_QOS11_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32684u)

/** \brief 2688, ARP3 VM assignment register */
#define DOM3_QOS11_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32688u)

/** \brief 268C, ARP3 threshold register */
#define DOM3_QOS11_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3268Cu)

/** \brief 2690, ARP3 control register */
#define DOM3_QOS11_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32690u)

/** \brief 2694, ARP3 cycle count capture register */
#define DOM3_QOS11_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32694u)

/** \brief 2698, ARP3 current counter value register */
#define DOM3_QOS11_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32698u)

/** \brief 26A0, ARP4 TAG-ID assignment register A */
#define DOM3_QOS11_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F326A0u)

/** \brief 26A4, ARP4 TAG-ID assignment register B */
#define DOM3_QOS11_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F326A4u)

/** \brief 26A8, ARP4 VM assignment register */
#define DOM3_QOS11_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F326A8u)

/** \brief 26AC, ARP4 threshold register */
#define DOM3_QOS11_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F326ACu)

/** \brief 26B0, ARP4 control register */
#define DOM3_QOS11_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F326B0u)

/** \brief 26B4, ARP4 cycle count capture register */
#define DOM3_QOS11_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F326B4u)

/** \brief 26B8, ARP4 current counter value register */
#define DOM3_QOS11_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F326B8u)

/** \brief 26C0, ARP5 TAG-ID assignment register A */
#define DOM3_QOS11_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F326C0u)

/** \brief 26C4, ARP5 TAG-ID assignment register B */
#define DOM3_QOS11_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F326C4u)

/** \brief 26C8, ARP5 VM assignment register */
#define DOM3_QOS11_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F326C8u)

/** \brief 26CC, ARP5 threshold register */
#define DOM3_QOS11_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F326CCu)

/** \brief 26D0, ARP5 control register */
#define DOM3_QOS11_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F326D0u)

/** \brief 26D4, ARP5 cycle count capture register */
#define DOM3_QOS11_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F326D4u)

/** \brief 26D8, ARP5 current counter value register */
#define DOM3_QOS11_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F326D8u)

/** \brief 26E0, ARP6 TAG-ID assignment register A */
#define DOM3_QOS11_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F326E0u)

/** \brief 26E4, ARP6 TAG-ID assignment register B */
#define DOM3_QOS11_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F326E4u)

/** \brief 26E8, ARP6 VM assignment register */
#define DOM3_QOS11_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F326E8u)

/** \brief 26EC, ARP6 threshold register */
#define DOM3_QOS11_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F326ECu)

/** \brief 26F0, ARP6 control register */
#define DOM3_QOS11_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F326F0u)

/** \brief 26F4, ARP6 cycle count capture register */
#define DOM3_QOS11_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F326F4u)

/** \brief 26F8, ARP6 current counter value register */
#define DOM3_QOS11_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F326F8u)

/** \brief 2700, ARP7 TAG-ID assignment register A */
#define DOM3_QOS11_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F32700u)

/** \brief 2704, ARP7 TAG-ID assignment register B */
#define DOM3_QOS11_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F32704u)

/** \brief 2708, ARP7 VM assignment register */
#define DOM3_QOS11_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F32708u)

/** \brief 270C, ARP7 threshold register */
#define DOM3_QOS11_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F3270Cu)

/** \brief 2710, ARP7 control register */
#define DOM3_QOS11_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F32710u)

/** \brief 2714, ARP7 cycle count capture register */
#define DOM3_QOS11_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F32714u)

/** \brief 2718, ARP7 current counter value register */
#define DOM3_QOS11_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F32718u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom6
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM6_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F60000u)
/** Alias (User Manual Name) for DOM6_SCICTRL0_PECON */
#define DOM6_PECON0 (DOM6_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM6_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F60008u)
/** Alias (User Manual Name) for DOM6_SCICTRL0_PRIORITY */
#define DOM6_PRIORITY0 (DOM6_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM6_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F60010u)
/** Alias (User Manual Name) for DOM6_SCICTRL0_ERRADDR */
#define DOM6_ERRADDR0 (DOM6_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM6_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F60018u)
/** Alias (User Manual Name) for DOM6_SCICTRL0_ERR */
#define DOM6_ERR0 (DOM6_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM6_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F60020u)
/** Alias (User Manual Name) for DOM6_SCICTRL1_PECON */
#define DOM6_PECON1 (DOM6_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM6_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F60028u)
/** Alias (User Manual Name) for DOM6_SCICTRL1_PRIORITY */
#define DOM6_PRIORITY1 (DOM6_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM6_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F60030u)
/** Alias (User Manual Name) for DOM6_SCICTRL1_ERRADDR */
#define DOM6_ERRADDR1 (DOM6_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM6_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F60038u)
/** Alias (User Manual Name) for DOM6_SCICTRL1_ERR */
#define DOM6_ERR1 (DOM6_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM6_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F60040u)
/** Alias (User Manual Name) for DOM6_SCICTRL2_PECON */
#define DOM6_PECON2 (DOM6_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM6_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F60048u)
/** Alias (User Manual Name) for DOM6_SCICTRL2_PRIORITY */
#define DOM6_PRIORITY2 (DOM6_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM6_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F60050u)
/** Alias (User Manual Name) for DOM6_SCICTRL2_ERRADDR */
#define DOM6_ERRADDR2 (DOM6_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM6_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F60058u)
/** Alias (User Manual Name) for DOM6_SCICTRL2_ERR */
#define DOM6_ERR2 (DOM6_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM6_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F60060u)
/** Alias (User Manual Name) for DOM6_SCICTRL3_PECON */
#define DOM6_PECON3 (DOM6_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM6_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F60068u)
/** Alias (User Manual Name) for DOM6_SCICTRL3_PRIORITY */
#define DOM6_PRIORITY3 (DOM6_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM6_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F60070u)
/** Alias (User Manual Name) for DOM6_SCICTRL3_ERRADDR */
#define DOM6_ERRADDR3 (DOM6_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM6_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F60078u)
/** Alias (User Manual Name) for DOM6_SCICTRL3_ERR */
#define DOM6_ERR3 (DOM6_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM6_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F60080u)
/** Alias (User Manual Name) for DOM6_SCICTRL4_PECON */
#define DOM6_PECON4 (DOM6_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM6_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F60088u)
/** Alias (User Manual Name) for DOM6_SCICTRL4_PRIORITY */
#define DOM6_PRIORITY4 (DOM6_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM6_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F60090u)
/** Alias (User Manual Name) for DOM6_SCICTRL4_ERRADDR */
#define DOM6_ERRADDR4 (DOM6_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM6_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F60098u)
/** Alias (User Manual Name) for DOM6_SCICTRL4_ERR */
#define DOM6_ERR4 (DOM6_SCICTRL4_ERR)

/** \brief 408, Identification register */
#define DOM6_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F60408u)

/** \brief 410, Protocol error status register */
#define DOM6_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F60410u)

/** \brief 418, Transaction ID status register */
#define DOM6_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F60418u)

/** \brief 420, Transaction ID enable register */
#define DOM6_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F60420u)

/** \brief 430, Bridge control register */
#define DOM6_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F60430u)

/** \brief 4C0, Write access enable register A */
#define DOM6_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F604C0u)

/** \brief 4C4, Write access enable register B */
#define DOM6_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F604C4u)

/** \brief 4C8, Read access enable register A */
#define DOM6_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F604C8u)

/** \brief 4CC, Read access enable register B */
#define DOM6_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F604CCu)

/** \brief 4D0, VM access enable register */
#define DOM6_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F604D0u)

/** \brief 4D4, PRS access enable register */
#define DOM6_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F604D4u)

/** \brief 4E0, Resource protection register */
#define DOM6_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F604E0u)

/** \brief 1000, QoS time interval control register */
#define DOM6_QOS_ICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICTRL*)0xF8F61000u)

/** \brief 1004, QoS time interval counter */
#define DOM6_QOS_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICNT*)0xF8F61004u)

/** \brief 1220, ARP0 TAG-ID assignment register A */
#define DOM6_QOS1_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61220u)

/** \brief 1224, ARP0 TAG-ID assignment register B */
#define DOM6_QOS1_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61224u)

/** \brief 1228, ARP0 VM assignment register */
#define DOM6_QOS1_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61228u)

/** \brief 122C, ARP0 threshold register */
#define DOM6_QOS1_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6122Cu)

/** \brief 1230, ARP0 control register */
#define DOM6_QOS1_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61230u)

/** \brief 1234, ARP0 cycle count capture register */
#define DOM6_QOS1_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61234u)

/** \brief 1238, ARP0 current counter value register */
#define DOM6_QOS1_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61238u)

/** \brief 1240, ARP1 TAG-ID assignment register A */
#define DOM6_QOS1_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61240u)

/** \brief 1244, ARP1 TAG-ID assignment register B */
#define DOM6_QOS1_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61244u)

/** \brief 1248, ARP1 VM assignment register */
#define DOM6_QOS1_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61248u)

/** \brief 124C, ARP1 threshold register */
#define DOM6_QOS1_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6124Cu)

/** \brief 1250, ARP1 control register */
#define DOM6_QOS1_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61250u)

/** \brief 1254, ARP1 cycle count capture register */
#define DOM6_QOS1_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61254u)

/** \brief 1258, ARP1 current counter value register */
#define DOM6_QOS1_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61258u)

/** \brief 1260, ARP2 TAG-ID assignment register A */
#define DOM6_QOS1_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61260u)

/** \brief 1264, ARP2 TAG-ID assignment register B */
#define DOM6_QOS1_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61264u)

/** \brief 1268, ARP2 VM assignment register */
#define DOM6_QOS1_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61268u)

/** \brief 126C, ARP2 threshold register */
#define DOM6_QOS1_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6126Cu)

/** \brief 1270, ARP2 control register */
#define DOM6_QOS1_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61270u)

/** \brief 1274, ARP2 cycle count capture register */
#define DOM6_QOS1_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61274u)

/** \brief 1278, ARP2 current counter value register */
#define DOM6_QOS1_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61278u)

/** \brief 1280, ARP3 TAG-ID assignment register A */
#define DOM6_QOS1_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61280u)

/** \brief 1284, ARP3 TAG-ID assignment register B */
#define DOM6_QOS1_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61284u)

/** \brief 1288, ARP3 VM assignment register */
#define DOM6_QOS1_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61288u)

/** \brief 128C, ARP3 threshold register */
#define DOM6_QOS1_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6128Cu)

/** \brief 1290, ARP3 control register */
#define DOM6_QOS1_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61290u)

/** \brief 1294, ARP3 cycle count capture register */
#define DOM6_QOS1_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61294u)

/** \brief 1298, ARP3 current counter value register */
#define DOM6_QOS1_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61298u)

/** \brief 12A0, ARP4 TAG-ID assignment register A */
#define DOM6_QOS1_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F612A0u)

/** \brief 12A4, ARP4 TAG-ID assignment register B */
#define DOM6_QOS1_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F612A4u)

/** \brief 12A8, ARP4 VM assignment register */
#define DOM6_QOS1_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F612A8u)

/** \brief 12AC, ARP4 threshold register */
#define DOM6_QOS1_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F612ACu)

/** \brief 12B0, ARP4 control register */
#define DOM6_QOS1_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F612B0u)

/** \brief 12B4, ARP4 cycle count capture register */
#define DOM6_QOS1_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F612B4u)

/** \brief 12B8, ARP4 current counter value register */
#define DOM6_QOS1_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F612B8u)

/** \brief 12C0, ARP5 TAG-ID assignment register A */
#define DOM6_QOS1_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F612C0u)

/** \brief 12C4, ARP5 TAG-ID assignment register B */
#define DOM6_QOS1_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F612C4u)

/** \brief 12C8, ARP5 VM assignment register */
#define DOM6_QOS1_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F612C8u)

/** \brief 12CC, ARP5 threshold register */
#define DOM6_QOS1_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F612CCu)

/** \brief 12D0, ARP5 control register */
#define DOM6_QOS1_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F612D0u)

/** \brief 12D4, ARP5 cycle count capture register */
#define DOM6_QOS1_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F612D4u)

/** \brief 12D8, ARP5 current counter value register */
#define DOM6_QOS1_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F612D8u)

/** \brief 12E0, ARP6 TAG-ID assignment register A */
#define DOM6_QOS1_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F612E0u)

/** \brief 12E4, ARP6 TAG-ID assignment register B */
#define DOM6_QOS1_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F612E4u)

/** \brief 12E8, ARP6 VM assignment register */
#define DOM6_QOS1_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F612E8u)

/** \brief 12EC, ARP6 threshold register */
#define DOM6_QOS1_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F612ECu)

/** \brief 12F0, ARP6 control register */
#define DOM6_QOS1_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F612F0u)

/** \brief 12F4, ARP6 cycle count capture register */
#define DOM6_QOS1_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F612F4u)

/** \brief 12F8, ARP6 current counter value register */
#define DOM6_QOS1_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F612F8u)

/** \brief 1300, ARP7 TAG-ID assignment register A */
#define DOM6_QOS1_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61300u)

/** \brief 1304, ARP7 TAG-ID assignment register B */
#define DOM6_QOS1_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61304u)

/** \brief 1308, ARP7 VM assignment register */
#define DOM6_QOS1_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61308u)

/** \brief 130C, ARP7 threshold register */
#define DOM6_QOS1_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6130Cu)

/** \brief 1310, ARP7 control register */
#define DOM6_QOS1_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61310u)

/** \brief 1314, ARP7 cycle count capture register */
#define DOM6_QOS1_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61314u)

/** \brief 1318, ARP7 current counter value register */
#define DOM6_QOS1_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61318u)

/** \brief 1420, ARP0 TAG-ID assignment register A */
#define DOM6_QOS2_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61420u)

/** \brief 1424, ARP0 TAG-ID assignment register B */
#define DOM6_QOS2_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61424u)

/** \brief 1428, ARP0 VM assignment register */
#define DOM6_QOS2_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61428u)

/** \brief 142C, ARP0 threshold register */
#define DOM6_QOS2_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6142Cu)

/** \brief 1430, ARP0 control register */
#define DOM6_QOS2_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61430u)

/** \brief 1434, ARP0 cycle count capture register */
#define DOM6_QOS2_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61434u)

/** \brief 1438, ARP0 current counter value register */
#define DOM6_QOS2_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61438u)

/** \brief 1440, ARP1 TAG-ID assignment register A */
#define DOM6_QOS2_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61440u)

/** \brief 1444, ARP1 TAG-ID assignment register B */
#define DOM6_QOS2_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61444u)

/** \brief 1448, ARP1 VM assignment register */
#define DOM6_QOS2_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61448u)

/** \brief 144C, ARP1 threshold register */
#define DOM6_QOS2_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6144Cu)

/** \brief 1450, ARP1 control register */
#define DOM6_QOS2_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61450u)

/** \brief 1454, ARP1 cycle count capture register */
#define DOM6_QOS2_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61454u)

/** \brief 1458, ARP1 current counter value register */
#define DOM6_QOS2_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61458u)

/** \brief 1460, ARP2 TAG-ID assignment register A */
#define DOM6_QOS2_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61460u)

/** \brief 1464, ARP2 TAG-ID assignment register B */
#define DOM6_QOS2_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61464u)

/** \brief 1468, ARP2 VM assignment register */
#define DOM6_QOS2_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61468u)

/** \brief 146C, ARP2 threshold register */
#define DOM6_QOS2_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6146Cu)

/** \brief 1470, ARP2 control register */
#define DOM6_QOS2_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61470u)

/** \brief 1474, ARP2 cycle count capture register */
#define DOM6_QOS2_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61474u)

/** \brief 1478, ARP2 current counter value register */
#define DOM6_QOS2_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61478u)

/** \brief 1480, ARP3 TAG-ID assignment register A */
#define DOM6_QOS2_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61480u)

/** \brief 1484, ARP3 TAG-ID assignment register B */
#define DOM6_QOS2_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61484u)

/** \brief 1488, ARP3 VM assignment register */
#define DOM6_QOS2_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61488u)

/** \brief 148C, ARP3 threshold register */
#define DOM6_QOS2_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6148Cu)

/** \brief 1490, ARP3 control register */
#define DOM6_QOS2_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61490u)

/** \brief 1494, ARP3 cycle count capture register */
#define DOM6_QOS2_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61494u)

/** \brief 1498, ARP3 current counter value register */
#define DOM6_QOS2_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61498u)

/** \brief 14A0, ARP4 TAG-ID assignment register A */
#define DOM6_QOS2_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F614A0u)

/** \brief 14A4, ARP4 TAG-ID assignment register B */
#define DOM6_QOS2_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F614A4u)

/** \brief 14A8, ARP4 VM assignment register */
#define DOM6_QOS2_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F614A8u)

/** \brief 14AC, ARP4 threshold register */
#define DOM6_QOS2_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F614ACu)

/** \brief 14B0, ARP4 control register */
#define DOM6_QOS2_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F614B0u)

/** \brief 14B4, ARP4 cycle count capture register */
#define DOM6_QOS2_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F614B4u)

/** \brief 14B8, ARP4 current counter value register */
#define DOM6_QOS2_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F614B8u)

/** \brief 14C0, ARP5 TAG-ID assignment register A */
#define DOM6_QOS2_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F614C0u)

/** \brief 14C4, ARP5 TAG-ID assignment register B */
#define DOM6_QOS2_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F614C4u)

/** \brief 14C8, ARP5 VM assignment register */
#define DOM6_QOS2_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F614C8u)

/** \brief 14CC, ARP5 threshold register */
#define DOM6_QOS2_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F614CCu)

/** \brief 14D0, ARP5 control register */
#define DOM6_QOS2_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F614D0u)

/** \brief 14D4, ARP5 cycle count capture register */
#define DOM6_QOS2_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F614D4u)

/** \brief 14D8, ARP5 current counter value register */
#define DOM6_QOS2_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F614D8u)

/** \brief 14E0, ARP6 TAG-ID assignment register A */
#define DOM6_QOS2_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F614E0u)

/** \brief 14E4, ARP6 TAG-ID assignment register B */
#define DOM6_QOS2_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F614E4u)

/** \brief 14E8, ARP6 VM assignment register */
#define DOM6_QOS2_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F614E8u)

/** \brief 14EC, ARP6 threshold register */
#define DOM6_QOS2_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F614ECu)

/** \brief 14F0, ARP6 control register */
#define DOM6_QOS2_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F614F0u)

/** \brief 14F4, ARP6 cycle count capture register */
#define DOM6_QOS2_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F614F4u)

/** \brief 14F8, ARP6 current counter value register */
#define DOM6_QOS2_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F614F8u)

/** \brief 1500, ARP7 TAG-ID assignment register A */
#define DOM6_QOS2_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61500u)

/** \brief 1504, ARP7 TAG-ID assignment register B */
#define DOM6_QOS2_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61504u)

/** \brief 1508, ARP7 VM assignment register */
#define DOM6_QOS2_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61508u)

/** \brief 150C, ARP7 threshold register */
#define DOM6_QOS2_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6150Cu)

/** \brief 1510, ARP7 control register */
#define DOM6_QOS2_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61510u)

/** \brief 1514, ARP7 cycle count capture register */
#define DOM6_QOS2_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61514u)

/** \brief 1518, ARP7 current counter value register */
#define DOM6_QOS2_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61518u)

/** \brief 1620, ARP0 TAG-ID assignment register A */
#define DOM6_QOS3_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61620u)

/** \brief 1624, ARP0 TAG-ID assignment register B */
#define DOM6_QOS3_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61624u)

/** \brief 1628, ARP0 VM assignment register */
#define DOM6_QOS3_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61628u)

/** \brief 162C, ARP0 threshold register */
#define DOM6_QOS3_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6162Cu)

/** \brief 1630, ARP0 control register */
#define DOM6_QOS3_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61630u)

/** \brief 1634, ARP0 cycle count capture register */
#define DOM6_QOS3_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61634u)

/** \brief 1638, ARP0 current counter value register */
#define DOM6_QOS3_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61638u)

/** \brief 1640, ARP1 TAG-ID assignment register A */
#define DOM6_QOS3_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61640u)

/** \brief 1644, ARP1 TAG-ID assignment register B */
#define DOM6_QOS3_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61644u)

/** \brief 1648, ARP1 VM assignment register */
#define DOM6_QOS3_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61648u)

/** \brief 164C, ARP1 threshold register */
#define DOM6_QOS3_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6164Cu)

/** \brief 1650, ARP1 control register */
#define DOM6_QOS3_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61650u)

/** \brief 1654, ARP1 cycle count capture register */
#define DOM6_QOS3_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61654u)

/** \brief 1658, ARP1 current counter value register */
#define DOM6_QOS3_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61658u)

/** \brief 1660, ARP2 TAG-ID assignment register A */
#define DOM6_QOS3_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61660u)

/** \brief 1664, ARP2 TAG-ID assignment register B */
#define DOM6_QOS3_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61664u)

/** \brief 1668, ARP2 VM assignment register */
#define DOM6_QOS3_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61668u)

/** \brief 166C, ARP2 threshold register */
#define DOM6_QOS3_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6166Cu)

/** \brief 1670, ARP2 control register */
#define DOM6_QOS3_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61670u)

/** \brief 1674, ARP2 cycle count capture register */
#define DOM6_QOS3_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61674u)

/** \brief 1678, ARP2 current counter value register */
#define DOM6_QOS3_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61678u)

/** \brief 1680, ARP3 TAG-ID assignment register A */
#define DOM6_QOS3_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61680u)

/** \brief 1684, ARP3 TAG-ID assignment register B */
#define DOM6_QOS3_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61684u)

/** \brief 1688, ARP3 VM assignment register */
#define DOM6_QOS3_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61688u)

/** \brief 168C, ARP3 threshold register */
#define DOM6_QOS3_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6168Cu)

/** \brief 1690, ARP3 control register */
#define DOM6_QOS3_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61690u)

/** \brief 1694, ARP3 cycle count capture register */
#define DOM6_QOS3_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61694u)

/** \brief 1698, ARP3 current counter value register */
#define DOM6_QOS3_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61698u)

/** \brief 16A0, ARP4 TAG-ID assignment register A */
#define DOM6_QOS3_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F616A0u)

/** \brief 16A4, ARP4 TAG-ID assignment register B */
#define DOM6_QOS3_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F616A4u)

/** \brief 16A8, ARP4 VM assignment register */
#define DOM6_QOS3_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F616A8u)

/** \brief 16AC, ARP4 threshold register */
#define DOM6_QOS3_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F616ACu)

/** \brief 16B0, ARP4 control register */
#define DOM6_QOS3_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F616B0u)

/** \brief 16B4, ARP4 cycle count capture register */
#define DOM6_QOS3_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F616B4u)

/** \brief 16B8, ARP4 current counter value register */
#define DOM6_QOS3_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F616B8u)

/** \brief 16C0, ARP5 TAG-ID assignment register A */
#define DOM6_QOS3_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F616C0u)

/** \brief 16C4, ARP5 TAG-ID assignment register B */
#define DOM6_QOS3_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F616C4u)

/** \brief 16C8, ARP5 VM assignment register */
#define DOM6_QOS3_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F616C8u)

/** \brief 16CC, ARP5 threshold register */
#define DOM6_QOS3_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F616CCu)

/** \brief 16D0, ARP5 control register */
#define DOM6_QOS3_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F616D0u)

/** \brief 16D4, ARP5 cycle count capture register */
#define DOM6_QOS3_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F616D4u)

/** \brief 16D8, ARP5 current counter value register */
#define DOM6_QOS3_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F616D8u)

/** \brief 16E0, ARP6 TAG-ID assignment register A */
#define DOM6_QOS3_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F616E0u)

/** \brief 16E4, ARP6 TAG-ID assignment register B */
#define DOM6_QOS3_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F616E4u)

/** \brief 16E8, ARP6 VM assignment register */
#define DOM6_QOS3_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F616E8u)

/** \brief 16EC, ARP6 threshold register */
#define DOM6_QOS3_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F616ECu)

/** \brief 16F0, ARP6 control register */
#define DOM6_QOS3_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F616F0u)

/** \brief 16F4, ARP6 cycle count capture register */
#define DOM6_QOS3_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F616F4u)

/** \brief 16F8, ARP6 current counter value register */
#define DOM6_QOS3_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F616F8u)

/** \brief 1700, ARP7 TAG-ID assignment register A */
#define DOM6_QOS3_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F61700u)

/** \brief 1704, ARP7 TAG-ID assignment register B */
#define DOM6_QOS3_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F61704u)

/** \brief 1708, ARP7 VM assignment register */
#define DOM6_QOS3_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F61708u)

/** \brief 170C, ARP7 threshold register */
#define DOM6_QOS3_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F6170Cu)

/** \brief 1710, ARP7 control register */
#define DOM6_QOS3_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F61710u)

/** \brief 1714, ARP7 cycle count capture register */
#define DOM6_QOS3_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F61714u)

/** \brief 1718, ARP7 current counter value register */
#define DOM6_QOS3_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F61718u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom7
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM7_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F70000u)
/** Alias (User Manual Name) for DOM7_SCICTRL0_PECON */
#define DOM7_PECON0 (DOM7_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM7_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F70008u)
/** Alias (User Manual Name) for DOM7_SCICTRL0_PRIORITY */
#define DOM7_PRIORITY0 (DOM7_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM7_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F70010u)
/** Alias (User Manual Name) for DOM7_SCICTRL0_ERRADDR */
#define DOM7_ERRADDR0 (DOM7_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM7_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F70018u)
/** Alias (User Manual Name) for DOM7_SCICTRL0_ERR */
#define DOM7_ERR0 (DOM7_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM7_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F70020u)
/** Alias (User Manual Name) for DOM7_SCICTRL1_PECON */
#define DOM7_PECON1 (DOM7_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM7_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F70028u)
/** Alias (User Manual Name) for DOM7_SCICTRL1_PRIORITY */
#define DOM7_PRIORITY1 (DOM7_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM7_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F70030u)
/** Alias (User Manual Name) for DOM7_SCICTRL1_ERRADDR */
#define DOM7_ERRADDR1 (DOM7_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM7_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F70038u)
/** Alias (User Manual Name) for DOM7_SCICTRL1_ERR */
#define DOM7_ERR1 (DOM7_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM7_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F70040u)
/** Alias (User Manual Name) for DOM7_SCICTRL2_PECON */
#define DOM7_PECON2 (DOM7_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM7_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F70048u)
/** Alias (User Manual Name) for DOM7_SCICTRL2_PRIORITY */
#define DOM7_PRIORITY2 (DOM7_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM7_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F70050u)
/** Alias (User Manual Name) for DOM7_SCICTRL2_ERRADDR */
#define DOM7_ERRADDR2 (DOM7_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM7_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F70058u)
/** Alias (User Manual Name) for DOM7_SCICTRL2_ERR */
#define DOM7_ERR2 (DOM7_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM7_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F70060u)
/** Alias (User Manual Name) for DOM7_SCICTRL3_PECON */
#define DOM7_PECON3 (DOM7_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM7_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F70068u)
/** Alias (User Manual Name) for DOM7_SCICTRL3_PRIORITY */
#define DOM7_PRIORITY3 (DOM7_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM7_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F70070u)
/** Alias (User Manual Name) for DOM7_SCICTRL3_ERRADDR */
#define DOM7_ERRADDR3 (DOM7_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM7_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F70078u)
/** Alias (User Manual Name) for DOM7_SCICTRL3_ERR */
#define DOM7_ERR3 (DOM7_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM7_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F70080u)
/** Alias (User Manual Name) for DOM7_SCICTRL4_PECON */
#define DOM7_PECON4 (DOM7_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM7_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F70088u)
/** Alias (User Manual Name) for DOM7_SCICTRL4_PRIORITY */
#define DOM7_PRIORITY4 (DOM7_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM7_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F70090u)
/** Alias (User Manual Name) for DOM7_SCICTRL4_ERRADDR */
#define DOM7_ERRADDR4 (DOM7_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM7_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F70098u)
/** Alias (User Manual Name) for DOM7_SCICTRL4_ERR */
#define DOM7_ERR4 (DOM7_SCICTRL4_ERR)

/** \brief A0, Protocol error control register 5 */
#define DOM7_SCICTRL5_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F700A0u)
/** Alias (User Manual Name) for DOM7_SCICTRL5_PECON */
#define DOM7_PECON5 (DOM7_SCICTRL5_PECON)

/** \brief A8, SCI5 arbiter priority register */
#define DOM7_SCICTRL5_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F700A8u)
/** Alias (User Manual Name) for DOM7_SCICTRL5_PRIORITY */
#define DOM7_PRIORITY5 (DOM7_SCICTRL5_PRIORITY)

/** \brief B0, SCI5 error address capture register */
#define DOM7_SCICTRL5_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F700B0u)
/** Alias (User Manual Name) for DOM7_SCICTRL5_ERRADDR */
#define DOM7_ERRADDR5 (DOM7_SCICTRL5_ERRADDR)

/** \brief B8, SCI5 error capture register */
#define DOM7_SCICTRL5_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F700B8u)
/** Alias (User Manual Name) for DOM7_SCICTRL5_ERR */
#define DOM7_ERR5 (DOM7_SCICTRL5_ERR)

/** \brief C0, Protocol error control register 6 */
#define DOM7_SCICTRL6_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F700C0u)
/** Alias (User Manual Name) for DOM7_SCICTRL6_PECON */
#define DOM7_PECON6 (DOM7_SCICTRL6_PECON)

/** \brief C8, SCI6 arbiter priority register */
#define DOM7_SCICTRL6_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F700C8u)
/** Alias (User Manual Name) for DOM7_SCICTRL6_PRIORITY */
#define DOM7_PRIORITY6 (DOM7_SCICTRL6_PRIORITY)

/** \brief D0, SCI6 error address capture register */
#define DOM7_SCICTRL6_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F700D0u)
/** Alias (User Manual Name) for DOM7_SCICTRL6_ERRADDR */
#define DOM7_ERRADDR6 (DOM7_SCICTRL6_ERRADDR)

/** \brief D8, SCI6 error capture register */
#define DOM7_SCICTRL6_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F700D8u)
/** Alias (User Manual Name) for DOM7_SCICTRL6_ERR */
#define DOM7_ERR6 (DOM7_SCICTRL6_ERR)

/** \brief 408, Identification register */
#define DOM7_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F70408u)

/** \brief 410, Protocol error status register */
#define DOM7_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F70410u)

/** \brief 418, Transaction ID status register */
#define DOM7_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F70418u)

/** \brief 420, Transaction ID enable register */
#define DOM7_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F70420u)

/** \brief 430, Bridge control register */
#define DOM7_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F70430u)

/** \brief 4C0, Write access enable register A */
#define DOM7_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F704C0u)

/** \brief 4C4, Write access enable register B */
#define DOM7_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F704C4u)

/** \brief 4C8, Read access enable register A */
#define DOM7_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F704C8u)

/** \brief 4CC, Read access enable register B */
#define DOM7_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F704CCu)

/** \brief 4D0, VM access enable register */
#define DOM7_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F704D0u)

/** \brief 4D4, PRS access enable register */
#define DOM7_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F704D4u)

/** \brief 4E0, Resource protection register */
#define DOM7_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F704E0u)

/** \brief 1000, QoS time interval control register */
#define DOM7_QOS_ICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICTRL*)0xF8F71000u)

/** \brief 1004, QoS time interval counter */
#define DOM7_QOS_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICNT*)0xF8F71004u)

/** \brief 1220, ARP0 TAG-ID assignment register A */
#define DOM7_QOS1_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71220u)

/** \brief 1224, ARP0 TAG-ID assignment register B */
#define DOM7_QOS1_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71224u)

/** \brief 1228, ARP0 VM assignment register */
#define DOM7_QOS1_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71228u)

/** \brief 122C, ARP0 threshold register */
#define DOM7_QOS1_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7122Cu)

/** \brief 1230, ARP0 control register */
#define DOM7_QOS1_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71230u)

/** \brief 1234, ARP0 cycle count capture register */
#define DOM7_QOS1_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71234u)

/** \brief 1238, ARP0 current counter value register */
#define DOM7_QOS1_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71238u)

/** \brief 1240, ARP1 TAG-ID assignment register A */
#define DOM7_QOS1_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71240u)

/** \brief 1244, ARP1 TAG-ID assignment register B */
#define DOM7_QOS1_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71244u)

/** \brief 1248, ARP1 VM assignment register */
#define DOM7_QOS1_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71248u)

/** \brief 124C, ARP1 threshold register */
#define DOM7_QOS1_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7124Cu)

/** \brief 1250, ARP1 control register */
#define DOM7_QOS1_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71250u)

/** \brief 1254, ARP1 cycle count capture register */
#define DOM7_QOS1_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71254u)

/** \brief 1258, ARP1 current counter value register */
#define DOM7_QOS1_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71258u)

/** \brief 1260, ARP2 TAG-ID assignment register A */
#define DOM7_QOS1_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71260u)

/** \brief 1264, ARP2 TAG-ID assignment register B */
#define DOM7_QOS1_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71264u)

/** \brief 1268, ARP2 VM assignment register */
#define DOM7_QOS1_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71268u)

/** \brief 126C, ARP2 threshold register */
#define DOM7_QOS1_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7126Cu)

/** \brief 1270, ARP2 control register */
#define DOM7_QOS1_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71270u)

/** \brief 1274, ARP2 cycle count capture register */
#define DOM7_QOS1_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71274u)

/** \brief 1278, ARP2 current counter value register */
#define DOM7_QOS1_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71278u)

/** \brief 1280, ARP3 TAG-ID assignment register A */
#define DOM7_QOS1_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71280u)

/** \brief 1284, ARP3 TAG-ID assignment register B */
#define DOM7_QOS1_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71284u)

/** \brief 1288, ARP3 VM assignment register */
#define DOM7_QOS1_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71288u)

/** \brief 128C, ARP3 threshold register */
#define DOM7_QOS1_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7128Cu)

/** \brief 1290, ARP3 control register */
#define DOM7_QOS1_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71290u)

/** \brief 1294, ARP3 cycle count capture register */
#define DOM7_QOS1_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71294u)

/** \brief 1298, ARP3 current counter value register */
#define DOM7_QOS1_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71298u)

/** \brief 12A0, ARP4 TAG-ID assignment register A */
#define DOM7_QOS1_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F712A0u)

/** \brief 12A4, ARP4 TAG-ID assignment register B */
#define DOM7_QOS1_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F712A4u)

/** \brief 12A8, ARP4 VM assignment register */
#define DOM7_QOS1_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F712A8u)

/** \brief 12AC, ARP4 threshold register */
#define DOM7_QOS1_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F712ACu)

/** \brief 12B0, ARP4 control register */
#define DOM7_QOS1_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F712B0u)

/** \brief 12B4, ARP4 cycle count capture register */
#define DOM7_QOS1_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F712B4u)

/** \brief 12B8, ARP4 current counter value register */
#define DOM7_QOS1_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F712B8u)

/** \brief 12C0, ARP5 TAG-ID assignment register A */
#define DOM7_QOS1_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F712C0u)

/** \brief 12C4, ARP5 TAG-ID assignment register B */
#define DOM7_QOS1_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F712C4u)

/** \brief 12C8, ARP5 VM assignment register */
#define DOM7_QOS1_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F712C8u)

/** \brief 12CC, ARP5 threshold register */
#define DOM7_QOS1_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F712CCu)

/** \brief 12D0, ARP5 control register */
#define DOM7_QOS1_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F712D0u)

/** \brief 12D4, ARP5 cycle count capture register */
#define DOM7_QOS1_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F712D4u)

/** \brief 12D8, ARP5 current counter value register */
#define DOM7_QOS1_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F712D8u)

/** \brief 12E0, ARP6 TAG-ID assignment register A */
#define DOM7_QOS1_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F712E0u)

/** \brief 12E4, ARP6 TAG-ID assignment register B */
#define DOM7_QOS1_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F712E4u)

/** \brief 12E8, ARP6 VM assignment register */
#define DOM7_QOS1_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F712E8u)

/** \brief 12EC, ARP6 threshold register */
#define DOM7_QOS1_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F712ECu)

/** \brief 12F0, ARP6 control register */
#define DOM7_QOS1_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F712F0u)

/** \brief 12F4, ARP6 cycle count capture register */
#define DOM7_QOS1_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F712F4u)

/** \brief 12F8, ARP6 current counter value register */
#define DOM7_QOS1_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F712F8u)

/** \brief 1300, ARP7 TAG-ID assignment register A */
#define DOM7_QOS1_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71300u)

/** \brief 1304, ARP7 TAG-ID assignment register B */
#define DOM7_QOS1_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71304u)

/** \brief 1308, ARP7 VM assignment register */
#define DOM7_QOS1_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71308u)

/** \brief 130C, ARP7 threshold register */
#define DOM7_QOS1_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7130Cu)

/** \brief 1310, ARP7 control register */
#define DOM7_QOS1_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71310u)

/** \brief 1314, ARP7 cycle count capture register */
#define DOM7_QOS1_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71314u)

/** \brief 1318, ARP7 current counter value register */
#define DOM7_QOS1_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71318u)

/** \brief 1420, ARP0 TAG-ID assignment register A */
#define DOM7_QOS2_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71420u)

/** \brief 1424, ARP0 TAG-ID assignment register B */
#define DOM7_QOS2_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71424u)

/** \brief 1428, ARP0 VM assignment register */
#define DOM7_QOS2_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71428u)

/** \brief 142C, ARP0 threshold register */
#define DOM7_QOS2_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7142Cu)

/** \brief 1430, ARP0 control register */
#define DOM7_QOS2_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71430u)

/** \brief 1434, ARP0 cycle count capture register */
#define DOM7_QOS2_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71434u)

/** \brief 1438, ARP0 current counter value register */
#define DOM7_QOS2_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71438u)

/** \brief 1440, ARP1 TAG-ID assignment register A */
#define DOM7_QOS2_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71440u)

/** \brief 1444, ARP1 TAG-ID assignment register B */
#define DOM7_QOS2_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71444u)

/** \brief 1448, ARP1 VM assignment register */
#define DOM7_QOS2_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71448u)

/** \brief 144C, ARP1 threshold register */
#define DOM7_QOS2_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7144Cu)

/** \brief 1450, ARP1 control register */
#define DOM7_QOS2_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71450u)

/** \brief 1454, ARP1 cycle count capture register */
#define DOM7_QOS2_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71454u)

/** \brief 1458, ARP1 current counter value register */
#define DOM7_QOS2_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71458u)

/** \brief 1460, ARP2 TAG-ID assignment register A */
#define DOM7_QOS2_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71460u)

/** \brief 1464, ARP2 TAG-ID assignment register B */
#define DOM7_QOS2_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71464u)

/** \brief 1468, ARP2 VM assignment register */
#define DOM7_QOS2_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71468u)

/** \brief 146C, ARP2 threshold register */
#define DOM7_QOS2_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7146Cu)

/** \brief 1470, ARP2 control register */
#define DOM7_QOS2_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71470u)

/** \brief 1474, ARP2 cycle count capture register */
#define DOM7_QOS2_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71474u)

/** \brief 1478, ARP2 current counter value register */
#define DOM7_QOS2_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71478u)

/** \brief 1480, ARP3 TAG-ID assignment register A */
#define DOM7_QOS2_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71480u)

/** \brief 1484, ARP3 TAG-ID assignment register B */
#define DOM7_QOS2_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71484u)

/** \brief 1488, ARP3 VM assignment register */
#define DOM7_QOS2_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71488u)

/** \brief 148C, ARP3 threshold register */
#define DOM7_QOS2_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7148Cu)

/** \brief 1490, ARP3 control register */
#define DOM7_QOS2_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71490u)

/** \brief 1494, ARP3 cycle count capture register */
#define DOM7_QOS2_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71494u)

/** \brief 1498, ARP3 current counter value register */
#define DOM7_QOS2_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71498u)

/** \brief 14A0, ARP4 TAG-ID assignment register A */
#define DOM7_QOS2_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F714A0u)

/** \brief 14A4, ARP4 TAG-ID assignment register B */
#define DOM7_QOS2_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F714A4u)

/** \brief 14A8, ARP4 VM assignment register */
#define DOM7_QOS2_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F714A8u)

/** \brief 14AC, ARP4 threshold register */
#define DOM7_QOS2_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F714ACu)

/** \brief 14B0, ARP4 control register */
#define DOM7_QOS2_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F714B0u)

/** \brief 14B4, ARP4 cycle count capture register */
#define DOM7_QOS2_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F714B4u)

/** \brief 14B8, ARP4 current counter value register */
#define DOM7_QOS2_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F714B8u)

/** \brief 14C0, ARP5 TAG-ID assignment register A */
#define DOM7_QOS2_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F714C0u)

/** \brief 14C4, ARP5 TAG-ID assignment register B */
#define DOM7_QOS2_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F714C4u)

/** \brief 14C8, ARP5 VM assignment register */
#define DOM7_QOS2_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F714C8u)

/** \brief 14CC, ARP5 threshold register */
#define DOM7_QOS2_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F714CCu)

/** \brief 14D0, ARP5 control register */
#define DOM7_QOS2_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F714D0u)

/** \brief 14D4, ARP5 cycle count capture register */
#define DOM7_QOS2_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F714D4u)

/** \brief 14D8, ARP5 current counter value register */
#define DOM7_QOS2_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F714D8u)

/** \brief 14E0, ARP6 TAG-ID assignment register A */
#define DOM7_QOS2_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F714E0u)

/** \brief 14E4, ARP6 TAG-ID assignment register B */
#define DOM7_QOS2_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F714E4u)

/** \brief 14E8, ARP6 VM assignment register */
#define DOM7_QOS2_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F714E8u)

/** \brief 14EC, ARP6 threshold register */
#define DOM7_QOS2_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F714ECu)

/** \brief 14F0, ARP6 control register */
#define DOM7_QOS2_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F714F0u)

/** \brief 14F4, ARP6 cycle count capture register */
#define DOM7_QOS2_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F714F4u)

/** \brief 14F8, ARP6 current counter value register */
#define DOM7_QOS2_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F714F8u)

/** \brief 1500, ARP7 TAG-ID assignment register A */
#define DOM7_QOS2_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71500u)

/** \brief 1504, ARP7 TAG-ID assignment register B */
#define DOM7_QOS2_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71504u)

/** \brief 1508, ARP7 VM assignment register */
#define DOM7_QOS2_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71508u)

/** \brief 150C, ARP7 threshold register */
#define DOM7_QOS2_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7150Cu)

/** \brief 1510, ARP7 control register */
#define DOM7_QOS2_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71510u)

/** \brief 1514, ARP7 cycle count capture register */
#define DOM7_QOS2_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71514u)

/** \brief 1518, ARP7 current counter value register */
#define DOM7_QOS2_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71518u)

/** \brief 1620, ARP0 TAG-ID assignment register A */
#define DOM7_QOS3_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71620u)

/** \brief 1624, ARP0 TAG-ID assignment register B */
#define DOM7_QOS3_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71624u)

/** \brief 1628, ARP0 VM assignment register */
#define DOM7_QOS3_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71628u)

/** \brief 162C, ARP0 threshold register */
#define DOM7_QOS3_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7162Cu)

/** \brief 1630, ARP0 control register */
#define DOM7_QOS3_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71630u)

/** \brief 1634, ARP0 cycle count capture register */
#define DOM7_QOS3_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71634u)

/** \brief 1638, ARP0 current counter value register */
#define DOM7_QOS3_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71638u)

/** \brief 1640, ARP1 TAG-ID assignment register A */
#define DOM7_QOS3_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71640u)

/** \brief 1644, ARP1 TAG-ID assignment register B */
#define DOM7_QOS3_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71644u)

/** \brief 1648, ARP1 VM assignment register */
#define DOM7_QOS3_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71648u)

/** \brief 164C, ARP1 threshold register */
#define DOM7_QOS3_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7164Cu)

/** \brief 1650, ARP1 control register */
#define DOM7_QOS3_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71650u)

/** \brief 1654, ARP1 cycle count capture register */
#define DOM7_QOS3_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71654u)

/** \brief 1658, ARP1 current counter value register */
#define DOM7_QOS3_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71658u)

/** \brief 1660, ARP2 TAG-ID assignment register A */
#define DOM7_QOS3_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71660u)

/** \brief 1664, ARP2 TAG-ID assignment register B */
#define DOM7_QOS3_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71664u)

/** \brief 1668, ARP2 VM assignment register */
#define DOM7_QOS3_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71668u)

/** \brief 166C, ARP2 threshold register */
#define DOM7_QOS3_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7166Cu)

/** \brief 1670, ARP2 control register */
#define DOM7_QOS3_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71670u)

/** \brief 1674, ARP2 cycle count capture register */
#define DOM7_QOS3_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71674u)

/** \brief 1678, ARP2 current counter value register */
#define DOM7_QOS3_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71678u)

/** \brief 1680, ARP3 TAG-ID assignment register A */
#define DOM7_QOS3_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71680u)

/** \brief 1684, ARP3 TAG-ID assignment register B */
#define DOM7_QOS3_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71684u)

/** \brief 1688, ARP3 VM assignment register */
#define DOM7_QOS3_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71688u)

/** \brief 168C, ARP3 threshold register */
#define DOM7_QOS3_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7168Cu)

/** \brief 1690, ARP3 control register */
#define DOM7_QOS3_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71690u)

/** \brief 1694, ARP3 cycle count capture register */
#define DOM7_QOS3_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71694u)

/** \brief 1698, ARP3 current counter value register */
#define DOM7_QOS3_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71698u)

/** \brief 16A0, ARP4 TAG-ID assignment register A */
#define DOM7_QOS3_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F716A0u)

/** \brief 16A4, ARP4 TAG-ID assignment register B */
#define DOM7_QOS3_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F716A4u)

/** \brief 16A8, ARP4 VM assignment register */
#define DOM7_QOS3_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F716A8u)

/** \brief 16AC, ARP4 threshold register */
#define DOM7_QOS3_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F716ACu)

/** \brief 16B0, ARP4 control register */
#define DOM7_QOS3_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F716B0u)

/** \brief 16B4, ARP4 cycle count capture register */
#define DOM7_QOS3_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F716B4u)

/** \brief 16B8, ARP4 current counter value register */
#define DOM7_QOS3_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F716B8u)

/** \brief 16C0, ARP5 TAG-ID assignment register A */
#define DOM7_QOS3_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F716C0u)

/** \brief 16C4, ARP5 TAG-ID assignment register B */
#define DOM7_QOS3_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F716C4u)

/** \brief 16C8, ARP5 VM assignment register */
#define DOM7_QOS3_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F716C8u)

/** \brief 16CC, ARP5 threshold register */
#define DOM7_QOS3_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F716CCu)

/** \brief 16D0, ARP5 control register */
#define DOM7_QOS3_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F716D0u)

/** \brief 16D4, ARP5 cycle count capture register */
#define DOM7_QOS3_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F716D4u)

/** \brief 16D8, ARP5 current counter value register */
#define DOM7_QOS3_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F716D8u)

/** \brief 16E0, ARP6 TAG-ID assignment register A */
#define DOM7_QOS3_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F716E0u)

/** \brief 16E4, ARP6 TAG-ID assignment register B */
#define DOM7_QOS3_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F716E4u)

/** \brief 16E8, ARP6 VM assignment register */
#define DOM7_QOS3_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F716E8u)

/** \brief 16EC, ARP6 threshold register */
#define DOM7_QOS3_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F716ECu)

/** \brief 16F0, ARP6 control register */
#define DOM7_QOS3_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F716F0u)

/** \brief 16F4, ARP6 cycle count capture register */
#define DOM7_QOS3_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F716F4u)

/** \brief 16F8, ARP6 current counter value register */
#define DOM7_QOS3_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F716F8u)

/** \brief 1700, ARP7 TAG-ID assignment register A */
#define DOM7_QOS3_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F71700u)

/** \brief 1704, ARP7 TAG-ID assignment register B */
#define DOM7_QOS3_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F71704u)

/** \brief 1708, ARP7 VM assignment register */
#define DOM7_QOS3_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F71708u)

/** \brief 170C, ARP7 threshold register */
#define DOM7_QOS3_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F7170Cu)

/** \brief 1710, ARP7 control register */
#define DOM7_QOS3_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F71710u)

/** \brief 1714, ARP7 cycle count capture register */
#define DOM7_QOS3_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F71714u)

/** \brief 1718, ARP7 current counter value register */
#define DOM7_QOS3_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F71718u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom4
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM4_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F40000u)
/** Alias (User Manual Name) for DOM4_SCICTRL0_PECON */
#define DOM4_PECON0 (DOM4_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM4_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F40008u)
/** Alias (User Manual Name) for DOM4_SCICTRL0_PRIORITY */
#define DOM4_PRIORITY0 (DOM4_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM4_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F40010u)
/** Alias (User Manual Name) for DOM4_SCICTRL0_ERRADDR */
#define DOM4_ERRADDR0 (DOM4_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM4_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F40018u)
/** Alias (User Manual Name) for DOM4_SCICTRL0_ERR */
#define DOM4_ERR0 (DOM4_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM4_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F40020u)
/** Alias (User Manual Name) for DOM4_SCICTRL1_PECON */
#define DOM4_PECON1 (DOM4_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM4_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F40028u)
/** Alias (User Manual Name) for DOM4_SCICTRL1_PRIORITY */
#define DOM4_PRIORITY1 (DOM4_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM4_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F40030u)
/** Alias (User Manual Name) for DOM4_SCICTRL1_ERRADDR */
#define DOM4_ERRADDR1 (DOM4_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM4_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F40038u)
/** Alias (User Manual Name) for DOM4_SCICTRL1_ERR */
#define DOM4_ERR1 (DOM4_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM4_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F40040u)
/** Alias (User Manual Name) for DOM4_SCICTRL2_PECON */
#define DOM4_PECON2 (DOM4_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM4_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F40048u)
/** Alias (User Manual Name) for DOM4_SCICTRL2_PRIORITY */
#define DOM4_PRIORITY2 (DOM4_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM4_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F40050u)
/** Alias (User Manual Name) for DOM4_SCICTRL2_ERRADDR */
#define DOM4_ERRADDR2 (DOM4_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM4_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F40058u)
/** Alias (User Manual Name) for DOM4_SCICTRL2_ERR */
#define DOM4_ERR2 (DOM4_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM4_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F40060u)
/** Alias (User Manual Name) for DOM4_SCICTRL3_PECON */
#define DOM4_PECON3 (DOM4_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM4_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F40068u)
/** Alias (User Manual Name) for DOM4_SCICTRL3_PRIORITY */
#define DOM4_PRIORITY3 (DOM4_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM4_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F40070u)
/** Alias (User Manual Name) for DOM4_SCICTRL3_ERRADDR */
#define DOM4_ERRADDR3 (DOM4_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM4_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F40078u)
/** Alias (User Manual Name) for DOM4_SCICTRL3_ERR */
#define DOM4_ERR3 (DOM4_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM4_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F40080u)
/** Alias (User Manual Name) for DOM4_SCICTRL4_PECON */
#define DOM4_PECON4 (DOM4_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM4_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F40088u)
/** Alias (User Manual Name) for DOM4_SCICTRL4_PRIORITY */
#define DOM4_PRIORITY4 (DOM4_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM4_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F40090u)
/** Alias (User Manual Name) for DOM4_SCICTRL4_ERRADDR */
#define DOM4_ERRADDR4 (DOM4_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM4_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F40098u)
/** Alias (User Manual Name) for DOM4_SCICTRL4_ERR */
#define DOM4_ERR4 (DOM4_SCICTRL4_ERR)

/** \brief A0, Protocol error control register 5 */
#define DOM4_SCICTRL5_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F400A0u)
/** Alias (User Manual Name) for DOM4_SCICTRL5_PECON */
#define DOM4_PECON5 (DOM4_SCICTRL5_PECON)

/** \brief A8, SCI5 arbiter priority register */
#define DOM4_SCICTRL5_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F400A8u)
/** Alias (User Manual Name) for DOM4_SCICTRL5_PRIORITY */
#define DOM4_PRIORITY5 (DOM4_SCICTRL5_PRIORITY)

/** \brief B0, SCI5 error address capture register */
#define DOM4_SCICTRL5_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F400B0u)
/** Alias (User Manual Name) for DOM4_SCICTRL5_ERRADDR */
#define DOM4_ERRADDR5 (DOM4_SCICTRL5_ERRADDR)

/** \brief B8, SCI5 error capture register */
#define DOM4_SCICTRL5_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F400B8u)
/** Alias (User Manual Name) for DOM4_SCICTRL5_ERR */
#define DOM4_ERR5 (DOM4_SCICTRL5_ERR)

/** \brief 408, Identification register */
#define DOM4_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F40408u)

/** \brief 410, Protocol error status register */
#define DOM4_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F40410u)

/** \brief 418, Transaction ID status register */
#define DOM4_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F40418u)

/** \brief 420, Transaction ID enable register */
#define DOM4_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F40420u)

/** \brief 430, Bridge control register */
#define DOM4_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F40430u)

/** \brief 4C0, Write access enable register A */
#define DOM4_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F404C0u)

/** \brief 4C4, Write access enable register B */
#define DOM4_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F404C4u)

/** \brief 4C8, Read access enable register A */
#define DOM4_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F404C8u)

/** \brief 4CC, Read access enable register B */
#define DOM4_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F404CCu)

/** \brief 4D0, VM access enable register */
#define DOM4_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F404D0u)

/** \brief 4D4, PRS access enable register */
#define DOM4_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F404D4u)

/** \brief 4E0, Resource protection register */
#define DOM4_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F404E0u)

/** \brief 1000, QoS time interval control register */
#define DOM4_QOS_ICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICTRL*)0xF8F41000u)

/** \brief 1004, QoS time interval counter */
#define DOM4_QOS_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICNT*)0xF8F41004u)

/** \brief 1820, ARP0 TAG-ID assignment register A */
#define DOM4_QOS4_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F41820u)

/** \brief 1824, ARP0 TAG-ID assignment register B */
#define DOM4_QOS4_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F41824u)

/** \brief 1828, ARP0 VM assignment register */
#define DOM4_QOS4_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F41828u)

/** \brief 182C, ARP0 threshold register */
#define DOM4_QOS4_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F4182Cu)

/** \brief 1830, ARP0 control register */
#define DOM4_QOS4_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F41830u)

/** \brief 1834, ARP0 cycle count capture register */
#define DOM4_QOS4_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F41834u)

/** \brief 1838, ARP0 current counter value register */
#define DOM4_QOS4_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F41838u)

/** \brief 1840, ARP1 TAG-ID assignment register A */
#define DOM4_QOS4_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F41840u)

/** \brief 1844, ARP1 TAG-ID assignment register B */
#define DOM4_QOS4_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F41844u)

/** \brief 1848, ARP1 VM assignment register */
#define DOM4_QOS4_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F41848u)

/** \brief 184C, ARP1 threshold register */
#define DOM4_QOS4_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F4184Cu)

/** \brief 1850, ARP1 control register */
#define DOM4_QOS4_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F41850u)

/** \brief 1854, ARP1 cycle count capture register */
#define DOM4_QOS4_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F41854u)

/** \brief 1858, ARP1 current counter value register */
#define DOM4_QOS4_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F41858u)

/** \brief 1860, ARP2 TAG-ID assignment register A */
#define DOM4_QOS4_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F41860u)

/** \brief 1864, ARP2 TAG-ID assignment register B */
#define DOM4_QOS4_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F41864u)

/** \brief 1868, ARP2 VM assignment register */
#define DOM4_QOS4_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F41868u)

/** \brief 186C, ARP2 threshold register */
#define DOM4_QOS4_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F4186Cu)

/** \brief 1870, ARP2 control register */
#define DOM4_QOS4_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F41870u)

/** \brief 1874, ARP2 cycle count capture register */
#define DOM4_QOS4_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F41874u)

/** \brief 1878, ARP2 current counter value register */
#define DOM4_QOS4_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F41878u)

/** \brief 1880, ARP3 TAG-ID assignment register A */
#define DOM4_QOS4_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F41880u)

/** \brief 1884, ARP3 TAG-ID assignment register B */
#define DOM4_QOS4_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F41884u)

/** \brief 1888, ARP3 VM assignment register */
#define DOM4_QOS4_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F41888u)

/** \brief 188C, ARP3 threshold register */
#define DOM4_QOS4_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F4188Cu)

/** \brief 1890, ARP3 control register */
#define DOM4_QOS4_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F41890u)

/** \brief 1894, ARP3 cycle count capture register */
#define DOM4_QOS4_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F41894u)

/** \brief 1898, ARP3 current counter value register */
#define DOM4_QOS4_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F41898u)

/** \brief 18A0, ARP4 TAG-ID assignment register A */
#define DOM4_QOS4_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F418A0u)

/** \brief 18A4, ARP4 TAG-ID assignment register B */
#define DOM4_QOS4_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F418A4u)

/** \brief 18A8, ARP4 VM assignment register */
#define DOM4_QOS4_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F418A8u)

/** \brief 18AC, ARP4 threshold register */
#define DOM4_QOS4_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F418ACu)

/** \brief 18B0, ARP4 control register */
#define DOM4_QOS4_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F418B0u)

/** \brief 18B4, ARP4 cycle count capture register */
#define DOM4_QOS4_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F418B4u)

/** \brief 18B8, ARP4 current counter value register */
#define DOM4_QOS4_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F418B8u)

/** \brief 18C0, ARP5 TAG-ID assignment register A */
#define DOM4_QOS4_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F418C0u)

/** \brief 18C4, ARP5 TAG-ID assignment register B */
#define DOM4_QOS4_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F418C4u)

/** \brief 18C8, ARP5 VM assignment register */
#define DOM4_QOS4_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F418C8u)

/** \brief 18CC, ARP5 threshold register */
#define DOM4_QOS4_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F418CCu)

/** \brief 18D0, ARP5 control register */
#define DOM4_QOS4_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F418D0u)

/** \brief 18D4, ARP5 cycle count capture register */
#define DOM4_QOS4_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F418D4u)

/** \brief 18D8, ARP5 current counter value register */
#define DOM4_QOS4_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F418D8u)

/** \brief 18E0, ARP6 TAG-ID assignment register A */
#define DOM4_QOS4_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F418E0u)

/** \brief 18E4, ARP6 TAG-ID assignment register B */
#define DOM4_QOS4_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F418E4u)

/** \brief 18E8, ARP6 VM assignment register */
#define DOM4_QOS4_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F418E8u)

/** \brief 18EC, ARP6 threshold register */
#define DOM4_QOS4_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F418ECu)

/** \brief 18F0, ARP6 control register */
#define DOM4_QOS4_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F418F0u)

/** \brief 18F4, ARP6 cycle count capture register */
#define DOM4_QOS4_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F418F4u)

/** \brief 18F8, ARP6 current counter value register */
#define DOM4_QOS4_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F418F8u)

/** \brief 1900, ARP7 TAG-ID assignment register A */
#define DOM4_QOS4_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F41900u)

/** \brief 1904, ARP7 TAG-ID assignment register B */
#define DOM4_QOS4_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F41904u)

/** \brief 1908, ARP7 VM assignment register */
#define DOM4_QOS4_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F41908u)

/** \brief 190C, ARP7 threshold register */
#define DOM4_QOS4_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F4190Cu)

/** \brief 1910, ARP7 control register */
#define DOM4_QOS4_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F41910u)

/** \brief 1914, ARP7 cycle count capture register */
#define DOM4_QOS4_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F41914u)

/** \brief 1918, ARP7 current counter value register */
#define DOM4_QOS4_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F41918u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom2
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM2_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F20000u)
/** Alias (User Manual Name) for DOM2_SCICTRL0_PECON */
#define DOM2_PECON0 (DOM2_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM2_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F20008u)
/** Alias (User Manual Name) for DOM2_SCICTRL0_PRIORITY */
#define DOM2_PRIORITY0 (DOM2_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM2_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F20010u)
/** Alias (User Manual Name) for DOM2_SCICTRL0_ERRADDR */
#define DOM2_ERRADDR0 (DOM2_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM2_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F20018u)
/** Alias (User Manual Name) for DOM2_SCICTRL0_ERR */
#define DOM2_ERR0 (DOM2_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM2_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F20020u)
/** Alias (User Manual Name) for DOM2_SCICTRL1_PECON */
#define DOM2_PECON1 (DOM2_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM2_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F20028u)
/** Alias (User Manual Name) for DOM2_SCICTRL1_PRIORITY */
#define DOM2_PRIORITY1 (DOM2_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM2_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F20030u)
/** Alias (User Manual Name) for DOM2_SCICTRL1_ERRADDR */
#define DOM2_ERRADDR1 (DOM2_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM2_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F20038u)
/** Alias (User Manual Name) for DOM2_SCICTRL1_ERR */
#define DOM2_ERR1 (DOM2_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM2_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F20040u)
/** Alias (User Manual Name) for DOM2_SCICTRL2_PECON */
#define DOM2_PECON2 (DOM2_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM2_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F20048u)
/** Alias (User Manual Name) for DOM2_SCICTRL2_PRIORITY */
#define DOM2_PRIORITY2 (DOM2_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM2_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F20050u)
/** Alias (User Manual Name) for DOM2_SCICTRL2_ERRADDR */
#define DOM2_ERRADDR2 (DOM2_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM2_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F20058u)
/** Alias (User Manual Name) for DOM2_SCICTRL2_ERR */
#define DOM2_ERR2 (DOM2_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM2_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F20060u)
/** Alias (User Manual Name) for DOM2_SCICTRL3_PECON */
#define DOM2_PECON3 (DOM2_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM2_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F20068u)
/** Alias (User Manual Name) for DOM2_SCICTRL3_PRIORITY */
#define DOM2_PRIORITY3 (DOM2_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM2_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F20070u)
/** Alias (User Manual Name) for DOM2_SCICTRL3_ERRADDR */
#define DOM2_ERRADDR3 (DOM2_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM2_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F20078u)
/** Alias (User Manual Name) for DOM2_SCICTRL3_ERR */
#define DOM2_ERR3 (DOM2_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM2_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F20080u)
/** Alias (User Manual Name) for DOM2_SCICTRL4_PECON */
#define DOM2_PECON4 (DOM2_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM2_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F20088u)
/** Alias (User Manual Name) for DOM2_SCICTRL4_PRIORITY */
#define DOM2_PRIORITY4 (DOM2_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM2_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F20090u)
/** Alias (User Manual Name) for DOM2_SCICTRL4_ERRADDR */
#define DOM2_ERRADDR4 (DOM2_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM2_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F20098u)
/** Alias (User Manual Name) for DOM2_SCICTRL4_ERR */
#define DOM2_ERR4 (DOM2_SCICTRL4_ERR)

/** \brief A0, Protocol error control register 5 */
#define DOM2_SCICTRL5_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F200A0u)
/** Alias (User Manual Name) for DOM2_SCICTRL5_PECON */
#define DOM2_PECON5 (DOM2_SCICTRL5_PECON)

/** \brief A8, SCI5 arbiter priority register */
#define DOM2_SCICTRL5_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F200A8u)
/** Alias (User Manual Name) for DOM2_SCICTRL5_PRIORITY */
#define DOM2_PRIORITY5 (DOM2_SCICTRL5_PRIORITY)

/** \brief B0, SCI5 error address capture register */
#define DOM2_SCICTRL5_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F200B0u)
/** Alias (User Manual Name) for DOM2_SCICTRL5_ERRADDR */
#define DOM2_ERRADDR5 (DOM2_SCICTRL5_ERRADDR)

/** \brief B8, SCI5 error capture register */
#define DOM2_SCICTRL5_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F200B8u)
/** Alias (User Manual Name) for DOM2_SCICTRL5_ERR */
#define DOM2_ERR5 (DOM2_SCICTRL5_ERR)

/** \brief C0, Protocol error control register 6 */
#define DOM2_SCICTRL6_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F200C0u)
/** Alias (User Manual Name) for DOM2_SCICTRL6_PECON */
#define DOM2_PECON6 (DOM2_SCICTRL6_PECON)

/** \brief C8, SCI6 arbiter priority register */
#define DOM2_SCICTRL6_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F200C8u)
/** Alias (User Manual Name) for DOM2_SCICTRL6_PRIORITY */
#define DOM2_PRIORITY6 (DOM2_SCICTRL6_PRIORITY)

/** \brief D0, SCI6 error address capture register */
#define DOM2_SCICTRL6_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F200D0u)
/** Alias (User Manual Name) for DOM2_SCICTRL6_ERRADDR */
#define DOM2_ERRADDR6 (DOM2_SCICTRL6_ERRADDR)

/** \brief D8, SCI6 error capture register */
#define DOM2_SCICTRL6_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F200D8u)
/** Alias (User Manual Name) for DOM2_SCICTRL6_ERR */
#define DOM2_ERR6 (DOM2_SCICTRL6_ERR)

/** \brief E0, Protocol error control register 7 */
#define DOM2_SCICTRL7_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F200E0u)
/** Alias (User Manual Name) for DOM2_SCICTRL7_PECON */
#define DOM2_PECON7 (DOM2_SCICTRL7_PECON)

/** \brief E8, SCI7 arbiter priority register */
#define DOM2_SCICTRL7_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F200E8u)
/** Alias (User Manual Name) for DOM2_SCICTRL7_PRIORITY */
#define DOM2_PRIORITY7 (DOM2_SCICTRL7_PRIORITY)

/** \brief F0, SCI7 error address capture register */
#define DOM2_SCICTRL7_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F200F0u)
/** Alias (User Manual Name) for DOM2_SCICTRL7_ERRADDR */
#define DOM2_ERRADDR7 (DOM2_SCICTRL7_ERRADDR)

/** \brief F8, SCI7 error capture register */
#define DOM2_SCICTRL7_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F200F8u)
/** Alias (User Manual Name) for DOM2_SCICTRL7_ERR */
#define DOM2_ERR7 (DOM2_SCICTRL7_ERR)

/** \brief 100, Protocol error control register 8 */
#define DOM2_SCICTRL8_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F20100u)
/** Alias (User Manual Name) for DOM2_SCICTRL8_PECON */
#define DOM2_PECON8 (DOM2_SCICTRL8_PECON)

/** \brief 108, SCI8 arbiter priority register */
#define DOM2_SCICTRL8_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F20108u)
/** Alias (User Manual Name) for DOM2_SCICTRL8_PRIORITY */
#define DOM2_PRIORITY8 (DOM2_SCICTRL8_PRIORITY)

/** \brief 110, SCI8 error address capture register */
#define DOM2_SCICTRL8_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F20110u)
/** Alias (User Manual Name) for DOM2_SCICTRL8_ERRADDR */
#define DOM2_ERRADDR8 (DOM2_SCICTRL8_ERRADDR)

/** \brief 118, SCI8 error capture register */
#define DOM2_SCICTRL8_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F20118u)
/** Alias (User Manual Name) for DOM2_SCICTRL8_ERR */
#define DOM2_ERR8 (DOM2_SCICTRL8_ERR)

/** \brief 120, Protocol error control register 9 */
#define DOM2_SCICTRL9_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F20120u)
/** Alias (User Manual Name) for DOM2_SCICTRL9_PECON */
#define DOM2_PECON9 (DOM2_SCICTRL9_PECON)

/** \brief 128, SCI9 arbiter priority register */
#define DOM2_SCICTRL9_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F20128u)
/** Alias (User Manual Name) for DOM2_SCICTRL9_PRIORITY */
#define DOM2_PRIORITY9 (DOM2_SCICTRL9_PRIORITY)

/** \brief 130, SCI9 error address capture register */
#define DOM2_SCICTRL9_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F20130u)
/** Alias (User Manual Name) for DOM2_SCICTRL9_ERRADDR */
#define DOM2_ERRADDR9 (DOM2_SCICTRL9_ERRADDR)

/** \brief 138, SCI9 error capture register */
#define DOM2_SCICTRL9_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F20138u)
/** Alias (User Manual Name) for DOM2_SCICTRL9_ERR */
#define DOM2_ERR9 (DOM2_SCICTRL9_ERR)

/** \brief 408, Identification register */
#define DOM2_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F20408u)

/** \brief 410, Protocol error status register */
#define DOM2_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F20410u)

/** \brief 418, Transaction ID status register */
#define DOM2_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F20418u)

/** \brief 420, Transaction ID enable register */
#define DOM2_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F20420u)

/** \brief 430, Bridge control register */
#define DOM2_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F20430u)

/** \brief 4C0, Write access enable register A */
#define DOM2_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F204C0u)

/** \brief 4C4, Write access enable register B */
#define DOM2_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F204C4u)

/** \brief 4C8, Read access enable register A */
#define DOM2_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F204C8u)

/** \brief 4CC, Read access enable register B */
#define DOM2_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F204CCu)

/** \brief 4D0, VM access enable register */
#define DOM2_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F204D0u)

/** \brief 4D4, PRS access enable register */
#define DOM2_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F204D4u)

/** \brief 4E0, Resource protection register */
#define DOM2_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F204E0u)

/** \brief 1000, QoS time interval control register */
#define DOM2_QOS_ICTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICTRL*)0xF8F21000u)

/** \brief 1004, QoS time interval counter */
#define DOM2_QOS_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ICNT*)0xF8F21004u)

/** \brief 1220, ARP0 TAG-ID assignment register A */
#define DOM2_QOS1_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21220u)

/** \brief 1224, ARP0 TAG-ID assignment register B */
#define DOM2_QOS1_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21224u)

/** \brief 1228, ARP0 VM assignment register */
#define DOM2_QOS1_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21228u)

/** \brief 122C, ARP0 threshold register */
#define DOM2_QOS1_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2122Cu)

/** \brief 1230, ARP0 control register */
#define DOM2_QOS1_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21230u)

/** \brief 1234, ARP0 cycle count capture register */
#define DOM2_QOS1_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21234u)

/** \brief 1238, ARP0 current counter value register */
#define DOM2_QOS1_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21238u)

/** \brief 1240, ARP1 TAG-ID assignment register A */
#define DOM2_QOS1_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21240u)

/** \brief 1244, ARP1 TAG-ID assignment register B */
#define DOM2_QOS1_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21244u)

/** \brief 1248, ARP1 VM assignment register */
#define DOM2_QOS1_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21248u)

/** \brief 124C, ARP1 threshold register */
#define DOM2_QOS1_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2124Cu)

/** \brief 1250, ARP1 control register */
#define DOM2_QOS1_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21250u)

/** \brief 1254, ARP1 cycle count capture register */
#define DOM2_QOS1_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21254u)

/** \brief 1258, ARP1 current counter value register */
#define DOM2_QOS1_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21258u)

/** \brief 1260, ARP2 TAG-ID assignment register A */
#define DOM2_QOS1_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21260u)

/** \brief 1264, ARP2 TAG-ID assignment register B */
#define DOM2_QOS1_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21264u)

/** \brief 1268, ARP2 VM assignment register */
#define DOM2_QOS1_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21268u)

/** \brief 126C, ARP2 threshold register */
#define DOM2_QOS1_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2126Cu)

/** \brief 1270, ARP2 control register */
#define DOM2_QOS1_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21270u)

/** \brief 1274, ARP2 cycle count capture register */
#define DOM2_QOS1_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21274u)

/** \brief 1278, ARP2 current counter value register */
#define DOM2_QOS1_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21278u)

/** \brief 1280, ARP3 TAG-ID assignment register A */
#define DOM2_QOS1_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21280u)

/** \brief 1284, ARP3 TAG-ID assignment register B */
#define DOM2_QOS1_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21284u)

/** \brief 1288, ARP3 VM assignment register */
#define DOM2_QOS1_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21288u)

/** \brief 128C, ARP3 threshold register */
#define DOM2_QOS1_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2128Cu)

/** \brief 1290, ARP3 control register */
#define DOM2_QOS1_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21290u)

/** \brief 1294, ARP3 cycle count capture register */
#define DOM2_QOS1_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21294u)

/** \brief 1298, ARP3 current counter value register */
#define DOM2_QOS1_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21298u)

/** \brief 12A0, ARP4 TAG-ID assignment register A */
#define DOM2_QOS1_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F212A0u)

/** \brief 12A4, ARP4 TAG-ID assignment register B */
#define DOM2_QOS1_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F212A4u)

/** \brief 12A8, ARP4 VM assignment register */
#define DOM2_QOS1_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F212A8u)

/** \brief 12AC, ARP4 threshold register */
#define DOM2_QOS1_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F212ACu)

/** \brief 12B0, ARP4 control register */
#define DOM2_QOS1_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F212B0u)

/** \brief 12B4, ARP4 cycle count capture register */
#define DOM2_QOS1_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F212B4u)

/** \brief 12B8, ARP4 current counter value register */
#define DOM2_QOS1_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F212B8u)

/** \brief 12C0, ARP5 TAG-ID assignment register A */
#define DOM2_QOS1_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F212C0u)

/** \brief 12C4, ARP5 TAG-ID assignment register B */
#define DOM2_QOS1_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F212C4u)

/** \brief 12C8, ARP5 VM assignment register */
#define DOM2_QOS1_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F212C8u)

/** \brief 12CC, ARP5 threshold register */
#define DOM2_QOS1_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F212CCu)

/** \brief 12D0, ARP5 control register */
#define DOM2_QOS1_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F212D0u)

/** \brief 12D4, ARP5 cycle count capture register */
#define DOM2_QOS1_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F212D4u)

/** \brief 12D8, ARP5 current counter value register */
#define DOM2_QOS1_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F212D8u)

/** \brief 12E0, ARP6 TAG-ID assignment register A */
#define DOM2_QOS1_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F212E0u)

/** \brief 12E4, ARP6 TAG-ID assignment register B */
#define DOM2_QOS1_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F212E4u)

/** \brief 12E8, ARP6 VM assignment register */
#define DOM2_QOS1_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F212E8u)

/** \brief 12EC, ARP6 threshold register */
#define DOM2_QOS1_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F212ECu)

/** \brief 12F0, ARP6 control register */
#define DOM2_QOS1_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F212F0u)

/** \brief 12F4, ARP6 cycle count capture register */
#define DOM2_QOS1_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F212F4u)

/** \brief 12F8, ARP6 current counter value register */
#define DOM2_QOS1_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F212F8u)

/** \brief 1300, ARP7 TAG-ID assignment register A */
#define DOM2_QOS1_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21300u)

/** \brief 1304, ARP7 TAG-ID assignment register B */
#define DOM2_QOS1_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21304u)

/** \brief 1308, ARP7 VM assignment register */
#define DOM2_QOS1_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21308u)

/** \brief 130C, ARP7 threshold register */
#define DOM2_QOS1_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2130Cu)

/** \brief 1310, ARP7 control register */
#define DOM2_QOS1_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21310u)

/** \brief 1314, ARP7 cycle count capture register */
#define DOM2_QOS1_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21314u)

/** \brief 1318, ARP7 current counter value register */
#define DOM2_QOS1_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21318u)

/** \brief 1420, ARP0 TAG-ID assignment register A */
#define DOM2_QOS2_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21420u)

/** \brief 1424, ARP0 TAG-ID assignment register B */
#define DOM2_QOS2_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21424u)

/** \brief 1428, ARP0 VM assignment register */
#define DOM2_QOS2_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21428u)

/** \brief 142C, ARP0 threshold register */
#define DOM2_QOS2_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2142Cu)

/** \brief 1430, ARP0 control register */
#define DOM2_QOS2_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21430u)

/** \brief 1434, ARP0 cycle count capture register */
#define DOM2_QOS2_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21434u)

/** \brief 1438, ARP0 current counter value register */
#define DOM2_QOS2_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21438u)

/** \brief 1440, ARP1 TAG-ID assignment register A */
#define DOM2_QOS2_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21440u)

/** \brief 1444, ARP1 TAG-ID assignment register B */
#define DOM2_QOS2_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21444u)

/** \brief 1448, ARP1 VM assignment register */
#define DOM2_QOS2_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21448u)

/** \brief 144C, ARP1 threshold register */
#define DOM2_QOS2_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2144Cu)

/** \brief 1450, ARP1 control register */
#define DOM2_QOS2_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21450u)

/** \brief 1454, ARP1 cycle count capture register */
#define DOM2_QOS2_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21454u)

/** \brief 1458, ARP1 current counter value register */
#define DOM2_QOS2_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21458u)

/** \brief 1460, ARP2 TAG-ID assignment register A */
#define DOM2_QOS2_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21460u)

/** \brief 1464, ARP2 TAG-ID assignment register B */
#define DOM2_QOS2_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21464u)

/** \brief 1468, ARP2 VM assignment register */
#define DOM2_QOS2_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21468u)

/** \brief 146C, ARP2 threshold register */
#define DOM2_QOS2_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2146Cu)

/** \brief 1470, ARP2 control register */
#define DOM2_QOS2_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21470u)

/** \brief 1474, ARP2 cycle count capture register */
#define DOM2_QOS2_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21474u)

/** \brief 1478, ARP2 current counter value register */
#define DOM2_QOS2_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21478u)

/** \brief 1480, ARP3 TAG-ID assignment register A */
#define DOM2_QOS2_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21480u)

/** \brief 1484, ARP3 TAG-ID assignment register B */
#define DOM2_QOS2_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21484u)

/** \brief 1488, ARP3 VM assignment register */
#define DOM2_QOS2_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21488u)

/** \brief 148C, ARP3 threshold register */
#define DOM2_QOS2_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2148Cu)

/** \brief 1490, ARP3 control register */
#define DOM2_QOS2_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21490u)

/** \brief 1494, ARP3 cycle count capture register */
#define DOM2_QOS2_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21494u)

/** \brief 1498, ARP3 current counter value register */
#define DOM2_QOS2_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21498u)

/** \brief 14A0, ARP4 TAG-ID assignment register A */
#define DOM2_QOS2_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F214A0u)

/** \brief 14A4, ARP4 TAG-ID assignment register B */
#define DOM2_QOS2_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F214A4u)

/** \brief 14A8, ARP4 VM assignment register */
#define DOM2_QOS2_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F214A8u)

/** \brief 14AC, ARP4 threshold register */
#define DOM2_QOS2_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F214ACu)

/** \brief 14B0, ARP4 control register */
#define DOM2_QOS2_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F214B0u)

/** \brief 14B4, ARP4 cycle count capture register */
#define DOM2_QOS2_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F214B4u)

/** \brief 14B8, ARP4 current counter value register */
#define DOM2_QOS2_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F214B8u)

/** \brief 14C0, ARP5 TAG-ID assignment register A */
#define DOM2_QOS2_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F214C0u)

/** \brief 14C4, ARP5 TAG-ID assignment register B */
#define DOM2_QOS2_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F214C4u)

/** \brief 14C8, ARP5 VM assignment register */
#define DOM2_QOS2_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F214C8u)

/** \brief 14CC, ARP5 threshold register */
#define DOM2_QOS2_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F214CCu)

/** \brief 14D0, ARP5 control register */
#define DOM2_QOS2_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F214D0u)

/** \brief 14D4, ARP5 cycle count capture register */
#define DOM2_QOS2_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F214D4u)

/** \brief 14D8, ARP5 current counter value register */
#define DOM2_QOS2_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F214D8u)

/** \brief 14E0, ARP6 TAG-ID assignment register A */
#define DOM2_QOS2_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F214E0u)

/** \brief 14E4, ARP6 TAG-ID assignment register B */
#define DOM2_QOS2_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F214E4u)

/** \brief 14E8, ARP6 VM assignment register */
#define DOM2_QOS2_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F214E8u)

/** \brief 14EC, ARP6 threshold register */
#define DOM2_QOS2_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F214ECu)

/** \brief 14F0, ARP6 control register */
#define DOM2_QOS2_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F214F0u)

/** \brief 14F4, ARP6 cycle count capture register */
#define DOM2_QOS2_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F214F4u)

/** \brief 14F8, ARP6 current counter value register */
#define DOM2_QOS2_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F214F8u)

/** \brief 1500, ARP7 TAG-ID assignment register A */
#define DOM2_QOS2_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21500u)

/** \brief 1504, ARP7 TAG-ID assignment register B */
#define DOM2_QOS2_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21504u)

/** \brief 1508, ARP7 VM assignment register */
#define DOM2_QOS2_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21508u)

/** \brief 150C, ARP7 threshold register */
#define DOM2_QOS2_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2150Cu)

/** \brief 1510, ARP7 control register */
#define DOM2_QOS2_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21510u)

/** \brief 1514, ARP7 cycle count capture register */
#define DOM2_QOS2_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21514u)

/** \brief 1518, ARP7 current counter value register */
#define DOM2_QOS2_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21518u)

/** \brief 1E20, ARP0 TAG-ID assignment register A */
#define DOM2_QOS7_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21E20u)

/** \brief 1E24, ARP0 TAG-ID assignment register B */
#define DOM2_QOS7_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21E24u)

/** \brief 1E28, ARP0 VM assignment register */
#define DOM2_QOS7_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21E28u)

/** \brief 1E2C, ARP0 threshold register */
#define DOM2_QOS7_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21E2Cu)

/** \brief 1E30, ARP0 control register */
#define DOM2_QOS7_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21E30u)

/** \brief 1E34, ARP0 cycle count capture register */
#define DOM2_QOS7_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21E34u)

/** \brief 1E38, ARP0 current counter value register */
#define DOM2_QOS7_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21E38u)

/** \brief 1E40, ARP1 TAG-ID assignment register A */
#define DOM2_QOS7_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21E40u)

/** \brief 1E44, ARP1 TAG-ID assignment register B */
#define DOM2_QOS7_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21E44u)

/** \brief 1E48, ARP1 VM assignment register */
#define DOM2_QOS7_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21E48u)

/** \brief 1E4C, ARP1 threshold register */
#define DOM2_QOS7_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21E4Cu)

/** \brief 1E50, ARP1 control register */
#define DOM2_QOS7_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21E50u)

/** \brief 1E54, ARP1 cycle count capture register */
#define DOM2_QOS7_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21E54u)

/** \brief 1E58, ARP1 current counter value register */
#define DOM2_QOS7_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21E58u)

/** \brief 1E60, ARP2 TAG-ID assignment register A */
#define DOM2_QOS7_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21E60u)

/** \brief 1E64, ARP2 TAG-ID assignment register B */
#define DOM2_QOS7_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21E64u)

/** \brief 1E68, ARP2 VM assignment register */
#define DOM2_QOS7_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21E68u)

/** \brief 1E6C, ARP2 threshold register */
#define DOM2_QOS7_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21E6Cu)

/** \brief 1E70, ARP2 control register */
#define DOM2_QOS7_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21E70u)

/** \brief 1E74, ARP2 cycle count capture register */
#define DOM2_QOS7_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21E74u)

/** \brief 1E78, ARP2 current counter value register */
#define DOM2_QOS7_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21E78u)

/** \brief 1E80, ARP3 TAG-ID assignment register A */
#define DOM2_QOS7_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21E80u)

/** \brief 1E84, ARP3 TAG-ID assignment register B */
#define DOM2_QOS7_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21E84u)

/** \brief 1E88, ARP3 VM assignment register */
#define DOM2_QOS7_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21E88u)

/** \brief 1E8C, ARP3 threshold register */
#define DOM2_QOS7_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21E8Cu)

/** \brief 1E90, ARP3 control register */
#define DOM2_QOS7_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21E90u)

/** \brief 1E94, ARP3 cycle count capture register */
#define DOM2_QOS7_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21E94u)

/** \brief 1E98, ARP3 current counter value register */
#define DOM2_QOS7_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21E98u)

/** \brief 1EA0, ARP4 TAG-ID assignment register A */
#define DOM2_QOS7_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21EA0u)

/** \brief 1EA4, ARP4 TAG-ID assignment register B */
#define DOM2_QOS7_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21EA4u)

/** \brief 1EA8, ARP4 VM assignment register */
#define DOM2_QOS7_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21EA8u)

/** \brief 1EAC, ARP4 threshold register */
#define DOM2_QOS7_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21EACu)

/** \brief 1EB0, ARP4 control register */
#define DOM2_QOS7_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21EB0u)

/** \brief 1EB4, ARP4 cycle count capture register */
#define DOM2_QOS7_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21EB4u)

/** \brief 1EB8, ARP4 current counter value register */
#define DOM2_QOS7_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21EB8u)

/** \brief 1EC0, ARP5 TAG-ID assignment register A */
#define DOM2_QOS7_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21EC0u)

/** \brief 1EC4, ARP5 TAG-ID assignment register B */
#define DOM2_QOS7_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21EC4u)

/** \brief 1EC8, ARP5 VM assignment register */
#define DOM2_QOS7_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21EC8u)

/** \brief 1ECC, ARP5 threshold register */
#define DOM2_QOS7_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21ECCu)

/** \brief 1ED0, ARP5 control register */
#define DOM2_QOS7_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21ED0u)

/** \brief 1ED4, ARP5 cycle count capture register */
#define DOM2_QOS7_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21ED4u)

/** \brief 1ED8, ARP5 current counter value register */
#define DOM2_QOS7_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21ED8u)

/** \brief 1EE0, ARP6 TAG-ID assignment register A */
#define DOM2_QOS7_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21EE0u)

/** \brief 1EE4, ARP6 TAG-ID assignment register B */
#define DOM2_QOS7_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21EE4u)

/** \brief 1EE8, ARP6 VM assignment register */
#define DOM2_QOS7_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21EE8u)

/** \brief 1EEC, ARP6 threshold register */
#define DOM2_QOS7_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21EECu)

/** \brief 1EF0, ARP6 control register */
#define DOM2_QOS7_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21EF0u)

/** \brief 1EF4, ARP6 cycle count capture register */
#define DOM2_QOS7_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21EF4u)

/** \brief 1EF8, ARP6 current counter value register */
#define DOM2_QOS7_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21EF8u)

/** \brief 1F00, ARP7 TAG-ID assignment register A */
#define DOM2_QOS7_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F21F00u)

/** \brief 1F04, ARP7 TAG-ID assignment register B */
#define DOM2_QOS7_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F21F04u)

/** \brief 1F08, ARP7 VM assignment register */
#define DOM2_QOS7_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F21F08u)

/** \brief 1F0C, ARP7 threshold register */
#define DOM2_QOS7_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F21F0Cu)

/** \brief 1F10, ARP7 control register */
#define DOM2_QOS7_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F21F10u)

/** \brief 1F14, ARP7 cycle count capture register */
#define DOM2_QOS7_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F21F14u)

/** \brief 1F18, ARP7 current counter value register */
#define DOM2_QOS7_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F21F18u)

/** \brief 2020, ARP0 TAG-ID assignment register A */
#define DOM2_QOS8_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22020u)

/** \brief 2024, ARP0 TAG-ID assignment register B */
#define DOM2_QOS8_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22024u)

/** \brief 2028, ARP0 VM assignment register */
#define DOM2_QOS8_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22028u)

/** \brief 202C, ARP0 threshold register */
#define DOM2_QOS8_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2202Cu)

/** \brief 2030, ARP0 control register */
#define DOM2_QOS8_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22030u)

/** \brief 2034, ARP0 cycle count capture register */
#define DOM2_QOS8_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22034u)

/** \brief 2038, ARP0 current counter value register */
#define DOM2_QOS8_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22038u)

/** \brief 2040, ARP1 TAG-ID assignment register A */
#define DOM2_QOS8_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22040u)

/** \brief 2044, ARP1 TAG-ID assignment register B */
#define DOM2_QOS8_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22044u)

/** \brief 2048, ARP1 VM assignment register */
#define DOM2_QOS8_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22048u)

/** \brief 204C, ARP1 threshold register */
#define DOM2_QOS8_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2204Cu)

/** \brief 2050, ARP1 control register */
#define DOM2_QOS8_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22050u)

/** \brief 2054, ARP1 cycle count capture register */
#define DOM2_QOS8_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22054u)

/** \brief 2058, ARP1 current counter value register */
#define DOM2_QOS8_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22058u)

/** \brief 2060, ARP2 TAG-ID assignment register A */
#define DOM2_QOS8_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22060u)

/** \brief 2064, ARP2 TAG-ID assignment register B */
#define DOM2_QOS8_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22064u)

/** \brief 2068, ARP2 VM assignment register */
#define DOM2_QOS8_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22068u)

/** \brief 206C, ARP2 threshold register */
#define DOM2_QOS8_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2206Cu)

/** \brief 2070, ARP2 control register */
#define DOM2_QOS8_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22070u)

/** \brief 2074, ARP2 cycle count capture register */
#define DOM2_QOS8_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22074u)

/** \brief 2078, ARP2 current counter value register */
#define DOM2_QOS8_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22078u)

/** \brief 2080, ARP3 TAG-ID assignment register A */
#define DOM2_QOS8_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22080u)

/** \brief 2084, ARP3 TAG-ID assignment register B */
#define DOM2_QOS8_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22084u)

/** \brief 2088, ARP3 VM assignment register */
#define DOM2_QOS8_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22088u)

/** \brief 208C, ARP3 threshold register */
#define DOM2_QOS8_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2208Cu)

/** \brief 2090, ARP3 control register */
#define DOM2_QOS8_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22090u)

/** \brief 2094, ARP3 cycle count capture register */
#define DOM2_QOS8_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22094u)

/** \brief 2098, ARP3 current counter value register */
#define DOM2_QOS8_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22098u)

/** \brief 20A0, ARP4 TAG-ID assignment register A */
#define DOM2_QOS8_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F220A0u)

/** \brief 20A4, ARP4 TAG-ID assignment register B */
#define DOM2_QOS8_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F220A4u)

/** \brief 20A8, ARP4 VM assignment register */
#define DOM2_QOS8_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F220A8u)

/** \brief 20AC, ARP4 threshold register */
#define DOM2_QOS8_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F220ACu)

/** \brief 20B0, ARP4 control register */
#define DOM2_QOS8_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F220B0u)

/** \brief 20B4, ARP4 cycle count capture register */
#define DOM2_QOS8_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F220B4u)

/** \brief 20B8, ARP4 current counter value register */
#define DOM2_QOS8_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F220B8u)

/** \brief 20C0, ARP5 TAG-ID assignment register A */
#define DOM2_QOS8_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F220C0u)

/** \brief 20C4, ARP5 TAG-ID assignment register B */
#define DOM2_QOS8_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F220C4u)

/** \brief 20C8, ARP5 VM assignment register */
#define DOM2_QOS8_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F220C8u)

/** \brief 20CC, ARP5 threshold register */
#define DOM2_QOS8_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F220CCu)

/** \brief 20D0, ARP5 control register */
#define DOM2_QOS8_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F220D0u)

/** \brief 20D4, ARP5 cycle count capture register */
#define DOM2_QOS8_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F220D4u)

/** \brief 20D8, ARP5 current counter value register */
#define DOM2_QOS8_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F220D8u)

/** \brief 20E0, ARP6 TAG-ID assignment register A */
#define DOM2_QOS8_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F220E0u)

/** \brief 20E4, ARP6 TAG-ID assignment register B */
#define DOM2_QOS8_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F220E4u)

/** \brief 20E8, ARP6 VM assignment register */
#define DOM2_QOS8_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F220E8u)

/** \brief 20EC, ARP6 threshold register */
#define DOM2_QOS8_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F220ECu)

/** \brief 20F0, ARP6 control register */
#define DOM2_QOS8_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F220F0u)

/** \brief 20F4, ARP6 cycle count capture register */
#define DOM2_QOS8_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F220F4u)

/** \brief 20F8, ARP6 current counter value register */
#define DOM2_QOS8_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F220F8u)

/** \brief 2100, ARP7 TAG-ID assignment register A */
#define DOM2_QOS8_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22100u)

/** \brief 2104, ARP7 TAG-ID assignment register B */
#define DOM2_QOS8_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22104u)

/** \brief 2108, ARP7 VM assignment register */
#define DOM2_QOS8_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22108u)

/** \brief 210C, ARP7 threshold register */
#define DOM2_QOS8_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2210Cu)

/** \brief 2110, ARP7 control register */
#define DOM2_QOS8_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22110u)

/** \brief 2114, ARP7 cycle count capture register */
#define DOM2_QOS8_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22114u)

/** \brief 2118, ARP7 current counter value register */
#define DOM2_QOS8_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22118u)

/** \brief 2220, ARP0 TAG-ID assignment register A */
#define DOM2_QOS9_ARP0_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22220u)

/** \brief 2224, ARP0 TAG-ID assignment register B */
#define DOM2_QOS9_ARP0_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22224u)

/** \brief 2228, ARP0 VM assignment register */
#define DOM2_QOS9_ARP0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22228u)

/** \brief 222C, ARP0 threshold register */
#define DOM2_QOS9_ARP0_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2222Cu)

/** \brief 2230, ARP0 control register */
#define DOM2_QOS9_ARP0_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22230u)

/** \brief 2234, ARP0 cycle count capture register */
#define DOM2_QOS9_ARP0_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22234u)

/** \brief 2238, ARP0 current counter value register */
#define DOM2_QOS9_ARP0_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22238u)

/** \brief 2240, ARP1 TAG-ID assignment register A */
#define DOM2_QOS9_ARP1_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22240u)

/** \brief 2244, ARP1 TAG-ID assignment register B */
#define DOM2_QOS9_ARP1_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22244u)

/** \brief 2248, ARP1 VM assignment register */
#define DOM2_QOS9_ARP1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22248u)

/** \brief 224C, ARP1 threshold register */
#define DOM2_QOS9_ARP1_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2224Cu)

/** \brief 2250, ARP1 control register */
#define DOM2_QOS9_ARP1_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22250u)

/** \brief 2254, ARP1 cycle count capture register */
#define DOM2_QOS9_ARP1_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22254u)

/** \brief 2258, ARP1 current counter value register */
#define DOM2_QOS9_ARP1_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22258u)

/** \brief 2260, ARP2 TAG-ID assignment register A */
#define DOM2_QOS9_ARP2_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22260u)

/** \brief 2264, ARP2 TAG-ID assignment register B */
#define DOM2_QOS9_ARP2_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22264u)

/** \brief 2268, ARP2 VM assignment register */
#define DOM2_QOS9_ARP2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22268u)

/** \brief 226C, ARP2 threshold register */
#define DOM2_QOS9_ARP2_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2226Cu)

/** \brief 2270, ARP2 control register */
#define DOM2_QOS9_ARP2_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22270u)

/** \brief 2274, ARP2 cycle count capture register */
#define DOM2_QOS9_ARP2_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22274u)

/** \brief 2278, ARP2 current counter value register */
#define DOM2_QOS9_ARP2_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22278u)

/** \brief 2280, ARP3 TAG-ID assignment register A */
#define DOM2_QOS9_ARP3_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22280u)

/** \brief 2284, ARP3 TAG-ID assignment register B */
#define DOM2_QOS9_ARP3_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22284u)

/** \brief 2288, ARP3 VM assignment register */
#define DOM2_QOS9_ARP3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22288u)

/** \brief 228C, ARP3 threshold register */
#define DOM2_QOS9_ARP3_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2228Cu)

/** \brief 2290, ARP3 control register */
#define DOM2_QOS9_ARP3_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22290u)

/** \brief 2294, ARP3 cycle count capture register */
#define DOM2_QOS9_ARP3_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22294u)

/** \brief 2298, ARP3 current counter value register */
#define DOM2_QOS9_ARP3_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22298u)

/** \brief 22A0, ARP4 TAG-ID assignment register A */
#define DOM2_QOS9_ARP4_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F222A0u)

/** \brief 22A4, ARP4 TAG-ID assignment register B */
#define DOM2_QOS9_ARP4_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F222A4u)

/** \brief 22A8, ARP4 VM assignment register */
#define DOM2_QOS9_ARP4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F222A8u)

/** \brief 22AC, ARP4 threshold register */
#define DOM2_QOS9_ARP4_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F222ACu)

/** \brief 22B0, ARP4 control register */
#define DOM2_QOS9_ARP4_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F222B0u)

/** \brief 22B4, ARP4 cycle count capture register */
#define DOM2_QOS9_ARP4_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F222B4u)

/** \brief 22B8, ARP4 current counter value register */
#define DOM2_QOS9_ARP4_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F222B8u)

/** \brief 22C0, ARP5 TAG-ID assignment register A */
#define DOM2_QOS9_ARP5_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F222C0u)

/** \brief 22C4, ARP5 TAG-ID assignment register B */
#define DOM2_QOS9_ARP5_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F222C4u)

/** \brief 22C8, ARP5 VM assignment register */
#define DOM2_QOS9_ARP5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F222C8u)

/** \brief 22CC, ARP5 threshold register */
#define DOM2_QOS9_ARP5_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F222CCu)

/** \brief 22D0, ARP5 control register */
#define DOM2_QOS9_ARP5_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F222D0u)

/** \brief 22D4, ARP5 cycle count capture register */
#define DOM2_QOS9_ARP5_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F222D4u)

/** \brief 22D8, ARP5 current counter value register */
#define DOM2_QOS9_ARP5_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F222D8u)

/** \brief 22E0, ARP6 TAG-ID assignment register A */
#define DOM2_QOS9_ARP6_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F222E0u)

/** \brief 22E4, ARP6 TAG-ID assignment register B */
#define DOM2_QOS9_ARP6_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F222E4u)

/** \brief 22E8, ARP6 VM assignment register */
#define DOM2_QOS9_ARP6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F222E8u)

/** \brief 22EC, ARP6 threshold register */
#define DOM2_QOS9_ARP6_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F222ECu)

/** \brief 22F0, ARP6 control register */
#define DOM2_QOS9_ARP6_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F222F0u)

/** \brief 22F4, ARP6 cycle count capture register */
#define DOM2_QOS9_ARP6_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F222F4u)

/** \brief 22F8, ARP6 current counter value register */
#define DOM2_QOS9_ARP6_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F222F8u)

/** \brief 2300, ARP7 TAG-ID assignment register A */
#define DOM2_QOS9_ARP7_TAGIDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDA*)0xF8F22300u)

/** \brief 2304, ARP7 TAG-ID assignment register B */
#define DOM2_QOS9_ARP7_TAGIDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_TAGIDB*)0xF8F22304u)

/** \brief 2308, ARP7 VM assignment register */
#define DOM2_QOS9_ARP7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_VM*)0xF8F22308u)

/** \brief 230C, ARP7 threshold register */
#define DOM2_QOS9_ARP7_THR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_THR*)0xF8F2230Cu)

/** \brief 2310, ARP7 control register */
#define DOM2_QOS9_ARP7_CTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CTRL*)0xF8F22310u)

/** \brief 2314, ARP7 cycle count capture register */
#define DOM2_QOS9_ARP7_CCC /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCC*)0xF8F22314u)

/** \brief 2318, ARP7 current counter value register */
#define DOM2_QOS9_ARP7_CCV /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_QOS_ARP_CCV*)0xF8F22318u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Dom_Registers_Cfg_Dom5
 * \{  */
/** \brief 0, Protocol error control register 0 */
#define DOM5_SCICTRL0_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F50000u)
/** Alias (User Manual Name) for DOM5_SCICTRL0_PECON */
#define DOM5_PECON0 (DOM5_SCICTRL0_PECON)

/** \brief 8, SCI0 arbiter priority register */
#define DOM5_SCICTRL0_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F50008u)
/** Alias (User Manual Name) for DOM5_SCICTRL0_PRIORITY */
#define DOM5_PRIORITY0 (DOM5_SCICTRL0_PRIORITY)

/** \brief 10, SCI0 error address capture register */
#define DOM5_SCICTRL0_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F50010u)
/** Alias (User Manual Name) for DOM5_SCICTRL0_ERRADDR */
#define DOM5_ERRADDR0 (DOM5_SCICTRL0_ERRADDR)

/** \brief 18, SCI0 error capture register */
#define DOM5_SCICTRL0_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F50018u)
/** Alias (User Manual Name) for DOM5_SCICTRL0_ERR */
#define DOM5_ERR0 (DOM5_SCICTRL0_ERR)

/** \brief 20, Protocol error control register 1 */
#define DOM5_SCICTRL1_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F50020u)
/** Alias (User Manual Name) for DOM5_SCICTRL1_PECON */
#define DOM5_PECON1 (DOM5_SCICTRL1_PECON)

/** \brief 28, SCI1 arbiter priority register */
#define DOM5_SCICTRL1_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F50028u)
/** Alias (User Manual Name) for DOM5_SCICTRL1_PRIORITY */
#define DOM5_PRIORITY1 (DOM5_SCICTRL1_PRIORITY)

/** \brief 30, SCI1 error address capture register */
#define DOM5_SCICTRL1_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F50030u)
/** Alias (User Manual Name) for DOM5_SCICTRL1_ERRADDR */
#define DOM5_ERRADDR1 (DOM5_SCICTRL1_ERRADDR)

/** \brief 38, SCI1 error capture register */
#define DOM5_SCICTRL1_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F50038u)
/** Alias (User Manual Name) for DOM5_SCICTRL1_ERR */
#define DOM5_ERR1 (DOM5_SCICTRL1_ERR)

/** \brief 40, Protocol error control register 2 */
#define DOM5_SCICTRL2_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F50040u)
/** Alias (User Manual Name) for DOM5_SCICTRL2_PECON */
#define DOM5_PECON2 (DOM5_SCICTRL2_PECON)

/** \brief 48, SCI2 arbiter priority register */
#define DOM5_SCICTRL2_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F50048u)
/** Alias (User Manual Name) for DOM5_SCICTRL2_PRIORITY */
#define DOM5_PRIORITY2 (DOM5_SCICTRL2_PRIORITY)

/** \brief 50, SCI2 error address capture register */
#define DOM5_SCICTRL2_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F50050u)
/** Alias (User Manual Name) for DOM5_SCICTRL2_ERRADDR */
#define DOM5_ERRADDR2 (DOM5_SCICTRL2_ERRADDR)

/** \brief 58, SCI2 error capture register */
#define DOM5_SCICTRL2_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F50058u)
/** Alias (User Manual Name) for DOM5_SCICTRL2_ERR */
#define DOM5_ERR2 (DOM5_SCICTRL2_ERR)

/** \brief 60, Protocol error control register 3 */
#define DOM5_SCICTRL3_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F50060u)
/** Alias (User Manual Name) for DOM5_SCICTRL3_PECON */
#define DOM5_PECON3 (DOM5_SCICTRL3_PECON)

/** \brief 68, SCI3 arbiter priority register */
#define DOM5_SCICTRL3_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F50068u)
/** Alias (User Manual Name) for DOM5_SCICTRL3_PRIORITY */
#define DOM5_PRIORITY3 (DOM5_SCICTRL3_PRIORITY)

/** \brief 70, SCI3 error address capture register */
#define DOM5_SCICTRL3_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F50070u)
/** Alias (User Manual Name) for DOM5_SCICTRL3_ERRADDR */
#define DOM5_ERRADDR3 (DOM5_SCICTRL3_ERRADDR)

/** \brief 78, SCI3 error capture register */
#define DOM5_SCICTRL3_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F50078u)
/** Alias (User Manual Name) for DOM5_SCICTRL3_ERR */
#define DOM5_ERR3 (DOM5_SCICTRL3_ERR)

/** \brief 80, Protocol error control register 4 */
#define DOM5_SCICTRL4_PECON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PECON*)0xF8F50080u)
/** Alias (User Manual Name) for DOM5_SCICTRL4_PECON */
#define DOM5_PECON4 (DOM5_SCICTRL4_PECON)

/** \brief 88, SCI4 arbiter priority register */
#define DOM5_SCICTRL4_PRIORITY /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_PRIORITY*)0xF8F50088u)
/** Alias (User Manual Name) for DOM5_SCICTRL4_PRIORITY */
#define DOM5_PRIORITY4 (DOM5_SCICTRL4_PRIORITY)

/** \brief 90, SCI4 error address capture register */
#define DOM5_SCICTRL4_ERRADDR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERRADDR*)0xF8F50090u)
/** Alias (User Manual Name) for DOM5_SCICTRL4_ERRADDR */
#define DOM5_ERRADDR4 (DOM5_SCICTRL4_ERRADDR)

/** \brief 98, SCI4 error capture register */
#define DOM5_SCICTRL4_ERR /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_SCICTRL_ERR*)0xF8F50098u)
/** Alias (User Manual Name) for DOM5_SCICTRL4_ERR */
#define DOM5_ERR4 (DOM5_SCICTRL4_ERR)

/** \brief 408, Identification register */
#define DOM5_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ID*)0xF8F50408u)

/** \brief 410, Protocol error status register */
#define DOM5_PESTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PESTAT*)0xF8F50410u)

/** \brief 418, Transaction ID status register */
#define DOM5_TIDSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDSTAT*)0xF8F50418u)

/** \brief 420, Transaction ID enable register */
#define DOM5_TIDEN /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_TIDEN*)0xF8F50420u)

/** \brief 430, Bridge control register */
#define DOM5_BRCON /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_BRCON*)0xF8F50430u)

/** \brief 4C0, Write access enable register A */
#define DOM5_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRA*)0xF8F504C0u)

/** \brief 4C4, Write access enable register B */
#define DOM5_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_WRB*)0xF8F504C4u)

/** \brief 4C8, Read access enable register A */
#define DOM5_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDA*)0xF8F504C8u)

/** \brief 4CC, Read access enable register B */
#define DOM5_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_RDB*)0xF8F504CCu)

/** \brief 4D0, VM access enable register */
#define DOM5_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_VM*)0xF8F504D0u)

/** \brief 4D4, PRS access enable register */
#define DOM5_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_ACCEN_PRS*)0xF8F504D4u)

/** \brief 4E0, Resource protection register */
#define DOM5_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_DOM_PROT*)0xF8F504E0u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXDOM_REG_H */
