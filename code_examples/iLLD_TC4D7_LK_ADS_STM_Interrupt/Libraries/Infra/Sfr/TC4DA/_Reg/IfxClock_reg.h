/**
 * \file IfxClock_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_Clock/V0.2.3.1.0
 * Specification: latest @ 2024-11-15 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET : V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Clock_Registers_Cfg Clock address
 * \ingroup IfxSfr_Clock_Registers
 * 
 * \defgroup IfxSfr_Clock_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Clock_Registers_Cfg
 *
 * \defgroup IfxSfr_Clock_Registers_Cfg_Clock 2-CLOCK
 * \ingroup IfxSfr_Clock_Registers_Cfg
 *
 *
 */
#ifndef IFXCLOCK_REG_H
#define IFXCLOCK_REG_H 1
/******************************************************************************/
#include "IfxClock_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Clock_Registers_Cfg_BaseAddress
 * \{  */

/** \brief CLOCK object */
#define MODULE_CLOCK /*lint --e(923, 9078)*/ ((*(Ifx_CLOCK*)0xF0064000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Clock_Registers_Cfg_Clock
 * \{  */
/** \brief 8, Module Identification register */
#define CLOCK_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ID*)0xF0064008u)

/** \brief 20, PROT Register Endinit */
#define CLOCK_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PROT*)0xF0064020u)

/** \brief 24, PROT register safe endinit */
#define CLOCK_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PROT*)0xF0064024u)

/** \brief 28, PROT Register Cyber-Secure APU Endinit */
#define CLOCK_PROTCSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PROT*)0xF0064028u)

/** \brief 40, Write access enable register A */
#define CLOCK_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_WRA*)0xF0064040u)

/** \brief 44, Write access enable register B */
#define CLOCK_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_WRB_FPI*)0xF0064044u)

/** \brief 48, Read access enable register A */
#define CLOCK_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_RDA*)0xF0064048u)

/** \brief 4C, Read access enable register B */
#define CLOCK_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_RDB_FPI*)0xF006404Cu)

/** \brief 50, VM access enable register */
#define CLOCK_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_VM*)0xF0064050u)

/** \brief 54, PRS access enable register */
#define CLOCK_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_PRS*)0xF0064054u)

/** \brief 60, ACCENCS write access enable register A */
#define CLOCK_ACCENCS_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_WRA*)0xF0064060u)

/** \brief 64, ACCENCS write access enable register B */
#define CLOCK_ACCENCS_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_WRB_FPI*)0xF0064064u)

/** \brief 68, ACCENCS read access enable register A */
#define CLOCK_ACCENCS_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_RDA*)0xF0064068u)

/** \brief 6C, ACCENCS read access enable register B */
#define CLOCK_ACCENCS_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_RDB_FPI*)0xF006406Cu)

/** \brief 70, ACCENCS VM access enable register */
#define CLOCK_ACCENCS_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_VM*)0xF0064070u)

/** \brief 74, ACCENCS PRS access enable register */
#define CLOCK_ACCENCS_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_ACCEN_PRS*)0xF0064074u)

/** \brief 100, Crystal oscillator control register */
#define CLOCK_OSCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_OSCCON*)0xF0064100u)

/** \brief 200, Ramp oscillator control register 0 */
#define CLOCK_RAMPCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_RAMPCON0*)0xF0064200u)

/** \brief 20C, Ramp oscillator status register */
#define CLOCK_RAMPSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_RAMPSTAT*)0xF006420Cu)

/** \brief 300, System-PLL configuration register 0 */
#define CLOCK_SYSPLLCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_SYSPLLCON0*)0xF0064300u)

/** \brief 304, System-PLL configuration register 1 */
#define CLOCK_SYSPLLCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_SYSPLLCON1*)0xF0064304u)

/** \brief 308, System-PLL configuration register 2 */
#define CLOCK_SYSPLLCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_SYSPLLCON2*)0xF0064308u)

/** \brief 30C, System-PLL status register */
#define CLOCK_SYSPLLSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_SYSPLLSTAT*)0xF006430Cu)

/** \brief 340, System-PLL modulation trim configuration register 0 */
#define CLOCK_SMODCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_SMODCON0*)0xF0064340u)

/** \brief 380, Peripheral-PLL configuration register 0 */
#define CLOCK_PERPLLCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PERPLLCON0*)0xF0064380u)

/** \brief 384, Peripheral-PLL configuration register 1 */
#define CLOCK_PERPLLCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PERPLLCON1*)0xF0064384u)

/** \brief 388, Peripheral-PLL configuration register 2 */
#define CLOCK_PERPLLCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PERPLLCON2*)0xF0064388u)

/** \brief 38C, Peripheral-PLL status register */
#define CLOCK_PERPLLSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PERPLLSTAT*)0xF006438Cu)

/** \brief 3A0, Peripheral-PLL modulation trim configuration register 0 */
#define CLOCK_PMODCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PMODCON0*)0xF00643A0u)

/** \brief 400, Global clock control register */
#define CLOCK_CCUCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_CCUCON*)0xF0064400u)

/** \brief 404, Global clock status register */
#define CLOCK_CCUSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_CCUSTAT*)0xF0064404u)

/** \brief 410, System CCU clock control register 0 */
#define CLOCK_SYSCCUCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_SYSCCUCON0*)0xF0064410u)

/** \brief 414, System CCU clock control register 1 */
#define CLOCK_SYSCCUCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_SYSCCUCON1*)0xF0064414u)

/** \brief 420, Peripheral CCU clock control register 0 */
#define CLOCK_PERCCUCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PERCCUCON0*)0xF0064420u)

/** \brief 424, Peripheral CCU clock control register 1 */
#define CLOCK_PERCCUCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_PERCCUCON1*)0xF0064424u)

/** \brief 430, External clock control register */
#define CLOCK_EXTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_EXTCON*)0xF0064430u)

/** \brief 434, Fractional divider control register */
#define CLOCK_EXTFDCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_EXTFDCON*)0xF0064434u)

/** \brief 500, Global clock monitor register */
#define CLOCK_CCUMON /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_CCUMON*)0xF0064500u)

/** \brief 504, EVR oscillator monitor register */
#define CLOCK_OSCMON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_OSCMON0*)0xF0064504u)

/** \brief 508, Crystal oscillator monitor register */
#define CLOCK_OSCMON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_OSCMON1*)0xF0064508u)

/** \brief 50C, Crystal oscillator status register */
#define CLOCK_OSCSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_OSCSTAT*)0xF006450Cu)

/** \brief 510, Ramp oscillator monitor register */
#define CLOCK_RAMPMON /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_RAMPMON*)0xF0064510u)

/** \brief 518, Global clock monitor status register */
#define CLOCK_MONSTAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CLOCK_MONSTAT*)0xF0064518u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXCLOCK_REG_H */
