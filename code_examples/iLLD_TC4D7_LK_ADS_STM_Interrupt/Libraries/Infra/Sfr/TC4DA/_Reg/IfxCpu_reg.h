/**
 * \file IfxCpu_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_CPU/V0.2.1.1.11
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg Cpu address
 * \ingroup IfxSfr_Cpu_Registers
 * 
 * \defgroup IfxSfr_Cpu_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg_Cpu0 2-CPU0
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg_Cpu1 2-CPU1
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg_Cpu2 2-CPU2
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg_Cpu3 2-CPU3
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg_Cpu4 2-CPU4
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg_Cpu5 2-CPU5
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 * \defgroup IfxSfr_Cpu_Registers_Cfg_Cpucs 2-CPUCS
 * \ingroup IfxSfr_Cpu_Registers_Cfg
 *
 *
 */
#ifndef IFXCPU_REG_H
#define IFXCPU_REG_H 1
/******************************************************************************/
#include "IfxCpu_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Cpu_Registers_Cfg_BaseAddress
 * \{  */

/** \brief CPU object */
#define MODULE_CPU0 /*lint --e(923, 9078)*/ ((*(Ifx_CPU*)0xF8800000u))
#define MODULE_CPU1 /*lint --e(923, 9078)*/ ((*(Ifx_CPU*)0xF8840000u))
#define MODULE_CPU2 /*lint --e(923, 9078)*/ ((*(Ifx_CPU*)0xF8880000u))
#define MODULE_CPU3 /*lint --e(923, 9078)*/ ((*(Ifx_CPU*)0xF88C0000u))
#define MODULE_CPU4 /*lint --e(923, 9078)*/ ((*(Ifx_CPU*)0xF8900000u))
#define MODULE_CPU5 /*lint --e(923, 9078)*/ ((*(Ifx_CPU*)0xF8940000u))
#define MODULE_CPUCS /*lint --e(923, 9078)*/ ((*(Ifx_CPU*)0xF8980000u))
/** \}  */

/** \brief 1030, CPUx SRI error generation register : Internal Address */
#define CPU_SEGEN 0x1030

/** \brief 1040, CPUx lockstep test register : Internal Address */
#define CPU_LCLTEST 0x1040

/** \brief 8100, CPUx data access cacheability register : Internal Address */
#define CPU_PMA0 0x8100

/** \brief 8104, CPUx code access cacheability register : Internal Address */
#define CPU_PMA1 0x8104

/** \brief 8108, CPUx peripheral space identifier register : Internal Address */
#define CPU_PMA2 0x8108

/** \brief 9000, CPUx data control register 2 : Internal Address */
#define CPU_DCON2 0x9000

/** \brief 9008, CPUx data control register 1 : Internal Address */
#define CPU_DCON1 0x9008

/** \brief 900C, CPUx SIST mode access control register : Internal Address */
#define CPU_SMACON 0x900C

/** \brief 9010, CPUx HR specific data synchronous trap register : Internal Address */
#define CPU_DSTR 0x9010

/** \brief 9010, CPUx HR specific data synchronous trap register : Internal Address */
#define CPU_HVHRA_DSTR 0x9011

/** \brief 9010, CPUx HR specific data synchronous trap register : Internal Address */
#define CPU_HVHRB_DSTR 0x9012

/** \brief 9018, CPUx HR specific data asynchronous trap register : Internal Address */
#define CPU_DATR 0x9018

/** \brief 9018, CPUx HR specific data asynchronous trap register : Internal Address */
#define CPU_HVHRA_DATR 0x9019

/** \brief 9018, CPUx HR specific data asynchronous trap register : Internal Address */
#define CPU_HVHRB_DATR 0x901A

/** \brief 901C, CPUx HR specific data error address register : Internal Address */
#define CPU_DEADD 0x901C

/** \brief 901C, CPUx HR specific data error address register : Internal Address */
#define CPU_HVHRA_DEADD 0x901D

/** \brief 901C, CPUx HR specific data error address register : Internal Address */
#define CPU_HVHRB_DEADD 0x901E

/** \brief 9020, CPUx data integrity error address register : Internal Address */
#define CPU_DIEAR 0x9020

/** \brief 9020, CPUx data integrity error address register : Internal Address */
#define CPU_HVHRA_DIEAR 0x9021

/** \brief 9020, CPUx data integrity error address register : Internal Address */
#define CPU_HVHRB_DIEAR 0x9022

/** \brief 9024, CPUx data integrity error trap register : Internal Address */
#define CPU_DIETR 0x9024

/** \brief 9024, CPUx data integrity error trap register : Internal Address */
#define CPU_HVHRA_DIETR 0x9025

/** \brief 9024, CPUx data integrity error trap register : Internal Address */
#define CPU_HVHRB_DIETR 0x9026

/** \brief 9040, CPUx data memory control register : Internal Address */
#define CPU_DCON0 0x9040

/** \brief 9200, CPUx HR specific program synchronous trap register : Internal Address */
#define CPU_PSTR 0x9200

/** \brief 9200, CPUx HR specific program synchronous trap register : Internal Address */
#define CPU_HVHRA_PSTR 0x9201

/** \brief 9200, CPUx HR specific program synchronous trap register : Internal Address */
#define CPU_HVHRB_PSTR 0x9202

/** \brief 9204, CPUx program control 1 : Internal Address */
#define CPU_PCON1 0x9204

/** \brief 9208, CPUx program control 2 : Internal Address */
#define CPU_PCON2 0x9208

/** \brief 920C, CPUx program control 0 : Internal Address */
#define CPU_PCON0 0x920C

/** \brief 9210, CPUx HR specific program integrity error address register : Internal Address */
#define CPU_PIEAR 0x9210

/** \brief 9210, CPUx HR specific program integrity error address register : Internal Address */
#define CPU_HVHRA_PIEAR 0x9211

/** \brief 9210, CPUx HR specific program integrity error address register : Internal Address */
#define CPU_HVHRB_PIEAR 0x9212

/** \brief 9214, CPUx HR specific program integrity error trap register : Internal Address */
#define CPU_PIETR 0x9214

/** \brief 9214, CPUx HR specific program integrity error trap register : Internal Address */
#define CPU_HVHRA_PIETR 0x9215

/** \brief 9214, CPUx HR specific program integrity error trap register : Internal Address */
#define CPU_HVHRB_PIETR 0x9216

/** \brief 9400, CPUx compatibility control register : Internal Address */
#define CPU_COMPAT 0x9400

/** \brief A000, CPUx HR specific trap control register : Internal Address */
#define CPU_FPU_TRAP_CON 0xA000

/** \brief A000, CPUx HR specific trap control register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_CON 0xA001

/** \brief A000, CPUx HR specific trap control register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_CON 0xA002

/** \brief A004, CPUx HR specific trapping instruction program counter register : Internal Address */
#define CPU_FPU_TRAP_PC 0xA004

/** \brief A004, CPUx HR specific trapping instruction program counter register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_PC 0xA005

/** \brief A004, CPUx HR specific trapping instruction program counter register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_PC 0xA006

/** \brief A008, CPUx HR specific trapping instruction opcode register : Internal Address */
#define CPU_FPU_TRAP_OPC 0xA008

/** \brief A008, CPUx HR specific trapping instruction opcode register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_OPC 0xA009

/** \brief A008, CPUx HR specific trapping instruction opcode register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_OPC 0xA00A

/** \brief A010, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_FPU_TRAP_SRC1_L 0xA010

/** \brief A010, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_SRC1_L 0xA011

/** \brief A010, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_SRC1_L 0xA012

/** \brief A014, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_FPU_TRAP_SRC1_U 0xA014

/** \brief A014, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_SRC1_U 0xA015

/** \brief A014, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_SRC1_U 0xA016

/** \brief A018, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_FPU_TRAP_SRC2_L 0xA018

/** \brief A018, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_SRC2_L 0xA019

/** \brief A018, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_SRC2_L 0xA01A

/** \brief A01C, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_FPU_TRAP_SRC2_U 0xA01C

/** \brief A01C, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_SRC2_U 0xA01D

/** \brief A01C, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_SRC2_U 0xA01E

/** \brief A020, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_FPU_TRAP_SRC3_L 0xA020

/** \brief A020, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_SRC3_L 0xA021

/** \brief A020, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_SRC3_L 0xA022

/** \brief A024, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_FPU_TRAP_SRC3_U 0xA024

/** \brief A024, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRA_FPU_TRAP_SRC3_U 0xA025

/** \brief A024, CPUx HR specific trapping instruction operand register : Internal Address */
#define CPU_HVHRB_FPU_TRAP_SRC3_U 0xA026

/** \brief A030, CPUx HR specific synchronous trap control register : Internal Address */
#define CPU_FPU_SYNC_TRAP_CON 0xA030

/** \brief A030, CPUx HR specific synchronous trap control register : Internal Address */
#define CPU_HVHRA_FPU_SYNC_TRAP_CON 0xA031

/** \brief A030, CPUx HR specific synchronous trap control register : Internal Address */
#define CPU_HVHRB_FPU_SYNC_TRAP_CON 0xA032

/** \brief A034, CPUx HR specific trapping instruction opcode register : Internal Address */
#define CPU_FPU_SYNC_TRAP_OPC 0xA034

/** \brief A034, CPUx HR specific trapping instruction opcode register : Internal Address */
#define CPU_HVHRA_FPU_SYNC_TRAP_OPC 0xA035

/** \brief A034, CPUx HR specific trapping instruction opcode register : Internal Address */
#define CPU_HVHRB_FPU_SYNC_TRAP_OPC 0xA036

/** \brief B000, CPUx virtualization control register 0 : Internal Address */
#define CPU_VCON0 0xB000

/** \brief B004, CPUx virtualization control register 1 : Internal Address */
#define CPU_VCON1 0xB004

/** \brief B008, CPUx virtualization control register 2 : Internal Address */
#define CPU_VCON2 0xB008

/** \brief B010, CPUx base hypervisor vector table pointer : Internal Address */
#define CPU_BHV 0xB010

/** \brief B100, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR0 0xB100
/** Alias (User Manual Name) for CPU_VM_ICR0 */
#define CPU_VM0_ICR (CPU_VM_ICR0)

/** \brief B104, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR1 0xB104
/** Alias (User Manual Name) for CPU_VM_ICR1 */
#define CPU_VM1_ICR (CPU_VM_ICR1)

/** \brief B108, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR2 0xB108
/** Alias (User Manual Name) for CPU_VM_ICR2 */
#define CPU_VM2_ICR (CPU_VM_ICR2)

/** \brief B10C, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR3 0xB10C
/** Alias (User Manual Name) for CPU_VM_ICR3 */
#define CPU_VM3_ICR (CPU_VM_ICR3)

/** \brief B110, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR4 0xB110
/** Alias (User Manual Name) for CPU_VM_ICR4 */
#define CPU_VM4_ICR (CPU_VM_ICR4)

/** \brief B114, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR5 0xB114
/** Alias (User Manual Name) for CPU_VM_ICR5 */
#define CPU_VM5_ICR (CPU_VM_ICR5)

/** \brief B118, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR6 0xB118
/** Alias (User Manual Name) for CPU_VM_ICR6 */
#define CPU_VM6_ICR (CPU_VM_ICR6)

/** \brief B11C, CPUx Virtual machine n interrupt state : Internal Address */
#define CPU_VM_ICR7 0xB11C
/** Alias (User Manual Name) for CPU_VM_ICR7 */
#define CPU_VM7_ICR (CPU_VM_ICR7)

/** \brief B200, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH0 0xB200
/** Alias (User Manual Name) for CPU_VM_PETHRESH0 */
#define CPU_VM0_PETHRESH (CPU_VM_PETHRESH0)

/** \brief B204, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH1 0xB204
/** Alias (User Manual Name) for CPU_VM_PETHRESH1 */
#define CPU_VM1_PETHRESH (CPU_VM_PETHRESH1)

/** \brief B208, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH2 0xB208
/** Alias (User Manual Name) for CPU_VM_PETHRESH2 */
#define CPU_VM2_PETHRESH (CPU_VM_PETHRESH2)

/** \brief B20C, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH3 0xB20C
/** Alias (User Manual Name) for CPU_VM_PETHRESH3 */
#define CPU_VM3_PETHRESH (CPU_VM_PETHRESH3)

/** \brief B210, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH4 0xB210
/** Alias (User Manual Name) for CPU_VM_PETHRESH4 */
#define CPU_VM4_PETHRESH (CPU_VM_PETHRESH4)

/** \brief B214, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH5 0xB214
/** Alias (User Manual Name) for CPU_VM_PETHRESH5 */
#define CPU_VM5_PETHRESH (CPU_VM_PETHRESH5)

/** \brief B218, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH6 0xB218
/** Alias (User Manual Name) for CPU_VM_PETHRESH6 */
#define CPU_VM6_PETHRESH (CPU_VM_PETHRESH6)

/** \brief B21C, CPUx Virtual machine n pre-emption threshold : Internal Address */
#define CPU_VM_PETHRESH7 0xB21C
/** Alias (User Manual Name) for CPU_VM_PETHRESH7 */
#define CPU_VM7_PETHRESH (CPU_VM_PETHRESH7)

/** \brief C000, CPUx HR specific data protection range 0, lower bound register : Internal Address */
#define CPU_DPR0_L 0xC000

/** \brief C000, CPUx HR specific data protection range 0, lower bound register : Internal Address */
#define CPU_HVHRA_DPR0_L 0xC001

/** \brief C000, CPUx HR specific data protection range 0, lower bound register : Internal Address */
#define CPU_HVHRB_DPR0_L 0xC002

/** \brief C004, CPUx HR specific data protection range 0, upper bound register : Internal Address */
#define CPU_DPR0_U 0xC004

/** \brief C004, CPUx HR specific data protection range 0, upper bound register : Internal Address */
#define CPU_HVHRA_DPR0_U 0xC005

/** \brief C004, CPUx HR specific data protection range 0, upper bound register : Internal Address */
#define CPU_HVHRB_DPR0_U 0xC006

/** \brief C008, CPUx HR specific data protection range 1, lower bound register : Internal Address */
#define CPU_DPR1_L 0xC008

/** \brief C008, CPUx HR specific data protection range 1, lower bound register : Internal Address */
#define CPU_HVHRA_DPR1_L 0xC009

/** \brief C008, CPUx HR specific data protection range 1, lower bound register : Internal Address */
#define CPU_HVHRB_DPR1_L 0xC00A

/** \brief C00C, CPUx HR specific data protection range 1, upper bound register : Internal Address */
#define CPU_DPR1_U 0xC00C

/** \brief C00C, CPUx HR specific data protection range 1, upper bound register : Internal Address */
#define CPU_HVHRA_DPR1_U 0xC00D

/** \brief C00C, CPUx HR specific data protection range 1, upper bound register : Internal Address */
#define CPU_HVHRB_DPR1_U 0xC00E

/** \brief C010, CPUx HR specific data protection range 2, lower bound register : Internal Address */
#define CPU_DPR2_L 0xC010

/** \brief C010, CPUx HR specific data protection range 2, lower bound register : Internal Address */
#define CPU_HVHRA_DPR2_L 0xC011

/** \brief C010, CPUx HR specific data protection range 2, lower bound register : Internal Address */
#define CPU_HVHRB_DPR2_L 0xC012

/** \brief C014, CPUx HR specific data protection range 2, upper bound register : Internal Address */
#define CPU_DPR2_U 0xC014

/** \brief C014, CPUx HR specific data protection range 2, upper bound register : Internal Address */
#define CPU_HVHRA_DPR2_U 0xC015

/** \brief C014, CPUx HR specific data protection range 2, upper bound register : Internal Address */
#define CPU_HVHRB_DPR2_U 0xC016

/** \brief C018, CPUx HR specific data protection range 3, lower bound register : Internal Address */
#define CPU_DPR3_L 0xC018

/** \brief C018, CPUx HR specific data protection range 3, lower bound register : Internal Address */
#define CPU_HVHRA_DPR3_L 0xC019

/** \brief C018, CPUx HR specific data protection range 3, lower bound register : Internal Address */
#define CPU_HVHRB_DPR3_L 0xC01A

/** \brief C01C, CPUx HR specific data protection range 3, upper bound register : Internal Address */
#define CPU_DPR3_U 0xC01C

/** \brief C01C, CPUx HR specific data protection range 3, upper bound register : Internal Address */
#define CPU_HVHRA_DPR3_U 0xC01D

/** \brief C01C, CPUx HR specific data protection range 3, upper bound register : Internal Address */
#define CPU_HVHRB_DPR3_U 0xC01E

/** \brief C020, CPUx HR specific data protection range 4, lower bound register : Internal Address */
#define CPU_DPR4_L 0xC020

/** \brief C020, CPUx HR specific data protection range 4, lower bound register : Internal Address */
#define CPU_HVHRA_DPR4_L 0xC021

/** \brief C020, CPUx HR specific data protection range 4, lower bound register : Internal Address */
#define CPU_HVHRB_DPR4_L 0xC022

/** \brief C024, CPUx HR specific data protection range 4, upper bound register : Internal Address */
#define CPU_DPR4_U 0xC024

/** \brief C024, CPUx HR specific data protection range 4, upper bound register : Internal Address */
#define CPU_HVHRA_DPR4_U 0xC025

/** \brief C024, CPUx HR specific data protection range 4, upper bound register : Internal Address */
#define CPU_HVHRB_DPR4_U 0xC026

/** \brief C028, CPUx HR specific data protection range 5, lower bound register : Internal Address */
#define CPU_DPR5_L 0xC028

/** \brief C028, CPUx HR specific data protection range 5, lower bound register : Internal Address */
#define CPU_HVHRA_DPR5_L 0xC029

/** \brief C028, CPUx HR specific data protection range 5, lower bound register : Internal Address */
#define CPU_HVHRB_DPR5_L 0xC02A

/** \brief C02C, CPUx HR specific data protection range 5, upper bound register : Internal Address */
#define CPU_DPR5_U 0xC02C

/** \brief C02C, CPUx HR specific data protection range 5, upper bound register : Internal Address */
#define CPU_HVHRA_DPR5_U 0xC02D

/** \brief C02C, CPUx HR specific data protection range 5, upper bound register : Internal Address */
#define CPU_HVHRB_DPR5_U 0xC02E

/** \brief C030, CPUx HR specific data protection range 6, lower bound register : Internal Address */
#define CPU_DPR6_L 0xC030

/** \brief C030, CPUx HR specific data protection range 6, lower bound register : Internal Address */
#define CPU_HVHRA_DPR6_L 0xC031

/** \brief C030, CPUx HR specific data protection range 6, lower bound register : Internal Address */
#define CPU_HVHRB_DPR6_L 0xC032

/** \brief C034, CPUx HR specific data protection range 6, upper bound register : Internal Address */
#define CPU_DPR6_U 0xC034

/** \brief C034, CPUx HR specific data protection range 6, upper bound register : Internal Address */
#define CPU_HVHRA_DPR6_U 0xC035

/** \brief C034, CPUx HR specific data protection range 6, upper bound register : Internal Address */
#define CPU_HVHRB_DPR6_U 0xC036

/** \brief C038, CPUx HR specific data protection range 7, lower bound register : Internal Address */
#define CPU_DPR7_L 0xC038

/** \brief C038, CPUx HR specific data protection range 7, lower bound register : Internal Address */
#define CPU_HVHRA_DPR7_L 0xC039

/** \brief C038, CPUx HR specific data protection range 7, lower bound register : Internal Address */
#define CPU_HVHRB_DPR7_L 0xC03A

/** \brief C03C, CPUx HR specific data protection range 7, upper bound register : Internal Address */
#define CPU_DPR7_U 0xC03C

/** \brief C03C, CPUx HR specific data protection range 7, upper bound register : Internal Address */
#define CPU_HVHRA_DPR7_U 0xC03D

/** \brief C03C, CPUx HR specific data protection range 7, upper bound register : Internal Address */
#define CPU_HVHRB_DPR7_U 0xC03E

/** \brief C040, CPUx HR specific data protection range 8, lower bound register : Internal Address */
#define CPU_DPR8_L 0xC040

/** \brief C040, CPUx HR specific data protection range 8, lower bound register : Internal Address */
#define CPU_HVHRA_DPR8_L 0xC041

/** \brief C040, CPUx HR specific data protection range 8, lower bound register : Internal Address */
#define CPU_HVHRB_DPR8_L 0xC042

/** \brief C044, CPUx HR specific data protection range 8, upper bound register : Internal Address */
#define CPU_DPR8_U 0xC044

/** \brief C044, CPUx HR specific data protection range 8, upper bound register : Internal Address */
#define CPU_HVHRA_DPR8_U 0xC045

/** \brief C044, CPUx HR specific data protection range 8, upper bound register : Internal Address */
#define CPU_HVHRB_DPR8_U 0xC046

/** \brief C048, CPUx HR specific data protection range 9, lower bound register : Internal Address */
#define CPU_DPR9_L 0xC048

/** \brief C048, CPUx HR specific data protection range 9, lower bound register : Internal Address */
#define CPU_HVHRA_DPR9_L 0xC049

/** \brief C048, CPUx HR specific data protection range 9, lower bound register : Internal Address */
#define CPU_HVHRB_DPR9_L 0xC04A

/** \brief C04C, CPUx HR specific data protection range 9, upper bound register : Internal Address */
#define CPU_DPR9_U 0xC04C

/** \brief C04C, CPUx HR specific data protection range 9, upper bound register : Internal Address */
#define CPU_HVHRA_DPR9_U 0xC04D

/** \brief C04C, CPUx HR specific data protection range 9, upper bound register : Internal Address */
#define CPU_HVHRB_DPR9_U 0xC04E

/** \brief C050, CPUx HR specific data protection range 10, lower bound register : Internal Address */
#define CPU_DPR10_L 0xC050

/** \brief C050, CPUx HR specific data protection range 10, lower bound register : Internal Address */
#define CPU_HVHRA_DPR10_L 0xC051

/** \brief C050, CPUx HR specific data protection range 10, lower bound register : Internal Address */
#define CPU_HVHRB_DPR10_L 0xC052

/** \brief C054, CPUx HR specific data protection range 10, upper bound register : Internal Address */
#define CPU_DPR10_U 0xC054

/** \brief C054, CPUx HR specific data protection range 10, upper bound register : Internal Address */
#define CPU_HVHRA_DPR10_U 0xC055

/** \brief C054, CPUx HR specific data protection range 10, upper bound register : Internal Address */
#define CPU_HVHRB_DPR10_U 0xC056

/** \brief C058, CPUx HR specific data protection range 11, lower bound register : Internal Address */
#define CPU_DPR11_L 0xC058

/** \brief C058, CPUx HR specific data protection range 11, lower bound register : Internal Address */
#define CPU_HVHRA_DPR11_L 0xC059

/** \brief C058, CPUx HR specific data protection range 11, lower bound register : Internal Address */
#define CPU_HVHRB_DPR11_L 0xC05A

/** \brief C05C, CPUx HR specific data protection range 11, upper bound register : Internal Address */
#define CPU_DPR11_U 0xC05C

/** \brief C05C, CPUx HR specific data protection range 11, upper bound register : Internal Address */
#define CPU_HVHRA_DPR11_U 0xC05D

/** \brief C05C, CPUx HR specific data protection range 11, upper bound register : Internal Address */
#define CPU_HVHRB_DPR11_U 0xC05E

/** \brief C060, CPUx HR specific data protection range 12, lower bound register : Internal Address */
#define CPU_DPR12_L 0xC060

/** \brief C060, CPUx HR specific data protection range 12, lower bound register : Internal Address */
#define CPU_HVHRA_DPR12_L 0xC061

/** \brief C060, CPUx HR specific data protection range 12, lower bound register : Internal Address */
#define CPU_HVHRB_DPR12_L 0xC062

/** \brief C064, CPUx HR specific data protection range 12, upper bound register : Internal Address */
#define CPU_DPR12_U 0xC064

/** \brief C064, CPUx HR specific data protection range 12, upper bound register : Internal Address */
#define CPU_HVHRA_DPR12_U 0xC065

/** \brief C064, CPUx HR specific data protection range 12, upper bound register : Internal Address */
#define CPU_HVHRB_DPR12_U 0xC066

/** \brief C068, CPUx HR specific data protection range 13, lower bound register : Internal Address */
#define CPU_DPR13_L 0xC068

/** \brief C068, CPUx HR specific data protection range 13, lower bound register : Internal Address */
#define CPU_HVHRA_DPR13_L 0xC069

/** \brief C068, CPUx HR specific data protection range 13, lower bound register : Internal Address */
#define CPU_HVHRB_DPR13_L 0xC06A

/** \brief C06C, CPUx HR specific data protection range 13, upper bound register : Internal Address */
#define CPU_DPR13_U 0xC06C

/** \brief C06C, CPUx HR specific data protection range 13, upper bound register : Internal Address */
#define CPU_HVHRA_DPR13_U 0xC06D

/** \brief C06C, CPUx HR specific data protection range 13, upper bound register : Internal Address */
#define CPU_HVHRB_DPR13_U 0xC06E

/** \brief C070, CPUx HR specific data protection range 14, lower bound register : Internal Address */
#define CPU_DPR14_L 0xC070

/** \brief C070, CPUx HR specific data protection range 14, lower bound register : Internal Address */
#define CPU_HVHRA_DPR14_L 0xC071

/** \brief C070, CPUx HR specific data protection range 14, lower bound register : Internal Address */
#define CPU_HVHRB_DPR14_L 0xC072

/** \brief C074, CPUx HR specific data protection range 14, upper bound register : Internal Address */
#define CPU_DPR14_U 0xC074

/** \brief C074, CPUx HR specific data protection range 14, upper bound register : Internal Address */
#define CPU_HVHRA_DPR14_U 0xC075

/** \brief C074, CPUx HR specific data protection range 14, upper bound register : Internal Address */
#define CPU_HVHRB_DPR14_U 0xC076

/** \brief C078, CPUx HR specific data protection range 15, lower bound register : Internal Address */
#define CPU_DPR15_L 0xC078

/** \brief C078, CPUx HR specific data protection range 15, lower bound register : Internal Address */
#define CPU_HVHRA_DPR15_L 0xC079

/** \brief C078, CPUx HR specific data protection range 15, lower bound register : Internal Address */
#define CPU_HVHRB_DPR15_L 0xC07A

/** \brief C07C, CPUx HR specific data protection range 15, upper bound register : Internal Address */
#define CPU_DPR15_U 0xC07C

/** \brief C07C, CPUx HR specific data protection range 15, upper bound register : Internal Address */
#define CPU_HVHRA_DPR15_U 0xC07D

/** \brief C07C, CPUx HR specific data protection range 15, upper bound register : Internal Address */
#define CPU_HVHRB_DPR15_U 0xC07E

/** \brief C080, CPUx HR specific data protection range 16, lower bound register : Internal Address */
#define CPU_DPR16_L 0xC080

/** \brief C080, CPUx HR specific data protection range 16, lower bound register : Internal Address */
#define CPU_HVHRA_DPR16_L 0xC081

/** \brief C080, CPUx HR specific data protection range 16, lower bound register : Internal Address */
#define CPU_HVHRB_DPR16_L 0xC082

/** \brief C084, CPUx HR specific data protection range 16, upper bound register : Internal Address */
#define CPU_DPR16_U 0xC084

/** \brief C084, CPUx HR specific data protection range 16, upper bound register : Internal Address */
#define CPU_HVHRA_DPR16_U 0xC085

/** \brief C084, CPUx HR specific data protection range 16, upper bound register : Internal Address */
#define CPU_HVHRB_DPR16_U 0xC086

/** \brief C088, CPUx HR specific data protection range 17, lower bound register : Internal Address */
#define CPU_DPR17_L 0xC088

/** \brief C088, CPUx HR specific data protection range 17, lower bound register : Internal Address */
#define CPU_HVHRA_DPR17_L 0xC089

/** \brief C088, CPUx HR specific data protection range 17, lower bound register : Internal Address */
#define CPU_HVHRB_DPR17_L 0xC08A

/** \brief C08C, CPUx HR specific data protection range 17, upper bound register : Internal Address */
#define CPU_DPR17_U 0xC08C

/** \brief C08C, CPUx HR specific data protection range 17, upper bound register : Internal Address */
#define CPU_HVHRA_DPR17_U 0xC08D

/** \brief C08C, CPUx HR specific data protection range 17, upper bound register : Internal Address */
#define CPU_HVHRB_DPR17_U 0xC08E

/** \brief C090, CPUx HR specific data protection range 18, lower bound register : Internal Address */
#define CPU_DPR18_L 0xC090

/** \brief C090, CPUx HR specific data protection range 18, lower bound register : Internal Address */
#define CPU_HVHRA_DPR18_L 0xC091

/** \brief C090, CPUx HR specific data protection range 18, lower bound register : Internal Address */
#define CPU_HVHRB_DPR18_L 0xC092

/** \brief C094, CPUx HR specific data protection range 18, upper bound register : Internal Address */
#define CPU_DPR18_U 0xC094

/** \brief C094, CPUx HR specific data protection range 18, upper bound register : Internal Address */
#define CPU_HVHRA_DPR18_U 0xC095

/** \brief C094, CPUx HR specific data protection range 18, upper bound register : Internal Address */
#define CPU_HVHRB_DPR18_U 0xC096

/** \brief C098, CPUx HR specific data protection range 19, lower bound register : Internal Address */
#define CPU_DPR19_L 0xC098

/** \brief C098, CPUx HR specific data protection range 19, lower bound register : Internal Address */
#define CPU_HVHRA_DPR19_L 0xC099

/** \brief C098, CPUx HR specific data protection range 19, lower bound register : Internal Address */
#define CPU_HVHRB_DPR19_L 0xC09A

/** \brief C09C, CPUx HR specific data protection range 19, upper bound register : Internal Address */
#define CPU_DPR19_U 0xC09C

/** \brief C09C, CPUx HR specific data protection range 19, upper bound register : Internal Address */
#define CPU_HVHRA_DPR19_U 0xC09D

/** \brief C09C, CPUx HR specific data protection range 19, upper bound register : Internal Address */
#define CPU_HVHRB_DPR19_U 0xC09E

/** \brief C0A0, CPUx HR specific data protection range 20, lower bound register : Internal Address */
#define CPU_DPR20_L 0xC0A0

/** \brief C0A0, CPUx HR specific data protection range 20, lower bound register : Internal Address */
#define CPU_HVHRA_DPR20_L 0xC0A1

/** \brief C0A0, CPUx HR specific data protection range 20, lower bound register : Internal Address */
#define CPU_HVHRB_DPR20_L 0xC0A2

/** \brief C0A4, CPUx HR specific data protection range 20, upper bound register : Internal Address */
#define CPU_DPR20_U 0xC0A4

/** \brief C0A4, CPUx HR specific data protection range 20, upper bound register : Internal Address */
#define CPU_HVHRA_DPR20_U 0xC0A5

/** \brief C0A4, CPUx HR specific data protection range 20, upper bound register : Internal Address */
#define CPU_HVHRB_DPR20_U 0xC0A6

/** \brief C0A8, CPUx HR specific data protection range 21, lower bound register : Internal Address */
#define CPU_DPR21_L 0xC0A8

/** \brief C0A8, CPUx HR specific data protection range 21, lower bound register : Internal Address */
#define CPU_HVHRA_DPR21_L 0xC0A9

/** \brief C0A8, CPUx HR specific data protection range 21, lower bound register : Internal Address */
#define CPU_HVHRB_DPR21_L 0xC0AA

/** \brief C0AC, CPUx HR specific data protection range 21, upper bound register : Internal Address */
#define CPU_DPR21_U 0xC0AC

/** \brief C0AC, CPUx HR specific data protection range 21, upper bound register : Internal Address */
#define CPU_HVHRA_DPR21_U 0xC0AD

/** \brief C0AC, CPUx HR specific data protection range 21, upper bound register : Internal Address */
#define CPU_HVHRB_DPR21_U 0xC0AE

/** \brief C0B0, CPUx HR specific data protection range 22, lower bound register : Internal Address */
#define CPU_DPR22_L 0xC0B0

/** \brief C0B0, CPUx HR specific data protection range 22, lower bound register : Internal Address */
#define CPU_HVHRA_DPR22_L 0xC0B1

/** \brief C0B0, CPUx HR specific data protection range 22, lower bound register : Internal Address */
#define CPU_HVHRB_DPR22_L 0xC0B2

/** \brief C0B4, CPUx HR specific data protection range 22, upper bound register : Internal Address */
#define CPU_DPR22_U 0xC0B4

/** \brief C0B4, CPUx HR specific data protection range 22, upper bound register : Internal Address */
#define CPU_HVHRA_DPR22_U 0xC0B5

/** \brief C0B4, CPUx HR specific data protection range 22, upper bound register : Internal Address */
#define CPU_HVHRB_DPR22_U 0xC0B6

/** \brief C0B8, CPUx HR specific data protection range 23, lower bound register : Internal Address */
#define CPU_DPR23_L 0xC0B8

/** \brief C0B8, CPUx HR specific data protection range 23, lower bound register : Internal Address */
#define CPU_HVHRA_DPR23_L 0xC0B9

/** \brief C0B8, CPUx HR specific data protection range 23, lower bound register : Internal Address */
#define CPU_HVHRB_DPR23_L 0xC0BA

/** \brief C0BC, CPUx HR specific data protection range 23, upper bound register : Internal Address */
#define CPU_DPR23_U 0xC0BC

/** \brief C0BC, CPUx HR specific data protection range 23, upper bound register : Internal Address */
#define CPU_HVHRA_DPR23_U 0xC0BD

/** \brief C0BC, CPUx HR specific data protection range 23, upper bound register : Internal Address */
#define CPU_HVHRB_DPR23_U 0xC0BE

/** \brief D000, CPUx HR specific code protection range 0, lower bound register : Internal Address */
#define CPU_CPR0_L 0xD000

/** \brief D000, CPUx HR specific code protection range 0, lower bound register : Internal Address */
#define CPU_HVHRA_CPR0_L 0xD001

/** \brief D000, CPUx HR specific code protection range 0, lower bound register : Internal Address */
#define CPU_HVHRB_CPR0_L 0xD002

/** \brief D004, CPUx HR specific code protection range 0, upper bound register : Internal Address */
#define CPU_CPR0_U 0xD004

/** \brief D004, CPUx HR specific code protection range 0, upper bound register : Internal Address */
#define CPU_HVHRA_CPR0_U 0xD005

/** \brief D004, CPUx HR specific code protection range 0, upper bound register : Internal Address */
#define CPU_HVHRB_CPR0_U 0xD006

/** \brief D008, CPUx HR specific code protection range 1, lower bound register : Internal Address */
#define CPU_CPR1_L 0xD008

/** \brief D008, CPUx HR specific code protection range 1, lower bound register : Internal Address */
#define CPU_HVHRA_CPR1_L 0xD009

/** \brief D008, CPUx HR specific code protection range 1, lower bound register : Internal Address */
#define CPU_HVHRB_CPR1_L 0xD00A

/** \brief D00C, CPUx HR specific code protection range 1, upper bound register : Internal Address */
#define CPU_CPR1_U 0xD00C

/** \brief D00C, CPUx HR specific code protection range 1, upper bound register : Internal Address */
#define CPU_HVHRA_CPR1_U 0xD00D

/** \brief D00C, CPUx HR specific code protection range 1, upper bound register : Internal Address */
#define CPU_HVHRB_CPR1_U 0xD00E

/** \brief D010, CPUx HR specific code protection range 2, lower bound register : Internal Address */
#define CPU_CPR2_L 0xD010

/** \brief D010, CPUx HR specific code protection range 2, lower bound register : Internal Address */
#define CPU_HVHRA_CPR2_L 0xD011

/** \brief D010, CPUx HR specific code protection range 2, lower bound register : Internal Address */
#define CPU_HVHRB_CPR2_L 0xD012

/** \brief D014, CPUx HR specific code protection range 2, upper bound register : Internal Address */
#define CPU_CPR2_U 0xD014

/** \brief D014, CPUx HR specific code protection range 2, upper bound register : Internal Address */
#define CPU_HVHRA_CPR2_U 0xD015

/** \brief D014, CPUx HR specific code protection range 2, upper bound register : Internal Address */
#define CPU_HVHRB_CPR2_U 0xD016

/** \brief D018, CPUx HR specific code protection range 3, lower bound register : Internal Address */
#define CPU_CPR3_L 0xD018

/** \brief D018, CPUx HR specific code protection range 3, lower bound register : Internal Address */
#define CPU_HVHRA_CPR3_L 0xD019

/** \brief D018, CPUx HR specific code protection range 3, lower bound register : Internal Address */
#define CPU_HVHRB_CPR3_L 0xD01A

/** \brief D01C, CPUx HR specific code protection range 3, upper bound register : Internal Address */
#define CPU_CPR3_U 0xD01C

/** \brief D01C, CPUx HR specific code protection range 3, upper bound register : Internal Address */
#define CPU_HVHRA_CPR3_U 0xD01D

/** \brief D01C, CPUx HR specific code protection range 3, upper bound register : Internal Address */
#define CPU_HVHRB_CPR3_U 0xD01E

/** \brief D020, CPUx HR specific code protection range 4, lower bound register : Internal Address */
#define CPU_CPR4_L 0xD020

/** \brief D020, CPUx HR specific code protection range 4, lower bound register : Internal Address */
#define CPU_HVHRA_CPR4_L 0xD021

/** \brief D020, CPUx HR specific code protection range 4, lower bound register : Internal Address */
#define CPU_HVHRB_CPR4_L 0xD022

/** \brief D024, CPUx HR specific code protection range 4, upper bound register : Internal Address */
#define CPU_CPR4_U 0xD024

/** \brief D024, CPUx HR specific code protection range 4, upper bound register : Internal Address */
#define CPU_HVHRA_CPR4_U 0xD025

/** \brief D024, CPUx HR specific code protection range 4, upper bound register : Internal Address */
#define CPU_HVHRB_CPR4_U 0xD026

/** \brief D028, CPUx HR specific code protection range 5, lower bound register : Internal Address */
#define CPU_CPR5_L 0xD028

/** \brief D028, CPUx HR specific code protection range 5, lower bound register : Internal Address */
#define CPU_HVHRA_CPR5_L 0xD029

/** \brief D028, CPUx HR specific code protection range 5, lower bound register : Internal Address */
#define CPU_HVHRB_CPR5_L 0xD02A

/** \brief D02C, CPUx HR specific code protection range 5, upper bound register : Internal Address */
#define CPU_CPR5_U 0xD02C

/** \brief D02C, CPUx HR specific code protection range 5, upper bound register : Internal Address */
#define CPU_HVHRA_CPR5_U 0xD02D

/** \brief D02C, CPUx HR specific code protection range 5, upper bound register : Internal Address */
#define CPU_HVHRB_CPR5_U 0xD02E

/** \brief D030, CPUx HR specific code protection range 6, lower bound register : Internal Address */
#define CPU_CPR6_L 0xD030

/** \brief D030, CPUx HR specific code protection range 6, lower bound register : Internal Address */
#define CPU_HVHRA_CPR6_L 0xD031

/** \brief D030, CPUx HR specific code protection range 6, lower bound register : Internal Address */
#define CPU_HVHRB_CPR6_L 0xD032

/** \brief D034, CPUx HR specific code protection range 6, upper bound register : Internal Address */
#define CPU_CPR6_U 0xD034

/** \brief D034, CPUx HR specific code protection range 6, upper bound register : Internal Address */
#define CPU_HVHRA_CPR6_U 0xD035

/** \brief D034, CPUx HR specific code protection range 6, upper bound register : Internal Address */
#define CPU_HVHRB_CPR6_U 0xD036

/** \brief D038, CPUx HR specific code protection range 7, lower bound register : Internal Address */
#define CPU_CPR7_L 0xD038

/** \brief D038, CPUx HR specific code protection range 7, lower bound register : Internal Address */
#define CPU_HVHRA_CPR7_L 0xD039

/** \brief D038, CPUx HR specific code protection range 7, lower bound register : Internal Address */
#define CPU_HVHRB_CPR7_L 0xD03A

/** \brief D03C, CPUx HR specific code protection range 7, upper bound register : Internal Address */
#define CPU_CPR7_U 0xD03C

/** \brief D03C, CPUx HR specific code protection range 7, upper bound register : Internal Address */
#define CPU_HVHRA_CPR7_U 0xD03D

/** \brief D03C, CPUx HR specific code protection range 7, upper bound register : Internal Address */
#define CPU_HVHRB_CPR7_U 0xD03E

/** \brief D040, CPUx HR specific code protection range 8, lower bound register : Internal Address */
#define CPU_CPR8_L 0xD040

/** \brief D040, CPUx HR specific code protection range 8, lower bound register : Internal Address */
#define CPU_HVHRA_CPR8_L 0xD041

/** \brief D040, CPUx HR specific code protection range 8, lower bound register : Internal Address */
#define CPU_HVHRB_CPR8_L 0xD042

/** \brief D044, CPUx HR specific code protection range 8, upper bound register : Internal Address */
#define CPU_CPR8_U 0xD044

/** \brief D044, CPUx HR specific code protection range 8, upper bound register : Internal Address */
#define CPU_HVHRA_CPR8_U 0xD045

/** \brief D044, CPUx HR specific code protection range 8, upper bound register : Internal Address */
#define CPU_HVHRB_CPR8_U 0xD046

/** \brief D048, CPUx HR specific code protection range 9, lower bound register : Internal Address */
#define CPU_CPR9_L 0xD048

/** \brief D048, CPUx HR specific code protection range 9, lower bound register : Internal Address */
#define CPU_HVHRA_CPR9_L 0xD049

/** \brief D048, CPUx HR specific code protection range 9, lower bound register : Internal Address */
#define CPU_HVHRB_CPR9_L 0xD04A

/** \brief D04C, CPUx HR specific code protection range 9, upper bound register : Internal Address */
#define CPU_CPR9_U 0xD04C

/** \brief D04C, CPUx HR specific code protection range 9, upper bound register : Internal Address */
#define CPU_HVHRA_CPR9_U 0xD04D

/** \brief D04C, CPUx HR specific code protection range 9, upper bound register : Internal Address */
#define CPU_HVHRB_CPR9_U 0xD04E

/** \brief D050, CPUx HR specific code protection range 10, lower bound register : Internal Address */
#define CPU_CPR10_L 0xD050

/** \brief D050, CPUx HR specific code protection range 10, lower bound register : Internal Address */
#define CPU_HVHRA_CPR10_L 0xD051

/** \brief D050, CPUx HR specific code protection range 10, lower bound register : Internal Address */
#define CPU_HVHRB_CPR10_L 0xD052

/** \brief D054, CPUx HR specific code protection range 10, upper bound register : Internal Address */
#define CPU_CPR10_U 0xD054

/** \brief D054, CPUx HR specific code protection range 10, upper bound register : Internal Address */
#define CPU_HVHRA_CPR10_U 0xD055

/** \brief D054, CPUx HR specific code protection range 10, upper bound register : Internal Address */
#define CPU_HVHRB_CPR10_U 0xD056

/** \brief D058, CPUx HR specific code protection range 11, lower bound register : Internal Address */
#define CPU_CPR11_L 0xD058

/** \brief D058, CPUx HR specific code protection range 11, lower bound register : Internal Address */
#define CPU_HVHRA_CPR11_L 0xD059

/** \brief D058, CPUx HR specific code protection range 11, lower bound register : Internal Address */
#define CPU_HVHRB_CPR11_L 0xD05A

/** \brief D05C, CPUx HR specific code protection range 11, upper bound register : Internal Address */
#define CPU_CPR11_U 0xD05C

/** \brief D05C, CPUx HR specific code protection range 11, upper bound register : Internal Address */
#define CPU_HVHRA_CPR11_U 0xD05D

/** \brief D05C, CPUx HR specific code protection range 11, upper bound register : Internal Address */
#define CPU_HVHRB_CPR11_U 0xD05E

/** \brief D060, CPUx HR specific code protection range 12, lower bound register : Internal Address */
#define CPU_CPR12_L 0xD060

/** \brief D060, CPUx HR specific code protection range 12, lower bound register : Internal Address */
#define CPU_HVHRA_CPR12_L 0xD061

/** \brief D060, CPUx HR specific code protection range 12, lower bound register : Internal Address */
#define CPU_HVHRB_CPR12_L 0xD062

/** \brief D064, CPUx HR specific code protection range 12, upper bound register : Internal Address */
#define CPU_CPR12_U 0xD064

/** \brief D064, CPUx HR specific code protection range 12, upper bound register : Internal Address */
#define CPU_HVHRA_CPR12_U 0xD065

/** \brief D064, CPUx HR specific code protection range 12, upper bound register : Internal Address */
#define CPU_HVHRB_CPR12_U 0xD066

/** \brief D068, CPUx HR specific code protection range 13, lower bound register : Internal Address */
#define CPU_CPR13_L 0xD068

/** \brief D068, CPUx HR specific code protection range 13, lower bound register : Internal Address */
#define CPU_HVHRA_CPR13_L 0xD069

/** \brief D068, CPUx HR specific code protection range 13, lower bound register : Internal Address */
#define CPU_HVHRB_CPR13_L 0xD06A

/** \brief D06C, CPUx HR specific code protection range 13, upper bound register : Internal Address */
#define CPU_CPR13_U 0xD06C

/** \brief D06C, CPUx HR specific code protection range 13, upper bound register : Internal Address */
#define CPU_HVHRA_CPR13_U 0xD06D

/** \brief D06C, CPUx HR specific code protection range 13, upper bound register : Internal Address */
#define CPU_HVHRB_CPR13_U 0xD06E

/** \brief D070, CPUx HR specific code protection range 14, lower bound register : Internal Address */
#define CPU_CPR14_L 0xD070

/** \brief D070, CPUx HR specific code protection range 14, lower bound register : Internal Address */
#define CPU_HVHRA_CPR14_L 0xD071

/** \brief D070, CPUx HR specific code protection range 14, lower bound register : Internal Address */
#define CPU_HVHRB_CPR14_L 0xD072

/** \brief D074, CPUx HR specific code protection range 14, upper bound register : Internal Address */
#define CPU_CPR14_U 0xD074

/** \brief D074, CPUx HR specific code protection range 14, upper bound register : Internal Address */
#define CPU_HVHRA_CPR14_U 0xD075

/** \brief D074, CPUx HR specific code protection range 14, upper bound register : Internal Address */
#define CPU_HVHRB_CPR14_U 0xD076

/** \brief D078, CPUx HR specific code protection range 15, lower bound register : Internal Address */
#define CPU_CPR15_L 0xD078

/** \brief D078, CPUx HR specific code protection range 15, lower bound register : Internal Address */
#define CPU_HVHRA_CPR15_L 0xD079

/** \brief D078, CPUx HR specific code protection range 15, lower bound register : Internal Address */
#define CPU_HVHRB_CPR15_L 0xD07A

/** \brief D07C, CPUx HR specific code protection range 15, upper bound register : Internal Address */
#define CPU_CPR15_U 0xD07C

/** \brief D07C, CPUx HR specific code protection range 15, upper bound register : Internal Address */
#define CPU_HVHRA_CPR15_U 0xD07D

/** \brief D07C, CPUx HR specific code protection range 15, upper bound register : Internal Address */
#define CPU_HVHRB_CPR15_U 0xD07E

/** \brief E000, CPUx HR specific code protection execute enable register set 0 : Internal Address */
#define CPU_CPXE_0 0xE000

/** \brief E000, CPUx HR specific code protection execute enable register set 0 : Internal Address */
#define CPU_HVHRA_CPXE_0 0xE001

/** \brief E000, CPUx HR specific code protection execute enable register set 0 : Internal Address */
#define CPU_HVHRB_CPXE_0 0xE002

/** \brief E004, CPUx HR specific code protection execute enable register set 1 : Internal Address */
#define CPU_CPXE_1 0xE004

/** \brief E004, CPUx HR specific code protection execute enable register set 1 : Internal Address */
#define CPU_HVHRA_CPXE_1 0xE005

/** \brief E004, CPUx HR specific code protection execute enable register set 1 : Internal Address */
#define CPU_HVHRB_CPXE_1 0xE006

/** \brief E008, CPUx HR specific code protection execute enable register set 2 : Internal Address */
#define CPU_CPXE_2 0xE008

/** \brief E008, CPUx HR specific code protection execute enable register set 2 : Internal Address */
#define CPU_HVHRA_CPXE_2 0xE009

/** \brief E008, CPUx HR specific code protection execute enable register set 2 : Internal Address */
#define CPU_HVHRB_CPXE_2 0xE00A

/** \brief E00C, CPUx HR specific code protection execute enable register set 3 : Internal Address */
#define CPU_CPXE_3 0xE00C

/** \brief E00C, CPUx HR specific code protection execute enable register set 3 : Internal Address */
#define CPU_HVHRA_CPXE_3 0xE00D

/** \brief E00C, CPUx HR specific code protection execute enable register set 3 : Internal Address */
#define CPU_HVHRB_CPXE_3 0xE00E

/** \brief E010, CPUx HR specific data protection read enable register set 0 : Internal Address */
#define CPU_DPRE_0 0xE010

/** \brief E010, CPUx HR specific data protection read enable register set 0 : Internal Address */
#define CPU_HVHRA_DPRE_0 0xE011

/** \brief E010, CPUx HR specific data protection read enable register set 0 : Internal Address */
#define CPU_HVHRB_DPRE_0 0xE012

/** \brief E014, CPUx HR specific data protection read enable register set 1 : Internal Address */
#define CPU_DPRE_1 0xE014

/** \brief E014, CPUx HR specific data protection read enable register set 1 : Internal Address */
#define CPU_HVHRA_DPRE_1 0xE015

/** \brief E014, CPUx HR specific data protection read enable register set 1 : Internal Address */
#define CPU_HVHRB_DPRE_1 0xE016

/** \brief E018, CPUx HR specific data protection read enable register set 2 : Internal Address */
#define CPU_DPRE_2 0xE018

/** \brief E018, CPUx HR specific data protection read enable register set 2 : Internal Address */
#define CPU_HVHRA_DPRE_2 0xE019

/** \brief E018, CPUx HR specific data protection read enable register set 2 : Internal Address */
#define CPU_HVHRB_DPRE_2 0xE01A

/** \brief E01C, CPUx HR specific data protection read enable register set 3 : Internal Address */
#define CPU_DPRE_3 0xE01C

/** \brief E01C, CPUx HR specific data protection read enable register set 3 : Internal Address */
#define CPU_HVHRA_DPRE_3 0xE01D

/** \brief E01C, CPUx HR specific data protection read enable register set 3 : Internal Address */
#define CPU_HVHRB_DPRE_3 0xE01E

/** \brief E020, CPUx HR specific data protection write enable register set 0 : Internal Address */
#define CPU_DPWE_0 0xE020

/** \brief E020, CPUx HR specific data protection write enable register set 0 : Internal Address */
#define CPU_HVHRA_DPWE_0 0xE021

/** \brief E020, CPUx HR specific data protection write enable register set 0 : Internal Address */
#define CPU_HVHRB_DPWE_0 0xE022

/** \brief E024, CPUx HR specific data protection write enable register set 1 : Internal Address */
#define CPU_DPWE_1 0xE024

/** \brief E024, CPUx HR specific data protection write enable register set 1 : Internal Address */
#define CPU_HVHRA_DPWE_1 0xE025

/** \brief E024, CPUx HR specific data protection write enable register set 1 : Internal Address */
#define CPU_HVHRB_DPWE_1 0xE026

/** \brief E028, CPUx HR specific data protection write enable register set 2 : Internal Address */
#define CPU_DPWE_2 0xE028

/** \brief E028, CPUx HR specific data protection write enable register set 2 : Internal Address */
#define CPU_HVHRA_DPWE_2 0xE029

/** \brief E028, CPUx HR specific data protection write enable register set 2 : Internal Address */
#define CPU_HVHRB_DPWE_2 0xE02A

/** \brief E02C, CPUx HR specific data protection write enable register set 3 : Internal Address */
#define CPU_DPWE_3 0xE02C

/** \brief E02C, CPUx HR specific data protection write enable register set 3 : Internal Address */
#define CPU_HVHRA_DPWE_3 0xE02D

/** \brief E02C, CPUx HR specific data protection write enable register set 3 : Internal Address */
#define CPU_HVHRB_DPWE_3 0xE02E

/** \brief E040, CPUx HR specific code protection execute enable register set 4 : Internal Address */
#define CPU_CPXE_4 0xE040

/** \brief E040, CPUx HR specific code protection execute enable register set 4 : Internal Address */
#define CPU_HVHRA_CPXE_4 0xE041

/** \brief E040, CPUx HR specific code protection execute enable register set 4 : Internal Address */
#define CPU_HVHRB_CPXE_4 0xE042

/** \brief E044, CPUx HR specific code protection execute enable register set 5 : Internal Address */
#define CPU_CPXE_5 0xE044

/** \brief E044, CPUx HR specific code protection execute enable register set 5 : Internal Address */
#define CPU_HVHRA_CPXE_5 0xE045

/** \brief E044, CPUx HR specific code protection execute enable register set 5 : Internal Address */
#define CPU_HVHRB_CPXE_5 0xE046

/** \brief E048, CPUx HR specific code protection execute enable register set 6 : Internal Address */
#define CPU_CPXE_6 0xE048

/** \brief E048, CPUx HR specific code protection execute enable register set 6 : Internal Address */
#define CPU_HVHRA_CPXE_6 0xE049

/** \brief E048, CPUx HR specific code protection execute enable register set 6 : Internal Address */
#define CPU_HVHRB_CPXE_6 0xE04A

/** \brief E04C, CPUx HR specific code protection execute enable register set 7 : Internal Address */
#define CPU_CPXE_7 0xE04C

/** \brief E04C, CPUx HR specific code protection execute enable register set 7 : Internal Address */
#define CPU_HVHRA_CPXE_7 0xE04D

/** \brief E04C, CPUx HR specific code protection execute enable register set 7 : Internal Address */
#define CPU_HVHRB_CPXE_7 0xE04E

/** \brief E050, CPUx HR specific data protection read enable register set 4 : Internal Address */
#define CPU_DPRE_4 0xE050

/** \brief E050, CPUx HR specific data protection read enable register set 4 : Internal Address */
#define CPU_HVHRA_DPRE_4 0xE051

/** \brief E050, CPUx HR specific data protection read enable register set 4 : Internal Address */
#define CPU_HVHRB_DPRE_4 0xE052

/** \brief E054, CPUx HR specific data protection read enable register set 5 : Internal Address */
#define CPU_DPRE_5 0xE054

/** \brief E054, CPUx HR specific data protection read enable register set 5 : Internal Address */
#define CPU_HVHRA_DPRE_5 0xE055

/** \brief E054, CPUx HR specific data protection read enable register set 5 : Internal Address */
#define CPU_HVHRB_DPRE_5 0xE056

/** \brief E058, CPUx HR specific data protection read enable register set 6 : Internal Address */
#define CPU_DPRE_6 0xE058

/** \brief E058, CPUx HR specific data protection read enable register set 6 : Internal Address */
#define CPU_HVHRA_DPRE_6 0xE059

/** \brief E058, CPUx HR specific data protection read enable register set 6 : Internal Address */
#define CPU_HVHRB_DPRE_6 0xE05A

/** \brief E05C, CPUx HR specific data protection read enable register set 7 : Internal Address */
#define CPU_DPRE_7 0xE05C

/** \brief E05C, CPUx HR specific data protection read enable register set 7 : Internal Address */
#define CPU_HVHRA_DPRE_7 0xE05D

/** \brief E05C, CPUx HR specific data protection read enable register set 7 : Internal Address */
#define CPU_HVHRB_DPRE_7 0xE05E

/** \brief E060, CPUx HR specific data protection write enable register set 4 : Internal Address */
#define CPU_DPWE_4 0xE060

/** \brief E060, CPUx HR specific data protection write enable register set 4 : Internal Address */
#define CPU_HVHRA_DPWE_4 0xE061

/** \brief E060, CPUx HR specific data protection write enable register set 4 : Internal Address */
#define CPU_HVHRB_DPWE_4 0xE062

/** \brief E064, CPUx HR specific data protection write enable register set 5 : Internal Address */
#define CPU_DPWE_5 0xE064

/** \brief E064, CPUx HR specific data protection write enable register set 5 : Internal Address */
#define CPU_HVHRA_DPWE_5 0xE065

/** \brief E064, CPUx HR specific data protection write enable register set 5 : Internal Address */
#define CPU_HVHRB_DPWE_5 0xE066

/** \brief E068, CPUx HR specific data protection write enable register set 6 : Internal Address */
#define CPU_DPWE_6 0xE068

/** \brief E068, CPUx HR specific data protection write enable register set 6 : Internal Address */
#define CPU_HVHRA_DPWE_6 0xE069

/** \brief E068, CPUx HR specific data protection write enable register set 6 : Internal Address */
#define CPU_HVHRB_DPWE_6 0xE06A

/** \brief E06C, CPUx HR specific data protection write enable register set 7 : Internal Address */
#define CPU_DPWE_7 0xE06C

/** \brief E06C, CPUx HR specific data protection write enable register set 7 : Internal Address */
#define CPU_HVHRA_DPWE_7 0xE06D

/** \brief E06C, CPUx HR specific data protection write enable register set 7 : Internal Address */
#define CPU_HVHRB_DPWE_7 0xE06E

/** \brief E400, CPUx HR specific temporal protection system control register : Internal Address */
#define CPU_TPS_CON 0xE400

/** \brief E400, CPUx HR specific temporal protection system control register : Internal Address */
#define CPU_HVHRA_TPS_CON 0xE401

/** \brief E400, CPUx HR specific temporal protection system control register : Internal Address */
#define CPU_HVHRB_TPS_CON 0xE402

/** \brief E404, CPUx HR specific temporal protection system timer register 0 : Internal Address */
#define CPU_TPS_TIMER0 0xE404

/** \brief E404, CPUx HR specific temporal protection system timer register 0 : Internal Address */
#define CPU_HVHRA_TPS_TIMER0 0xE405

/** \brief E404, CPUx HR specific temporal protection system timer register 0 : Internal Address */
#define CPU_HVHRB_TPS_TIMER0 0xE406

/** \brief E408, CPUx HR specific temporal protection system timer register 1 : Internal Address */
#define CPU_TPS_TIMER1 0xE408

/** \brief E408, CPUx HR specific temporal protection system timer register 1 : Internal Address */
#define CPU_HVHRA_TPS_TIMER1 0xE409

/** \brief E408, CPUx HR specific temporal protection system timer register 1 : Internal Address */
#define CPU_HVHRB_TPS_TIMER1 0xE40A

/** \brief E40C, CPUx HR specific temporal protection system timer register 2 : Internal Address */
#define CPU_TPS_TIMER2 0xE40C

/** \brief E40C, CPUx HR specific temporal protection system timer register 2 : Internal Address */
#define CPU_HVHRA_TPS_TIMER2 0xE40D

/** \brief E40C, CPUx HR specific temporal protection system timer register 2 : Internal Address */
#define CPU_HVHRB_TPS_TIMER2 0xE40E

/** \brief F000, CPUx trigger event 0 : Internal Address */
#define CPU_TR0_EVT 0xF000
/** Alias (User Manual Name) for CPU_TR0_EVT */
#define CPU_TR0EVT (CPU_TR0_EVT)

/** \brief F004, CPUx trigger address 0 : Internal Address */
#define CPU_TR0_ADR 0xF004
/** Alias (User Manual Name) for CPU_TR0_ADR */
#define CPU_TR0ADR (CPU_TR0_ADR)

/** \brief F008, CPUx trigger event 1 : Internal Address */
#define CPU_TR1_EVT 0xF008
/** Alias (User Manual Name) for CPU_TR1_EVT */
#define CPU_TR1EVT (CPU_TR1_EVT)

/** \brief F00C, CPUx trigger address 1 : Internal Address */
#define CPU_TR1_ADR 0xF00C
/** Alias (User Manual Name) for CPU_TR1_ADR */
#define CPU_TR1ADR (CPU_TR1_ADR)

/** \brief F010, CPUx trigger event 2 : Internal Address */
#define CPU_TR2_EVT 0xF010
/** Alias (User Manual Name) for CPU_TR2_EVT */
#define CPU_TR2EVT (CPU_TR2_EVT)

/** \brief F014, CPUx trigger address 2 : Internal Address */
#define CPU_TR2_ADR 0xF014
/** Alias (User Manual Name) for CPU_TR2_ADR */
#define CPU_TR2ADR (CPU_TR2_ADR)

/** \brief F018, CPUx trigger event 3 : Internal Address */
#define CPU_TR3_EVT 0xF018
/** Alias (User Manual Name) for CPU_TR3_EVT */
#define CPU_TR3EVT (CPU_TR3_EVT)

/** \brief F01C, CPUx trigger address 3 : Internal Address */
#define CPU_TR3_ADR 0xF01C
/** Alias (User Manual Name) for CPU_TR3_ADR */
#define CPU_TR3ADR (CPU_TR3_ADR)

/** \brief F020, CPUx trigger event 4 : Internal Address */
#define CPU_TR4_EVT 0xF020
/** Alias (User Manual Name) for CPU_TR4_EVT */
#define CPU_TR4EVT (CPU_TR4_EVT)

/** \brief F024, CPUx trigger address 4 : Internal Address */
#define CPU_TR4_ADR 0xF024
/** Alias (User Manual Name) for CPU_TR4_ADR */
#define CPU_TR4ADR (CPU_TR4_ADR)

/** \brief F028, CPUx trigger event 5 : Internal Address */
#define CPU_TR5_EVT 0xF028
/** Alias (User Manual Name) for CPU_TR5_EVT */
#define CPU_TR5EVT (CPU_TR5_EVT)

/** \brief F02C, CPUx trigger address 5 : Internal Address */
#define CPU_TR5_ADR 0xF02C
/** Alias (User Manual Name) for CPU_TR5_ADR */
#define CPU_TR5ADR (CPU_TR5_ADR)

/** \brief F030, CPUx trigger event 6 : Internal Address */
#define CPU_TR6_EVT 0xF030
/** Alias (User Manual Name) for CPU_TR6_EVT */
#define CPU_TR6EVT (CPU_TR6_EVT)

/** \brief F034, CPUx trigger address 6 : Internal Address */
#define CPU_TR6_ADR 0xF034
/** Alias (User Manual Name) for CPU_TR6_ADR */
#define CPU_TR6ADR (CPU_TR6_ADR)

/** \brief F038, CPUx trigger event 7 : Internal Address */
#define CPU_TR7_EVT 0xF038
/** Alias (User Manual Name) for CPU_TR7_EVT */
#define CPU_TR7EVT (CPU_TR7_EVT)

/** \brief F03C, CPUx trigger address 7 : Internal Address */
#define CPU_TR7_ADR 0xF03C
/** Alias (User Manual Name) for CPU_TR7_ADR */
#define CPU_TR7ADR (CPU_TR7_ADR)

/** \brief FC00, CPUx HR specific counter control : Internal Address */
#define CPU_CCTRL 0xFC00

/** \brief FC00, CPUx HR specific counter control : Internal Address */
#define CPU_HVHRA_CCTRL 0xFC01

/** \brief FC00, CPUx HR specific counter control : Internal Address */
#define CPU_HVHRB_CCTRL 0xFC02

/** \brief FC04, CPUx HR specific CPU clock cycle count : Internal Address */
#define CPU_CCNT 0xFC04

/** \brief FC04, CPUx HR specific CPU clock cycle count : Internal Address */
#define CPU_HVHRA_CCNT 0xFC05

/** \brief FC04, CPUx HR specific CPU clock cycle count : Internal Address */
#define CPU_HVHRB_CCNT 0xFC06

/** \brief FC08, CPUx HR specific instruction count : Internal Address */
#define CPU_ICNT 0xFC08

/** \brief FC08, CPUx HR specific instruction count : Internal Address */
#define CPU_HVHRA_ICNT 0xFC09

/** \brief FC08, CPUx HR specific instruction count : Internal Address */
#define CPU_HVHRB_ICNT 0xFC0A

/** \brief FC0C, CPUx HR specific multi-count register 1 : Internal Address */
#define CPU_M1CNT 0xFC0C

/** \brief FC0C, CPUx HR specific multi-count register 1 : Internal Address */
#define CPU_HVHRA_M1CNT 0xFC0D

/** \brief FC0C, CPUx HR specific multi-count register 1 : Internal Address */
#define CPU_HVHRB_M1CNT 0xFC0E

/** \brief FC10, CPUx HR specific multi-count register 2 : Internal Address */
#define CPU_M2CNT 0xFC10

/** \brief FC10, CPUx HR specific multi-count register 2 : Internal Address */
#define CPU_HVHRA_M2CNT 0xFC11

/** \brief FC10, CPUx HR specific multi-count register 2 : Internal Address */
#define CPU_HVHRB_M2CNT 0xFC12

/** \brief FC14, CPUx HR specific multi-count register 3 : Internal Address */
#define CPU_M3CNT 0xFC14

/** \brief FC14, CPUx HR specific multi-count register 3 : Internal Address */
#define CPU_HVHRA_M3CNT 0xFC15

/** \brief FC14, CPUx HR specific multi-count register 3 : Internal Address */
#define CPU_HVHRB_M3CNT 0xFC16

/** \brief FD00, CPUx debug status register : Internal Address */
#define CPU_DBGSR 0xFD00

/** \brief FD08, CPUx external event register : Internal Address */
#define CPU_EXEVT 0xFD08

/** \brief FD0C, CPUx core register access event : Internal Address */
#define CPU_CREVT 0xFD0C

/** \brief FD10, CPUx software debug event : Internal Address */
#define CPU_SWEVT 0xFD10

/** \brief FD14, CPUx debug action configuration : Internal Address */
#define CPU_DBGACT 0xFD14

/** \brief FD30, CPUx trigger accumulator : Internal Address */
#define CPU_TRIG_ACC 0xFD30

/** \brief FD40, CPUx debug monitor start address : Internal Address */
#define CPU_DMS 0xFD40

/** \brief FD44, CPUx debug context save area pointer : Internal Address */
#define CPU_DCX 0xFD44

/** \brief FD48, CPUx debug trap control : Internal Address */
#define CPU_DBGTCR 0xFD48

/** \brief FD4C, CPUx debug configuration : Internal Address */
#define CPU_DBGCFG 0xFD4C

/** \brief FD50, CPUx trace configuration : Internal Address */
#define CPU_TRCCFG 0xFD50

/** \brief FD54, CPUx trace filter : Internal Address */
#define CPU_TRCFILT 0xFD54

/** \brief FD58, CPUx trace bandwidth limiter : Internal Address */
#define CPU_TRCLIM 0xFD58

/** \brief FD60, CPUx MCDS performance counter control register : Internal Address */
#define CPU_TS16PTCCTRL 0xFD60

/** \brief FE00, CPUx previous context information register : Internal Address */
#define CPU_PCXI 0xFE00

/** \brief FE04, CPUx HR specific program status word : Internal Address */
#define CPU_PSW 0xFE04

/** \brief FE08, CPUx program counter : Internal Address */
#define CPU_PC 0xFE08

/** \brief FE14, CPUx HR specific core configuration register : Internal Address */
#define CPU_CORECON 0xFE14

/** \brief FE14, CPUx HR specific core configuration register : Internal Address */
#define CPU_HVHRA_CORECON 0xFE15

/** \brief FE14, CPUx HR specific core configuration register : Internal Address */
#define CPU_HVHRB_CORECON 0xFE16

/** \brief FE18, CPUx identification register : Internal Address */
#define CPU_CPU_ID 0xFE18

/** \brief FE1C, CPUx core identification register : Internal Address */
#define CPU_CORE_ID 0xFE1C

/** \brief FE20, CPUx HR specific base interrupt vector table pointer : Internal Address */
#define CPU_BIV 0xFE20

/** \brief FE20, CPUx HR specific base interrupt vector table pointer : Internal Address */
#define CPU_HVHRA_BIV 0xFE21

/** \brief FE20, CPUx HR specific base interrupt vector table pointer : Internal Address */
#define CPU_HVHRB_BIV 0xFE22

/** \brief FE24, CPUx HR specific base trap vector table pointer : Internal Address */
#define CPU_BTV 0xFE24

/** \brief FE24, CPUx HR specific base trap vector table pointer : Internal Address */
#define CPU_HVHRA_BTV 0xFE25

/** \brief FE24, CPUx HR specific base trap vector table pointer : Internal Address */
#define CPU_HVHRB_BTV 0xFE26

/** \brief FE28, CPUx HR specific interrupt stack pointer : Internal Address */
#define CPU_ISP 0xFE28

/** \brief FE28, CPUx HR specific interrupt stack pointer : Internal Address */
#define CPU_HVHRA_ISP 0xFE29

/** \brief FE28, CPUx HR specific interrupt stack pointer : Internal Address */
#define CPU_HVHRB_ISP 0xFE2A

/** \brief FE2C, CPUx interrupt control register : Internal Address */
#define CPU_ICR 0xFE2C

/** \brief FE34, CPUx previous PRS : Internal Address */
#define CPU_PPRS 0xFE34

/** \brief FE38, CPUx HR specific free CSA list head pointer : Internal Address */
#define CPU_FCX 0xFE38

/** \brief FE38, CPUx HR specific free CSA list head pointer : Internal Address */
#define CPU_HVHRA_FCX 0xFE39

/** \brief FE38, CPUx HR specific free CSA list head pointer : Internal Address */
#define CPU_HVHRB_FCX 0xFE3A

/** \brief FE3C, CPUx HR specific free CSA list limit pointer : Internal Address */
#define CPU_LCX 0xFE3C

/** \brief FE3C, CPUx HR specific free CSA list limit pointer : Internal Address */
#define CPU_HVHRA_LCX 0xFE3D

/** \brief FE3C, CPUx HR specific free CSA list limit pointer : Internal Address */
#define CPU_HVHRB_LCX 0xFE3E

/** \brief FE40, CPUx software identification : Internal Address */
#define CPU_SWID 0xFE40

/** \brief FE50, CPUx customer ID register : Internal Address */
#define CPU_CUS_ID 0xFE50

/** \brief FE60, CPUx core boot configuration register : Internal Address */
#define CPU_BOOTCON 0xFE60

/** \brief FE64, CPUx lockstep control register : Internal Address */
#define CPU_LCLCON 0xFE64

/** \brief FE68, CPUx clock control register : Internal Address */
#define CPU_CCON 0xFE68

/** \brief FE6C, CPUx hardware configuration  : Internal Address */
#define CPU_TCCON 0xFE6C

/** \brief FF80, CPUx HR specific address general purpose register 0 : Internal Address */
#define CPU_HVHRA_A0 0xFF81

/** \brief FF80, CPUx HR specific address general purpose register 0 : Internal Address */
#define CPU_HVHRB_A0 0xFF82

/** \brief FF84, CPUx HR specific address general purpose register 1 : Internal Address */
#define CPU_HVHRA_A1 0xFF85

/** \brief FF84, CPUx HR specific address general purpose register 1 : Internal Address */
#define CPU_HVHRB_A1 0xFF86

/** \brief FFA0, CPUx HR specific address general purpose register 8 : Internal Address */
#define CPU_HVHRA_A8 0xFFA1

/** \brief FFA0, CPUx HR specific address general purpose register 8 : Internal Address */
#define CPU_HVHRB_A8 0xFFA2

/** \brief FFA4, CPUx HR specific address general purpose register 9 : Internal Address */
#define CPU_HVHRA_A9 0xFFA5

/** \brief FFA4, CPUx HR specific address general purpose register 9 : Internal Address */
#define CPU_HVHRB_A9 0xFFA6


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpu_Registers_Cfg_Cpu0
 * \{  */
/** \brief 0, CPU0 system timer clock control register */
#define CPU0_STM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8800000u)

/** \brief 0, CPU0 system timer clock control register", hypervisor view" */
#define CPU0_STMHV_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8800000u)

/** \brief 4, CPU0 OCDS control and status register */
#define CPU0_STM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8800004u)

/** \brief 4, CPU0 OCDS control and status register", hypervisor view" */
#define CPU0_STMHV_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8800004u)

/** \brief 20, CPU0 system timer absolute timer */
#define CPU0_STM_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8800020u)

/** \brief 20, CPU0 system timer absolute timer", hypervisor view" */
#define CPU0_STMHV_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8800020u)

/** \brief 100, CPU0 VM0 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM0_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800100u)

/** \brief 104, CPU0 VM0 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM0_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800104u)

/** \brief 108, CPU0 VM0 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM0_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8800108u)

/** \brief 10C, CPU0 VM0 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM0_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF880010Cu)
/** Alias (User Manual Name) for CPU0_STMHV_VM0_STM_ICR */
#define CPU0_STMHV_VM0_ICR (CPU0_STMHV_VM0_STM_ICR)

/** \brief 110, CPU0 VM0 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM0_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8800110u)

/** \brief 114, CPU0 VM0 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8800114u)

/** \brief 118, CPU0 VM0 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM0_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8800118u)

/** \brief 120, CPU0 system timer compare register 0 */
#define CPU0_STM_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800120u)

/** \brief 120, CPU0 VM1 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM1_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800120u)

/** \brief 124, CPU0 system timer compare register 1 */
#define CPU0_STM_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800124u)

/** \brief 124, CPU0 VM1 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM1_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800124u)

/** \brief 128, CPU0 system timer compare match control register */
#define CPU0_STM_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8800128u)

/** \brief 128, CPU0 VM1 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM1_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8800128u)

/** \brief 12C, CPU0 system timer interrupt control register */
#define CPU0_STM_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF880012Cu)
/** Alias (User Manual Name) for CPU0_STM_STM_ICR */
#define CPU0_STM_ICR (CPU0_STM_STM_ICR)

/** \brief 12C, CPU0 VM1 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM1_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF880012Cu)
/** Alias (User Manual Name) for CPU0_STMHV_VM1_STM_ICR */
#define CPU0_STMHV_VM1_ICR (CPU0_STMHV_VM1_STM_ICR)

/** \brief 130, CPU0 system timer interrupt set/clear register */
#define CPU0_STM_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8800130u)

/** \brief 130, CPU0 VM1 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM1_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8800130u)

/** \brief 134, CPU0 system timer interrupt status register */
#define CPU0_STM_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8800134u)

/** \brief 134, CPU0 VM1 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM1_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8800134u)

/** \brief 138, CPU0 system timer relative timer */
#define CPU0_STM_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8800138u)

/** \brief 138, CPU0 VM1 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM1_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8800138u)

/** \brief 140, CPU0 VM2 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM2_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800140u)

/** \brief 144, CPU0 VM2 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM2_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800144u)

/** \brief 148, CPU0 VM2 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM2_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8800148u)

/** \brief 14C, CPU0 VM2 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM2_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF880014Cu)
/** Alias (User Manual Name) for CPU0_STMHV_VM2_STM_ICR */
#define CPU0_STMHV_VM2_ICR (CPU0_STMHV_VM2_STM_ICR)

/** \brief 150, CPU0 VM2 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM2_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8800150u)

/** \brief 154, CPU0 VM2 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM2_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8800154u)

/** \brief 158, CPU0 VM2 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM2_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8800158u)

/** \brief 160, CPU0 VM3 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM3_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800160u)

/** \brief 164, CPU0 VM3 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM3_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800164u)

/** \brief 168, CPU0 VM3 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM3_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8800168u)

/** \brief 16C, CPU0 VM3 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM3_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF880016Cu)
/** Alias (User Manual Name) for CPU0_STMHV_VM3_STM_ICR */
#define CPU0_STMHV_VM3_ICR (CPU0_STMHV_VM3_STM_ICR)

/** \brief 170, CPU0 VM3 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM3_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8800170u)

/** \brief 174, CPU0 VM3 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM3_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8800174u)

/** \brief 178, CPU0 VM3 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM3_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8800178u)

/** \brief 180, CPU0 VM4 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM4_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800180u)

/** \brief 184, CPU0 VM4 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM4_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8800184u)

/** \brief 188, CPU0 VM4 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM4_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8800188u)

/** \brief 18C, CPU0 VM4 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM4_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF880018Cu)
/** Alias (User Manual Name) for CPU0_STMHV_VM4_STM_ICR */
#define CPU0_STMHV_VM4_ICR (CPU0_STMHV_VM4_STM_ICR)

/** \brief 190, CPU0 VM4 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM4_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8800190u)

/** \brief 194, CPU0 VM4 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM4_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8800194u)

/** \brief 198, CPU0 VM4 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM4_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8800198u)

/** \brief 1A0, CPU0 VM5 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM5_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88001A0u)

/** \brief 1A4, CPU0 VM5 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM5_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88001A4u)

/** \brief 1A8, CPU0 VM5 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM5_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88001A8u)

/** \brief 1AC, CPU0 VM5 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM5_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88001ACu)
/** Alias (User Manual Name) for CPU0_STMHV_VM5_STM_ICR */
#define CPU0_STMHV_VM5_ICR (CPU0_STMHV_VM5_STM_ICR)

/** \brief 1B0, CPU0 VM5 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM5_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88001B0u)

/** \brief 1B4, CPU0 VM5 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM5_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88001B4u)

/** \brief 1B8, CPU0 VM5 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM5_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88001B8u)

/** \brief 1C0, CPU0 VM6 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM6_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88001C0u)

/** \brief 1C4, CPU0 VM6 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM6_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88001C4u)

/** \brief 1C8, CPU0 VM6 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM6_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88001C8u)

/** \brief 1CC, CPU0 VM6 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM6_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88001CCu)
/** Alias (User Manual Name) for CPU0_STMHV_VM6_STM_ICR */
#define CPU0_STMHV_VM6_ICR (CPU0_STMHV_VM6_STM_ICR)

/** \brief 1D0, CPU0 VM6 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM6_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88001D0u)

/** \brief 1D4, CPU0 VM6 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM6_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88001D4u)

/** \brief 1D8, CPU0 VM6 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM6_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88001D8u)

/** \brief 1E0, CPU0 VM7 system timer compare register 0", hypervisor view" */
#define CPU0_STMHV_VM7_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88001E0u)

/** \brief 1E4, CPU0 VM7 system timer compare register 1", hypervisor view" */
#define CPU0_STMHV_VM7_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88001E4u)

/** \brief 1E8, CPU0 VM7 system timer compare match control register", hypervisor view" */
#define CPU0_STMHV_VM7_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88001E8u)

/** \brief 1EC, CPU0 VM7 system timer interrupt control register", hypervisor view" */
#define CPU0_STMHV_VM7_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88001ECu)
/** Alias (User Manual Name) for CPU0_STMHV_VM7_STM_ICR */
#define CPU0_STMHV_VM7_ICR (CPU0_STMHV_VM7_STM_ICR)

/** \brief 1F0, CPU0 VM7 system timer interrupt set/clear register", hypervisor view" */
#define CPU0_STMHV_VM7_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88001F0u)

/** \brief 1F4, CPU0 VM7 system timer interrupt status register", hypervisor view" */
#define CPU0_STMHV_VM7_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88001F4u)

/** \brief 1F8, CPU0 VM7 system timer relative timer", hypervisor view" */
#define CPU0_STMHV_VM7_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88001F8u)

/** \brief D000, CPU0 reset register 0 */
#define CPU0_KRST0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST0*)0xF880D000u)

/** \brief D004, CPU0 reset register 1 */
#define CPU0_KRST1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST1*)0xF880D004u)

/** \brief D008, CPU0 reset clear register */
#define CPU0_KRSTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRSTCLR*)0xF880D008u)

/** \brief 8, CPU0 PROTSPR register safe endinit */
#define CPU0_PROTSPRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF880E008u)

/** \brief 20, CPU0 shadow SPR, write access enable register A */
#define CPU0_ACCENSPRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF880E020u)

/** \brief 24, CPU0 shadow SPR, write access enable register B */
#define CPU0_ACCENSPRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF880E024u)

/** \brief 28, CPU0 shadow SPR, read access enable register A */
#define CPU0_ACCENSPRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF880E028u)

/** \brief 2C, CPU0 shadow SPR, read access enable register B */
#define CPU0_ACCENSPRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF880E02Cu)

/** \brief 30, CPU0 shadow SPR, VM access enable register */
#define CPU0_ACCENSPRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF880E030u)

/** \brief 34, CPU0 shadow SPR, PRS access enable register */
#define CPU0_ACCENSPRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF880E034u)

/** \brief 38, CPU0 shadow SPR, region lower address register */
#define CPU0_ACCENSPRCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA*)0xF880E038u)

/** \brief 3C, CPU0 shadow SPR, region upper address register */
#define CPU0_ACCENSPRCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA*)0xF880E03Cu)

/** \brief 48, CPU0 PROTDLMU register safe endinit */
#define CPU0_PROTDLMUSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF880E048u)

/** \brief 60, CPU0 shadow DLMU, write access enable register A */
#define CPU0_ACCENDLMUCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF880E060u)

/** \brief 64, CPU0 shadow DLMU, write access enable register B */
#define CPU0_ACCENDLMUCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF880E064u)

/** \brief 68, CPU0 shadow DLMU, read access enable register A */
#define CPU0_ACCENDLMUCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF880E068u)

/** \brief 6C, CPU0 shadow DLMU, read access enable register B */
#define CPU0_ACCENDLMUCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF880E06Cu)

/** \brief 70, CPU0 shadow DLMU, VM access enable register */
#define CPU0_ACCENDLMUCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF880E070u)

/** \brief 74, CPU0 shadow DLMU, PRS access enable register */
#define CPU0_ACCENDLMUCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF880E074u)

/** \brief 78, CPU0 shadow DLMU, region lower address register */
#define CPU0_ACCENDLMUCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA_89*)0xF880E078u)

/** \brief 7C, CPU0 shadow DLMU, region upper address register */
#define CPU0_ACCENDLMUCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA_89*)0xF880E07Cu)

/** \brief 80, CPU0 PROTSFR register endinit */
#define CPU0_PROTSFRE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF880E080u)

/** \brief 88, CPU0 PROTSFR register safe endinit */
#define CPU0_PROTSFRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF880E088u)

/** \brief A0, CPU0 shadow SFR, write access enable register A */
#define CPU0_ACCENSFRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF880E0A0u)

/** \brief A4, CPU0 shadow SFR, write access enable register B */
#define CPU0_ACCENSFRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF880E0A4u)

/** \brief A8, CPU0 shadow SFR, read access enable register A */
#define CPU0_ACCENSFRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF880E0A8u)

/** \brief AC, CPU0 shadow SFR, read access enable register B */
#define CPU0_ACCENSFRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF880E0ACu)

/** \brief B0, CPU0 shadow SFR, VM access enable register */
#define CPU0_ACCENSFRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF880E0B0u)

/** \brief B4, CPU0 shadow SFR, PRS access enable register */
#define CPU0_ACCENSFRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF880E0B4u)

/** \brief C0, CPU0 PROTRST register endinit */
#define CPU0_PROTRSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF880E0C0u)

/** \brief D8, CPU0 PROTSTM Register Safe Endinit */
#define CPU0_PROTSTMSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROTSTMSE*)0xF880E0D8u)

/** \brief E0, CPU0 shadow STM, write access enable register A */
#define CPU0_ACCENSTMCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF880E0E0u)

/** \brief E4, CPU0 shadow STM, write access enable register B */
#define CPU0_ACCENSTMCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF880E0E4u)

/** \brief E8, CPU0 shadow STM, read access enable register A */
#define CPU0_ACCENSTMCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF880E0E8u)

/** \brief EC, CPU0 shadow STM, read access enable register B */
#define CPU0_ACCENSTMCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF880E0ECu)

/** \brief F0, CPU0 shadow STM, VM access enable register */
#define CPU0_ACCENSTMCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF880E0F0u)

/** \brief F4, CPU0 shadow STM, PRS access enable register */
#define CPU0_ACCENSTMCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF880E0F4u)

/** \brief 200, CPU0 SPR range 0, write access enable register A */
#define CPU0_ACCENSPR0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E200u)

/** \brief 204, CPU0 SPR range 0, write access enable register B */
#define CPU0_ACCENSPR0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E204u)

/** \brief 208, CPU0 SPR range 0, read access enable register A */
#define CPU0_ACCENSPR0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E208u)

/** \brief 20C, CPU0 SPR range 0, read access enable register B */
#define CPU0_ACCENSPR0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E20Cu)

/** \brief 210, CPU0 SPR range 0, VM access enable register */
#define CPU0_ACCENSPR0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E210u)

/** \brief 214, CPU0 SPR range 0, PRS access enable register */
#define CPU0_ACCENSPR0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E214u)

/** \brief 218, CPU0 SPR range 0, region lower address register */
#define CPU0_ACCENSPR0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E218u)

/** \brief 21C, CPU0 SPR range 0, region upper address register */
#define CPU0_ACCENSPR0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E21Cu)

/** \brief 220, CPU0 SPR range 1, write access enable register A */
#define CPU0_ACCENSPR1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E220u)

/** \brief 224, CPU0 SPR range 1, write access enable register B */
#define CPU0_ACCENSPR1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E224u)

/** \brief 228, CPU0 SPR range 1, read access enable register A */
#define CPU0_ACCENSPR1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E228u)

/** \brief 22C, CPU0 SPR range 1, read access enable register B */
#define CPU0_ACCENSPR1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E22Cu)

/** \brief 230, CPU0 SPR range 1, VM access enable register */
#define CPU0_ACCENSPR1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E230u)

/** \brief 234, CPU0 SPR range 1, PRS access enable register */
#define CPU0_ACCENSPR1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E234u)

/** \brief 238, CPU0 SPR range 1, region lower address register */
#define CPU0_ACCENSPR1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E238u)

/** \brief 23C, CPU0 SPR range 1, region upper address register */
#define CPU0_ACCENSPR1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E23Cu)

/** \brief 240, CPU0 SPR range 2, write access enable register A */
#define CPU0_ACCENSPR2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E240u)

/** \brief 244, CPU0 SPR range 2, write access enable register B */
#define CPU0_ACCENSPR2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E244u)

/** \brief 248, CPU0 SPR range 2, read access enable register A */
#define CPU0_ACCENSPR2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E248u)

/** \brief 24C, CPU0 SPR range 2, read access enable register B */
#define CPU0_ACCENSPR2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E24Cu)

/** \brief 250, CPU0 SPR range 2, VM access enable register */
#define CPU0_ACCENSPR2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E250u)

/** \brief 254, CPU0 SPR range 2, PRS access enable register */
#define CPU0_ACCENSPR2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E254u)

/** \brief 258, CPU0 SPR range 2, region lower address register */
#define CPU0_ACCENSPR2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E258u)

/** \brief 25C, CPU0 SPR range 2, region upper address register */
#define CPU0_ACCENSPR2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E25Cu)

/** \brief 260, CPU0 SPR range 3, write access enable register A */
#define CPU0_ACCENSPR3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E260u)

/** \brief 264, CPU0 SPR range 3, write access enable register B */
#define CPU0_ACCENSPR3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E264u)

/** \brief 268, CPU0 SPR range 3, read access enable register A */
#define CPU0_ACCENSPR3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E268u)

/** \brief 26C, CPU0 SPR range 3, read access enable register B */
#define CPU0_ACCENSPR3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E26Cu)

/** \brief 270, CPU0 SPR range 3, VM access enable register */
#define CPU0_ACCENSPR3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E270u)

/** \brief 274, CPU0 SPR range 3, PRS access enable register */
#define CPU0_ACCENSPR3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E274u)

/** \brief 278, CPU0 SPR range 3, region lower address register */
#define CPU0_ACCENSPR3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E278u)

/** \brief 27C, CPU0 SPR range 3, region upper address register */
#define CPU0_ACCENSPR3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E27Cu)

/** \brief 280, CPU0 SPR range 4, write access enable register A */
#define CPU0_ACCENSPR4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E280u)

/** \brief 284, CPU0 SPR range 4, write access enable register B */
#define CPU0_ACCENSPR4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E284u)

/** \brief 288, CPU0 SPR range 4, read access enable register A */
#define CPU0_ACCENSPR4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E288u)

/** \brief 28C, CPU0 SPR range 4, read access enable register B */
#define CPU0_ACCENSPR4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E28Cu)

/** \brief 290, CPU0 SPR range 4, VM access enable register */
#define CPU0_ACCENSPR4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E290u)

/** \brief 294, CPU0 SPR range 4, PRS access enable register */
#define CPU0_ACCENSPR4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E294u)

/** \brief 298, CPU0 SPR range 4, region lower address register */
#define CPU0_ACCENSPR4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E298u)

/** \brief 29C, CPU0 SPR range 4, region upper address register */
#define CPU0_ACCENSPR4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E29Cu)

/** \brief 2A0, CPU0 SPR range 5, write access enable register A */
#define CPU0_ACCENSPR5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E2A0u)

/** \brief 2A4, CPU0 SPR range 5, write access enable register B */
#define CPU0_ACCENSPR5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E2A4u)

/** \brief 2A8, CPU0 SPR range 5, read access enable register A */
#define CPU0_ACCENSPR5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E2A8u)

/** \brief 2AC, CPU0 SPR range 5, read access enable register B */
#define CPU0_ACCENSPR5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E2ACu)

/** \brief 2B0, CPU0 SPR range 5, VM access enable register */
#define CPU0_ACCENSPR5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E2B0u)

/** \brief 2B4, CPU0 SPR range 5, PRS access enable register */
#define CPU0_ACCENSPR5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E2B4u)

/** \brief 2B8, CPU0 SPR range 5, region lower address register */
#define CPU0_ACCENSPR5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E2B8u)

/** \brief 2BC, CPU0 SPR range 5, region upper address register */
#define CPU0_ACCENSPR5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E2BCu)

/** \brief 2C0, CPU0 SPR range 6, write access enable register A */
#define CPU0_ACCENSPR6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E2C0u)

/** \brief 2C4, CPU0 SPR range 6, write access enable register B */
#define CPU0_ACCENSPR6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E2C4u)

/** \brief 2C8, CPU0 SPR range 6, read access enable register A */
#define CPU0_ACCENSPR6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E2C8u)

/** \brief 2CC, CPU0 SPR range 6, read access enable register B */
#define CPU0_ACCENSPR6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E2CCu)

/** \brief 2D0, CPU0 SPR range 6, VM access enable register */
#define CPU0_ACCENSPR6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E2D0u)

/** \brief 2D4, CPU0 SPR range 6, PRS access enable register */
#define CPU0_ACCENSPR6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E2D4u)

/** \brief 2D8, CPU0 SPR range 6, region lower address register */
#define CPU0_ACCENSPR6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E2D8u)

/** \brief 2DC, CPU0 SPR range 6, region upper address register */
#define CPU0_ACCENSPR6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E2DCu)

/** \brief 2E0, CPU0 SPR range 7, write access enable register A */
#define CPU0_ACCENSPR7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E2E0u)

/** \brief 2E4, CPU0 SPR range 7, write access enable register B */
#define CPU0_ACCENSPR7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E2E4u)

/** \brief 2E8, CPU0 SPR range 7, read access enable register A */
#define CPU0_ACCENSPR7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E2E8u)

/** \brief 2EC, CPU0 SPR range 7, read access enable register B */
#define CPU0_ACCENSPR7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E2ECu)

/** \brief 2F0, CPU0 SPR range 7, VM access enable register */
#define CPU0_ACCENSPR7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E2F0u)

/** \brief 2F4, CPU0 SPR range 7, PRS access enable register */
#define CPU0_ACCENSPR7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E2F4u)

/** \brief 2F8, CPU0 SPR range 7, region lower address register */
#define CPU0_ACCENSPR7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E2F8u)

/** \brief 2FC, CPU0 SPR range 7, region upper address register */
#define CPU0_ACCENSPR7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E2FCu)

/** \brief 300, CPU0 SPR range 8, write access enable register A */
#define CPU0_ACCENSPR8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E300u)

/** \brief 304, CPU0 SPR range 8, write access enable register B */
#define CPU0_ACCENSPR8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E304u)

/** \brief 308, CPU0 SPR range 8, read access enable register A */
#define CPU0_ACCENSPR8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E308u)

/** \brief 30C, CPU0 SPR range 8, read access enable register B */
#define CPU0_ACCENSPR8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E30Cu)

/** \brief 310, CPU0 SPR range 8, VM access enable register */
#define CPU0_ACCENSPR8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E310u)

/** \brief 314, CPU0 SPR range 8, PRS access enable register */
#define CPU0_ACCENSPR8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E314u)

/** \brief 318, CPU0 SPR range 8, region lower address register */
#define CPU0_ACCENSPR8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E318u)

/** \brief 31C, CPU0 SPR range 8, region upper address register */
#define CPU0_ACCENSPR8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E31Cu)

/** \brief 320, CPU0 SPR range 9, write access enable register A */
#define CPU0_ACCENSPR9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E320u)

/** \brief 324, CPU0 SPR range 9, write access enable register B */
#define CPU0_ACCENSPR9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E324u)

/** \brief 328, CPU0 SPR range 9, read access enable register A */
#define CPU0_ACCENSPR9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E328u)

/** \brief 32C, CPU0 SPR range 9, read access enable register B */
#define CPU0_ACCENSPR9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E32Cu)

/** \brief 330, CPU0 SPR range 9, VM access enable register */
#define CPU0_ACCENSPR9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E330u)

/** \brief 334, CPU0 SPR range 9, PRS access enable register */
#define CPU0_ACCENSPR9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E334u)

/** \brief 338, CPU0 SPR range 9, region lower address register */
#define CPU0_ACCENSPR9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E338u)

/** \brief 33C, CPU0 SPR range 9, region upper address register */
#define CPU0_ACCENSPR9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E33Cu)

/** \brief 340, CPU0 SPR range 10, write access enable register A */
#define CPU0_ACCENSPR10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E340u)

/** \brief 344, CPU0 SPR range 10, write access enable register B */
#define CPU0_ACCENSPR10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E344u)

/** \brief 348, CPU0 SPR range 10, read access enable register A */
#define CPU0_ACCENSPR10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E348u)

/** \brief 34C, CPU0 SPR range 10, read access enable register B */
#define CPU0_ACCENSPR10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E34Cu)

/** \brief 350, CPU0 SPR range 10, VM access enable register */
#define CPU0_ACCENSPR10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E350u)

/** \brief 354, CPU0 SPR range 10, PRS access enable register */
#define CPU0_ACCENSPR10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E354u)

/** \brief 358, CPU0 SPR range 10, region lower address register */
#define CPU0_ACCENSPR10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E358u)

/** \brief 35C, CPU0 SPR range 10, region upper address register */
#define CPU0_ACCENSPR10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E35Cu)

/** \brief 360, CPU0 SPR range 11, write access enable register A */
#define CPU0_ACCENSPR11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E360u)

/** \brief 364, CPU0 SPR range 11, write access enable register B */
#define CPU0_ACCENSPR11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E364u)

/** \brief 368, CPU0 SPR range 11, read access enable register A */
#define CPU0_ACCENSPR11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E368u)

/** \brief 36C, CPU0 SPR range 11, read access enable register B */
#define CPU0_ACCENSPR11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E36Cu)

/** \brief 370, CPU0 SPR range 11, VM access enable register */
#define CPU0_ACCENSPR11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E370u)

/** \brief 374, CPU0 SPR range 11, PRS access enable register */
#define CPU0_ACCENSPR11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E374u)

/** \brief 378, CPU0 SPR range 11, region lower address register */
#define CPU0_ACCENSPR11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E378u)

/** \brief 37C, CPU0 SPR range 11, region upper address register */
#define CPU0_ACCENSPR11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E37Cu)

/** \brief 380, CPU0 SPR range 12, write access enable register A */
#define CPU0_ACCENSPR12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E380u)

/** \brief 384, CPU0 SPR range 12, write access enable register B */
#define CPU0_ACCENSPR12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E384u)

/** \brief 388, CPU0 SPR range 12, read access enable register A */
#define CPU0_ACCENSPR12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E388u)

/** \brief 38C, CPU0 SPR range 12, read access enable register B */
#define CPU0_ACCENSPR12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E38Cu)

/** \brief 390, CPU0 SPR range 12, VM access enable register */
#define CPU0_ACCENSPR12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E390u)

/** \brief 394, CPU0 SPR range 12, PRS access enable register */
#define CPU0_ACCENSPR12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E394u)

/** \brief 398, CPU0 SPR range 12, region lower address register */
#define CPU0_ACCENSPR12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E398u)

/** \brief 39C, CPU0 SPR range 12, region upper address register */
#define CPU0_ACCENSPR12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E39Cu)

/** \brief 3A0, CPU0 SPR range 13, write access enable register A */
#define CPU0_ACCENSPR13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E3A0u)

/** \brief 3A4, CPU0 SPR range 13, write access enable register B */
#define CPU0_ACCENSPR13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E3A4u)

/** \brief 3A8, CPU0 SPR range 13, read access enable register A */
#define CPU0_ACCENSPR13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E3A8u)

/** \brief 3AC, CPU0 SPR range 13, read access enable register B */
#define CPU0_ACCENSPR13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E3ACu)

/** \brief 3B0, CPU0 SPR range 13, VM access enable register */
#define CPU0_ACCENSPR13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E3B0u)

/** \brief 3B4, CPU0 SPR range 13, PRS access enable register */
#define CPU0_ACCENSPR13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E3B4u)

/** \brief 3B8, CPU0 SPR range 13, region lower address register */
#define CPU0_ACCENSPR13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E3B8u)

/** \brief 3BC, CPU0 SPR range 13, region upper address register */
#define CPU0_ACCENSPR13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E3BCu)

/** \brief 3C0, CPU0 SPR range 14, write access enable register A */
#define CPU0_ACCENSPR14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E3C0u)

/** \brief 3C4, CPU0 SPR range 14, write access enable register B */
#define CPU0_ACCENSPR14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E3C4u)

/** \brief 3C8, CPU0 SPR range 14, read access enable register A */
#define CPU0_ACCENSPR14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E3C8u)

/** \brief 3CC, CPU0 SPR range 14, read access enable register B */
#define CPU0_ACCENSPR14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E3CCu)

/** \brief 3D0, CPU0 SPR range 14, VM access enable register */
#define CPU0_ACCENSPR14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E3D0u)

/** \brief 3D4, CPU0 SPR range 14, PRS access enable register */
#define CPU0_ACCENSPR14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E3D4u)

/** \brief 3D8, CPU0 SPR range 14, region lower address register */
#define CPU0_ACCENSPR14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E3D8u)

/** \brief 3DC, CPU0 SPR range 14, region upper address register */
#define CPU0_ACCENSPR14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E3DCu)

/** \brief 3E0, CPU0 SPR range 15, write access enable register A */
#define CPU0_ACCENSPR15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E3E0u)

/** \brief 3E4, CPU0 SPR range 15, write access enable register B */
#define CPU0_ACCENSPR15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E3E4u)

/** \brief 3E8, CPU0 SPR range 15, read access enable register A */
#define CPU0_ACCENSPR15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E3E8u)

/** \brief 3EC, CPU0 SPR range 15, read access enable register B */
#define CPU0_ACCENSPR15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E3ECu)

/** \brief 3F0, CPU0 SPR range 15, VM access enable register */
#define CPU0_ACCENSPR15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E3F0u)

/** \brief 3F4, CPU0 SPR range 15, PRS access enable register */
#define CPU0_ACCENSPR15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E3F4u)

/** \brief 3F8, CPU0 SPR range 15, region lower address register */
#define CPU0_ACCENSPR15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF880E3F8u)

/** \brief 3FC, CPU0 SPR range 15, region upper address register */
#define CPU0_ACCENSPR15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF880E3FCu)

/** \brief 400, CPU0 DLMU range 0, write access enable register A */
#define CPU0_ACCENDLMU0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E400u)

/** \brief 404, CPU0 DLMU range 0, write access enable register B */
#define CPU0_ACCENDLMU0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E404u)

/** \brief 408, CPU0 DLMU range 0, read access enable register A */
#define CPU0_ACCENDLMU0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E408u)

/** \brief 40C, CPU0 DLMU range 0, read access enable register B */
#define CPU0_ACCENDLMU0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E40Cu)

/** \brief 410, CPU0 DLMU range 0, VM access enable register */
#define CPU0_ACCENDLMU0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E410u)

/** \brief 414, CPU0 DLMU range 0, PRS access enable register */
#define CPU0_ACCENDLMU0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E414u)

/** \brief 418, CPU0 DLMU range 0, region lower address register */
#define CPU0_ACCENDLMU0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E418u)

/** \brief 41C, CPU0 DLMU range 0, region upper address register */
#define CPU0_ACCENDLMU0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E41Cu)

/** \brief 420, CPU0 DLMU range 1, write access enable register A */
#define CPU0_ACCENDLMU1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E420u)

/** \brief 424, CPU0 DLMU range 1, write access enable register B */
#define CPU0_ACCENDLMU1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E424u)

/** \brief 428, CPU0 DLMU range 1, read access enable register A */
#define CPU0_ACCENDLMU1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E428u)

/** \brief 42C, CPU0 DLMU range 1, read access enable register B */
#define CPU0_ACCENDLMU1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E42Cu)

/** \brief 430, CPU0 DLMU range 1, VM access enable register */
#define CPU0_ACCENDLMU1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E430u)

/** \brief 434, CPU0 DLMU range 1, PRS access enable register */
#define CPU0_ACCENDLMU1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E434u)

/** \brief 438, CPU0 DLMU range 1, region lower address register */
#define CPU0_ACCENDLMU1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E438u)

/** \brief 43C, CPU0 DLMU range 1, region upper address register */
#define CPU0_ACCENDLMU1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E43Cu)

/** \brief 440, CPU0 DLMU range 2, write access enable register A */
#define CPU0_ACCENDLMU2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E440u)

/** \brief 444, CPU0 DLMU range 2, write access enable register B */
#define CPU0_ACCENDLMU2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E444u)

/** \brief 448, CPU0 DLMU range 2, read access enable register A */
#define CPU0_ACCENDLMU2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E448u)

/** \brief 44C, CPU0 DLMU range 2, read access enable register B */
#define CPU0_ACCENDLMU2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E44Cu)

/** \brief 450, CPU0 DLMU range 2, VM access enable register */
#define CPU0_ACCENDLMU2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E450u)

/** \brief 454, CPU0 DLMU range 2, PRS access enable register */
#define CPU0_ACCENDLMU2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E454u)

/** \brief 458, CPU0 DLMU range 2, region lower address register */
#define CPU0_ACCENDLMU2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E458u)

/** \brief 45C, CPU0 DLMU range 2, region upper address register */
#define CPU0_ACCENDLMU2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E45Cu)

/** \brief 460, CPU0 DLMU range 3, write access enable register A */
#define CPU0_ACCENDLMU3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E460u)

/** \brief 464, CPU0 DLMU range 3, write access enable register B */
#define CPU0_ACCENDLMU3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E464u)

/** \brief 468, CPU0 DLMU range 3, read access enable register A */
#define CPU0_ACCENDLMU3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E468u)

/** \brief 46C, CPU0 DLMU range 3, read access enable register B */
#define CPU0_ACCENDLMU3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E46Cu)

/** \brief 470, CPU0 DLMU range 3, VM access enable register */
#define CPU0_ACCENDLMU3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E470u)

/** \brief 474, CPU0 DLMU range 3, PRS access enable register */
#define CPU0_ACCENDLMU3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E474u)

/** \brief 478, CPU0 DLMU range 3, region lower address register */
#define CPU0_ACCENDLMU3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E478u)

/** \brief 47C, CPU0 DLMU range 3, region upper address register */
#define CPU0_ACCENDLMU3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E47Cu)

/** \brief 480, CPU0 DLMU range 4, write access enable register A */
#define CPU0_ACCENDLMU4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E480u)

/** \brief 484, CPU0 DLMU range 4, write access enable register B */
#define CPU0_ACCENDLMU4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E484u)

/** \brief 488, CPU0 DLMU range 4, read access enable register A */
#define CPU0_ACCENDLMU4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E488u)

/** \brief 48C, CPU0 DLMU range 4, read access enable register B */
#define CPU0_ACCENDLMU4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E48Cu)

/** \brief 490, CPU0 DLMU range 4, VM access enable register */
#define CPU0_ACCENDLMU4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E490u)

/** \brief 494, CPU0 DLMU range 4, PRS access enable register */
#define CPU0_ACCENDLMU4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E494u)

/** \brief 498, CPU0 DLMU range 4, region lower address register */
#define CPU0_ACCENDLMU4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E498u)

/** \brief 49C, CPU0 DLMU range 4, region upper address register */
#define CPU0_ACCENDLMU4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E49Cu)

/** \brief 4A0, CPU0 DLMU range 5, write access enable register A */
#define CPU0_ACCENDLMU5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E4A0u)

/** \brief 4A4, CPU0 DLMU range 5, write access enable register B */
#define CPU0_ACCENDLMU5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E4A4u)

/** \brief 4A8, CPU0 DLMU range 5, read access enable register A */
#define CPU0_ACCENDLMU5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E4A8u)

/** \brief 4AC, CPU0 DLMU range 5, read access enable register B */
#define CPU0_ACCENDLMU5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E4ACu)

/** \brief 4B0, CPU0 DLMU range 5, VM access enable register */
#define CPU0_ACCENDLMU5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E4B0u)

/** \brief 4B4, CPU0 DLMU range 5, PRS access enable register */
#define CPU0_ACCENDLMU5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E4B4u)

/** \brief 4B8, CPU0 DLMU range 5, region lower address register */
#define CPU0_ACCENDLMU5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E4B8u)

/** \brief 4BC, CPU0 DLMU range 5, region upper address register */
#define CPU0_ACCENDLMU5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E4BCu)

/** \brief 4C0, CPU0 DLMU range 6, write access enable register A */
#define CPU0_ACCENDLMU6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E4C0u)

/** \brief 4C4, CPU0 DLMU range 6, write access enable register B */
#define CPU0_ACCENDLMU6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E4C4u)

/** \brief 4C8, CPU0 DLMU range 6, read access enable register A */
#define CPU0_ACCENDLMU6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E4C8u)

/** \brief 4CC, CPU0 DLMU range 6, read access enable register B */
#define CPU0_ACCENDLMU6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E4CCu)

/** \brief 4D0, CPU0 DLMU range 6, VM access enable register */
#define CPU0_ACCENDLMU6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E4D0u)

/** \brief 4D4, CPU0 DLMU range 6, PRS access enable register */
#define CPU0_ACCENDLMU6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E4D4u)

/** \brief 4D8, CPU0 DLMU range 6, region lower address register */
#define CPU0_ACCENDLMU6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E4D8u)

/** \brief 4DC, CPU0 DLMU range 6, region upper address register */
#define CPU0_ACCENDLMU6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E4DCu)

/** \brief 4E0, CPU0 DLMU range 7, write access enable register A */
#define CPU0_ACCENDLMU7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E4E0u)

/** \brief 4E4, CPU0 DLMU range 7, write access enable register B */
#define CPU0_ACCENDLMU7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E4E4u)

/** \brief 4E8, CPU0 DLMU range 7, read access enable register A */
#define CPU0_ACCENDLMU7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E4E8u)

/** \brief 4EC, CPU0 DLMU range 7, read access enable register B */
#define CPU0_ACCENDLMU7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E4ECu)

/** \brief 4F0, CPU0 DLMU range 7, VM access enable register */
#define CPU0_ACCENDLMU7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E4F0u)

/** \brief 4F4, CPU0 DLMU range 7, PRS access enable register */
#define CPU0_ACCENDLMU7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E4F4u)

/** \brief 4F8, CPU0 DLMU range 7, region lower address register */
#define CPU0_ACCENDLMU7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E4F8u)

/** \brief 4FC, CPU0 DLMU range 7, region upper address register */
#define CPU0_ACCENDLMU7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E4FCu)

/** \brief 500, CPU0 DLMU range 8, write access enable register A */
#define CPU0_ACCENDLMU8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E500u)

/** \brief 504, CPU0 DLMU range 8, write access enable register B */
#define CPU0_ACCENDLMU8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E504u)

/** \brief 508, CPU0 DLMU range 8, read access enable register A */
#define CPU0_ACCENDLMU8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E508u)

/** \brief 50C, CPU0 DLMU range 8, read access enable register B */
#define CPU0_ACCENDLMU8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E50Cu)

/** \brief 510, CPU0 DLMU range 8, VM access enable register */
#define CPU0_ACCENDLMU8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E510u)

/** \brief 514, CPU0 DLMU range 8, PRS access enable register */
#define CPU0_ACCENDLMU8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E514u)

/** \brief 518, CPU0 DLMU range 8, region lower address register */
#define CPU0_ACCENDLMU8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E518u)

/** \brief 51C, CPU0 DLMU range 8, region upper address register */
#define CPU0_ACCENDLMU8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E51Cu)

/** \brief 520, CPU0 DLMU range 9, write access enable register A */
#define CPU0_ACCENDLMU9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E520u)

/** \brief 524, CPU0 DLMU range 9, write access enable register B */
#define CPU0_ACCENDLMU9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E524u)

/** \brief 528, CPU0 DLMU range 9, read access enable register A */
#define CPU0_ACCENDLMU9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E528u)

/** \brief 52C, CPU0 DLMU range 9, read access enable register B */
#define CPU0_ACCENDLMU9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E52Cu)

/** \brief 530, CPU0 DLMU range 9, VM access enable register */
#define CPU0_ACCENDLMU9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E530u)

/** \brief 534, CPU0 DLMU range 9, PRS access enable register */
#define CPU0_ACCENDLMU9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E534u)

/** \brief 538, CPU0 DLMU range 9, region lower address register */
#define CPU0_ACCENDLMU9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E538u)

/** \brief 53C, CPU0 DLMU range 9, region upper address register */
#define CPU0_ACCENDLMU9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E53Cu)

/** \brief 540, CPU0 DLMU range 10, write access enable register A */
#define CPU0_ACCENDLMU10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E540u)

/** \brief 544, CPU0 DLMU range 10, write access enable register B */
#define CPU0_ACCENDLMU10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E544u)

/** \brief 548, CPU0 DLMU range 10, read access enable register A */
#define CPU0_ACCENDLMU10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E548u)

/** \brief 54C, CPU0 DLMU range 10, read access enable register B */
#define CPU0_ACCENDLMU10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E54Cu)

/** \brief 550, CPU0 DLMU range 10, VM access enable register */
#define CPU0_ACCENDLMU10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E550u)

/** \brief 554, CPU0 DLMU range 10, PRS access enable register */
#define CPU0_ACCENDLMU10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E554u)

/** \brief 558, CPU0 DLMU range 10, region lower address register */
#define CPU0_ACCENDLMU10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E558u)

/** \brief 55C, CPU0 DLMU range 10, region upper address register */
#define CPU0_ACCENDLMU10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E55Cu)

/** \brief 560, CPU0 DLMU range 11, write access enable register A */
#define CPU0_ACCENDLMU11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E560u)

/** \brief 564, CPU0 DLMU range 11, write access enable register B */
#define CPU0_ACCENDLMU11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E564u)

/** \brief 568, CPU0 DLMU range 11, read access enable register A */
#define CPU0_ACCENDLMU11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E568u)

/** \brief 56C, CPU0 DLMU range 11, read access enable register B */
#define CPU0_ACCENDLMU11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E56Cu)

/** \brief 570, CPU0 DLMU range 11, VM access enable register */
#define CPU0_ACCENDLMU11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E570u)

/** \brief 574, CPU0 DLMU range 11, PRS access enable register */
#define CPU0_ACCENDLMU11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E574u)

/** \brief 578, CPU0 DLMU range 11, region lower address register */
#define CPU0_ACCENDLMU11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E578u)

/** \brief 57C, CPU0 DLMU range 11, region upper address register */
#define CPU0_ACCENDLMU11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E57Cu)

/** \brief 580, CPU0 DLMU range 12, write access enable register A */
#define CPU0_ACCENDLMU12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E580u)

/** \brief 584, CPU0 DLMU range 12, write access enable register B */
#define CPU0_ACCENDLMU12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E584u)

/** \brief 588, CPU0 DLMU range 12, read access enable register A */
#define CPU0_ACCENDLMU12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E588u)

/** \brief 58C, CPU0 DLMU range 12, read access enable register B */
#define CPU0_ACCENDLMU12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E58Cu)

/** \brief 590, CPU0 DLMU range 12, VM access enable register */
#define CPU0_ACCENDLMU12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E590u)

/** \brief 594, CPU0 DLMU range 12, PRS access enable register */
#define CPU0_ACCENDLMU12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E594u)

/** \brief 598, CPU0 DLMU range 12, region lower address register */
#define CPU0_ACCENDLMU12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E598u)

/** \brief 59C, CPU0 DLMU range 12, region upper address register */
#define CPU0_ACCENDLMU12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E59Cu)

/** \brief 5A0, CPU0 DLMU range 13, write access enable register A */
#define CPU0_ACCENDLMU13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E5A0u)

/** \brief 5A4, CPU0 DLMU range 13, write access enable register B */
#define CPU0_ACCENDLMU13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E5A4u)

/** \brief 5A8, CPU0 DLMU range 13, read access enable register A */
#define CPU0_ACCENDLMU13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E5A8u)

/** \brief 5AC, CPU0 DLMU range 13, read access enable register B */
#define CPU0_ACCENDLMU13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E5ACu)

/** \brief 5B0, CPU0 DLMU range 13, VM access enable register */
#define CPU0_ACCENDLMU13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E5B0u)

/** \brief 5B4, CPU0 DLMU range 13, PRS access enable register */
#define CPU0_ACCENDLMU13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E5B4u)

/** \brief 5B8, CPU0 DLMU range 13, region lower address register */
#define CPU0_ACCENDLMU13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E5B8u)

/** \brief 5BC, CPU0 DLMU range 13, region upper address register */
#define CPU0_ACCENDLMU13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E5BCu)

/** \brief 5C0, CPU0 DLMU range 14, write access enable register A */
#define CPU0_ACCENDLMU14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E5C0u)

/** \brief 5C4, CPU0 DLMU range 14, write access enable register B */
#define CPU0_ACCENDLMU14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E5C4u)

/** \brief 5C8, CPU0 DLMU range 14, read access enable register A */
#define CPU0_ACCENDLMU14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E5C8u)

/** \brief 5CC, CPU0 DLMU range 14, read access enable register B */
#define CPU0_ACCENDLMU14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E5CCu)

/** \brief 5D0, CPU0 DLMU range 14, VM access enable register */
#define CPU0_ACCENDLMU14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E5D0u)

/** \brief 5D4, CPU0 DLMU range 14, PRS access enable register */
#define CPU0_ACCENDLMU14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E5D4u)

/** \brief 5D8, CPU0 DLMU range 14, region lower address register */
#define CPU0_ACCENDLMU14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E5D8u)

/** \brief 5DC, CPU0 DLMU range 14, region upper address register */
#define CPU0_ACCENDLMU14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E5DCu)

/** \brief 5E0, CPU0 DLMU range 15, write access enable register A */
#define CPU0_ACCENDLMU15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E5E0u)

/** \brief 5E4, CPU0 DLMU range 15, write access enable register B */
#define CPU0_ACCENDLMU15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E5E4u)

/** \brief 5E8, CPU0 DLMU range 15, read access enable register A */
#define CPU0_ACCENDLMU15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E5E8u)

/** \brief 5EC, CPU0 DLMU range 15, read access enable register B */
#define CPU0_ACCENDLMU15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E5ECu)

/** \brief 5F0, CPU0 DLMU range 15, VM access enable register */
#define CPU0_ACCENDLMU15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E5F0u)

/** \brief 5F4, CPU0 DLMU range 15, PRS access enable register */
#define CPU0_ACCENDLMU15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E5F4u)

/** \brief 5F8, CPU0 DLMU range 15, region lower address register */
#define CPU0_ACCENDLMU15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF880E5F8u)

/** \brief 5FC, CPU0 DLMU range 15, region upper address register */
#define CPU0_ACCENDLMU15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF880E5FCu)

/** \brief 600, CPU0 SFR, write access enable register A */
#define CPU0_ACCENSFR_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E600u)

/** \brief 604, CPU0 SFR, write access enable register B */
#define CPU0_ACCENSFR_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E604u)

/** \brief 608, CPU0 SFR, read access enable register A */
#define CPU0_ACCENSFR_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E608u)

/** \brief 60C, CPU0 SFR, read access enable register B */
#define CPU0_ACCENSFR_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E60Cu)

/** \brief 610, CPU0 SFR, VM access enable register */
#define CPU0_ACCENSFR_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E610u)

/** \brief 614, CPU0 SFR, PRS access enable register */
#define CPU0_ACCENSFR_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E614u)

/** \brief 700, CPU0 VM0 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E700u)

/** \brief 704, CPU0 VM0 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E704u)

/** \brief 708, CPU0 VM0 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E708u)

/** \brief 70C, CPU0 VM0 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E70Cu)

/** \brief 710, CPU0 VM0 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E710u)

/** \brief 714, CPU0 VM0 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E714u)

/** \brief 720, CPU0 VM1 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E720u)

/** \brief 724, CPU0 VM1 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E724u)

/** \brief 728, CPU0 VM1 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E728u)

/** \brief 72C, CPU0 VM1 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E72Cu)

/** \brief 730, CPU0 VM1 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E730u)

/** \brief 734, CPU0 VM1 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E734u)

/** \brief 740, CPU0 VM2 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E740u)

/** \brief 744, CPU0 VM2 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E744u)

/** \brief 748, CPU0 VM2 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E748u)

/** \brief 74C, CPU0 VM2 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E74Cu)

/** \brief 750, CPU0 VM2 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E750u)

/** \brief 754, CPU0 VM2 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E754u)

/** \brief 760, CPU0 VM3 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E760u)

/** \brief 764, CPU0 VM3 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E764u)

/** \brief 768, CPU0 VM3 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E768u)

/** \brief 76C, CPU0 VM3 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E76Cu)

/** \brief 770, CPU0 VM3 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E770u)

/** \brief 774, CPU0 VM3 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E774u)

/** \brief 780, CPU0 VM4 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E780u)

/** \brief 784, CPU0 VM4 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E784u)

/** \brief 788, CPU0 VM4 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E788u)

/** \brief 78C, CPU0 VM4 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E78Cu)

/** \brief 790, CPU0 VM4 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E790u)

/** \brief 794, CPU0 VM4 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E794u)

/** \brief 7A0, CPU0 VM5 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E7A0u)

/** \brief 7A4, CPU0 VM5 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E7A4u)

/** \brief 7A8, CPU0 VM5 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E7A8u)

/** \brief 7AC, CPU0 VM5 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E7ACu)

/** \brief 7B0, CPU0 VM5 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E7B0u)

/** \brief 7B4, CPU0 VM5 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E7B4u)

/** \brief 7C0, CPU0 VM6 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E7C0u)

/** \brief 7C4, CPU0 VM6 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E7C4u)

/** \brief 7C8, CPU0 VM6 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E7C8u)

/** \brief 7CC, CPU0 VM6 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E7CCu)

/** \brief 7D0, CPU0 VM6 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E7D0u)

/** \brief 7D4, CPU0 VM6 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E7D4u)

/** \brief 7E0, CPU0 VM7 STM, write access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF880E7E0u)

/** \brief 7E4, CPU0 VM7 STM, write access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF880E7E4u)

/** \brief 7E8, CPU0 VM7 STM, read access enable register A", virtualization view" */
#define CPU0_ACCENSTMVM7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF880E7E8u)

/** \brief 7EC, CPU0 VM7 STM, read access enable register B", virtualization view" */
#define CPU0_ACCENSTMVM7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF880E7ECu)

/** \brief 7F0, CPU0 VM7 STM, VM access enable register", virtualization view" */
#define CPU0_ACCENSTMVM7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF880E7F0u)

/** \brief 7F4, CPU0 VM7 STM, PRS access enable register", virtualization view" */
#define CPU0_ACCENSTMVM7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF880E7F4u)

/** \brief FB00, CPU0 overlay range select register */
#define CPU0_OSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OSEL*)0xF880FB00u)

/** \brief FB10, CPU0 redirected address base register 0 */
#define CPU0_BLK0_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB10u)
/** Alias (User Manual Name) for CPU0_BLK0_RABR */
#define CPU0_RABR0 (CPU0_BLK0_RABR)

/** \brief FB14, CPU0 overlay target address register 0 (Low priority) */
#define CPU0_BLK0_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB14u)
/** Alias (User Manual Name) for CPU0_BLK0_OTAR */
#define CPU0_OTAR0 (CPU0_BLK0_OTAR)

/** \brief FB18, CPU0 overlay mask register 0 */
#define CPU0_BLK0_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB18u)
/** Alias (User Manual Name) for CPU0_BLK0_OMASK */
#define CPU0_OMASK0 (CPU0_BLK0_OMASK)

/** \brief FB1C, CPU0 redirected address base register 1 */
#define CPU0_BLK1_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB1Cu)
/** Alias (User Manual Name) for CPU0_BLK1_RABR */
#define CPU0_RABR1 (CPU0_BLK1_RABR)

/** \brief FB20, CPU0 overlay target address register 1 (Low priority) */
#define CPU0_BLK1_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB20u)
/** Alias (User Manual Name) for CPU0_BLK1_OTAR */
#define CPU0_OTAR1 (CPU0_BLK1_OTAR)

/** \brief FB24, CPU0 overlay mask register 1 */
#define CPU0_BLK1_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB24u)
/** Alias (User Manual Name) for CPU0_BLK1_OMASK */
#define CPU0_OMASK1 (CPU0_BLK1_OMASK)

/** \brief FB28, CPU0 redirected address base register 2 */
#define CPU0_BLK2_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB28u)
/** Alias (User Manual Name) for CPU0_BLK2_RABR */
#define CPU0_RABR2 (CPU0_BLK2_RABR)

/** \brief FB2C, CPU0 overlay target address register 2 (Low priority) */
#define CPU0_BLK2_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB2Cu)
/** Alias (User Manual Name) for CPU0_BLK2_OTAR */
#define CPU0_OTAR2 (CPU0_BLK2_OTAR)

/** \brief FB30, CPU0 overlay mask register 2 */
#define CPU0_BLK2_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB30u)
/** Alias (User Manual Name) for CPU0_BLK2_OMASK */
#define CPU0_OMASK2 (CPU0_BLK2_OMASK)

/** \brief FB34, CPU0 redirected address base register 3 */
#define CPU0_BLK3_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB34u)
/** Alias (User Manual Name) for CPU0_BLK3_RABR */
#define CPU0_RABR3 (CPU0_BLK3_RABR)

/** \brief FB38, CPU0 overlay target address register 3 (Low priority) */
#define CPU0_BLK3_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB38u)
/** Alias (User Manual Name) for CPU0_BLK3_OTAR */
#define CPU0_OTAR3 (CPU0_BLK3_OTAR)

/** \brief FB3C, CPU0 overlay mask register 3 */
#define CPU0_BLK3_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB3Cu)
/** Alias (User Manual Name) for CPU0_BLK3_OMASK */
#define CPU0_OMASK3 (CPU0_BLK3_OMASK)

/** \brief FB40, CPU0 redirected address base register 4 */
#define CPU0_BLK4_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB40u)
/** Alias (User Manual Name) for CPU0_BLK4_RABR */
#define CPU0_RABR4 (CPU0_BLK4_RABR)

/** \brief FB44, CPU0 overlay target address register 4 (Low priority) */
#define CPU0_BLK4_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB44u)
/** Alias (User Manual Name) for CPU0_BLK4_OTAR */
#define CPU0_OTAR4 (CPU0_BLK4_OTAR)

/** \brief FB48, CPU0 overlay mask register 4 */
#define CPU0_BLK4_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB48u)
/** Alias (User Manual Name) for CPU0_BLK4_OMASK */
#define CPU0_OMASK4 (CPU0_BLK4_OMASK)

/** \brief FB4C, CPU0 redirected address base register 5 */
#define CPU0_BLK5_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB4Cu)
/** Alias (User Manual Name) for CPU0_BLK5_RABR */
#define CPU0_RABR5 (CPU0_BLK5_RABR)

/** \brief FB50, CPU0 overlay target address register 5 (Low priority) */
#define CPU0_BLK5_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB50u)
/** Alias (User Manual Name) for CPU0_BLK5_OTAR */
#define CPU0_OTAR5 (CPU0_BLK5_OTAR)

/** \brief FB54, CPU0 overlay mask register 5 */
#define CPU0_BLK5_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB54u)
/** Alias (User Manual Name) for CPU0_BLK5_OMASK */
#define CPU0_OMASK5 (CPU0_BLK5_OMASK)

/** \brief FB58, CPU0 redirected address base register 6 */
#define CPU0_BLK6_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB58u)
/** Alias (User Manual Name) for CPU0_BLK6_RABR */
#define CPU0_RABR6 (CPU0_BLK6_RABR)

/** \brief FB5C, CPU0 overlay target address register 6 (Low priority) */
#define CPU0_BLK6_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB5Cu)
/** Alias (User Manual Name) for CPU0_BLK6_OTAR */
#define CPU0_OTAR6 (CPU0_BLK6_OTAR)

/** \brief FB60, CPU0 overlay mask register 6 */
#define CPU0_BLK6_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB60u)
/** Alias (User Manual Name) for CPU0_BLK6_OMASK */
#define CPU0_OMASK6 (CPU0_BLK6_OMASK)

/** \brief FB64, CPU0 redirected address base register 7 */
#define CPU0_BLK7_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB64u)
/** Alias (User Manual Name) for CPU0_BLK7_RABR */
#define CPU0_RABR7 (CPU0_BLK7_RABR)

/** \brief FB68, CPU0 overlay target address register 7 (Low priority) */
#define CPU0_BLK7_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB68u)
/** Alias (User Manual Name) for CPU0_BLK7_OTAR */
#define CPU0_OTAR7 (CPU0_BLK7_OTAR)

/** \brief FB6C, CPU0 overlay mask register 7 */
#define CPU0_BLK7_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB6Cu)
/** Alias (User Manual Name) for CPU0_BLK7_OMASK */
#define CPU0_OMASK7 (CPU0_BLK7_OMASK)

/** \brief FB70, CPU0 redirected address base register 8 */
#define CPU0_BLK8_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB70u)
/** Alias (User Manual Name) for CPU0_BLK8_RABR */
#define CPU0_RABR8 (CPU0_BLK8_RABR)

/** \brief FB74, CPU0 overlay target address register 8 (Low priority) */
#define CPU0_BLK8_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB74u)
/** Alias (User Manual Name) for CPU0_BLK8_OTAR */
#define CPU0_OTAR8 (CPU0_BLK8_OTAR)

/** \brief FB78, CPU0 overlay mask register 8 */
#define CPU0_BLK8_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB78u)
/** Alias (User Manual Name) for CPU0_BLK8_OMASK */
#define CPU0_OMASK8 (CPU0_BLK8_OMASK)

/** \brief FB7C, CPU0 redirected address base register 9 */
#define CPU0_BLK9_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB7Cu)
/** Alias (User Manual Name) for CPU0_BLK9_RABR */
#define CPU0_RABR9 (CPU0_BLK9_RABR)

/** \brief FB80, CPU0 overlay target address register 9 (Low priority) */
#define CPU0_BLK9_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB80u)
/** Alias (User Manual Name) for CPU0_BLK9_OTAR */
#define CPU0_OTAR9 (CPU0_BLK9_OTAR)

/** \brief FB84, CPU0 overlay mask register 9 */
#define CPU0_BLK9_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB84u)
/** Alias (User Manual Name) for CPU0_BLK9_OMASK */
#define CPU0_OMASK9 (CPU0_BLK9_OMASK)

/** \brief FB88, CPU0 redirected address base register 10 */
#define CPU0_BLK10_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB88u)
/** Alias (User Manual Name) for CPU0_BLK10_RABR */
#define CPU0_RABR10 (CPU0_BLK10_RABR)

/** \brief FB8C, CPU0 overlay target address register 10 (Low priority) */
#define CPU0_BLK10_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB8Cu)
/** Alias (User Manual Name) for CPU0_BLK10_OTAR */
#define CPU0_OTAR10 (CPU0_BLK10_OTAR)

/** \brief FB90, CPU0 overlay mask register 10 */
#define CPU0_BLK10_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB90u)
/** Alias (User Manual Name) for CPU0_BLK10_OMASK */
#define CPU0_OMASK10 (CPU0_BLK10_OMASK)

/** \brief FB94, CPU0 redirected address base register 11 */
#define CPU0_BLK11_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FB94u)
/** Alias (User Manual Name) for CPU0_BLK11_RABR */
#define CPU0_RABR11 (CPU0_BLK11_RABR)

/** \brief FB98, CPU0 overlay target address register 11 (Low priority) */
#define CPU0_BLK11_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FB98u)
/** Alias (User Manual Name) for CPU0_BLK11_OTAR */
#define CPU0_OTAR11 (CPU0_BLK11_OTAR)

/** \brief FB9C, CPU0 overlay mask register 11 */
#define CPU0_BLK11_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FB9Cu)
/** Alias (User Manual Name) for CPU0_BLK11_OMASK */
#define CPU0_OMASK11 (CPU0_BLK11_OMASK)

/** \brief FBA0, CPU0 redirected address base register 12 */
#define CPU0_BLK12_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBA0u)
/** Alias (User Manual Name) for CPU0_BLK12_RABR */
#define CPU0_RABR12 (CPU0_BLK12_RABR)

/** \brief FBA4, CPU0 overlay target address register 12 (Low priority) */
#define CPU0_BLK12_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBA4u)
/** Alias (User Manual Name) for CPU0_BLK12_OTAR */
#define CPU0_OTAR12 (CPU0_BLK12_OTAR)

/** \brief FBA8, CPU0 overlay mask register 12 */
#define CPU0_BLK12_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBA8u)
/** Alias (User Manual Name) for CPU0_BLK12_OMASK */
#define CPU0_OMASK12 (CPU0_BLK12_OMASK)

/** \brief FBAC, CPU0 redirected address base register 13 */
#define CPU0_BLK13_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBACu)
/** Alias (User Manual Name) for CPU0_BLK13_RABR */
#define CPU0_RABR13 (CPU0_BLK13_RABR)

/** \brief FBB0, CPU0 overlay target address register 13 (Low priority) */
#define CPU0_BLK13_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBB0u)
/** Alias (User Manual Name) for CPU0_BLK13_OTAR */
#define CPU0_OTAR13 (CPU0_BLK13_OTAR)

/** \brief FBB4, CPU0 overlay mask register 13 */
#define CPU0_BLK13_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBB4u)
/** Alias (User Manual Name) for CPU0_BLK13_OMASK */
#define CPU0_OMASK13 (CPU0_BLK13_OMASK)

/** \brief FBB8, CPU0 redirected address base register 14 */
#define CPU0_BLK14_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBB8u)
/** Alias (User Manual Name) for CPU0_BLK14_RABR */
#define CPU0_RABR14 (CPU0_BLK14_RABR)

/** \brief FBBC, CPU0 overlay target address register 14 (Low priority) */
#define CPU0_BLK14_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBBCu)
/** Alias (User Manual Name) for CPU0_BLK14_OTAR */
#define CPU0_OTAR14 (CPU0_BLK14_OTAR)

/** \brief FBC0, CPU0 overlay mask register 14 */
#define CPU0_BLK14_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBC0u)
/** Alias (User Manual Name) for CPU0_BLK14_OMASK */
#define CPU0_OMASK14 (CPU0_BLK14_OMASK)

/** \brief FBC4, CPU0 redirected address base register 15 */
#define CPU0_BLK15_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBC4u)
/** Alias (User Manual Name) for CPU0_BLK15_RABR */
#define CPU0_RABR15 (CPU0_BLK15_RABR)

/** \brief FBC8, CPU0 overlay target address register 15 (Low priority) */
#define CPU0_BLK15_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBC8u)
/** Alias (User Manual Name) for CPU0_BLK15_OTAR */
#define CPU0_OTAR15 (CPU0_BLK15_OTAR)

/** \brief FBCC, CPU0 overlay mask register 15 */
#define CPU0_BLK15_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBCCu)
/** Alias (User Manual Name) for CPU0_BLK15_OMASK */
#define CPU0_OMASK15 (CPU0_BLK15_OMASK)

/** \brief FBD0, CPU0 redirected address base register 16 */
#define CPU0_BLK16_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBD0u)
/** Alias (User Manual Name) for CPU0_BLK16_RABR */
#define CPU0_RABR16 (CPU0_BLK16_RABR)

/** \brief FBD4, CPU0 overlay target address register 16 (Low priority) */
#define CPU0_BLK16_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBD4u)
/** Alias (User Manual Name) for CPU0_BLK16_OTAR */
#define CPU0_OTAR16 (CPU0_BLK16_OTAR)

/** \brief FBD8, CPU0 overlay mask register 16 */
#define CPU0_BLK16_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBD8u)
/** Alias (User Manual Name) for CPU0_BLK16_OMASK */
#define CPU0_OMASK16 (CPU0_BLK16_OMASK)

/** \brief FBDC, CPU0 redirected address base register 17 */
#define CPU0_BLK17_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBDCu)
/** Alias (User Manual Name) for CPU0_BLK17_RABR */
#define CPU0_RABR17 (CPU0_BLK17_RABR)

/** \brief FBE0, CPU0 overlay target address register 17 (Low priority) */
#define CPU0_BLK17_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBE0u)
/** Alias (User Manual Name) for CPU0_BLK17_OTAR */
#define CPU0_OTAR17 (CPU0_BLK17_OTAR)

/** \brief FBE4, CPU0 overlay mask register 17 */
#define CPU0_BLK17_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBE4u)
/** Alias (User Manual Name) for CPU0_BLK17_OMASK */
#define CPU0_OMASK17 (CPU0_BLK17_OMASK)

/** \brief FBE8, CPU0 redirected address base register 18 */
#define CPU0_BLK18_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBE8u)
/** Alias (User Manual Name) for CPU0_BLK18_RABR */
#define CPU0_RABR18 (CPU0_BLK18_RABR)

/** \brief FBEC, CPU0 overlay target address register 18 (Low priority) */
#define CPU0_BLK18_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBECu)
/** Alias (User Manual Name) for CPU0_BLK18_OTAR */
#define CPU0_OTAR18 (CPU0_BLK18_OTAR)

/** \brief FBF0, CPU0 overlay mask register 18 */
#define CPU0_BLK18_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBF0u)
/** Alias (User Manual Name) for CPU0_BLK18_OMASK */
#define CPU0_OMASK18 (CPU0_BLK18_OMASK)

/** \brief FBF4, CPU0 redirected address base register 19 */
#define CPU0_BLK19_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FBF4u)
/** Alias (User Manual Name) for CPU0_BLK19_RABR */
#define CPU0_RABR19 (CPU0_BLK19_RABR)

/** \brief FBF8, CPU0 overlay target address register 19 (Low priority) */
#define CPU0_BLK19_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FBF8u)
/** Alias (User Manual Name) for CPU0_BLK19_OTAR */
#define CPU0_OTAR19 (CPU0_BLK19_OTAR)

/** \brief FBFC, CPU0 overlay mask register 19 */
#define CPU0_BLK19_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FBFCu)
/** Alias (User Manual Name) for CPU0_BLK19_OMASK */
#define CPU0_OMASK19 (CPU0_BLK19_OMASK)

/** \brief FC00, CPU0 redirected address base register 20 */
#define CPU0_BLK20_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC00u)
/** Alias (User Manual Name) for CPU0_BLK20_RABR */
#define CPU0_RABR20 (CPU0_BLK20_RABR)

/** \brief FC04, CPU0 overlay target address register 20 (Low priority) */
#define CPU0_BLK20_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC04u)
/** Alias (User Manual Name) for CPU0_BLK20_OTAR */
#define CPU0_OTAR20 (CPU0_BLK20_OTAR)

/** \brief FC08, CPU0 overlay mask register 20 */
#define CPU0_BLK20_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC08u)
/** Alias (User Manual Name) for CPU0_BLK20_OMASK */
#define CPU0_OMASK20 (CPU0_BLK20_OMASK)

/** \brief FC0C, CPU0 redirected address base register 21 */
#define CPU0_BLK21_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC0Cu)
/** Alias (User Manual Name) for CPU0_BLK21_RABR */
#define CPU0_RABR21 (CPU0_BLK21_RABR)

/** \brief FC10, CPU0 overlay target address register 21 (Low priority) */
#define CPU0_BLK21_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC10u)
/** Alias (User Manual Name) for CPU0_BLK21_OTAR */
#define CPU0_OTAR21 (CPU0_BLK21_OTAR)

/** \brief FC14, CPU0 overlay mask register 21 */
#define CPU0_BLK21_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC14u)
/** Alias (User Manual Name) for CPU0_BLK21_OMASK */
#define CPU0_OMASK21 (CPU0_BLK21_OMASK)

/** \brief FC18, CPU0 redirected address base register 22 */
#define CPU0_BLK22_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC18u)
/** Alias (User Manual Name) for CPU0_BLK22_RABR */
#define CPU0_RABR22 (CPU0_BLK22_RABR)

/** \brief FC1C, CPU0 overlay target address register 22 (Low priority) */
#define CPU0_BLK22_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC1Cu)
/** Alias (User Manual Name) for CPU0_BLK22_OTAR */
#define CPU0_OTAR22 (CPU0_BLK22_OTAR)

/** \brief FC20, CPU0 overlay mask register 22 */
#define CPU0_BLK22_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC20u)
/** Alias (User Manual Name) for CPU0_BLK22_OMASK */
#define CPU0_OMASK22 (CPU0_BLK22_OMASK)

/** \brief FC24, CPU0 redirected address base register 23 */
#define CPU0_BLK23_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC24u)
/** Alias (User Manual Name) for CPU0_BLK23_RABR */
#define CPU0_RABR23 (CPU0_BLK23_RABR)

/** \brief FC28, CPU0 overlay target address register 23 (Low priority) */
#define CPU0_BLK23_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC28u)
/** Alias (User Manual Name) for CPU0_BLK23_OTAR */
#define CPU0_OTAR23 (CPU0_BLK23_OTAR)

/** \brief FC2C, CPU0 overlay mask register 23 */
#define CPU0_BLK23_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC2Cu)
/** Alias (User Manual Name) for CPU0_BLK23_OMASK */
#define CPU0_OMASK23 (CPU0_BLK23_OMASK)

/** \brief FC30, CPU0 redirected address base register 24 */
#define CPU0_BLK24_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC30u)
/** Alias (User Manual Name) for CPU0_BLK24_RABR */
#define CPU0_RABR24 (CPU0_BLK24_RABR)

/** \brief FC34, CPU0 overlay target address register 24 (Low priority) */
#define CPU0_BLK24_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC34u)
/** Alias (User Manual Name) for CPU0_BLK24_OTAR */
#define CPU0_OTAR24 (CPU0_BLK24_OTAR)

/** \brief FC38, CPU0 overlay mask register 24 */
#define CPU0_BLK24_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC38u)
/** Alias (User Manual Name) for CPU0_BLK24_OMASK */
#define CPU0_OMASK24 (CPU0_BLK24_OMASK)

/** \brief FC3C, CPU0 redirected address base register 25 */
#define CPU0_BLK25_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC3Cu)
/** Alias (User Manual Name) for CPU0_BLK25_RABR */
#define CPU0_RABR25 (CPU0_BLK25_RABR)

/** \brief FC40, CPU0 overlay target address register 25 (Low priority) */
#define CPU0_BLK25_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC40u)
/** Alias (User Manual Name) for CPU0_BLK25_OTAR */
#define CPU0_OTAR25 (CPU0_BLK25_OTAR)

/** \brief FC44, CPU0 overlay mask register 25 */
#define CPU0_BLK25_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC44u)
/** Alias (User Manual Name) for CPU0_BLK25_OMASK */
#define CPU0_OMASK25 (CPU0_BLK25_OMASK)

/** \brief FC48, CPU0 redirected address base register 26 */
#define CPU0_BLK26_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC48u)
/** Alias (User Manual Name) for CPU0_BLK26_RABR */
#define CPU0_RABR26 (CPU0_BLK26_RABR)

/** \brief FC4C, CPU0 overlay target address register 26 (Low priority) */
#define CPU0_BLK26_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC4Cu)
/** Alias (User Manual Name) for CPU0_BLK26_OTAR */
#define CPU0_OTAR26 (CPU0_BLK26_OTAR)

/** \brief FC50, CPU0 overlay mask register 26 */
#define CPU0_BLK26_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC50u)
/** Alias (User Manual Name) for CPU0_BLK26_OMASK */
#define CPU0_OMASK26 (CPU0_BLK26_OMASK)

/** \brief FC54, CPU0 redirected address base register 27 */
#define CPU0_BLK27_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC54u)
/** Alias (User Manual Name) for CPU0_BLK27_RABR */
#define CPU0_RABR27 (CPU0_BLK27_RABR)

/** \brief FC58, CPU0 overlay target address register 27 (Low priority) */
#define CPU0_BLK27_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC58u)
/** Alias (User Manual Name) for CPU0_BLK27_OTAR */
#define CPU0_OTAR27 (CPU0_BLK27_OTAR)

/** \brief FC5C, CPU0 overlay mask register 27 */
#define CPU0_BLK27_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC5Cu)
/** Alias (User Manual Name) for CPU0_BLK27_OMASK */
#define CPU0_OMASK27 (CPU0_BLK27_OMASK)

/** \brief FC60, CPU0 redirected address base register 28 */
#define CPU0_BLK28_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC60u)
/** Alias (User Manual Name) for CPU0_BLK28_RABR */
#define CPU0_RABR28 (CPU0_BLK28_RABR)

/** \brief FC64, CPU0 overlay target address register 28 (Low priority) */
#define CPU0_BLK28_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC64u)
/** Alias (User Manual Name) for CPU0_BLK28_OTAR */
#define CPU0_OTAR28 (CPU0_BLK28_OTAR)

/** \brief FC68, CPU0 overlay mask register 28 */
#define CPU0_BLK28_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC68u)
/** Alias (User Manual Name) for CPU0_BLK28_OMASK */
#define CPU0_OMASK28 (CPU0_BLK28_OMASK)

/** \brief FC6C, CPU0 redirected address base register 29 */
#define CPU0_BLK29_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC6Cu)
/** Alias (User Manual Name) for CPU0_BLK29_RABR */
#define CPU0_RABR29 (CPU0_BLK29_RABR)

/** \brief FC70, CPU0 overlay target address register 29 (Low priority) */
#define CPU0_BLK29_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC70u)
/** Alias (User Manual Name) for CPU0_BLK29_OTAR */
#define CPU0_OTAR29 (CPU0_BLK29_OTAR)

/** \brief FC74, CPU0 overlay mask register 29 */
#define CPU0_BLK29_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC74u)
/** Alias (User Manual Name) for CPU0_BLK29_OMASK */
#define CPU0_OMASK29 (CPU0_BLK29_OMASK)

/** \brief FC78, CPU0 redirected address base register 30 */
#define CPU0_BLK30_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC78u)
/** Alias (User Manual Name) for CPU0_BLK30_RABR */
#define CPU0_RABR30 (CPU0_BLK30_RABR)

/** \brief FC7C, CPU0 overlay target address register 30 (Low priority) */
#define CPU0_BLK30_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC7Cu)
/** Alias (User Manual Name) for CPU0_BLK30_OTAR */
#define CPU0_OTAR30 (CPU0_BLK30_OTAR)

/** \brief FC80, CPU0 overlay mask register 30 */
#define CPU0_BLK30_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC80u)
/** Alias (User Manual Name) for CPU0_BLK30_OMASK */
#define CPU0_OMASK30 (CPU0_BLK30_OMASK)

/** \brief FC84, CPU0 redirected address base register 31 */
#define CPU0_BLK31_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF880FC84u)
/** Alias (User Manual Name) for CPU0_BLK31_RABR */
#define CPU0_RABR31 (CPU0_BLK31_RABR)

/** \brief FC88, CPU0 overlay target address register 31 (Low priority) */
#define CPU0_BLK31_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF880FC88u)
/** Alias (User Manual Name) for CPU0_BLK31_OTAR */
#define CPU0_OTAR31 (CPU0_BLK31_OTAR)

/** \brief FC8C, CPU0 overlay mask register 31 */
#define CPU0_BLK31_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF880FC8Cu)
/** Alias (User Manual Name) for CPU0_BLK31_OMASK */
#define CPU0_OMASK31 (CPU0_BLK31_OMASK)

/** \brief 1030, CPU0 SRI error generation register */
#define CPU0_HRA_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8811030u)

/** \brief 1040, CPU0 lockstep test register */
#define CPU0_HRA_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8811040u)

/** \brief 8100, CPU0 data access cacheability register */
#define CPU0_HRA_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8818100u)

/** \brief 8104, CPU0 code access cacheability register */
#define CPU0_HRA_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8818104u)

/** \brief 8108, CPU0 peripheral space identifier register */
#define CPU0_HRA_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8818108u)

/** \brief 9000, CPU0 data control register 2 */
#define CPU0_HRA_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8819000u)

/** \brief 9008, CPU0 data control register 1 */
#define CPU0_HRA_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8819008u)

/** \brief 900C, CPU0 SIST mode access control register */
#define CPU0_HRA_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF881900Cu)

/** \brief 9010, CPU0 HR specific data synchronous trap register */
#define CPU0_HRA_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8819010u)

/** \brief 9018, CPU0 HR specific data asynchronous trap register */
#define CPU0_HRA_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8819018u)

/** \brief 901C, CPU0 HR specific data error address register */
#define CPU0_HRA_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF881901Cu)

/** \brief 9020, CPU0 data integrity error address register */
#define CPU0_HRA_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8819020u)

/** \brief 9024, CPU0 data integrity error trap register */
#define CPU0_HRA_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8819024u)

/** \brief 9040, CPU0 data memory control register */
#define CPU0_HRA_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8819040u)

/** \brief 9200, CPU0 HR specific program synchronous trap register */
#define CPU0_HRA_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8819200u)

/** \brief 9204, CPU0 program control 1 */
#define CPU0_HRA_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8819204u)

/** \brief 9208, CPU0 program control 2 */
#define CPU0_HRA_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8819208u)

/** \brief 920C, CPU0 program control 0 */
#define CPU0_HRA_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF881920Cu)

/** \brief 9210, CPU0 HR specific program integrity error address register */
#define CPU0_HRA_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8819210u)

/** \brief 9214, CPU0 HR specific program integrity error trap register */
#define CPU0_HRA_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8819214u)

/** \brief 9400, CPU0 compatibility control register */
#define CPU0_HRA_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8819400u)

/** \brief A000, CPU0 HR specific trap control register */
#define CPU0_HRA_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF881A000u)

/** \brief A004, CPU0 HR specific trapping instruction program counter register */
#define CPU0_HRA_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF881A004u)

/** \brief A008, CPU0 HR specific trapping instruction opcode register */
#define CPU0_HRA_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF881A008u)

/** \brief A010, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRA_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF881A010u)

/** \brief A014, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRA_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF881A014u)

/** \brief A018, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRA_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF881A018u)

/** \brief A01C, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRA_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF881A01Cu)

/** \brief A020, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRA_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF881A020u)

/** \brief A024, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRA_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF881A024u)

/** \brief A030, CPU0 HR specific synchronous trap control register */
#define CPU0_HRA_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF881A030u)

/** \brief A034, CPU0 HR specific trapping instruction opcode register */
#define CPU0_HRA_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF881A034u)

/** \brief C000, CPU0 HR specific data protection range 0, lower bound register */
#define CPU0_HRA_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C000u)

/** \brief C004, CPU0 HR specific data protection range 0, upper bound register */
#define CPU0_HRA_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C004u)

/** \brief C008, CPU0 HR specific data protection range 1, lower bound register */
#define CPU0_HRA_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C008u)

/** \brief C00C, CPU0 HR specific data protection range 1, upper bound register */
#define CPU0_HRA_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C00Cu)

/** \brief C010, CPU0 HR specific data protection range 2, lower bound register */
#define CPU0_HRA_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C010u)

/** \brief C014, CPU0 HR specific data protection range 2, upper bound register */
#define CPU0_HRA_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C014u)

/** \brief C018, CPU0 HR specific data protection range 3, lower bound register */
#define CPU0_HRA_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C018u)

/** \brief C01C, CPU0 HR specific data protection range 3, upper bound register */
#define CPU0_HRA_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C01Cu)

/** \brief C020, CPU0 HR specific data protection range 4, lower bound register */
#define CPU0_HRA_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C020u)

/** \brief C024, CPU0 HR specific data protection range 4, upper bound register */
#define CPU0_HRA_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C024u)

/** \brief C028, CPU0 HR specific data protection range 5, lower bound register */
#define CPU0_HRA_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C028u)

/** \brief C02C, CPU0 HR specific data protection range 5, upper bound register */
#define CPU0_HRA_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C02Cu)

/** \brief C030, CPU0 HR specific data protection range 6, lower bound register */
#define CPU0_HRA_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C030u)

/** \brief C034, CPU0 HR specific data protection range 6, upper bound register */
#define CPU0_HRA_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C034u)

/** \brief C038, CPU0 HR specific data protection range 7, lower bound register */
#define CPU0_HRA_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C038u)

/** \brief C03C, CPU0 HR specific data protection range 7, upper bound register */
#define CPU0_HRA_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C03Cu)

/** \brief C040, CPU0 HR specific data protection range 8, lower bound register */
#define CPU0_HRA_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C040u)

/** \brief C044, CPU0 HR specific data protection range 8, upper bound register */
#define CPU0_HRA_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C044u)

/** \brief C048, CPU0 HR specific data protection range 9, lower bound register */
#define CPU0_HRA_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C048u)

/** \brief C04C, CPU0 HR specific data protection range 9, upper bound register */
#define CPU0_HRA_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C04Cu)

/** \brief C050, CPU0 HR specific data protection range 10, lower bound register */
#define CPU0_HRA_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C050u)

/** \brief C054, CPU0 HR specific data protection range 10, upper bound register */
#define CPU0_HRA_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C054u)

/** \brief C058, CPU0 HR specific data protection range 11, lower bound register */
#define CPU0_HRA_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C058u)

/** \brief C05C, CPU0 HR specific data protection range 11, upper bound register */
#define CPU0_HRA_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C05Cu)

/** \brief C060, CPU0 HR specific data protection range 12, lower bound register */
#define CPU0_HRA_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C060u)

/** \brief C064, CPU0 HR specific data protection range 12, upper bound register */
#define CPU0_HRA_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C064u)

/** \brief C068, CPU0 HR specific data protection range 13, lower bound register */
#define CPU0_HRA_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C068u)

/** \brief C06C, CPU0 HR specific data protection range 13, upper bound register */
#define CPU0_HRA_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C06Cu)

/** \brief C070, CPU0 HR specific data protection range 14, lower bound register */
#define CPU0_HRA_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C070u)

/** \brief C074, CPU0 HR specific data protection range 14, upper bound register */
#define CPU0_HRA_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C074u)

/** \brief C078, CPU0 HR specific data protection range 15, lower bound register */
#define CPU0_HRA_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C078u)

/** \brief C07C, CPU0 HR specific data protection range 15, upper bound register */
#define CPU0_HRA_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C07Cu)

/** \brief C080, CPU0 HR specific data protection range 16, lower bound register */
#define CPU0_HRA_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C080u)

/** \brief C084, CPU0 HR specific data protection range 16, upper bound register */
#define CPU0_HRA_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C084u)

/** \brief C088, CPU0 HR specific data protection range 17, lower bound register */
#define CPU0_HRA_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C088u)

/** \brief C08C, CPU0 HR specific data protection range 17, upper bound register */
#define CPU0_HRA_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C08Cu)

/** \brief C090, CPU0 HR specific data protection range 18, lower bound register */
#define CPU0_HRA_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C090u)

/** \brief C094, CPU0 HR specific data protection range 18, upper bound register */
#define CPU0_HRA_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C094u)

/** \brief C098, CPU0 HR specific data protection range 19, lower bound register */
#define CPU0_HRA_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C098u)

/** \brief C09C, CPU0 HR specific data protection range 19, upper bound register */
#define CPU0_HRA_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C09Cu)

/** \brief C0A0, CPU0 HR specific data protection range 20, lower bound register */
#define CPU0_HRA_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C0A0u)

/** \brief C0A4, CPU0 HR specific data protection range 20, upper bound register */
#define CPU0_HRA_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C0A4u)

/** \brief C0A8, CPU0 HR specific data protection range 21, lower bound register */
#define CPU0_HRA_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C0A8u)

/** \brief C0AC, CPU0 HR specific data protection range 21, upper bound register */
#define CPU0_HRA_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C0ACu)

/** \brief C0B0, CPU0 HR specific data protection range 22, lower bound register */
#define CPU0_HRA_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C0B0u)

/** \brief C0B4, CPU0 HR specific data protection range 22, upper bound register */
#define CPU0_HRA_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C0B4u)

/** \brief C0B8, CPU0 HR specific data protection range 23, lower bound register */
#define CPU0_HRA_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF881C0B8u)

/** \brief C0BC, CPU0 HR specific data protection range 23, upper bound register */
#define CPU0_HRA_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF881C0BCu)

/** \brief D000, CPU0 HR specific code protection range 0, lower bound register */
#define CPU0_HRA_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D000u)

/** \brief D004, CPU0 HR specific code protection range 0, upper bound register */
#define CPU0_HRA_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D004u)

/** \brief D008, CPU0 HR specific code protection range 1, lower bound register */
#define CPU0_HRA_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D008u)

/** \brief D00C, CPU0 HR specific code protection range 1, upper bound register */
#define CPU0_HRA_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D00Cu)

/** \brief D010, CPU0 HR specific code protection range 2, lower bound register */
#define CPU0_HRA_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D010u)

/** \brief D014, CPU0 HR specific code protection range 2, upper bound register */
#define CPU0_HRA_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D014u)

/** \brief D018, CPU0 HR specific code protection range 3, lower bound register */
#define CPU0_HRA_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D018u)

/** \brief D01C, CPU0 HR specific code protection range 3, upper bound register */
#define CPU0_HRA_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D01Cu)

/** \brief D020, CPU0 HR specific code protection range 4, lower bound register */
#define CPU0_HRA_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D020u)

/** \brief D024, CPU0 HR specific code protection range 4, upper bound register */
#define CPU0_HRA_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D024u)

/** \brief D028, CPU0 HR specific code protection range 5, lower bound register */
#define CPU0_HRA_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D028u)

/** \brief D02C, CPU0 HR specific code protection range 5, upper bound register */
#define CPU0_HRA_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D02Cu)

/** \brief D030, CPU0 HR specific code protection range 6, lower bound register */
#define CPU0_HRA_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D030u)

/** \brief D034, CPU0 HR specific code protection range 6, upper bound register */
#define CPU0_HRA_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D034u)

/** \brief D038, CPU0 HR specific code protection range 7, lower bound register */
#define CPU0_HRA_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D038u)

/** \brief D03C, CPU0 HR specific code protection range 7, upper bound register */
#define CPU0_HRA_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D03Cu)

/** \brief D040, CPU0 HR specific code protection range 8, lower bound register */
#define CPU0_HRA_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D040u)

/** \brief D044, CPU0 HR specific code protection range 8, upper bound register */
#define CPU0_HRA_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D044u)

/** \brief D048, CPU0 HR specific code protection range 9, lower bound register */
#define CPU0_HRA_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D048u)

/** \brief D04C, CPU0 HR specific code protection range 9, upper bound register */
#define CPU0_HRA_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D04Cu)

/** \brief D050, CPU0 HR specific code protection range 10, lower bound register */
#define CPU0_HRA_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D050u)

/** \brief D054, CPU0 HR specific code protection range 10, upper bound register */
#define CPU0_HRA_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D054u)

/** \brief D058, CPU0 HR specific code protection range 11, lower bound register */
#define CPU0_HRA_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D058u)

/** \brief D05C, CPU0 HR specific code protection range 11, upper bound register */
#define CPU0_HRA_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D05Cu)

/** \brief D060, CPU0 HR specific code protection range 12, lower bound register */
#define CPU0_HRA_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D060u)

/** \brief D064, CPU0 HR specific code protection range 12, upper bound register */
#define CPU0_HRA_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D064u)

/** \brief D068, CPU0 HR specific code protection range 13, lower bound register */
#define CPU0_HRA_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D068u)

/** \brief D06C, CPU0 HR specific code protection range 13, upper bound register */
#define CPU0_HRA_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D06Cu)

/** \brief D070, CPU0 HR specific code protection range 14, lower bound register */
#define CPU0_HRA_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D070u)

/** \brief D074, CPU0 HR specific code protection range 14, upper bound register */
#define CPU0_HRA_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D074u)

/** \brief D078, CPU0 HR specific code protection range 15, lower bound register */
#define CPU0_HRA_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF881D078u)

/** \brief D07C, CPU0 HR specific code protection range 15, upper bound register */
#define CPU0_HRA_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF881D07Cu)

/** \brief E000, CPU0 HR specific code protection execute enable register set 0 */
#define CPU0_HRA_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E000u)

/** \brief E004, CPU0 HR specific code protection execute enable register set 1 */
#define CPU0_HRA_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E004u)

/** \brief E008, CPU0 HR specific code protection execute enable register set 2 */
#define CPU0_HRA_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E008u)

/** \brief E00C, CPU0 HR specific code protection execute enable register set 3 */
#define CPU0_HRA_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E00Cu)

/** \brief E010, CPU0 HR specific data protection read enable register set 0 */
#define CPU0_HRA_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E010u)

/** \brief E014, CPU0 HR specific data protection read enable register set 1 */
#define CPU0_HRA_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E014u)

/** \brief E018, CPU0 HR specific data protection read enable register set 2 */
#define CPU0_HRA_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E018u)

/** \brief E01C, CPU0 HR specific data protection read enable register set 3 */
#define CPU0_HRA_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E01Cu)

/** \brief E020, CPU0 HR specific data protection write enable register set 0 */
#define CPU0_HRA_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E020u)

/** \brief E024, CPU0 HR specific data protection write enable register set 1 */
#define CPU0_HRA_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E024u)

/** \brief E028, CPU0 HR specific data protection write enable register set 2 */
#define CPU0_HRA_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E028u)

/** \brief E02C, CPU0 HR specific data protection write enable register set 3 */
#define CPU0_HRA_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E02Cu)

/** \brief E040, CPU0 HR specific code protection execute enable register set 4 */
#define CPU0_HRA_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E040u)

/** \brief E044, CPU0 HR specific code protection execute enable register set 5 */
#define CPU0_HRA_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E044u)

/** \brief E048, CPU0 HR specific code protection execute enable register set 6 */
#define CPU0_HRA_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E048u)

/** \brief E04C, CPU0 HR specific code protection execute enable register set 7 */
#define CPU0_HRA_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF881E04Cu)

/** \brief E050, CPU0 HR specific data protection read enable register set 4 */
#define CPU0_HRA_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E050u)

/** \brief E054, CPU0 HR specific data protection read enable register set 5 */
#define CPU0_HRA_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E054u)

/** \brief E058, CPU0 HR specific data protection read enable register set 6 */
#define CPU0_HRA_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E058u)

/** \brief E05C, CPU0 HR specific data protection read enable register set 7 */
#define CPU0_HRA_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF881E05Cu)

/** \brief E060, CPU0 HR specific data protection write enable register set 4 */
#define CPU0_HRA_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E060u)

/** \brief E064, CPU0 HR specific data protection write enable register set 5 */
#define CPU0_HRA_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E064u)

/** \brief E068, CPU0 HR specific data protection write enable register set 6 */
#define CPU0_HRA_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E068u)

/** \brief E06C, CPU0 HR specific data protection write enable register set 7 */
#define CPU0_HRA_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF881E06Cu)

/** \brief E400, CPU0 HR specific temporal protection system control register */
#define CPU0_HRA_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF881E400u)

/** \brief E404, CPU0 HR specific temporal protection system timer register 0 */
#define CPU0_HRA_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E404u)

/** \brief E408, CPU0 HR specific temporal protection system timer register 1 */
#define CPU0_HRA_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E408u)

/** \brief E40C, CPU0 HR specific temporal protection system timer register 2 */
#define CPU0_HRA_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E40Cu)

/** \brief F000, CPU0 trigger event 0 */
#define CPU0_HRA_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F000u)
/** Alias (User Manual Name) for CPU0_HRA_TR0_EVT */
#define CPU0_HRA_TR0EVT (CPU0_HRA_TR0_EVT)

/** \brief F004, CPU0 trigger address 0 */
#define CPU0_HRA_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F004u)
/** Alias (User Manual Name) for CPU0_HRA_TR0_ADR */
#define CPU0_HRA_TR0ADR (CPU0_HRA_TR0_ADR)

/** \brief F008, CPU0 trigger event 1 */
#define CPU0_HRA_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F008u)
/** Alias (User Manual Name) for CPU0_HRA_TR1_EVT */
#define CPU0_HRA_TR1EVT (CPU0_HRA_TR1_EVT)

/** \brief F00C, CPU0 trigger address 1 */
#define CPU0_HRA_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F00Cu)
/** Alias (User Manual Name) for CPU0_HRA_TR1_ADR */
#define CPU0_HRA_TR1ADR (CPU0_HRA_TR1_ADR)

/** \brief F010, CPU0 trigger event 2 */
#define CPU0_HRA_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F010u)
/** Alias (User Manual Name) for CPU0_HRA_TR2_EVT */
#define CPU0_HRA_TR2EVT (CPU0_HRA_TR2_EVT)

/** \brief F014, CPU0 trigger address 2 */
#define CPU0_HRA_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F014u)
/** Alias (User Manual Name) for CPU0_HRA_TR2_ADR */
#define CPU0_HRA_TR2ADR (CPU0_HRA_TR2_ADR)

/** \brief F018, CPU0 trigger event 3 */
#define CPU0_HRA_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F018u)
/** Alias (User Manual Name) for CPU0_HRA_TR3_EVT */
#define CPU0_HRA_TR3EVT (CPU0_HRA_TR3_EVT)

/** \brief F01C, CPU0 trigger address 3 */
#define CPU0_HRA_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F01Cu)
/** Alias (User Manual Name) for CPU0_HRA_TR3_ADR */
#define CPU0_HRA_TR3ADR (CPU0_HRA_TR3_ADR)

/** \brief F020, CPU0 trigger event 4 */
#define CPU0_HRA_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F020u)
/** Alias (User Manual Name) for CPU0_HRA_TR4_EVT */
#define CPU0_HRA_TR4EVT (CPU0_HRA_TR4_EVT)

/** \brief F024, CPU0 trigger address 4 */
#define CPU0_HRA_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F024u)
/** Alias (User Manual Name) for CPU0_HRA_TR4_ADR */
#define CPU0_HRA_TR4ADR (CPU0_HRA_TR4_ADR)

/** \brief F028, CPU0 trigger event 5 */
#define CPU0_HRA_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F028u)
/** Alias (User Manual Name) for CPU0_HRA_TR5_EVT */
#define CPU0_HRA_TR5EVT (CPU0_HRA_TR5_EVT)

/** \brief F02C, CPU0 trigger address 5 */
#define CPU0_HRA_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F02Cu)
/** Alias (User Manual Name) for CPU0_HRA_TR5_ADR */
#define CPU0_HRA_TR5ADR (CPU0_HRA_TR5_ADR)

/** \brief F030, CPU0 trigger event 6 */
#define CPU0_HRA_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F030u)
/** Alias (User Manual Name) for CPU0_HRA_TR6_EVT */
#define CPU0_HRA_TR6EVT (CPU0_HRA_TR6_EVT)

/** \brief F034, CPU0 trigger address 6 */
#define CPU0_HRA_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F034u)
/** Alias (User Manual Name) for CPU0_HRA_TR6_ADR */
#define CPU0_HRA_TR6ADR (CPU0_HRA_TR6_ADR)

/** \brief F038, CPU0 trigger event 7 */
#define CPU0_HRA_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF881F038u)
/** Alias (User Manual Name) for CPU0_HRA_TR7_EVT */
#define CPU0_HRA_TR7EVT (CPU0_HRA_TR7_EVT)

/** \brief F03C, CPU0 trigger address 7 */
#define CPU0_HRA_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF881F03Cu)
/** Alias (User Manual Name) for CPU0_HRA_TR7_ADR */
#define CPU0_HRA_TR7ADR (CPU0_HRA_TR7_ADR)

/** \brief FC00, CPU0 HR specific counter control */
#define CPU0_HRA_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF881FC00u)

/** \brief FC04, CPU0 HR specific CPU clock cycle count */
#define CPU0_HRA_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF881FC04u)

/** \brief FC08, CPU0 HR specific instruction count */
#define CPU0_HRA_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF881FC08u)

/** \brief FC0C, CPU0 HR specific multi-count register 1 */
#define CPU0_HRA_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF881FC0Cu)

/** \brief FC10, CPU0 HR specific multi-count register 2 */
#define CPU0_HRA_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF881FC10u)

/** \brief FC14, CPU0 HR specific multi-count register 3 */
#define CPU0_HRA_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF881FC14u)

/** \brief FD00, CPU0 debug status register */
#define CPU0_HRA_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF881FD00u)

/** \brief FD08, CPU0 external event register */
#define CPU0_HRA_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF881FD08u)

/** \brief FD0C, CPU0 core register access event */
#define CPU0_HRA_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF881FD0Cu)

/** \brief FD10, CPU0 software debug event */
#define CPU0_HRA_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF881FD10u)

/** \brief FD14, CPU0 debug action configuration */
#define CPU0_HRA_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF881FD14u)

/** \brief FD30, CPU0 trigger accumulator */
#define CPU0_HRA_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF881FD30u)

/** \brief FD40, CPU0 debug monitor start address */
#define CPU0_HRA_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF881FD40u)

/** \brief FD44, CPU0 debug context save area pointer */
#define CPU0_HRA_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF881FD44u)

/** \brief FD48, CPU0 debug trap control */
#define CPU0_HRA_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF881FD48u)

/** \brief FD4C, CPU0 debug configuration */
#define CPU0_HRA_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF881FD4Cu)

/** \brief FD50, CPU0 trace configuration */
#define CPU0_HRA_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF881FD50u)

/** \brief FD54, CPU0 trace filter */
#define CPU0_HRA_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF881FD54u)

/** \brief FD58, CPU0 trace bandwidth limiter */
#define CPU0_HRA_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF881FD58u)

/** \brief FD60, CPU0 MCDS performance counter control register */
#define CPU0_HRA_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF881FD60u)

/** \brief FE00, CPU0 previous context information register */
#define CPU0_HRA_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF881FE00u)

/** \brief FE04, CPU0 HR specific program status word */
#define CPU0_HRA_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF881FE04u)

/** \brief FE08, CPU0 program counter */
#define CPU0_HRA_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF881FE08u)

/** \brief FE14, CPU0 HR specific core configuration register */
#define CPU0_HRA_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF881FE14u)

/** \brief FE18, CPU0 identification register */
#define CPU0_HRA_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF881FE18u)

/** \brief FE1C, CPU0 core identification register */
#define CPU0_HRA_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF881FE1Cu)

/** \brief FE20, CPU0 HR specific base interrupt vector table pointer */
#define CPU0_HRA_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF881FE20u)

/** \brief FE24, CPU0 HR specific base trap vector table pointer */
#define CPU0_HRA_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF881FE24u)

/** \brief FE28, CPU0 HR specific interrupt stack pointer */
#define CPU0_HRA_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF881FE28u)

/** \brief FE2C, CPU0 interrupt control register */
#define CPU0_HRA_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF881FE2Cu)

/** \brief FE34, CPU0 previous PRS */
#define CPU0_HRA_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF881FE34u)

/** \brief FE38, CPU0 HR specific free CSA list head pointer */
#define CPU0_HRA_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF881FE38u)

/** \brief FE3C, CPU0 HR specific free CSA list limit pointer */
#define CPU0_HRA_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF881FE3Cu)

/** \brief FE40, CPU0 software identification */
#define CPU0_HRA_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF881FE40u)

/** \brief FE50, CPU0 customer ID register */
#define CPU0_HRA_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF881FE50u)

/** \brief FE60, CPU0 core boot configuration register */
#define CPU0_HRA_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF881FE60u)

/** \brief FE64, CPU0 lockstep control register */
#define CPU0_HRA_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF881FE64u)

/** \brief FE68, CPU0 clock control register */
#define CPU0_HRA_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF881FE68u)

/** \brief FE6C, CPU0 hardware configuration  */
#define CPU0_HRA_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF881FE6Cu)

/** \brief FF00, CPU0 data general purpose register 0 */
#define CPU0_D0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF00u)

/** \brief FF04, CPU0 data general purpose register 1 */
#define CPU0_D1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF04u)

/** \brief FF08, CPU0 data general purpose register 2 */
#define CPU0_D2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF08u)

/** \brief FF0C, CPU0 data general purpose register 3 */
#define CPU0_D3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF0Cu)

/** \brief FF10, CPU0 data general purpose register 4 */
#define CPU0_D4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF10u)

/** \brief FF14, CPU0 data general purpose register 5 */
#define CPU0_D5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF14u)

/** \brief FF18, CPU0 data general purpose register 6 */
#define CPU0_D6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF18u)

/** \brief FF1C, CPU0 data general purpose register 7 */
#define CPU0_D7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF1Cu)

/** \brief FF20, CPU0 data general purpose register 8 */
#define CPU0_D8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF20u)

/** \brief FF24, CPU0 data general purpose register 9 */
#define CPU0_D9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF24u)

/** \brief FF28, CPU0 data general purpose register 10 */
#define CPU0_D10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF28u)

/** \brief FF2C, CPU0 data general purpose register 11 */
#define CPU0_D11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF2Cu)

/** \brief FF30, CPU0 data general purpose register 12 */
#define CPU0_D12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF30u)

/** \brief FF34, CPU0 data general purpose register 13 */
#define CPU0_D13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF34u)

/** \brief FF38, CPU0 data general purpose register 14 */
#define CPU0_D14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF38u)

/** \brief FF3C, CPU0 data general purpose register 15 */
#define CPU0_D15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF881FF3Cu)

/** \brief FF80, CPU0 address general purpose register 0 */
#define CPU0_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF80u)

/** \brief FF84, CPU0 address general purpose register 1 */
#define CPU0_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF84u)

/** \brief FF88, CPU0 address general purpose register 2 */
#define CPU0_A2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF88u)

/** \brief FF8C, CPU0 address general purpose register 3 */
#define CPU0_A3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF8Cu)

/** \brief FF90, CPU0 address general purpose register 4 */
#define CPU0_A4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF90u)

/** \brief FF94, CPU0 address general purpose register 5 */
#define CPU0_A5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF94u)

/** \brief FF98, CPU0 address general purpose register 6 */
#define CPU0_A6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF98u)

/** \brief FF9C, CPU0 address general purpose register 7 */
#define CPU0_A7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FF9Cu)

/** \brief FFA0, CPU0 address general purpose register 8 */
#define CPU0_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFA0u)

/** \brief FFA4, CPU0 address general purpose register 9 */
#define CPU0_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFA4u)

/** \brief FFA8, CPU0 address general purpose register 10 */
#define CPU0_A10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFA8u)

/** \brief FFAC, CPU0 address general purpose register 11 */
#define CPU0_A11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFACu)

/** \brief FFB0, CPU0 address general purpose register 12 */
#define CPU0_A12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFB0u)

/** \brief FFB4, CPU0 address general purpose register 13 */
#define CPU0_A13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFB4u)

/** \brief FFB8, CPU0 address general purpose register 14 */
#define CPU0_A14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFB8u)

/** \brief FFBC, CPU0 address general purpose register 15 */
#define CPU0_A15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF881FFBCu)

/** \brief 1030, CPU0 SRI error generation register */
#define CPU0_HRB_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8821030u)

/** \brief 1040, CPU0 lockstep test register */
#define CPU0_HRB_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8821040u)

/** \brief 8100, CPU0 data access cacheability register */
#define CPU0_HRB_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8828100u)

/** \brief 8104, CPU0 code access cacheability register */
#define CPU0_HRB_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8828104u)

/** \brief 8108, CPU0 peripheral space identifier register */
#define CPU0_HRB_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8828108u)

/** \brief 9000, CPU0 data control register 2 */
#define CPU0_HRB_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8829000u)

/** \brief 9008, CPU0 data control register 1 */
#define CPU0_HRB_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8829008u)

/** \brief 900C, CPU0 SIST mode access control register */
#define CPU0_HRB_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF882900Cu)

/** \brief 9010, CPU0 HR specific data synchronous trap register */
#define CPU0_HRB_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8829010u)

/** \brief 9018, CPU0 HR specific data asynchronous trap register */
#define CPU0_HRB_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8829018u)

/** \brief 901C, CPU0 HR specific data error address register */
#define CPU0_HRB_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF882901Cu)

/** \brief 9020, CPU0 data integrity error address register */
#define CPU0_HRB_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8829020u)

/** \brief 9024, CPU0 data integrity error trap register */
#define CPU0_HRB_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8829024u)

/** \brief 9040, CPU0 data memory control register */
#define CPU0_HRB_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8829040u)

/** \brief 9200, CPU0 HR specific program synchronous trap register */
#define CPU0_HRB_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8829200u)

/** \brief 9204, CPU0 program control 1 */
#define CPU0_HRB_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8829204u)

/** \brief 9208, CPU0 program control 2 */
#define CPU0_HRB_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8829208u)

/** \brief 920C, CPU0 program control 0 */
#define CPU0_HRB_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF882920Cu)

/** \brief 9210, CPU0 HR specific program integrity error address register */
#define CPU0_HRB_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8829210u)

/** \brief 9214, CPU0 HR specific program integrity error trap register */
#define CPU0_HRB_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8829214u)

/** \brief 9400, CPU0 compatibility control register */
#define CPU0_HRB_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8829400u)

/** \brief A000, CPU0 HR specific trap control register */
#define CPU0_HRB_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF882A000u)

/** \brief A004, CPU0 HR specific trapping instruction program counter register */
#define CPU0_HRB_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF882A004u)

/** \brief A008, CPU0 HR specific trapping instruction opcode register */
#define CPU0_HRB_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF882A008u)

/** \brief A010, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRB_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF882A010u)

/** \brief A014, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRB_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF882A014u)

/** \brief A018, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRB_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF882A018u)

/** \brief A01C, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRB_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF882A01Cu)

/** \brief A020, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRB_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF882A020u)

/** \brief A024, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRB_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF882A024u)

/** \brief A030, CPU0 HR specific synchronous trap control register */
#define CPU0_HRB_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF882A030u)

/** \brief A034, CPU0 HR specific trapping instruction opcode register */
#define CPU0_HRB_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF882A034u)

/** \brief C000, CPU0 HR specific data protection range 0, lower bound register */
#define CPU0_HRB_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C000u)

/** \brief C004, CPU0 HR specific data protection range 0, upper bound register */
#define CPU0_HRB_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C004u)

/** \brief C008, CPU0 HR specific data protection range 1, lower bound register */
#define CPU0_HRB_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C008u)

/** \brief C00C, CPU0 HR specific data protection range 1, upper bound register */
#define CPU0_HRB_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C00Cu)

/** \brief C010, CPU0 HR specific data protection range 2, lower bound register */
#define CPU0_HRB_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C010u)

/** \brief C014, CPU0 HR specific data protection range 2, upper bound register */
#define CPU0_HRB_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C014u)

/** \brief C018, CPU0 HR specific data protection range 3, lower bound register */
#define CPU0_HRB_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C018u)

/** \brief C01C, CPU0 HR specific data protection range 3, upper bound register */
#define CPU0_HRB_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C01Cu)

/** \brief C020, CPU0 HR specific data protection range 4, lower bound register */
#define CPU0_HRB_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C020u)

/** \brief C024, CPU0 HR specific data protection range 4, upper bound register */
#define CPU0_HRB_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C024u)

/** \brief C028, CPU0 HR specific data protection range 5, lower bound register */
#define CPU0_HRB_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C028u)

/** \brief C02C, CPU0 HR specific data protection range 5, upper bound register */
#define CPU0_HRB_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C02Cu)

/** \brief C030, CPU0 HR specific data protection range 6, lower bound register */
#define CPU0_HRB_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C030u)

/** \brief C034, CPU0 HR specific data protection range 6, upper bound register */
#define CPU0_HRB_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C034u)

/** \brief C038, CPU0 HR specific data protection range 7, lower bound register */
#define CPU0_HRB_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C038u)

/** \brief C03C, CPU0 HR specific data protection range 7, upper bound register */
#define CPU0_HRB_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C03Cu)

/** \brief C040, CPU0 HR specific data protection range 8, lower bound register */
#define CPU0_HRB_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C040u)

/** \brief C044, CPU0 HR specific data protection range 8, upper bound register */
#define CPU0_HRB_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C044u)

/** \brief C048, CPU0 HR specific data protection range 9, lower bound register */
#define CPU0_HRB_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C048u)

/** \brief C04C, CPU0 HR specific data protection range 9, upper bound register */
#define CPU0_HRB_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C04Cu)

/** \brief C050, CPU0 HR specific data protection range 10, lower bound register */
#define CPU0_HRB_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C050u)

/** \brief C054, CPU0 HR specific data protection range 10, upper bound register */
#define CPU0_HRB_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C054u)

/** \brief C058, CPU0 HR specific data protection range 11, lower bound register */
#define CPU0_HRB_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C058u)

/** \brief C05C, CPU0 HR specific data protection range 11, upper bound register */
#define CPU0_HRB_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C05Cu)

/** \brief C060, CPU0 HR specific data protection range 12, lower bound register */
#define CPU0_HRB_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C060u)

/** \brief C064, CPU0 HR specific data protection range 12, upper bound register */
#define CPU0_HRB_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C064u)

/** \brief C068, CPU0 HR specific data protection range 13, lower bound register */
#define CPU0_HRB_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C068u)

/** \brief C06C, CPU0 HR specific data protection range 13, upper bound register */
#define CPU0_HRB_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C06Cu)

/** \brief C070, CPU0 HR specific data protection range 14, lower bound register */
#define CPU0_HRB_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C070u)

/** \brief C074, CPU0 HR specific data protection range 14, upper bound register */
#define CPU0_HRB_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C074u)

/** \brief C078, CPU0 HR specific data protection range 15, lower bound register */
#define CPU0_HRB_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C078u)

/** \brief C07C, CPU0 HR specific data protection range 15, upper bound register */
#define CPU0_HRB_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C07Cu)

/** \brief C080, CPU0 HR specific data protection range 16, lower bound register */
#define CPU0_HRB_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C080u)

/** \brief C084, CPU0 HR specific data protection range 16, upper bound register */
#define CPU0_HRB_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C084u)

/** \brief C088, CPU0 HR specific data protection range 17, lower bound register */
#define CPU0_HRB_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C088u)

/** \brief C08C, CPU0 HR specific data protection range 17, upper bound register */
#define CPU0_HRB_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C08Cu)

/** \brief C090, CPU0 HR specific data protection range 18, lower bound register */
#define CPU0_HRB_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C090u)

/** \brief C094, CPU0 HR specific data protection range 18, upper bound register */
#define CPU0_HRB_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C094u)

/** \brief C098, CPU0 HR specific data protection range 19, lower bound register */
#define CPU0_HRB_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C098u)

/** \brief C09C, CPU0 HR specific data protection range 19, upper bound register */
#define CPU0_HRB_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C09Cu)

/** \brief C0A0, CPU0 HR specific data protection range 20, lower bound register */
#define CPU0_HRB_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C0A0u)

/** \brief C0A4, CPU0 HR specific data protection range 20, upper bound register */
#define CPU0_HRB_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C0A4u)

/** \brief C0A8, CPU0 HR specific data protection range 21, lower bound register */
#define CPU0_HRB_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C0A8u)

/** \brief C0AC, CPU0 HR specific data protection range 21, upper bound register */
#define CPU0_HRB_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C0ACu)

/** \brief C0B0, CPU0 HR specific data protection range 22, lower bound register */
#define CPU0_HRB_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C0B0u)

/** \brief C0B4, CPU0 HR specific data protection range 22, upper bound register */
#define CPU0_HRB_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C0B4u)

/** \brief C0B8, CPU0 HR specific data protection range 23, lower bound register */
#define CPU0_HRB_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF882C0B8u)

/** \brief C0BC, CPU0 HR specific data protection range 23, upper bound register */
#define CPU0_HRB_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF882C0BCu)

/** \brief D000, CPU0 HR specific code protection range 0, lower bound register */
#define CPU0_HRB_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D000u)

/** \brief D004, CPU0 HR specific code protection range 0, upper bound register */
#define CPU0_HRB_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D004u)

/** \brief D008, CPU0 HR specific code protection range 1, lower bound register */
#define CPU0_HRB_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D008u)

/** \brief D00C, CPU0 HR specific code protection range 1, upper bound register */
#define CPU0_HRB_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D00Cu)

/** \brief D010, CPU0 HR specific code protection range 2, lower bound register */
#define CPU0_HRB_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D010u)

/** \brief D014, CPU0 HR specific code protection range 2, upper bound register */
#define CPU0_HRB_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D014u)

/** \brief D018, CPU0 HR specific code protection range 3, lower bound register */
#define CPU0_HRB_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D018u)

/** \brief D01C, CPU0 HR specific code protection range 3, upper bound register */
#define CPU0_HRB_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D01Cu)

/** \brief D020, CPU0 HR specific code protection range 4, lower bound register */
#define CPU0_HRB_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D020u)

/** \brief D024, CPU0 HR specific code protection range 4, upper bound register */
#define CPU0_HRB_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D024u)

/** \brief D028, CPU0 HR specific code protection range 5, lower bound register */
#define CPU0_HRB_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D028u)

/** \brief D02C, CPU0 HR specific code protection range 5, upper bound register */
#define CPU0_HRB_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D02Cu)

/** \brief D030, CPU0 HR specific code protection range 6, lower bound register */
#define CPU0_HRB_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D030u)

/** \brief D034, CPU0 HR specific code protection range 6, upper bound register */
#define CPU0_HRB_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D034u)

/** \brief D038, CPU0 HR specific code protection range 7, lower bound register */
#define CPU0_HRB_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D038u)

/** \brief D03C, CPU0 HR specific code protection range 7, upper bound register */
#define CPU0_HRB_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D03Cu)

/** \brief D040, CPU0 HR specific code protection range 8, lower bound register */
#define CPU0_HRB_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D040u)

/** \brief D044, CPU0 HR specific code protection range 8, upper bound register */
#define CPU0_HRB_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D044u)

/** \brief D048, CPU0 HR specific code protection range 9, lower bound register */
#define CPU0_HRB_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D048u)

/** \brief D04C, CPU0 HR specific code protection range 9, upper bound register */
#define CPU0_HRB_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D04Cu)

/** \brief D050, CPU0 HR specific code protection range 10, lower bound register */
#define CPU0_HRB_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D050u)

/** \brief D054, CPU0 HR specific code protection range 10, upper bound register */
#define CPU0_HRB_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D054u)

/** \brief D058, CPU0 HR specific code protection range 11, lower bound register */
#define CPU0_HRB_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D058u)

/** \brief D05C, CPU0 HR specific code protection range 11, upper bound register */
#define CPU0_HRB_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D05Cu)

/** \brief D060, CPU0 HR specific code protection range 12, lower bound register */
#define CPU0_HRB_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D060u)

/** \brief D064, CPU0 HR specific code protection range 12, upper bound register */
#define CPU0_HRB_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D064u)

/** \brief D068, CPU0 HR specific code protection range 13, lower bound register */
#define CPU0_HRB_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D068u)

/** \brief D06C, CPU0 HR specific code protection range 13, upper bound register */
#define CPU0_HRB_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D06Cu)

/** \brief D070, CPU0 HR specific code protection range 14, lower bound register */
#define CPU0_HRB_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D070u)

/** \brief D074, CPU0 HR specific code protection range 14, upper bound register */
#define CPU0_HRB_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D074u)

/** \brief D078, CPU0 HR specific code protection range 15, lower bound register */
#define CPU0_HRB_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF882D078u)

/** \brief D07C, CPU0 HR specific code protection range 15, upper bound register */
#define CPU0_HRB_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF882D07Cu)

/** \brief E000, CPU0 HR specific code protection execute enable register set 0 */
#define CPU0_HRB_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E000u)

/** \brief E004, CPU0 HR specific code protection execute enable register set 1 */
#define CPU0_HRB_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E004u)

/** \brief E008, CPU0 HR specific code protection execute enable register set 2 */
#define CPU0_HRB_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E008u)

/** \brief E00C, CPU0 HR specific code protection execute enable register set 3 */
#define CPU0_HRB_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E00Cu)

/** \brief E010, CPU0 HR specific data protection read enable register set 0 */
#define CPU0_HRB_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E010u)

/** \brief E014, CPU0 HR specific data protection read enable register set 1 */
#define CPU0_HRB_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E014u)

/** \brief E018, CPU0 HR specific data protection read enable register set 2 */
#define CPU0_HRB_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E018u)

/** \brief E01C, CPU0 HR specific data protection read enable register set 3 */
#define CPU0_HRB_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E01Cu)

/** \brief E020, CPU0 HR specific data protection write enable register set 0 */
#define CPU0_HRB_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E020u)

/** \brief E024, CPU0 HR specific data protection write enable register set 1 */
#define CPU0_HRB_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E024u)

/** \brief E028, CPU0 HR specific data protection write enable register set 2 */
#define CPU0_HRB_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E028u)

/** \brief E02C, CPU0 HR specific data protection write enable register set 3 */
#define CPU0_HRB_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E02Cu)

/** \brief E040, CPU0 HR specific code protection execute enable register set 4 */
#define CPU0_HRB_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E040u)

/** \brief E044, CPU0 HR specific code protection execute enable register set 5 */
#define CPU0_HRB_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E044u)

/** \brief E048, CPU0 HR specific code protection execute enable register set 6 */
#define CPU0_HRB_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E048u)

/** \brief E04C, CPU0 HR specific code protection execute enable register set 7 */
#define CPU0_HRB_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF882E04Cu)

/** \brief E050, CPU0 HR specific data protection read enable register set 4 */
#define CPU0_HRB_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E050u)

/** \brief E054, CPU0 HR specific data protection read enable register set 5 */
#define CPU0_HRB_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E054u)

/** \brief E058, CPU0 HR specific data protection read enable register set 6 */
#define CPU0_HRB_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E058u)

/** \brief E05C, CPU0 HR specific data protection read enable register set 7 */
#define CPU0_HRB_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF882E05Cu)

/** \brief E060, CPU0 HR specific data protection write enable register set 4 */
#define CPU0_HRB_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E060u)

/** \brief E064, CPU0 HR specific data protection write enable register set 5 */
#define CPU0_HRB_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E064u)

/** \brief E068, CPU0 HR specific data protection write enable register set 6 */
#define CPU0_HRB_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E068u)

/** \brief E06C, CPU0 HR specific data protection write enable register set 7 */
#define CPU0_HRB_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF882E06Cu)

/** \brief E400, CPU0 HR specific temporal protection system control register */
#define CPU0_HRB_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF882E400u)

/** \brief E404, CPU0 HR specific temporal protection system timer register 0 */
#define CPU0_HRB_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF882E404u)

/** \brief E408, CPU0 HR specific temporal protection system timer register 1 */
#define CPU0_HRB_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF882E408u)

/** \brief E40C, CPU0 HR specific temporal protection system timer register 2 */
#define CPU0_HRB_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF882E40Cu)

/** \brief F000, CPU0 trigger event 0 */
#define CPU0_HRB_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F000u)
/** Alias (User Manual Name) for CPU0_HRB_TR0_EVT */
#define CPU0_HRB_TR0EVT (CPU0_HRB_TR0_EVT)

/** \brief F004, CPU0 trigger address 0 */
#define CPU0_HRB_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F004u)
/** Alias (User Manual Name) for CPU0_HRB_TR0_ADR */
#define CPU0_HRB_TR0ADR (CPU0_HRB_TR0_ADR)

/** \brief F008, CPU0 trigger event 1 */
#define CPU0_HRB_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F008u)
/** Alias (User Manual Name) for CPU0_HRB_TR1_EVT */
#define CPU0_HRB_TR1EVT (CPU0_HRB_TR1_EVT)

/** \brief F00C, CPU0 trigger address 1 */
#define CPU0_HRB_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F00Cu)
/** Alias (User Manual Name) for CPU0_HRB_TR1_ADR */
#define CPU0_HRB_TR1ADR (CPU0_HRB_TR1_ADR)

/** \brief F010, CPU0 trigger event 2 */
#define CPU0_HRB_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F010u)
/** Alias (User Manual Name) for CPU0_HRB_TR2_EVT */
#define CPU0_HRB_TR2EVT (CPU0_HRB_TR2_EVT)

/** \brief F014, CPU0 trigger address 2 */
#define CPU0_HRB_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F014u)
/** Alias (User Manual Name) for CPU0_HRB_TR2_ADR */
#define CPU0_HRB_TR2ADR (CPU0_HRB_TR2_ADR)

/** \brief F018, CPU0 trigger event 3 */
#define CPU0_HRB_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F018u)
/** Alias (User Manual Name) for CPU0_HRB_TR3_EVT */
#define CPU0_HRB_TR3EVT (CPU0_HRB_TR3_EVT)

/** \brief F01C, CPU0 trigger address 3 */
#define CPU0_HRB_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F01Cu)
/** Alias (User Manual Name) for CPU0_HRB_TR3_ADR */
#define CPU0_HRB_TR3ADR (CPU0_HRB_TR3_ADR)

/** \brief F020, CPU0 trigger event 4 */
#define CPU0_HRB_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F020u)
/** Alias (User Manual Name) for CPU0_HRB_TR4_EVT */
#define CPU0_HRB_TR4EVT (CPU0_HRB_TR4_EVT)

/** \brief F024, CPU0 trigger address 4 */
#define CPU0_HRB_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F024u)
/** Alias (User Manual Name) for CPU0_HRB_TR4_ADR */
#define CPU0_HRB_TR4ADR (CPU0_HRB_TR4_ADR)

/** \brief F028, CPU0 trigger event 5 */
#define CPU0_HRB_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F028u)
/** Alias (User Manual Name) for CPU0_HRB_TR5_EVT */
#define CPU0_HRB_TR5EVT (CPU0_HRB_TR5_EVT)

/** \brief F02C, CPU0 trigger address 5 */
#define CPU0_HRB_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F02Cu)
/** Alias (User Manual Name) for CPU0_HRB_TR5_ADR */
#define CPU0_HRB_TR5ADR (CPU0_HRB_TR5_ADR)

/** \brief F030, CPU0 trigger event 6 */
#define CPU0_HRB_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F030u)
/** Alias (User Manual Name) for CPU0_HRB_TR6_EVT */
#define CPU0_HRB_TR6EVT (CPU0_HRB_TR6_EVT)

/** \brief F034, CPU0 trigger address 6 */
#define CPU0_HRB_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F034u)
/** Alias (User Manual Name) for CPU0_HRB_TR6_ADR */
#define CPU0_HRB_TR6ADR (CPU0_HRB_TR6_ADR)

/** \brief F038, CPU0 trigger event 7 */
#define CPU0_HRB_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF882F038u)
/** Alias (User Manual Name) for CPU0_HRB_TR7_EVT */
#define CPU0_HRB_TR7EVT (CPU0_HRB_TR7_EVT)

/** \brief F03C, CPU0 trigger address 7 */
#define CPU0_HRB_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF882F03Cu)
/** Alias (User Manual Name) for CPU0_HRB_TR7_ADR */
#define CPU0_HRB_TR7ADR (CPU0_HRB_TR7_ADR)

/** \brief FC00, CPU0 HR specific counter control */
#define CPU0_HRB_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF882FC00u)

/** \brief FC04, CPU0 HR specific CPU clock cycle count */
#define CPU0_HRB_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF882FC04u)

/** \brief FC08, CPU0 HR specific instruction count */
#define CPU0_HRB_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF882FC08u)

/** \brief FC0C, CPU0 HR specific multi-count register 1 */
#define CPU0_HRB_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF882FC0Cu)

/** \brief FC10, CPU0 HR specific multi-count register 2 */
#define CPU0_HRB_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF882FC10u)

/** \brief FC14, CPU0 HR specific multi-count register 3 */
#define CPU0_HRB_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF882FC14u)

/** \brief FD00, CPU0 debug status register */
#define CPU0_HRB_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF882FD00u)

/** \brief FD08, CPU0 external event register */
#define CPU0_HRB_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF882FD08u)

/** \brief FD0C, CPU0 core register access event */
#define CPU0_HRB_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF882FD0Cu)

/** \brief FD10, CPU0 software debug event */
#define CPU0_HRB_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF882FD10u)

/** \brief FD14, CPU0 debug action configuration */
#define CPU0_HRB_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF882FD14u)

/** \brief FD30, CPU0 trigger accumulator */
#define CPU0_HRB_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF882FD30u)

/** \brief FD40, CPU0 debug monitor start address */
#define CPU0_HRB_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF882FD40u)

/** \brief FD44, CPU0 debug context save area pointer */
#define CPU0_HRB_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF882FD44u)

/** \brief FD48, CPU0 debug trap control */
#define CPU0_HRB_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF882FD48u)

/** \brief FD4C, CPU0 debug configuration */
#define CPU0_HRB_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF882FD4Cu)

/** \brief FD50, CPU0 trace configuration */
#define CPU0_HRB_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF882FD50u)

/** \brief FD54, CPU0 trace filter */
#define CPU0_HRB_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF882FD54u)

/** \brief FD58, CPU0 trace bandwidth limiter */
#define CPU0_HRB_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF882FD58u)

/** \brief FD60, CPU0 MCDS performance counter control register */
#define CPU0_HRB_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF882FD60u)

/** \brief FE00, CPU0 previous context information register */
#define CPU0_HRB_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF882FE00u)

/** \brief FE04, CPU0 HR specific program status word */
#define CPU0_HRB_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF882FE04u)

/** \brief FE08, CPU0 program counter */
#define CPU0_HRB_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF882FE08u)

/** \brief FE14, CPU0 HR specific core configuration register */
#define CPU0_HRB_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF882FE14u)

/** \brief FE18, CPU0 identification register */
#define CPU0_HRB_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF882FE18u)

/** \brief FE1C, CPU0 core identification register */
#define CPU0_HRB_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF882FE1Cu)

/** \brief FE20, CPU0 HR specific base interrupt vector table pointer */
#define CPU0_HRB_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF882FE20u)

/** \brief FE24, CPU0 HR specific base trap vector table pointer */
#define CPU0_HRB_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF882FE24u)

/** \brief FE28, CPU0 HR specific interrupt stack pointer */
#define CPU0_HRB_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF882FE28u)

/** \brief FE2C, CPU0 interrupt control register */
#define CPU0_HRB_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF882FE2Cu)

/** \brief FE34, CPU0 previous PRS */
#define CPU0_HRB_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF882FE34u)

/** \brief FE38, CPU0 HR specific free CSA list head pointer */
#define CPU0_HRB_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF882FE38u)

/** \brief FE3C, CPU0 HR specific free CSA list limit pointer */
#define CPU0_HRB_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF882FE3Cu)

/** \brief FE40, CPU0 software identification */
#define CPU0_HRB_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF882FE40u)

/** \brief FE50, CPU0 customer ID register */
#define CPU0_HRB_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF882FE50u)

/** \brief FE60, CPU0 core boot configuration register */
#define CPU0_HRB_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF882FE60u)

/** \brief FE64, CPU0 lockstep control register */
#define CPU0_HRB_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF882FE64u)

/** \brief FE68, CPU0 clock control register */
#define CPU0_HRB_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF882FE68u)

/** \brief FE6C, CPU0 hardware configuration  */
#define CPU0_HRB_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF882FE6Cu)

/** \brief FF80, CPU0 HR specific address general purpose register 0 */
#define CPU0_HRB_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF882FF80u)

/** \brief FF84, CPU0 HR specific address general purpose register 1 */
#define CPU0_HRB_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF882FF84u)

/** \brief FFA0, CPU0 HR specific address general purpose register 8 */
#define CPU0_HRB_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF882FFA0u)

/** \brief FFA4, CPU0 HR specific address general purpose register 9 */
#define CPU0_HRB_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF882FFA4u)

/** \brief 1030, CPU0 SRI error generation register */
#define CPU0_HRHV_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8831030u)

/** \brief 1040, CPU0 lockstep test register */
#define CPU0_HRHV_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8831040u)

/** \brief 8100, CPU0 data access cacheability register */
#define CPU0_HRHV_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8838100u)

/** \brief 8104, CPU0 code access cacheability register */
#define CPU0_HRHV_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8838104u)

/** \brief 8108, CPU0 peripheral space identifier register */
#define CPU0_HRHV_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8838108u)

/** \brief 9000, CPU0 data control register 2 */
#define CPU0_HRHV_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8839000u)

/** \brief 9008, CPU0 data control register 1 */
#define CPU0_HRHV_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8839008u)

/** \brief 900C, CPU0 SIST mode access control register */
#define CPU0_HRHV_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF883900Cu)

/** \brief 9010, CPU0 HR specific data synchronous trap register */
#define CPU0_HRHV_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8839010u)

/** \brief 9018, CPU0 HR specific data asynchronous trap register */
#define CPU0_HRHV_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8839018u)

/** \brief 901C, CPU0 HR specific data error address register */
#define CPU0_HRHV_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF883901Cu)

/** \brief 9020, CPU0 data integrity error address register */
#define CPU0_HRHV_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8839020u)

/** \brief 9024, CPU0 data integrity error trap register */
#define CPU0_HRHV_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8839024u)

/** \brief 9040, CPU0 data memory control register */
#define CPU0_HRHV_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8839040u)

/** \brief 9200, CPU0 HR specific program synchronous trap register */
#define CPU0_HRHV_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8839200u)

/** \brief 9204, CPU0 program control 1 */
#define CPU0_HRHV_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8839204u)

/** \brief 9208, CPU0 program control 2 */
#define CPU0_HRHV_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8839208u)

/** \brief 920C, CPU0 program control 0 */
#define CPU0_HRHV_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF883920Cu)

/** \brief 9210, CPU0 HR specific program integrity error address register */
#define CPU0_HRHV_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8839210u)

/** \brief 9214, CPU0 HR specific program integrity error trap register */
#define CPU0_HRHV_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8839214u)

/** \brief 9400, CPU0 compatibility control register */
#define CPU0_HRHV_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8839400u)

/** \brief A000, CPU0 HR specific trap control register */
#define CPU0_HRHV_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF883A000u)

/** \brief A004, CPU0 HR specific trapping instruction program counter register */
#define CPU0_HRHV_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF883A004u)

/** \brief A008, CPU0 HR specific trapping instruction opcode register */
#define CPU0_HRHV_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF883A008u)

/** \brief A010, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRHV_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF883A010u)

/** \brief A014, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRHV_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF883A014u)

/** \brief A018, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRHV_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF883A018u)

/** \brief A01C, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRHV_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF883A01Cu)

/** \brief A020, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRHV_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF883A020u)

/** \brief A024, CPU0 HR specific trapping instruction operand register */
#define CPU0_HRHV_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF883A024u)

/** \brief A030, CPU0 HR specific synchronous trap control register */
#define CPU0_HRHV_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF883A030u)

/** \brief A034, CPU0 HR specific trapping instruction opcode register */
#define CPU0_HRHV_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF883A034u)

/** \brief B000, CPU0 virtualization control register 0 */
#define CPU0_HRHV_VCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON0*)0xF883B000u)

/** \brief B004, CPU0 virtualization control register 1 */
#define CPU0_HRHV_VCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON1*)0xF883B004u)

/** \brief B008, CPU0 virtualization control register 2 */
#define CPU0_HRHV_VCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON2*)0xF883B008u)

/** \brief B010, CPU0 base hypervisor vector table pointer */
#define CPU0_HRHV_BHV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BHV*)0xF883B010u)

/** \brief B100, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B100u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR0 */
#define CPU0_HRHV_VM0_ICR (CPU0_HRHV_VM_ICR0)

/** \brief B104, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B104u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR1 */
#define CPU0_HRHV_VM1_ICR (CPU0_HRHV_VM_ICR1)

/** \brief B108, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B108u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR2 */
#define CPU0_HRHV_VM2_ICR (CPU0_HRHV_VM_ICR2)

/** \brief B10C, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B10Cu)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR3 */
#define CPU0_HRHV_VM3_ICR (CPU0_HRHV_VM_ICR3)

/** \brief B110, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B110u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR4 */
#define CPU0_HRHV_VM4_ICR (CPU0_HRHV_VM_ICR4)

/** \brief B114, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B114u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR5 */
#define CPU0_HRHV_VM5_ICR (CPU0_HRHV_VM_ICR5)

/** \brief B118, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B118u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR6 */
#define CPU0_HRHV_VM6_ICR (CPU0_HRHV_VM_ICR6)

/** \brief B11C, CPU0 Virtual machine n interrupt state */
#define CPU0_HRHV_VM_ICR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF883B11Cu)
/** Alias (User Manual Name) for CPU0_HRHV_VM_ICR7 */
#define CPU0_HRHV_VM7_ICR (CPU0_HRHV_VM_ICR7)

/** \brief B200, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B200u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH0 */
#define CPU0_HRHV_VM0_PETHRESH (CPU0_HRHV_VM_PETHRESH0)

/** \brief B204, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B204u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH1 */
#define CPU0_HRHV_VM1_PETHRESH (CPU0_HRHV_VM_PETHRESH1)

/** \brief B208, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B208u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH2 */
#define CPU0_HRHV_VM2_PETHRESH (CPU0_HRHV_VM_PETHRESH2)

/** \brief B20C, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B20Cu)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH3 */
#define CPU0_HRHV_VM3_PETHRESH (CPU0_HRHV_VM_PETHRESH3)

/** \brief B210, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B210u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH4 */
#define CPU0_HRHV_VM4_PETHRESH (CPU0_HRHV_VM_PETHRESH4)

/** \brief B214, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B214u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH5 */
#define CPU0_HRHV_VM5_PETHRESH (CPU0_HRHV_VM_PETHRESH5)

/** \brief B218, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B218u)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH6 */
#define CPU0_HRHV_VM6_PETHRESH (CPU0_HRHV_VM_PETHRESH6)

/** \brief B21C, CPU0 Virtual machine n pre-emption threshold */
#define CPU0_HRHV_VM_PETHRESH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF883B21Cu)
/** Alias (User Manual Name) for CPU0_HRHV_VM_PETHRESH7 */
#define CPU0_HRHV_VM7_PETHRESH (CPU0_HRHV_VM_PETHRESH7)

/** \brief C000, CPU0 HR specific data protection range 0, lower bound register */
#define CPU0_HRHV_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C000u)

/** \brief C004, CPU0 HR specific data protection range 0, upper bound register */
#define CPU0_HRHV_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C004u)

/** \brief C008, CPU0 HR specific data protection range 1, lower bound register */
#define CPU0_HRHV_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C008u)

/** \brief C00C, CPU0 HR specific data protection range 1, upper bound register */
#define CPU0_HRHV_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C00Cu)

/** \brief C010, CPU0 HR specific data protection range 2, lower bound register */
#define CPU0_HRHV_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C010u)

/** \brief C014, CPU0 HR specific data protection range 2, upper bound register */
#define CPU0_HRHV_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C014u)

/** \brief C018, CPU0 HR specific data protection range 3, lower bound register */
#define CPU0_HRHV_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C018u)

/** \brief C01C, CPU0 HR specific data protection range 3, upper bound register */
#define CPU0_HRHV_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C01Cu)

/** \brief C020, CPU0 HR specific data protection range 4, lower bound register */
#define CPU0_HRHV_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C020u)

/** \brief C024, CPU0 HR specific data protection range 4, upper bound register */
#define CPU0_HRHV_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C024u)

/** \brief C028, CPU0 HR specific data protection range 5, lower bound register */
#define CPU0_HRHV_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C028u)

/** \brief C02C, CPU0 HR specific data protection range 5, upper bound register */
#define CPU0_HRHV_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C02Cu)

/** \brief C030, CPU0 HR specific data protection range 6, lower bound register */
#define CPU0_HRHV_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C030u)

/** \brief C034, CPU0 HR specific data protection range 6, upper bound register */
#define CPU0_HRHV_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C034u)

/** \brief C038, CPU0 HR specific data protection range 7, lower bound register */
#define CPU0_HRHV_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C038u)

/** \brief C03C, CPU0 HR specific data protection range 7, upper bound register */
#define CPU0_HRHV_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C03Cu)

/** \brief C040, CPU0 HR specific data protection range 8, lower bound register */
#define CPU0_HRHV_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C040u)

/** \brief C044, CPU0 HR specific data protection range 8, upper bound register */
#define CPU0_HRHV_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C044u)

/** \brief C048, CPU0 HR specific data protection range 9, lower bound register */
#define CPU0_HRHV_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C048u)

/** \brief C04C, CPU0 HR specific data protection range 9, upper bound register */
#define CPU0_HRHV_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C04Cu)

/** \brief C050, CPU0 HR specific data protection range 10, lower bound register */
#define CPU0_HRHV_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C050u)

/** \brief C054, CPU0 HR specific data protection range 10, upper bound register */
#define CPU0_HRHV_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C054u)

/** \brief C058, CPU0 HR specific data protection range 11, lower bound register */
#define CPU0_HRHV_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C058u)

/** \brief C05C, CPU0 HR specific data protection range 11, upper bound register */
#define CPU0_HRHV_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C05Cu)

/** \brief C060, CPU0 HR specific data protection range 12, lower bound register */
#define CPU0_HRHV_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C060u)

/** \brief C064, CPU0 HR specific data protection range 12, upper bound register */
#define CPU0_HRHV_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C064u)

/** \brief C068, CPU0 HR specific data protection range 13, lower bound register */
#define CPU0_HRHV_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C068u)

/** \brief C06C, CPU0 HR specific data protection range 13, upper bound register */
#define CPU0_HRHV_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C06Cu)

/** \brief C070, CPU0 HR specific data protection range 14, lower bound register */
#define CPU0_HRHV_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C070u)

/** \brief C074, CPU0 HR specific data protection range 14, upper bound register */
#define CPU0_HRHV_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C074u)

/** \brief C078, CPU0 HR specific data protection range 15, lower bound register */
#define CPU0_HRHV_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C078u)

/** \brief C07C, CPU0 HR specific data protection range 15, upper bound register */
#define CPU0_HRHV_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C07Cu)

/** \brief C080, CPU0 HR specific data protection range 16, lower bound register */
#define CPU0_HRHV_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C080u)

/** \brief C084, CPU0 HR specific data protection range 16, upper bound register */
#define CPU0_HRHV_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C084u)

/** \brief C088, CPU0 HR specific data protection range 17, lower bound register */
#define CPU0_HRHV_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C088u)

/** \brief C08C, CPU0 HR specific data protection range 17, upper bound register */
#define CPU0_HRHV_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C08Cu)

/** \brief C090, CPU0 HR specific data protection range 18, lower bound register */
#define CPU0_HRHV_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C090u)

/** \brief C094, CPU0 HR specific data protection range 18, upper bound register */
#define CPU0_HRHV_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C094u)

/** \brief C098, CPU0 HR specific data protection range 19, lower bound register */
#define CPU0_HRHV_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C098u)

/** \brief C09C, CPU0 HR specific data protection range 19, upper bound register */
#define CPU0_HRHV_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C09Cu)

/** \brief C0A0, CPU0 HR specific data protection range 20, lower bound register */
#define CPU0_HRHV_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C0A0u)

/** \brief C0A4, CPU0 HR specific data protection range 20, upper bound register */
#define CPU0_HRHV_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C0A4u)

/** \brief C0A8, CPU0 HR specific data protection range 21, lower bound register */
#define CPU0_HRHV_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C0A8u)

/** \brief C0AC, CPU0 HR specific data protection range 21, upper bound register */
#define CPU0_HRHV_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C0ACu)

/** \brief C0B0, CPU0 HR specific data protection range 22, lower bound register */
#define CPU0_HRHV_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C0B0u)

/** \brief C0B4, CPU0 HR specific data protection range 22, upper bound register */
#define CPU0_HRHV_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C0B4u)

/** \brief C0B8, CPU0 HR specific data protection range 23, lower bound register */
#define CPU0_HRHV_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF883C0B8u)

/** \brief C0BC, CPU0 HR specific data protection range 23, upper bound register */
#define CPU0_HRHV_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF883C0BCu)

/** \brief D000, CPU0 HR specific code protection range 0, lower bound register */
#define CPU0_HRHV_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D000u)

/** \brief D004, CPU0 HR specific code protection range 0, upper bound register */
#define CPU0_HRHV_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D004u)

/** \brief D008, CPU0 HR specific code protection range 1, lower bound register */
#define CPU0_HRHV_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D008u)

/** \brief D00C, CPU0 HR specific code protection range 1, upper bound register */
#define CPU0_HRHV_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D00Cu)

/** \brief D010, CPU0 HR specific code protection range 2, lower bound register */
#define CPU0_HRHV_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D010u)

/** \brief D014, CPU0 HR specific code protection range 2, upper bound register */
#define CPU0_HRHV_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D014u)

/** \brief D018, CPU0 HR specific code protection range 3, lower bound register */
#define CPU0_HRHV_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D018u)

/** \brief D01C, CPU0 HR specific code protection range 3, upper bound register */
#define CPU0_HRHV_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D01Cu)

/** \brief D020, CPU0 HR specific code protection range 4, lower bound register */
#define CPU0_HRHV_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D020u)

/** \brief D024, CPU0 HR specific code protection range 4, upper bound register */
#define CPU0_HRHV_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D024u)

/** \brief D028, CPU0 HR specific code protection range 5, lower bound register */
#define CPU0_HRHV_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D028u)

/** \brief D02C, CPU0 HR specific code protection range 5, upper bound register */
#define CPU0_HRHV_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D02Cu)

/** \brief D030, CPU0 HR specific code protection range 6, lower bound register */
#define CPU0_HRHV_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D030u)

/** \brief D034, CPU0 HR specific code protection range 6, upper bound register */
#define CPU0_HRHV_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D034u)

/** \brief D038, CPU0 HR specific code protection range 7, lower bound register */
#define CPU0_HRHV_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D038u)

/** \brief D03C, CPU0 HR specific code protection range 7, upper bound register */
#define CPU0_HRHV_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D03Cu)

/** \brief D040, CPU0 HR specific code protection range 8, lower bound register */
#define CPU0_HRHV_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D040u)

/** \brief D044, CPU0 HR specific code protection range 8, upper bound register */
#define CPU0_HRHV_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D044u)

/** \brief D048, CPU0 HR specific code protection range 9, lower bound register */
#define CPU0_HRHV_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D048u)

/** \brief D04C, CPU0 HR specific code protection range 9, upper bound register */
#define CPU0_HRHV_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D04Cu)

/** \brief D050, CPU0 HR specific code protection range 10, lower bound register */
#define CPU0_HRHV_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D050u)

/** \brief D054, CPU0 HR specific code protection range 10, upper bound register */
#define CPU0_HRHV_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D054u)

/** \brief D058, CPU0 HR specific code protection range 11, lower bound register */
#define CPU0_HRHV_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D058u)

/** \brief D05C, CPU0 HR specific code protection range 11, upper bound register */
#define CPU0_HRHV_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D05Cu)

/** \brief D060, CPU0 HR specific code protection range 12, lower bound register */
#define CPU0_HRHV_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D060u)

/** \brief D064, CPU0 HR specific code protection range 12, upper bound register */
#define CPU0_HRHV_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D064u)

/** \brief D068, CPU0 HR specific code protection range 13, lower bound register */
#define CPU0_HRHV_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D068u)

/** \brief D06C, CPU0 HR specific code protection range 13, upper bound register */
#define CPU0_HRHV_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D06Cu)

/** \brief D070, CPU0 HR specific code protection range 14, lower bound register */
#define CPU0_HRHV_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D070u)

/** \brief D074, CPU0 HR specific code protection range 14, upper bound register */
#define CPU0_HRHV_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D074u)

/** \brief D078, CPU0 HR specific code protection range 15, lower bound register */
#define CPU0_HRHV_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF883D078u)

/** \brief D07C, CPU0 HR specific code protection range 15, upper bound register */
#define CPU0_HRHV_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF883D07Cu)

/** \brief E000, CPU0 HR specific code protection execute enable register set 0 */
#define CPU0_HRHV_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E000u)

/** \brief E004, CPU0 HR specific code protection execute enable register set 1 */
#define CPU0_HRHV_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E004u)

/** \brief E008, CPU0 HR specific code protection execute enable register set 2 */
#define CPU0_HRHV_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E008u)

/** \brief E00C, CPU0 HR specific code protection execute enable register set 3 */
#define CPU0_HRHV_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E00Cu)

/** \brief E010, CPU0 HR specific data protection read enable register set 0 */
#define CPU0_HRHV_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E010u)

/** \brief E014, CPU0 HR specific data protection read enable register set 1 */
#define CPU0_HRHV_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E014u)

/** \brief E018, CPU0 HR specific data protection read enable register set 2 */
#define CPU0_HRHV_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E018u)

/** \brief E01C, CPU0 HR specific data protection read enable register set 3 */
#define CPU0_HRHV_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E01Cu)

/** \brief E020, CPU0 HR specific data protection write enable register set 0 */
#define CPU0_HRHV_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E020u)

/** \brief E024, CPU0 HR specific data protection write enable register set 1 */
#define CPU0_HRHV_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E024u)

/** \brief E028, CPU0 HR specific data protection write enable register set 2 */
#define CPU0_HRHV_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E028u)

/** \brief E02C, CPU0 HR specific data protection write enable register set 3 */
#define CPU0_HRHV_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E02Cu)

/** \brief E040, CPU0 HR specific code protection execute enable register set 4 */
#define CPU0_HRHV_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E040u)

/** \brief E044, CPU0 HR specific code protection execute enable register set 5 */
#define CPU0_HRHV_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E044u)

/** \brief E048, CPU0 HR specific code protection execute enable register set 6 */
#define CPU0_HRHV_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E048u)

/** \brief E04C, CPU0 HR specific code protection execute enable register set 7 */
#define CPU0_HRHV_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF883E04Cu)

/** \brief E050, CPU0 HR specific data protection read enable register set 4 */
#define CPU0_HRHV_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E050u)

/** \brief E054, CPU0 HR specific data protection read enable register set 5 */
#define CPU0_HRHV_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E054u)

/** \brief E058, CPU0 HR specific data protection read enable register set 6 */
#define CPU0_HRHV_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E058u)

/** \brief E05C, CPU0 HR specific data protection read enable register set 7 */
#define CPU0_HRHV_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF883E05Cu)

/** \brief E060, CPU0 HR specific data protection write enable register set 4 */
#define CPU0_HRHV_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E060u)

/** \brief E064, CPU0 HR specific data protection write enable register set 5 */
#define CPU0_HRHV_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E064u)

/** \brief E068, CPU0 HR specific data protection write enable register set 6 */
#define CPU0_HRHV_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E068u)

/** \brief E06C, CPU0 HR specific data protection write enable register set 7 */
#define CPU0_HRHV_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF883E06Cu)

/** \brief E400, CPU0 HR specific temporal protection system control register */
#define CPU0_HRHV_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF883E400u)

/** \brief E404, CPU0 HR specific temporal protection system timer register 0 */
#define CPU0_HRHV_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E404u)

/** \brief E408, CPU0 HR specific temporal protection system timer register 1 */
#define CPU0_HRHV_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E408u)

/** \brief E40C, CPU0 HR specific temporal protection system timer register 2 */
#define CPU0_HRHV_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E40Cu)

/** \brief F000, CPU0 trigger event 0 */
#define CPU0_HRHV_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F000u)
/** Alias (User Manual Name) for CPU0_HRHV_TR0_EVT */
#define CPU0_HRHV_TR0EVT (CPU0_HRHV_TR0_EVT)

/** \brief F004, CPU0 trigger address 0 */
#define CPU0_HRHV_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F004u)
/** Alias (User Manual Name) for CPU0_HRHV_TR0_ADR */
#define CPU0_HRHV_TR0ADR (CPU0_HRHV_TR0_ADR)

/** \brief F008, CPU0 trigger event 1 */
#define CPU0_HRHV_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F008u)
/** Alias (User Manual Name) for CPU0_HRHV_TR1_EVT */
#define CPU0_HRHV_TR1EVT (CPU0_HRHV_TR1_EVT)

/** \brief F00C, CPU0 trigger address 1 */
#define CPU0_HRHV_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F00Cu)
/** Alias (User Manual Name) for CPU0_HRHV_TR1_ADR */
#define CPU0_HRHV_TR1ADR (CPU0_HRHV_TR1_ADR)

/** \brief F010, CPU0 trigger event 2 */
#define CPU0_HRHV_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F010u)
/** Alias (User Manual Name) for CPU0_HRHV_TR2_EVT */
#define CPU0_HRHV_TR2EVT (CPU0_HRHV_TR2_EVT)

/** \brief F014, CPU0 trigger address 2 */
#define CPU0_HRHV_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F014u)
/** Alias (User Manual Name) for CPU0_HRHV_TR2_ADR */
#define CPU0_HRHV_TR2ADR (CPU0_HRHV_TR2_ADR)

/** \brief F018, CPU0 trigger event 3 */
#define CPU0_HRHV_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F018u)
/** Alias (User Manual Name) for CPU0_HRHV_TR3_EVT */
#define CPU0_HRHV_TR3EVT (CPU0_HRHV_TR3_EVT)

/** \brief F01C, CPU0 trigger address 3 */
#define CPU0_HRHV_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F01Cu)
/** Alias (User Manual Name) for CPU0_HRHV_TR3_ADR */
#define CPU0_HRHV_TR3ADR (CPU0_HRHV_TR3_ADR)

/** \brief F020, CPU0 trigger event 4 */
#define CPU0_HRHV_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F020u)
/** Alias (User Manual Name) for CPU0_HRHV_TR4_EVT */
#define CPU0_HRHV_TR4EVT (CPU0_HRHV_TR4_EVT)

/** \brief F024, CPU0 trigger address 4 */
#define CPU0_HRHV_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F024u)
/** Alias (User Manual Name) for CPU0_HRHV_TR4_ADR */
#define CPU0_HRHV_TR4ADR (CPU0_HRHV_TR4_ADR)

/** \brief F028, CPU0 trigger event 5 */
#define CPU0_HRHV_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F028u)
/** Alias (User Manual Name) for CPU0_HRHV_TR5_EVT */
#define CPU0_HRHV_TR5EVT (CPU0_HRHV_TR5_EVT)

/** \brief F02C, CPU0 trigger address 5 */
#define CPU0_HRHV_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F02Cu)
/** Alias (User Manual Name) for CPU0_HRHV_TR5_ADR */
#define CPU0_HRHV_TR5ADR (CPU0_HRHV_TR5_ADR)

/** \brief F030, CPU0 trigger event 6 */
#define CPU0_HRHV_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F030u)
/** Alias (User Manual Name) for CPU0_HRHV_TR6_EVT */
#define CPU0_HRHV_TR6EVT (CPU0_HRHV_TR6_EVT)

/** \brief F034, CPU0 trigger address 6 */
#define CPU0_HRHV_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F034u)
/** Alias (User Manual Name) for CPU0_HRHV_TR6_ADR */
#define CPU0_HRHV_TR6ADR (CPU0_HRHV_TR6_ADR)

/** \brief F038, CPU0 trigger event 7 */
#define CPU0_HRHV_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF883F038u)
/** Alias (User Manual Name) for CPU0_HRHV_TR7_EVT */
#define CPU0_HRHV_TR7EVT (CPU0_HRHV_TR7_EVT)

/** \brief F03C, CPU0 trigger address 7 */
#define CPU0_HRHV_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF883F03Cu)
/** Alias (User Manual Name) for CPU0_HRHV_TR7_ADR */
#define CPU0_HRHV_TR7ADR (CPU0_HRHV_TR7_ADR)

/** \brief FC00, CPU0 HR specific counter control */
#define CPU0_HRHV_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF883FC00u)

/** \brief FC04, CPU0 HR specific CPU clock cycle count */
#define CPU0_HRHV_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF883FC04u)

/** \brief FC08, CPU0 HR specific instruction count */
#define CPU0_HRHV_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF883FC08u)

/** \brief FC0C, CPU0 HR specific multi-count register 1 */
#define CPU0_HRHV_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF883FC0Cu)

/** \brief FC10, CPU0 HR specific multi-count register 2 */
#define CPU0_HRHV_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF883FC10u)

/** \brief FC14, CPU0 HR specific multi-count register 3 */
#define CPU0_HRHV_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF883FC14u)

/** \brief FD00, CPU0 debug status register */
#define CPU0_HRHV_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF883FD00u)

/** \brief FD08, CPU0 external event register */
#define CPU0_HRHV_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF883FD08u)

/** \brief FD0C, CPU0 core register access event */
#define CPU0_HRHV_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF883FD0Cu)

/** \brief FD10, CPU0 software debug event */
#define CPU0_HRHV_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF883FD10u)

/** \brief FD14, CPU0 debug action configuration */
#define CPU0_HRHV_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF883FD14u)

/** \brief FD30, CPU0 trigger accumulator */
#define CPU0_HRHV_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF883FD30u)

/** \brief FD40, CPU0 debug monitor start address */
#define CPU0_HRHV_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF883FD40u)

/** \brief FD44, CPU0 debug context save area pointer */
#define CPU0_HRHV_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF883FD44u)

/** \brief FD48, CPU0 debug trap control */
#define CPU0_HRHV_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF883FD48u)

/** \brief FD4C, CPU0 debug configuration */
#define CPU0_HRHV_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF883FD4Cu)

/** \brief FD50, CPU0 trace configuration */
#define CPU0_HRHV_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF883FD50u)

/** \brief FD54, CPU0 trace filter */
#define CPU0_HRHV_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF883FD54u)

/** \brief FD58, CPU0 trace bandwidth limiter */
#define CPU0_HRHV_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF883FD58u)

/** \brief FD60, CPU0 MCDS performance counter control register */
#define CPU0_HRHV_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF883FD60u)

/** \brief FE00, CPU0 previous context information register */
#define CPU0_HRHV_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF883FE00u)

/** \brief FE04, CPU0 HR specific program status word */
#define CPU0_HRHV_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF883FE04u)

/** \brief FE08, CPU0 program counter */
#define CPU0_HRHV_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF883FE08u)

/** \brief FE14, CPU0 HR specific core configuration register */
#define CPU0_HRHV_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF883FE14u)

/** \brief FE18, CPU0 identification register */
#define CPU0_HRHV_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF883FE18u)

/** \brief FE1C, CPU0 core identification register */
#define CPU0_HRHV_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF883FE1Cu)

/** \brief FE20, CPU0 HR specific base interrupt vector table pointer */
#define CPU0_HRHV_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF883FE20u)

/** \brief FE24, CPU0 HR specific base trap vector table pointer */
#define CPU0_HRHV_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF883FE24u)

/** \brief FE28, CPU0 HR specific interrupt stack pointer */
#define CPU0_HRHV_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF883FE28u)

/** \brief FE2C, CPU0 interrupt control register */
#define CPU0_HRHV_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF883FE2Cu)

/** \brief FE34, CPU0 previous PRS */
#define CPU0_HRHV_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF883FE34u)

/** \brief FE38, CPU0 HR specific free CSA list head pointer */
#define CPU0_HRHV_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF883FE38u)

/** \brief FE3C, CPU0 HR specific free CSA list limit pointer */
#define CPU0_HRHV_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF883FE3Cu)

/** \brief FE40, CPU0 software identification */
#define CPU0_HRHV_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF883FE40u)

/** \brief FE50, CPU0 customer ID register */
#define CPU0_HRHV_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF883FE50u)

/** \brief FE60, CPU0 core boot configuration register */
#define CPU0_HRHV_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF883FE60u)

/** \brief FE64, CPU0 lockstep control register */
#define CPU0_HRHV_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF883FE64u)

/** \brief FE68, CPU0 clock control register */
#define CPU0_HRHV_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF883FE68u)

/** \brief FE6C, CPU0 hardware configuration  */
#define CPU0_HRHV_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF883FE6Cu)

/** \brief FF80, CPU0 HR specific address general purpose register 0 */
#define CPU0_HRHV_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF883FF80u)

/** \brief FF84, CPU0 HR specific address general purpose register 1 */
#define CPU0_HRHV_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF883FF84u)

/** \brief FFA0, CPU0 HR specific address general purpose register 8 */
#define CPU0_HRHV_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF883FFA0u)

/** \brief FFA4, CPU0 HR specific address general purpose register 9 */
#define CPU0_HRHV_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF883FFA4u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpu_Registers_Cfg_Cpu1
 * \{  */
/** \brief 0, CPU1 system timer clock control register */
#define CPU1_STM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8840000u)

/** \brief 0, CPU1 system timer clock control register", hypervisor view" */
#define CPU1_STMHV_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8840000u)

/** \brief 4, CPU1 OCDS control and status register */
#define CPU1_STM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8840004u)

/** \brief 4, CPU1 OCDS control and status register", hypervisor view" */
#define CPU1_STMHV_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8840004u)

/** \brief 20, CPU1 system timer absolute timer */
#define CPU1_STM_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8840020u)

/** \brief 20, CPU1 system timer absolute timer", hypervisor view" */
#define CPU1_STMHV_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8840020u)

/** \brief 100, CPU1 VM0 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM0_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840100u)

/** \brief 104, CPU1 VM0 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM0_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840104u)

/** \brief 108, CPU1 VM0 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM0_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8840108u)

/** \brief 10C, CPU1 VM0 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM0_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF884010Cu)
/** Alias (User Manual Name) for CPU1_STMHV_VM0_STM_ICR */
#define CPU1_STMHV_VM0_ICR (CPU1_STMHV_VM0_STM_ICR)

/** \brief 110, CPU1 VM0 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM0_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8840110u)

/** \brief 114, CPU1 VM0 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8840114u)

/** \brief 118, CPU1 VM0 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM0_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8840118u)

/** \brief 120, CPU1 system timer compare register 0 */
#define CPU1_STM_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840120u)

/** \brief 120, CPU1 VM1 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM1_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840120u)

/** \brief 124, CPU1 system timer compare register 1 */
#define CPU1_STM_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840124u)

/** \brief 124, CPU1 VM1 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM1_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840124u)

/** \brief 128, CPU1 system timer compare match control register */
#define CPU1_STM_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8840128u)

/** \brief 128, CPU1 VM1 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM1_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8840128u)

/** \brief 12C, CPU1 system timer interrupt control register */
#define CPU1_STM_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF884012Cu)
/** Alias (User Manual Name) for CPU1_STM_STM_ICR */
#define CPU1_STM_ICR (CPU1_STM_STM_ICR)

/** \brief 12C, CPU1 VM1 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM1_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF884012Cu)
/** Alias (User Manual Name) for CPU1_STMHV_VM1_STM_ICR */
#define CPU1_STMHV_VM1_ICR (CPU1_STMHV_VM1_STM_ICR)

/** \brief 130, CPU1 system timer interrupt set/clear register */
#define CPU1_STM_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8840130u)

/** \brief 130, CPU1 VM1 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM1_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8840130u)

/** \brief 134, CPU1 system timer interrupt status register */
#define CPU1_STM_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8840134u)

/** \brief 134, CPU1 VM1 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM1_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8840134u)

/** \brief 138, CPU1 system timer relative timer */
#define CPU1_STM_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8840138u)

/** \brief 138, CPU1 VM1 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM1_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8840138u)

/** \brief 140, CPU1 VM2 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM2_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840140u)

/** \brief 144, CPU1 VM2 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM2_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840144u)

/** \brief 148, CPU1 VM2 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM2_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8840148u)

/** \brief 14C, CPU1 VM2 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM2_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF884014Cu)
/** Alias (User Manual Name) for CPU1_STMHV_VM2_STM_ICR */
#define CPU1_STMHV_VM2_ICR (CPU1_STMHV_VM2_STM_ICR)

/** \brief 150, CPU1 VM2 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM2_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8840150u)

/** \brief 154, CPU1 VM2 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM2_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8840154u)

/** \brief 158, CPU1 VM2 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM2_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8840158u)

/** \brief 160, CPU1 VM3 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM3_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840160u)

/** \brief 164, CPU1 VM3 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM3_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840164u)

/** \brief 168, CPU1 VM3 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM3_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8840168u)

/** \brief 16C, CPU1 VM3 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM3_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF884016Cu)
/** Alias (User Manual Name) for CPU1_STMHV_VM3_STM_ICR */
#define CPU1_STMHV_VM3_ICR (CPU1_STMHV_VM3_STM_ICR)

/** \brief 170, CPU1 VM3 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM3_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8840170u)

/** \brief 174, CPU1 VM3 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM3_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8840174u)

/** \brief 178, CPU1 VM3 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM3_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8840178u)

/** \brief 180, CPU1 VM4 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM4_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840180u)

/** \brief 184, CPU1 VM4 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM4_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8840184u)

/** \brief 188, CPU1 VM4 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM4_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8840188u)

/** \brief 18C, CPU1 VM4 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM4_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF884018Cu)
/** Alias (User Manual Name) for CPU1_STMHV_VM4_STM_ICR */
#define CPU1_STMHV_VM4_ICR (CPU1_STMHV_VM4_STM_ICR)

/** \brief 190, CPU1 VM4 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM4_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8840190u)

/** \brief 194, CPU1 VM4 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM4_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8840194u)

/** \brief 198, CPU1 VM4 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM4_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8840198u)

/** \brief 1A0, CPU1 VM5 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM5_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88401A0u)

/** \brief 1A4, CPU1 VM5 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM5_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88401A4u)

/** \brief 1A8, CPU1 VM5 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM5_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88401A8u)

/** \brief 1AC, CPU1 VM5 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM5_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88401ACu)
/** Alias (User Manual Name) for CPU1_STMHV_VM5_STM_ICR */
#define CPU1_STMHV_VM5_ICR (CPU1_STMHV_VM5_STM_ICR)

/** \brief 1B0, CPU1 VM5 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM5_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88401B0u)

/** \brief 1B4, CPU1 VM5 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM5_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88401B4u)

/** \brief 1B8, CPU1 VM5 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM5_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88401B8u)

/** \brief 1C0, CPU1 VM6 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM6_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88401C0u)

/** \brief 1C4, CPU1 VM6 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM6_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88401C4u)

/** \brief 1C8, CPU1 VM6 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM6_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88401C8u)

/** \brief 1CC, CPU1 VM6 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM6_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88401CCu)
/** Alias (User Manual Name) for CPU1_STMHV_VM6_STM_ICR */
#define CPU1_STMHV_VM6_ICR (CPU1_STMHV_VM6_STM_ICR)

/** \brief 1D0, CPU1 VM6 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM6_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88401D0u)

/** \brief 1D4, CPU1 VM6 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM6_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88401D4u)

/** \brief 1D8, CPU1 VM6 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM6_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88401D8u)

/** \brief 1E0, CPU1 VM7 system timer compare register 0", hypervisor view" */
#define CPU1_STMHV_VM7_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88401E0u)

/** \brief 1E4, CPU1 VM7 system timer compare register 1", hypervisor view" */
#define CPU1_STMHV_VM7_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88401E4u)

/** \brief 1E8, CPU1 VM7 system timer compare match control register", hypervisor view" */
#define CPU1_STMHV_VM7_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88401E8u)

/** \brief 1EC, CPU1 VM7 system timer interrupt control register", hypervisor view" */
#define CPU1_STMHV_VM7_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88401ECu)
/** Alias (User Manual Name) for CPU1_STMHV_VM7_STM_ICR */
#define CPU1_STMHV_VM7_ICR (CPU1_STMHV_VM7_STM_ICR)

/** \brief 1F0, CPU1 VM7 system timer interrupt set/clear register", hypervisor view" */
#define CPU1_STMHV_VM7_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88401F0u)

/** \brief 1F4, CPU1 VM7 system timer interrupt status register", hypervisor view" */
#define CPU1_STMHV_VM7_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88401F4u)

/** \brief 1F8, CPU1 VM7 system timer relative timer", hypervisor view" */
#define CPU1_STMHV_VM7_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88401F8u)

/** \brief D000, CPU1 reset register 0 */
#define CPU1_KRST0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST0*)0xF884D000u)

/** \brief D004, CPU1 reset register 1 */
#define CPU1_KRST1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST1*)0xF884D004u)

/** \brief D008, CPU1 reset clear register */
#define CPU1_KRSTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRSTCLR*)0xF884D008u)

/** \brief 8, CPU1 PROTSPR register safe endinit */
#define CPU1_PROTSPRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF884E008u)

/** \brief 20, CPU1 shadow SPR, write access enable register A */
#define CPU1_ACCENSPRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF884E020u)

/** \brief 24, CPU1 shadow SPR, write access enable register B */
#define CPU1_ACCENSPRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF884E024u)

/** \brief 28, CPU1 shadow SPR, read access enable register A */
#define CPU1_ACCENSPRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF884E028u)

/** \brief 2C, CPU1 shadow SPR, read access enable register B */
#define CPU1_ACCENSPRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF884E02Cu)

/** \brief 30, CPU1 shadow SPR, VM access enable register */
#define CPU1_ACCENSPRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF884E030u)

/** \brief 34, CPU1 shadow SPR, PRS access enable register */
#define CPU1_ACCENSPRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF884E034u)

/** \brief 38, CPU1 shadow SPR, region lower address register */
#define CPU1_ACCENSPRCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA*)0xF884E038u)

/** \brief 3C, CPU1 shadow SPR, region upper address register */
#define CPU1_ACCENSPRCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA*)0xF884E03Cu)

/** \brief 48, CPU1 PROTDLMU register safe endinit */
#define CPU1_PROTDLMUSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF884E048u)

/** \brief 60, CPU1 shadow DLMU, write access enable register A */
#define CPU1_ACCENDLMUCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF884E060u)

/** \brief 64, CPU1 shadow DLMU, write access enable register B */
#define CPU1_ACCENDLMUCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF884E064u)

/** \brief 68, CPU1 shadow DLMU, read access enable register A */
#define CPU1_ACCENDLMUCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF884E068u)

/** \brief 6C, CPU1 shadow DLMU, read access enable register B */
#define CPU1_ACCENDLMUCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF884E06Cu)

/** \brief 70, CPU1 shadow DLMU, VM access enable register */
#define CPU1_ACCENDLMUCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF884E070u)

/** \brief 74, CPU1 shadow DLMU, PRS access enable register */
#define CPU1_ACCENDLMUCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF884E074u)

/** \brief 78, CPU1 shadow DLMU, region lower address register */
#define CPU1_ACCENDLMUCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA_89*)0xF884E078u)

/** \brief 7C, CPU1 shadow DLMU, region upper address register */
#define CPU1_ACCENDLMUCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA_89*)0xF884E07Cu)

/** \brief 80, CPU1 PROTSFR register endinit */
#define CPU1_PROTSFRE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF884E080u)

/** \brief 88, CPU1 PROTSFR register safe endinit */
#define CPU1_PROTSFRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF884E088u)

/** \brief A0, CPU1 shadow SFR, write access enable register A */
#define CPU1_ACCENSFRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF884E0A0u)

/** \brief A4, CPU1 shadow SFR, write access enable register B */
#define CPU1_ACCENSFRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF884E0A4u)

/** \brief A8, CPU1 shadow SFR, read access enable register A */
#define CPU1_ACCENSFRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF884E0A8u)

/** \brief AC, CPU1 shadow SFR, read access enable register B */
#define CPU1_ACCENSFRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF884E0ACu)

/** \brief B0, CPU1 shadow SFR, VM access enable register */
#define CPU1_ACCENSFRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF884E0B0u)

/** \brief B4, CPU1 shadow SFR, PRS access enable register */
#define CPU1_ACCENSFRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF884E0B4u)

/** \brief C0, CPU1 PROTRST register endinit */
#define CPU1_PROTRSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF884E0C0u)

/** \brief D8, CPU1 PROTSTM Register Safe Endinit */
#define CPU1_PROTSTMSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROTSTMSE*)0xF884E0D8u)

/** \brief E0, CPU1 shadow STM, write access enable register A */
#define CPU1_ACCENSTMCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF884E0E0u)

/** \brief E4, CPU1 shadow STM, write access enable register B */
#define CPU1_ACCENSTMCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF884E0E4u)

/** \brief E8, CPU1 shadow STM, read access enable register A */
#define CPU1_ACCENSTMCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF884E0E8u)

/** \brief EC, CPU1 shadow STM, read access enable register B */
#define CPU1_ACCENSTMCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF884E0ECu)

/** \brief F0, CPU1 shadow STM, VM access enable register */
#define CPU1_ACCENSTMCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF884E0F0u)

/** \brief F4, CPU1 shadow STM, PRS access enable register */
#define CPU1_ACCENSTMCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF884E0F4u)

/** \brief 200, CPU1 SPR range 0, write access enable register A */
#define CPU1_ACCENSPR0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E200u)

/** \brief 204, CPU1 SPR range 0, write access enable register B */
#define CPU1_ACCENSPR0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E204u)

/** \brief 208, CPU1 SPR range 0, read access enable register A */
#define CPU1_ACCENSPR0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E208u)

/** \brief 20C, CPU1 SPR range 0, read access enable register B */
#define CPU1_ACCENSPR0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E20Cu)

/** \brief 210, CPU1 SPR range 0, VM access enable register */
#define CPU1_ACCENSPR0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E210u)

/** \brief 214, CPU1 SPR range 0, PRS access enable register */
#define CPU1_ACCENSPR0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E214u)

/** \brief 218, CPU1 SPR range 0, region lower address register */
#define CPU1_ACCENSPR0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E218u)

/** \brief 21C, CPU1 SPR range 0, region upper address register */
#define CPU1_ACCENSPR0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E21Cu)

/** \brief 220, CPU1 SPR range 1, write access enable register A */
#define CPU1_ACCENSPR1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E220u)

/** \brief 224, CPU1 SPR range 1, write access enable register B */
#define CPU1_ACCENSPR1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E224u)

/** \brief 228, CPU1 SPR range 1, read access enable register A */
#define CPU1_ACCENSPR1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E228u)

/** \brief 22C, CPU1 SPR range 1, read access enable register B */
#define CPU1_ACCENSPR1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E22Cu)

/** \brief 230, CPU1 SPR range 1, VM access enable register */
#define CPU1_ACCENSPR1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E230u)

/** \brief 234, CPU1 SPR range 1, PRS access enable register */
#define CPU1_ACCENSPR1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E234u)

/** \brief 238, CPU1 SPR range 1, region lower address register */
#define CPU1_ACCENSPR1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E238u)

/** \brief 23C, CPU1 SPR range 1, region upper address register */
#define CPU1_ACCENSPR1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E23Cu)

/** \brief 240, CPU1 SPR range 2, write access enable register A */
#define CPU1_ACCENSPR2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E240u)

/** \brief 244, CPU1 SPR range 2, write access enable register B */
#define CPU1_ACCENSPR2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E244u)

/** \brief 248, CPU1 SPR range 2, read access enable register A */
#define CPU1_ACCENSPR2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E248u)

/** \brief 24C, CPU1 SPR range 2, read access enable register B */
#define CPU1_ACCENSPR2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E24Cu)

/** \brief 250, CPU1 SPR range 2, VM access enable register */
#define CPU1_ACCENSPR2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E250u)

/** \brief 254, CPU1 SPR range 2, PRS access enable register */
#define CPU1_ACCENSPR2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E254u)

/** \brief 258, CPU1 SPR range 2, region lower address register */
#define CPU1_ACCENSPR2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E258u)

/** \brief 25C, CPU1 SPR range 2, region upper address register */
#define CPU1_ACCENSPR2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E25Cu)

/** \brief 260, CPU1 SPR range 3, write access enable register A */
#define CPU1_ACCENSPR3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E260u)

/** \brief 264, CPU1 SPR range 3, write access enable register B */
#define CPU1_ACCENSPR3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E264u)

/** \brief 268, CPU1 SPR range 3, read access enable register A */
#define CPU1_ACCENSPR3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E268u)

/** \brief 26C, CPU1 SPR range 3, read access enable register B */
#define CPU1_ACCENSPR3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E26Cu)

/** \brief 270, CPU1 SPR range 3, VM access enable register */
#define CPU1_ACCENSPR3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E270u)

/** \brief 274, CPU1 SPR range 3, PRS access enable register */
#define CPU1_ACCENSPR3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E274u)

/** \brief 278, CPU1 SPR range 3, region lower address register */
#define CPU1_ACCENSPR3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E278u)

/** \brief 27C, CPU1 SPR range 3, region upper address register */
#define CPU1_ACCENSPR3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E27Cu)

/** \brief 280, CPU1 SPR range 4, write access enable register A */
#define CPU1_ACCENSPR4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E280u)

/** \brief 284, CPU1 SPR range 4, write access enable register B */
#define CPU1_ACCENSPR4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E284u)

/** \brief 288, CPU1 SPR range 4, read access enable register A */
#define CPU1_ACCENSPR4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E288u)

/** \brief 28C, CPU1 SPR range 4, read access enable register B */
#define CPU1_ACCENSPR4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E28Cu)

/** \brief 290, CPU1 SPR range 4, VM access enable register */
#define CPU1_ACCENSPR4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E290u)

/** \brief 294, CPU1 SPR range 4, PRS access enable register */
#define CPU1_ACCENSPR4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E294u)

/** \brief 298, CPU1 SPR range 4, region lower address register */
#define CPU1_ACCENSPR4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E298u)

/** \brief 29C, CPU1 SPR range 4, region upper address register */
#define CPU1_ACCENSPR4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E29Cu)

/** \brief 2A0, CPU1 SPR range 5, write access enable register A */
#define CPU1_ACCENSPR5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E2A0u)

/** \brief 2A4, CPU1 SPR range 5, write access enable register B */
#define CPU1_ACCENSPR5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E2A4u)

/** \brief 2A8, CPU1 SPR range 5, read access enable register A */
#define CPU1_ACCENSPR5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E2A8u)

/** \brief 2AC, CPU1 SPR range 5, read access enable register B */
#define CPU1_ACCENSPR5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E2ACu)

/** \brief 2B0, CPU1 SPR range 5, VM access enable register */
#define CPU1_ACCENSPR5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E2B0u)

/** \brief 2B4, CPU1 SPR range 5, PRS access enable register */
#define CPU1_ACCENSPR5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E2B4u)

/** \brief 2B8, CPU1 SPR range 5, region lower address register */
#define CPU1_ACCENSPR5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E2B8u)

/** \brief 2BC, CPU1 SPR range 5, region upper address register */
#define CPU1_ACCENSPR5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E2BCu)

/** \brief 2C0, CPU1 SPR range 6, write access enable register A */
#define CPU1_ACCENSPR6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E2C0u)

/** \brief 2C4, CPU1 SPR range 6, write access enable register B */
#define CPU1_ACCENSPR6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E2C4u)

/** \brief 2C8, CPU1 SPR range 6, read access enable register A */
#define CPU1_ACCENSPR6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E2C8u)

/** \brief 2CC, CPU1 SPR range 6, read access enable register B */
#define CPU1_ACCENSPR6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E2CCu)

/** \brief 2D0, CPU1 SPR range 6, VM access enable register */
#define CPU1_ACCENSPR6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E2D0u)

/** \brief 2D4, CPU1 SPR range 6, PRS access enable register */
#define CPU1_ACCENSPR6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E2D4u)

/** \brief 2D8, CPU1 SPR range 6, region lower address register */
#define CPU1_ACCENSPR6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E2D8u)

/** \brief 2DC, CPU1 SPR range 6, region upper address register */
#define CPU1_ACCENSPR6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E2DCu)

/** \brief 2E0, CPU1 SPR range 7, write access enable register A */
#define CPU1_ACCENSPR7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E2E0u)

/** \brief 2E4, CPU1 SPR range 7, write access enable register B */
#define CPU1_ACCENSPR7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E2E4u)

/** \brief 2E8, CPU1 SPR range 7, read access enable register A */
#define CPU1_ACCENSPR7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E2E8u)

/** \brief 2EC, CPU1 SPR range 7, read access enable register B */
#define CPU1_ACCENSPR7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E2ECu)

/** \brief 2F0, CPU1 SPR range 7, VM access enable register */
#define CPU1_ACCENSPR7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E2F0u)

/** \brief 2F4, CPU1 SPR range 7, PRS access enable register */
#define CPU1_ACCENSPR7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E2F4u)

/** \brief 2F8, CPU1 SPR range 7, region lower address register */
#define CPU1_ACCENSPR7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E2F8u)

/** \brief 2FC, CPU1 SPR range 7, region upper address register */
#define CPU1_ACCENSPR7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E2FCu)

/** \brief 300, CPU1 SPR range 8, write access enable register A */
#define CPU1_ACCENSPR8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E300u)

/** \brief 304, CPU1 SPR range 8, write access enable register B */
#define CPU1_ACCENSPR8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E304u)

/** \brief 308, CPU1 SPR range 8, read access enable register A */
#define CPU1_ACCENSPR8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E308u)

/** \brief 30C, CPU1 SPR range 8, read access enable register B */
#define CPU1_ACCENSPR8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E30Cu)

/** \brief 310, CPU1 SPR range 8, VM access enable register */
#define CPU1_ACCENSPR8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E310u)

/** \brief 314, CPU1 SPR range 8, PRS access enable register */
#define CPU1_ACCENSPR8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E314u)

/** \brief 318, CPU1 SPR range 8, region lower address register */
#define CPU1_ACCENSPR8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E318u)

/** \brief 31C, CPU1 SPR range 8, region upper address register */
#define CPU1_ACCENSPR8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E31Cu)

/** \brief 320, CPU1 SPR range 9, write access enable register A */
#define CPU1_ACCENSPR9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E320u)

/** \brief 324, CPU1 SPR range 9, write access enable register B */
#define CPU1_ACCENSPR9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E324u)

/** \brief 328, CPU1 SPR range 9, read access enable register A */
#define CPU1_ACCENSPR9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E328u)

/** \brief 32C, CPU1 SPR range 9, read access enable register B */
#define CPU1_ACCENSPR9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E32Cu)

/** \brief 330, CPU1 SPR range 9, VM access enable register */
#define CPU1_ACCENSPR9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E330u)

/** \brief 334, CPU1 SPR range 9, PRS access enable register */
#define CPU1_ACCENSPR9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E334u)

/** \brief 338, CPU1 SPR range 9, region lower address register */
#define CPU1_ACCENSPR9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E338u)

/** \brief 33C, CPU1 SPR range 9, region upper address register */
#define CPU1_ACCENSPR9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E33Cu)

/** \brief 340, CPU1 SPR range 10, write access enable register A */
#define CPU1_ACCENSPR10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E340u)

/** \brief 344, CPU1 SPR range 10, write access enable register B */
#define CPU1_ACCENSPR10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E344u)

/** \brief 348, CPU1 SPR range 10, read access enable register A */
#define CPU1_ACCENSPR10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E348u)

/** \brief 34C, CPU1 SPR range 10, read access enable register B */
#define CPU1_ACCENSPR10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E34Cu)

/** \brief 350, CPU1 SPR range 10, VM access enable register */
#define CPU1_ACCENSPR10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E350u)

/** \brief 354, CPU1 SPR range 10, PRS access enable register */
#define CPU1_ACCENSPR10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E354u)

/** \brief 358, CPU1 SPR range 10, region lower address register */
#define CPU1_ACCENSPR10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E358u)

/** \brief 35C, CPU1 SPR range 10, region upper address register */
#define CPU1_ACCENSPR10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E35Cu)

/** \brief 360, CPU1 SPR range 11, write access enable register A */
#define CPU1_ACCENSPR11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E360u)

/** \brief 364, CPU1 SPR range 11, write access enable register B */
#define CPU1_ACCENSPR11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E364u)

/** \brief 368, CPU1 SPR range 11, read access enable register A */
#define CPU1_ACCENSPR11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E368u)

/** \brief 36C, CPU1 SPR range 11, read access enable register B */
#define CPU1_ACCENSPR11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E36Cu)

/** \brief 370, CPU1 SPR range 11, VM access enable register */
#define CPU1_ACCENSPR11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E370u)

/** \brief 374, CPU1 SPR range 11, PRS access enable register */
#define CPU1_ACCENSPR11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E374u)

/** \brief 378, CPU1 SPR range 11, region lower address register */
#define CPU1_ACCENSPR11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E378u)

/** \brief 37C, CPU1 SPR range 11, region upper address register */
#define CPU1_ACCENSPR11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E37Cu)

/** \brief 380, CPU1 SPR range 12, write access enable register A */
#define CPU1_ACCENSPR12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E380u)

/** \brief 384, CPU1 SPR range 12, write access enable register B */
#define CPU1_ACCENSPR12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E384u)

/** \brief 388, CPU1 SPR range 12, read access enable register A */
#define CPU1_ACCENSPR12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E388u)

/** \brief 38C, CPU1 SPR range 12, read access enable register B */
#define CPU1_ACCENSPR12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E38Cu)

/** \brief 390, CPU1 SPR range 12, VM access enable register */
#define CPU1_ACCENSPR12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E390u)

/** \brief 394, CPU1 SPR range 12, PRS access enable register */
#define CPU1_ACCENSPR12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E394u)

/** \brief 398, CPU1 SPR range 12, region lower address register */
#define CPU1_ACCENSPR12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E398u)

/** \brief 39C, CPU1 SPR range 12, region upper address register */
#define CPU1_ACCENSPR12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E39Cu)

/** \brief 3A0, CPU1 SPR range 13, write access enable register A */
#define CPU1_ACCENSPR13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E3A0u)

/** \brief 3A4, CPU1 SPR range 13, write access enable register B */
#define CPU1_ACCENSPR13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E3A4u)

/** \brief 3A8, CPU1 SPR range 13, read access enable register A */
#define CPU1_ACCENSPR13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E3A8u)

/** \brief 3AC, CPU1 SPR range 13, read access enable register B */
#define CPU1_ACCENSPR13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E3ACu)

/** \brief 3B0, CPU1 SPR range 13, VM access enable register */
#define CPU1_ACCENSPR13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E3B0u)

/** \brief 3B4, CPU1 SPR range 13, PRS access enable register */
#define CPU1_ACCENSPR13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E3B4u)

/** \brief 3B8, CPU1 SPR range 13, region lower address register */
#define CPU1_ACCENSPR13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E3B8u)

/** \brief 3BC, CPU1 SPR range 13, region upper address register */
#define CPU1_ACCENSPR13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E3BCu)

/** \brief 3C0, CPU1 SPR range 14, write access enable register A */
#define CPU1_ACCENSPR14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E3C0u)

/** \brief 3C4, CPU1 SPR range 14, write access enable register B */
#define CPU1_ACCENSPR14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E3C4u)

/** \brief 3C8, CPU1 SPR range 14, read access enable register A */
#define CPU1_ACCENSPR14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E3C8u)

/** \brief 3CC, CPU1 SPR range 14, read access enable register B */
#define CPU1_ACCENSPR14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E3CCu)

/** \brief 3D0, CPU1 SPR range 14, VM access enable register */
#define CPU1_ACCENSPR14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E3D0u)

/** \brief 3D4, CPU1 SPR range 14, PRS access enable register */
#define CPU1_ACCENSPR14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E3D4u)

/** \brief 3D8, CPU1 SPR range 14, region lower address register */
#define CPU1_ACCENSPR14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E3D8u)

/** \brief 3DC, CPU1 SPR range 14, region upper address register */
#define CPU1_ACCENSPR14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E3DCu)

/** \brief 3E0, CPU1 SPR range 15, write access enable register A */
#define CPU1_ACCENSPR15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E3E0u)

/** \brief 3E4, CPU1 SPR range 15, write access enable register B */
#define CPU1_ACCENSPR15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E3E4u)

/** \brief 3E8, CPU1 SPR range 15, read access enable register A */
#define CPU1_ACCENSPR15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E3E8u)

/** \brief 3EC, CPU1 SPR range 15, read access enable register B */
#define CPU1_ACCENSPR15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E3ECu)

/** \brief 3F0, CPU1 SPR range 15, VM access enable register */
#define CPU1_ACCENSPR15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E3F0u)

/** \brief 3F4, CPU1 SPR range 15, PRS access enable register */
#define CPU1_ACCENSPR15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E3F4u)

/** \brief 3F8, CPU1 SPR range 15, region lower address register */
#define CPU1_ACCENSPR15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF884E3F8u)

/** \brief 3FC, CPU1 SPR range 15, region upper address register */
#define CPU1_ACCENSPR15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF884E3FCu)

/** \brief 400, CPU1 DLMU range 0, write access enable register A */
#define CPU1_ACCENDLMU0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E400u)

/** \brief 404, CPU1 DLMU range 0, write access enable register B */
#define CPU1_ACCENDLMU0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E404u)

/** \brief 408, CPU1 DLMU range 0, read access enable register A */
#define CPU1_ACCENDLMU0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E408u)

/** \brief 40C, CPU1 DLMU range 0, read access enable register B */
#define CPU1_ACCENDLMU0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E40Cu)

/** \brief 410, CPU1 DLMU range 0, VM access enable register */
#define CPU1_ACCENDLMU0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E410u)

/** \brief 414, CPU1 DLMU range 0, PRS access enable register */
#define CPU1_ACCENDLMU0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E414u)

/** \brief 418, CPU1 DLMU range 0, region lower address register */
#define CPU1_ACCENDLMU0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E418u)

/** \brief 41C, CPU1 DLMU range 0, region upper address register */
#define CPU1_ACCENDLMU0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E41Cu)

/** \brief 420, CPU1 DLMU range 1, write access enable register A */
#define CPU1_ACCENDLMU1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E420u)

/** \brief 424, CPU1 DLMU range 1, write access enable register B */
#define CPU1_ACCENDLMU1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E424u)

/** \brief 428, CPU1 DLMU range 1, read access enable register A */
#define CPU1_ACCENDLMU1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E428u)

/** \brief 42C, CPU1 DLMU range 1, read access enable register B */
#define CPU1_ACCENDLMU1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E42Cu)

/** \brief 430, CPU1 DLMU range 1, VM access enable register */
#define CPU1_ACCENDLMU1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E430u)

/** \brief 434, CPU1 DLMU range 1, PRS access enable register */
#define CPU1_ACCENDLMU1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E434u)

/** \brief 438, CPU1 DLMU range 1, region lower address register */
#define CPU1_ACCENDLMU1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E438u)

/** \brief 43C, CPU1 DLMU range 1, region upper address register */
#define CPU1_ACCENDLMU1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E43Cu)

/** \brief 440, CPU1 DLMU range 2, write access enable register A */
#define CPU1_ACCENDLMU2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E440u)

/** \brief 444, CPU1 DLMU range 2, write access enable register B */
#define CPU1_ACCENDLMU2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E444u)

/** \brief 448, CPU1 DLMU range 2, read access enable register A */
#define CPU1_ACCENDLMU2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E448u)

/** \brief 44C, CPU1 DLMU range 2, read access enable register B */
#define CPU1_ACCENDLMU2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E44Cu)

/** \brief 450, CPU1 DLMU range 2, VM access enable register */
#define CPU1_ACCENDLMU2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E450u)

/** \brief 454, CPU1 DLMU range 2, PRS access enable register */
#define CPU1_ACCENDLMU2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E454u)

/** \brief 458, CPU1 DLMU range 2, region lower address register */
#define CPU1_ACCENDLMU2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E458u)

/** \brief 45C, CPU1 DLMU range 2, region upper address register */
#define CPU1_ACCENDLMU2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E45Cu)

/** \brief 460, CPU1 DLMU range 3, write access enable register A */
#define CPU1_ACCENDLMU3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E460u)

/** \brief 464, CPU1 DLMU range 3, write access enable register B */
#define CPU1_ACCENDLMU3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E464u)

/** \brief 468, CPU1 DLMU range 3, read access enable register A */
#define CPU1_ACCENDLMU3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E468u)

/** \brief 46C, CPU1 DLMU range 3, read access enable register B */
#define CPU1_ACCENDLMU3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E46Cu)

/** \brief 470, CPU1 DLMU range 3, VM access enable register */
#define CPU1_ACCENDLMU3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E470u)

/** \brief 474, CPU1 DLMU range 3, PRS access enable register */
#define CPU1_ACCENDLMU3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E474u)

/** \brief 478, CPU1 DLMU range 3, region lower address register */
#define CPU1_ACCENDLMU3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E478u)

/** \brief 47C, CPU1 DLMU range 3, region upper address register */
#define CPU1_ACCENDLMU3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E47Cu)

/** \brief 480, CPU1 DLMU range 4, write access enable register A */
#define CPU1_ACCENDLMU4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E480u)

/** \brief 484, CPU1 DLMU range 4, write access enable register B */
#define CPU1_ACCENDLMU4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E484u)

/** \brief 488, CPU1 DLMU range 4, read access enable register A */
#define CPU1_ACCENDLMU4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E488u)

/** \brief 48C, CPU1 DLMU range 4, read access enable register B */
#define CPU1_ACCENDLMU4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E48Cu)

/** \brief 490, CPU1 DLMU range 4, VM access enable register */
#define CPU1_ACCENDLMU4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E490u)

/** \brief 494, CPU1 DLMU range 4, PRS access enable register */
#define CPU1_ACCENDLMU4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E494u)

/** \brief 498, CPU1 DLMU range 4, region lower address register */
#define CPU1_ACCENDLMU4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E498u)

/** \brief 49C, CPU1 DLMU range 4, region upper address register */
#define CPU1_ACCENDLMU4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E49Cu)

/** \brief 4A0, CPU1 DLMU range 5, write access enable register A */
#define CPU1_ACCENDLMU5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E4A0u)

/** \brief 4A4, CPU1 DLMU range 5, write access enable register B */
#define CPU1_ACCENDLMU5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E4A4u)

/** \brief 4A8, CPU1 DLMU range 5, read access enable register A */
#define CPU1_ACCENDLMU5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E4A8u)

/** \brief 4AC, CPU1 DLMU range 5, read access enable register B */
#define CPU1_ACCENDLMU5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E4ACu)

/** \brief 4B0, CPU1 DLMU range 5, VM access enable register */
#define CPU1_ACCENDLMU5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E4B0u)

/** \brief 4B4, CPU1 DLMU range 5, PRS access enable register */
#define CPU1_ACCENDLMU5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E4B4u)

/** \brief 4B8, CPU1 DLMU range 5, region lower address register */
#define CPU1_ACCENDLMU5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E4B8u)

/** \brief 4BC, CPU1 DLMU range 5, region upper address register */
#define CPU1_ACCENDLMU5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E4BCu)

/** \brief 4C0, CPU1 DLMU range 6, write access enable register A */
#define CPU1_ACCENDLMU6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E4C0u)

/** \brief 4C4, CPU1 DLMU range 6, write access enable register B */
#define CPU1_ACCENDLMU6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E4C4u)

/** \brief 4C8, CPU1 DLMU range 6, read access enable register A */
#define CPU1_ACCENDLMU6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E4C8u)

/** \brief 4CC, CPU1 DLMU range 6, read access enable register B */
#define CPU1_ACCENDLMU6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E4CCu)

/** \brief 4D0, CPU1 DLMU range 6, VM access enable register */
#define CPU1_ACCENDLMU6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E4D0u)

/** \brief 4D4, CPU1 DLMU range 6, PRS access enable register */
#define CPU1_ACCENDLMU6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E4D4u)

/** \brief 4D8, CPU1 DLMU range 6, region lower address register */
#define CPU1_ACCENDLMU6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E4D8u)

/** \brief 4DC, CPU1 DLMU range 6, region upper address register */
#define CPU1_ACCENDLMU6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E4DCu)

/** \brief 4E0, CPU1 DLMU range 7, write access enable register A */
#define CPU1_ACCENDLMU7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E4E0u)

/** \brief 4E4, CPU1 DLMU range 7, write access enable register B */
#define CPU1_ACCENDLMU7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E4E4u)

/** \brief 4E8, CPU1 DLMU range 7, read access enable register A */
#define CPU1_ACCENDLMU7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E4E8u)

/** \brief 4EC, CPU1 DLMU range 7, read access enable register B */
#define CPU1_ACCENDLMU7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E4ECu)

/** \brief 4F0, CPU1 DLMU range 7, VM access enable register */
#define CPU1_ACCENDLMU7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E4F0u)

/** \brief 4F4, CPU1 DLMU range 7, PRS access enable register */
#define CPU1_ACCENDLMU7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E4F4u)

/** \brief 4F8, CPU1 DLMU range 7, region lower address register */
#define CPU1_ACCENDLMU7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E4F8u)

/** \brief 4FC, CPU1 DLMU range 7, region upper address register */
#define CPU1_ACCENDLMU7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E4FCu)

/** \brief 500, CPU1 DLMU range 8, write access enable register A */
#define CPU1_ACCENDLMU8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E500u)

/** \brief 504, CPU1 DLMU range 8, write access enable register B */
#define CPU1_ACCENDLMU8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E504u)

/** \brief 508, CPU1 DLMU range 8, read access enable register A */
#define CPU1_ACCENDLMU8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E508u)

/** \brief 50C, CPU1 DLMU range 8, read access enable register B */
#define CPU1_ACCENDLMU8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E50Cu)

/** \brief 510, CPU1 DLMU range 8, VM access enable register */
#define CPU1_ACCENDLMU8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E510u)

/** \brief 514, CPU1 DLMU range 8, PRS access enable register */
#define CPU1_ACCENDLMU8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E514u)

/** \brief 518, CPU1 DLMU range 8, region lower address register */
#define CPU1_ACCENDLMU8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E518u)

/** \brief 51C, CPU1 DLMU range 8, region upper address register */
#define CPU1_ACCENDLMU8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E51Cu)

/** \brief 520, CPU1 DLMU range 9, write access enable register A */
#define CPU1_ACCENDLMU9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E520u)

/** \brief 524, CPU1 DLMU range 9, write access enable register B */
#define CPU1_ACCENDLMU9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E524u)

/** \brief 528, CPU1 DLMU range 9, read access enable register A */
#define CPU1_ACCENDLMU9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E528u)

/** \brief 52C, CPU1 DLMU range 9, read access enable register B */
#define CPU1_ACCENDLMU9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E52Cu)

/** \brief 530, CPU1 DLMU range 9, VM access enable register */
#define CPU1_ACCENDLMU9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E530u)

/** \brief 534, CPU1 DLMU range 9, PRS access enable register */
#define CPU1_ACCENDLMU9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E534u)

/** \brief 538, CPU1 DLMU range 9, region lower address register */
#define CPU1_ACCENDLMU9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E538u)

/** \brief 53C, CPU1 DLMU range 9, region upper address register */
#define CPU1_ACCENDLMU9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E53Cu)

/** \brief 540, CPU1 DLMU range 10, write access enable register A */
#define CPU1_ACCENDLMU10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E540u)

/** \brief 544, CPU1 DLMU range 10, write access enable register B */
#define CPU1_ACCENDLMU10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E544u)

/** \brief 548, CPU1 DLMU range 10, read access enable register A */
#define CPU1_ACCENDLMU10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E548u)

/** \brief 54C, CPU1 DLMU range 10, read access enable register B */
#define CPU1_ACCENDLMU10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E54Cu)

/** \brief 550, CPU1 DLMU range 10, VM access enable register */
#define CPU1_ACCENDLMU10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E550u)

/** \brief 554, CPU1 DLMU range 10, PRS access enable register */
#define CPU1_ACCENDLMU10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E554u)

/** \brief 558, CPU1 DLMU range 10, region lower address register */
#define CPU1_ACCENDLMU10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E558u)

/** \brief 55C, CPU1 DLMU range 10, region upper address register */
#define CPU1_ACCENDLMU10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E55Cu)

/** \brief 560, CPU1 DLMU range 11, write access enable register A */
#define CPU1_ACCENDLMU11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E560u)

/** \brief 564, CPU1 DLMU range 11, write access enable register B */
#define CPU1_ACCENDLMU11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E564u)

/** \brief 568, CPU1 DLMU range 11, read access enable register A */
#define CPU1_ACCENDLMU11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E568u)

/** \brief 56C, CPU1 DLMU range 11, read access enable register B */
#define CPU1_ACCENDLMU11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E56Cu)

/** \brief 570, CPU1 DLMU range 11, VM access enable register */
#define CPU1_ACCENDLMU11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E570u)

/** \brief 574, CPU1 DLMU range 11, PRS access enable register */
#define CPU1_ACCENDLMU11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E574u)

/** \brief 578, CPU1 DLMU range 11, region lower address register */
#define CPU1_ACCENDLMU11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E578u)

/** \brief 57C, CPU1 DLMU range 11, region upper address register */
#define CPU1_ACCENDLMU11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E57Cu)

/** \brief 580, CPU1 DLMU range 12, write access enable register A */
#define CPU1_ACCENDLMU12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E580u)

/** \brief 584, CPU1 DLMU range 12, write access enable register B */
#define CPU1_ACCENDLMU12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E584u)

/** \brief 588, CPU1 DLMU range 12, read access enable register A */
#define CPU1_ACCENDLMU12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E588u)

/** \brief 58C, CPU1 DLMU range 12, read access enable register B */
#define CPU1_ACCENDLMU12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E58Cu)

/** \brief 590, CPU1 DLMU range 12, VM access enable register */
#define CPU1_ACCENDLMU12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E590u)

/** \brief 594, CPU1 DLMU range 12, PRS access enable register */
#define CPU1_ACCENDLMU12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E594u)

/** \brief 598, CPU1 DLMU range 12, region lower address register */
#define CPU1_ACCENDLMU12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E598u)

/** \brief 59C, CPU1 DLMU range 12, region upper address register */
#define CPU1_ACCENDLMU12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E59Cu)

/** \brief 5A0, CPU1 DLMU range 13, write access enable register A */
#define CPU1_ACCENDLMU13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E5A0u)

/** \brief 5A4, CPU1 DLMU range 13, write access enable register B */
#define CPU1_ACCENDLMU13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E5A4u)

/** \brief 5A8, CPU1 DLMU range 13, read access enable register A */
#define CPU1_ACCENDLMU13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E5A8u)

/** \brief 5AC, CPU1 DLMU range 13, read access enable register B */
#define CPU1_ACCENDLMU13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E5ACu)

/** \brief 5B0, CPU1 DLMU range 13, VM access enable register */
#define CPU1_ACCENDLMU13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E5B0u)

/** \brief 5B4, CPU1 DLMU range 13, PRS access enable register */
#define CPU1_ACCENDLMU13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E5B4u)

/** \brief 5B8, CPU1 DLMU range 13, region lower address register */
#define CPU1_ACCENDLMU13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E5B8u)

/** \brief 5BC, CPU1 DLMU range 13, region upper address register */
#define CPU1_ACCENDLMU13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E5BCu)

/** \brief 5C0, CPU1 DLMU range 14, write access enable register A */
#define CPU1_ACCENDLMU14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E5C0u)

/** \brief 5C4, CPU1 DLMU range 14, write access enable register B */
#define CPU1_ACCENDLMU14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E5C4u)

/** \brief 5C8, CPU1 DLMU range 14, read access enable register A */
#define CPU1_ACCENDLMU14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E5C8u)

/** \brief 5CC, CPU1 DLMU range 14, read access enable register B */
#define CPU1_ACCENDLMU14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E5CCu)

/** \brief 5D0, CPU1 DLMU range 14, VM access enable register */
#define CPU1_ACCENDLMU14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E5D0u)

/** \brief 5D4, CPU1 DLMU range 14, PRS access enable register */
#define CPU1_ACCENDLMU14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E5D4u)

/** \brief 5D8, CPU1 DLMU range 14, region lower address register */
#define CPU1_ACCENDLMU14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E5D8u)

/** \brief 5DC, CPU1 DLMU range 14, region upper address register */
#define CPU1_ACCENDLMU14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E5DCu)

/** \brief 5E0, CPU1 DLMU range 15, write access enable register A */
#define CPU1_ACCENDLMU15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E5E0u)

/** \brief 5E4, CPU1 DLMU range 15, write access enable register B */
#define CPU1_ACCENDLMU15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E5E4u)

/** \brief 5E8, CPU1 DLMU range 15, read access enable register A */
#define CPU1_ACCENDLMU15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E5E8u)

/** \brief 5EC, CPU1 DLMU range 15, read access enable register B */
#define CPU1_ACCENDLMU15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E5ECu)

/** \brief 5F0, CPU1 DLMU range 15, VM access enable register */
#define CPU1_ACCENDLMU15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E5F0u)

/** \brief 5F4, CPU1 DLMU range 15, PRS access enable register */
#define CPU1_ACCENDLMU15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E5F4u)

/** \brief 5F8, CPU1 DLMU range 15, region lower address register */
#define CPU1_ACCENDLMU15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF884E5F8u)

/** \brief 5FC, CPU1 DLMU range 15, region upper address register */
#define CPU1_ACCENDLMU15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF884E5FCu)

/** \brief 600, CPU1 SFR, write access enable register A */
#define CPU1_ACCENSFR_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E600u)

/** \brief 604, CPU1 SFR, write access enable register B */
#define CPU1_ACCENSFR_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E604u)

/** \brief 608, CPU1 SFR, read access enable register A */
#define CPU1_ACCENSFR_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E608u)

/** \brief 60C, CPU1 SFR, read access enable register B */
#define CPU1_ACCENSFR_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E60Cu)

/** \brief 610, CPU1 SFR, VM access enable register */
#define CPU1_ACCENSFR_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E610u)

/** \brief 614, CPU1 SFR, PRS access enable register */
#define CPU1_ACCENSFR_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E614u)

/** \brief 700, CPU1 VM0 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E700u)

/** \brief 704, CPU1 VM0 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E704u)

/** \brief 708, CPU1 VM0 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E708u)

/** \brief 70C, CPU1 VM0 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E70Cu)

/** \brief 710, CPU1 VM0 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E710u)

/** \brief 714, CPU1 VM0 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E714u)

/** \brief 720, CPU1 VM1 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E720u)

/** \brief 724, CPU1 VM1 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E724u)

/** \brief 728, CPU1 VM1 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E728u)

/** \brief 72C, CPU1 VM1 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E72Cu)

/** \brief 730, CPU1 VM1 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E730u)

/** \brief 734, CPU1 VM1 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E734u)

/** \brief 740, CPU1 VM2 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E740u)

/** \brief 744, CPU1 VM2 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E744u)

/** \brief 748, CPU1 VM2 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E748u)

/** \brief 74C, CPU1 VM2 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E74Cu)

/** \brief 750, CPU1 VM2 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E750u)

/** \brief 754, CPU1 VM2 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E754u)

/** \brief 760, CPU1 VM3 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E760u)

/** \brief 764, CPU1 VM3 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E764u)

/** \brief 768, CPU1 VM3 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E768u)

/** \brief 76C, CPU1 VM3 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E76Cu)

/** \brief 770, CPU1 VM3 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E770u)

/** \brief 774, CPU1 VM3 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E774u)

/** \brief 780, CPU1 VM4 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E780u)

/** \brief 784, CPU1 VM4 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E784u)

/** \brief 788, CPU1 VM4 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E788u)

/** \brief 78C, CPU1 VM4 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E78Cu)

/** \brief 790, CPU1 VM4 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E790u)

/** \brief 794, CPU1 VM4 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E794u)

/** \brief 7A0, CPU1 VM5 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E7A0u)

/** \brief 7A4, CPU1 VM5 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E7A4u)

/** \brief 7A8, CPU1 VM5 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E7A8u)

/** \brief 7AC, CPU1 VM5 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E7ACu)

/** \brief 7B0, CPU1 VM5 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E7B0u)

/** \brief 7B4, CPU1 VM5 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E7B4u)

/** \brief 7C0, CPU1 VM6 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E7C0u)

/** \brief 7C4, CPU1 VM6 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E7C4u)

/** \brief 7C8, CPU1 VM6 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E7C8u)

/** \brief 7CC, CPU1 VM6 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E7CCu)

/** \brief 7D0, CPU1 VM6 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E7D0u)

/** \brief 7D4, CPU1 VM6 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E7D4u)

/** \brief 7E0, CPU1 VM7 STM, write access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF884E7E0u)

/** \brief 7E4, CPU1 VM7 STM, write access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF884E7E4u)

/** \brief 7E8, CPU1 VM7 STM, read access enable register A", virtualization view" */
#define CPU1_ACCENSTMVM7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF884E7E8u)

/** \brief 7EC, CPU1 VM7 STM, read access enable register B", virtualization view" */
#define CPU1_ACCENSTMVM7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF884E7ECu)

/** \brief 7F0, CPU1 VM7 STM, VM access enable register", virtualization view" */
#define CPU1_ACCENSTMVM7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF884E7F0u)

/** \brief 7F4, CPU1 VM7 STM, PRS access enable register", virtualization view" */
#define CPU1_ACCENSTMVM7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF884E7F4u)

/** \brief FB00, CPU1 overlay range select register */
#define CPU1_OSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OSEL*)0xF884FB00u)

/** \brief FB10, CPU1 redirected address base register 0 */
#define CPU1_BLK0_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB10u)
/** Alias (User Manual Name) for CPU1_BLK0_RABR */
#define CPU1_RABR0 (CPU1_BLK0_RABR)

/** \brief FB14, CPU1 overlay target address register 0 (Low priority) */
#define CPU1_BLK0_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB14u)
/** Alias (User Manual Name) for CPU1_BLK0_OTAR */
#define CPU1_OTAR0 (CPU1_BLK0_OTAR)

/** \brief FB18, CPU1 overlay mask register 0 */
#define CPU1_BLK0_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB18u)
/** Alias (User Manual Name) for CPU1_BLK0_OMASK */
#define CPU1_OMASK0 (CPU1_BLK0_OMASK)

/** \brief FB1C, CPU1 redirected address base register 1 */
#define CPU1_BLK1_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB1Cu)
/** Alias (User Manual Name) for CPU1_BLK1_RABR */
#define CPU1_RABR1 (CPU1_BLK1_RABR)

/** \brief FB20, CPU1 overlay target address register 1 (Low priority) */
#define CPU1_BLK1_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB20u)
/** Alias (User Manual Name) for CPU1_BLK1_OTAR */
#define CPU1_OTAR1 (CPU1_BLK1_OTAR)

/** \brief FB24, CPU1 overlay mask register 1 */
#define CPU1_BLK1_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB24u)
/** Alias (User Manual Name) for CPU1_BLK1_OMASK */
#define CPU1_OMASK1 (CPU1_BLK1_OMASK)

/** \brief FB28, CPU1 redirected address base register 2 */
#define CPU1_BLK2_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB28u)
/** Alias (User Manual Name) for CPU1_BLK2_RABR */
#define CPU1_RABR2 (CPU1_BLK2_RABR)

/** \brief FB2C, CPU1 overlay target address register 2 (Low priority) */
#define CPU1_BLK2_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB2Cu)
/** Alias (User Manual Name) for CPU1_BLK2_OTAR */
#define CPU1_OTAR2 (CPU1_BLK2_OTAR)

/** \brief FB30, CPU1 overlay mask register 2 */
#define CPU1_BLK2_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB30u)
/** Alias (User Manual Name) for CPU1_BLK2_OMASK */
#define CPU1_OMASK2 (CPU1_BLK2_OMASK)

/** \brief FB34, CPU1 redirected address base register 3 */
#define CPU1_BLK3_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB34u)
/** Alias (User Manual Name) for CPU1_BLK3_RABR */
#define CPU1_RABR3 (CPU1_BLK3_RABR)

/** \brief FB38, CPU1 overlay target address register 3 (Low priority) */
#define CPU1_BLK3_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB38u)
/** Alias (User Manual Name) for CPU1_BLK3_OTAR */
#define CPU1_OTAR3 (CPU1_BLK3_OTAR)

/** \brief FB3C, CPU1 overlay mask register 3 */
#define CPU1_BLK3_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB3Cu)
/** Alias (User Manual Name) for CPU1_BLK3_OMASK */
#define CPU1_OMASK3 (CPU1_BLK3_OMASK)

/** \brief FB40, CPU1 redirected address base register 4 */
#define CPU1_BLK4_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB40u)
/** Alias (User Manual Name) for CPU1_BLK4_RABR */
#define CPU1_RABR4 (CPU1_BLK4_RABR)

/** \brief FB44, CPU1 overlay target address register 4 (Low priority) */
#define CPU1_BLK4_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB44u)
/** Alias (User Manual Name) for CPU1_BLK4_OTAR */
#define CPU1_OTAR4 (CPU1_BLK4_OTAR)

/** \brief FB48, CPU1 overlay mask register 4 */
#define CPU1_BLK4_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB48u)
/** Alias (User Manual Name) for CPU1_BLK4_OMASK */
#define CPU1_OMASK4 (CPU1_BLK4_OMASK)

/** \brief FB4C, CPU1 redirected address base register 5 */
#define CPU1_BLK5_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB4Cu)
/** Alias (User Manual Name) for CPU1_BLK5_RABR */
#define CPU1_RABR5 (CPU1_BLK5_RABR)

/** \brief FB50, CPU1 overlay target address register 5 (Low priority) */
#define CPU1_BLK5_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB50u)
/** Alias (User Manual Name) for CPU1_BLK5_OTAR */
#define CPU1_OTAR5 (CPU1_BLK5_OTAR)

/** \brief FB54, CPU1 overlay mask register 5 */
#define CPU1_BLK5_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB54u)
/** Alias (User Manual Name) for CPU1_BLK5_OMASK */
#define CPU1_OMASK5 (CPU1_BLK5_OMASK)

/** \brief FB58, CPU1 redirected address base register 6 */
#define CPU1_BLK6_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB58u)
/** Alias (User Manual Name) for CPU1_BLK6_RABR */
#define CPU1_RABR6 (CPU1_BLK6_RABR)

/** \brief FB5C, CPU1 overlay target address register 6 (Low priority) */
#define CPU1_BLK6_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB5Cu)
/** Alias (User Manual Name) for CPU1_BLK6_OTAR */
#define CPU1_OTAR6 (CPU1_BLK6_OTAR)

/** \brief FB60, CPU1 overlay mask register 6 */
#define CPU1_BLK6_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB60u)
/** Alias (User Manual Name) for CPU1_BLK6_OMASK */
#define CPU1_OMASK6 (CPU1_BLK6_OMASK)

/** \brief FB64, CPU1 redirected address base register 7 */
#define CPU1_BLK7_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB64u)
/** Alias (User Manual Name) for CPU1_BLK7_RABR */
#define CPU1_RABR7 (CPU1_BLK7_RABR)

/** \brief FB68, CPU1 overlay target address register 7 (Low priority) */
#define CPU1_BLK7_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB68u)
/** Alias (User Manual Name) for CPU1_BLK7_OTAR */
#define CPU1_OTAR7 (CPU1_BLK7_OTAR)

/** \brief FB6C, CPU1 overlay mask register 7 */
#define CPU1_BLK7_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB6Cu)
/** Alias (User Manual Name) for CPU1_BLK7_OMASK */
#define CPU1_OMASK7 (CPU1_BLK7_OMASK)

/** \brief FB70, CPU1 redirected address base register 8 */
#define CPU1_BLK8_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB70u)
/** Alias (User Manual Name) for CPU1_BLK8_RABR */
#define CPU1_RABR8 (CPU1_BLK8_RABR)

/** \brief FB74, CPU1 overlay target address register 8 (Low priority) */
#define CPU1_BLK8_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB74u)
/** Alias (User Manual Name) for CPU1_BLK8_OTAR */
#define CPU1_OTAR8 (CPU1_BLK8_OTAR)

/** \brief FB78, CPU1 overlay mask register 8 */
#define CPU1_BLK8_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB78u)
/** Alias (User Manual Name) for CPU1_BLK8_OMASK */
#define CPU1_OMASK8 (CPU1_BLK8_OMASK)

/** \brief FB7C, CPU1 redirected address base register 9 */
#define CPU1_BLK9_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB7Cu)
/** Alias (User Manual Name) for CPU1_BLK9_RABR */
#define CPU1_RABR9 (CPU1_BLK9_RABR)

/** \brief FB80, CPU1 overlay target address register 9 (Low priority) */
#define CPU1_BLK9_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB80u)
/** Alias (User Manual Name) for CPU1_BLK9_OTAR */
#define CPU1_OTAR9 (CPU1_BLK9_OTAR)

/** \brief FB84, CPU1 overlay mask register 9 */
#define CPU1_BLK9_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB84u)
/** Alias (User Manual Name) for CPU1_BLK9_OMASK */
#define CPU1_OMASK9 (CPU1_BLK9_OMASK)

/** \brief FB88, CPU1 redirected address base register 10 */
#define CPU1_BLK10_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB88u)
/** Alias (User Manual Name) for CPU1_BLK10_RABR */
#define CPU1_RABR10 (CPU1_BLK10_RABR)

/** \brief FB8C, CPU1 overlay target address register 10 (Low priority) */
#define CPU1_BLK10_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB8Cu)
/** Alias (User Manual Name) for CPU1_BLK10_OTAR */
#define CPU1_OTAR10 (CPU1_BLK10_OTAR)

/** \brief FB90, CPU1 overlay mask register 10 */
#define CPU1_BLK10_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB90u)
/** Alias (User Manual Name) for CPU1_BLK10_OMASK */
#define CPU1_OMASK10 (CPU1_BLK10_OMASK)

/** \brief FB94, CPU1 redirected address base register 11 */
#define CPU1_BLK11_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FB94u)
/** Alias (User Manual Name) for CPU1_BLK11_RABR */
#define CPU1_RABR11 (CPU1_BLK11_RABR)

/** \brief FB98, CPU1 overlay target address register 11 (Low priority) */
#define CPU1_BLK11_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FB98u)
/** Alias (User Manual Name) for CPU1_BLK11_OTAR */
#define CPU1_OTAR11 (CPU1_BLK11_OTAR)

/** \brief FB9C, CPU1 overlay mask register 11 */
#define CPU1_BLK11_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FB9Cu)
/** Alias (User Manual Name) for CPU1_BLK11_OMASK */
#define CPU1_OMASK11 (CPU1_BLK11_OMASK)

/** \brief FBA0, CPU1 redirected address base register 12 */
#define CPU1_BLK12_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBA0u)
/** Alias (User Manual Name) for CPU1_BLK12_RABR */
#define CPU1_RABR12 (CPU1_BLK12_RABR)

/** \brief FBA4, CPU1 overlay target address register 12 (Low priority) */
#define CPU1_BLK12_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBA4u)
/** Alias (User Manual Name) for CPU1_BLK12_OTAR */
#define CPU1_OTAR12 (CPU1_BLK12_OTAR)

/** \brief FBA8, CPU1 overlay mask register 12 */
#define CPU1_BLK12_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBA8u)
/** Alias (User Manual Name) for CPU1_BLK12_OMASK */
#define CPU1_OMASK12 (CPU1_BLK12_OMASK)

/** \brief FBAC, CPU1 redirected address base register 13 */
#define CPU1_BLK13_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBACu)
/** Alias (User Manual Name) for CPU1_BLK13_RABR */
#define CPU1_RABR13 (CPU1_BLK13_RABR)

/** \brief FBB0, CPU1 overlay target address register 13 (Low priority) */
#define CPU1_BLK13_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBB0u)
/** Alias (User Manual Name) for CPU1_BLK13_OTAR */
#define CPU1_OTAR13 (CPU1_BLK13_OTAR)

/** \brief FBB4, CPU1 overlay mask register 13 */
#define CPU1_BLK13_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBB4u)
/** Alias (User Manual Name) for CPU1_BLK13_OMASK */
#define CPU1_OMASK13 (CPU1_BLK13_OMASK)

/** \brief FBB8, CPU1 redirected address base register 14 */
#define CPU1_BLK14_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBB8u)
/** Alias (User Manual Name) for CPU1_BLK14_RABR */
#define CPU1_RABR14 (CPU1_BLK14_RABR)

/** \brief FBBC, CPU1 overlay target address register 14 (Low priority) */
#define CPU1_BLK14_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBBCu)
/** Alias (User Manual Name) for CPU1_BLK14_OTAR */
#define CPU1_OTAR14 (CPU1_BLK14_OTAR)

/** \brief FBC0, CPU1 overlay mask register 14 */
#define CPU1_BLK14_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBC0u)
/** Alias (User Manual Name) for CPU1_BLK14_OMASK */
#define CPU1_OMASK14 (CPU1_BLK14_OMASK)

/** \brief FBC4, CPU1 redirected address base register 15 */
#define CPU1_BLK15_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBC4u)
/** Alias (User Manual Name) for CPU1_BLK15_RABR */
#define CPU1_RABR15 (CPU1_BLK15_RABR)

/** \brief FBC8, CPU1 overlay target address register 15 (Low priority) */
#define CPU1_BLK15_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBC8u)
/** Alias (User Manual Name) for CPU1_BLK15_OTAR */
#define CPU1_OTAR15 (CPU1_BLK15_OTAR)

/** \brief FBCC, CPU1 overlay mask register 15 */
#define CPU1_BLK15_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBCCu)
/** Alias (User Manual Name) for CPU1_BLK15_OMASK */
#define CPU1_OMASK15 (CPU1_BLK15_OMASK)

/** \brief FBD0, CPU1 redirected address base register 16 */
#define CPU1_BLK16_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBD0u)
/** Alias (User Manual Name) for CPU1_BLK16_RABR */
#define CPU1_RABR16 (CPU1_BLK16_RABR)

/** \brief FBD4, CPU1 overlay target address register 16 (Low priority) */
#define CPU1_BLK16_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBD4u)
/** Alias (User Manual Name) for CPU1_BLK16_OTAR */
#define CPU1_OTAR16 (CPU1_BLK16_OTAR)

/** \brief FBD8, CPU1 overlay mask register 16 */
#define CPU1_BLK16_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBD8u)
/** Alias (User Manual Name) for CPU1_BLK16_OMASK */
#define CPU1_OMASK16 (CPU1_BLK16_OMASK)

/** \brief FBDC, CPU1 redirected address base register 17 */
#define CPU1_BLK17_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBDCu)
/** Alias (User Manual Name) for CPU1_BLK17_RABR */
#define CPU1_RABR17 (CPU1_BLK17_RABR)

/** \brief FBE0, CPU1 overlay target address register 17 (Low priority) */
#define CPU1_BLK17_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBE0u)
/** Alias (User Manual Name) for CPU1_BLK17_OTAR */
#define CPU1_OTAR17 (CPU1_BLK17_OTAR)

/** \brief FBE4, CPU1 overlay mask register 17 */
#define CPU1_BLK17_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBE4u)
/** Alias (User Manual Name) for CPU1_BLK17_OMASK */
#define CPU1_OMASK17 (CPU1_BLK17_OMASK)

/** \brief FBE8, CPU1 redirected address base register 18 */
#define CPU1_BLK18_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBE8u)
/** Alias (User Manual Name) for CPU1_BLK18_RABR */
#define CPU1_RABR18 (CPU1_BLK18_RABR)

/** \brief FBEC, CPU1 overlay target address register 18 (Low priority) */
#define CPU1_BLK18_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBECu)
/** Alias (User Manual Name) for CPU1_BLK18_OTAR */
#define CPU1_OTAR18 (CPU1_BLK18_OTAR)

/** \brief FBF0, CPU1 overlay mask register 18 */
#define CPU1_BLK18_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBF0u)
/** Alias (User Manual Name) for CPU1_BLK18_OMASK */
#define CPU1_OMASK18 (CPU1_BLK18_OMASK)

/** \brief FBF4, CPU1 redirected address base register 19 */
#define CPU1_BLK19_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FBF4u)
/** Alias (User Manual Name) for CPU1_BLK19_RABR */
#define CPU1_RABR19 (CPU1_BLK19_RABR)

/** \brief FBF8, CPU1 overlay target address register 19 (Low priority) */
#define CPU1_BLK19_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FBF8u)
/** Alias (User Manual Name) for CPU1_BLK19_OTAR */
#define CPU1_OTAR19 (CPU1_BLK19_OTAR)

/** \brief FBFC, CPU1 overlay mask register 19 */
#define CPU1_BLK19_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FBFCu)
/** Alias (User Manual Name) for CPU1_BLK19_OMASK */
#define CPU1_OMASK19 (CPU1_BLK19_OMASK)

/** \brief FC00, CPU1 redirected address base register 20 */
#define CPU1_BLK20_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC00u)
/** Alias (User Manual Name) for CPU1_BLK20_RABR */
#define CPU1_RABR20 (CPU1_BLK20_RABR)

/** \brief FC04, CPU1 overlay target address register 20 (Low priority) */
#define CPU1_BLK20_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC04u)
/** Alias (User Manual Name) for CPU1_BLK20_OTAR */
#define CPU1_OTAR20 (CPU1_BLK20_OTAR)

/** \brief FC08, CPU1 overlay mask register 20 */
#define CPU1_BLK20_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC08u)
/** Alias (User Manual Name) for CPU1_BLK20_OMASK */
#define CPU1_OMASK20 (CPU1_BLK20_OMASK)

/** \brief FC0C, CPU1 redirected address base register 21 */
#define CPU1_BLK21_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC0Cu)
/** Alias (User Manual Name) for CPU1_BLK21_RABR */
#define CPU1_RABR21 (CPU1_BLK21_RABR)

/** \brief FC10, CPU1 overlay target address register 21 (Low priority) */
#define CPU1_BLK21_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC10u)
/** Alias (User Manual Name) for CPU1_BLK21_OTAR */
#define CPU1_OTAR21 (CPU1_BLK21_OTAR)

/** \brief FC14, CPU1 overlay mask register 21 */
#define CPU1_BLK21_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC14u)
/** Alias (User Manual Name) for CPU1_BLK21_OMASK */
#define CPU1_OMASK21 (CPU1_BLK21_OMASK)

/** \brief FC18, CPU1 redirected address base register 22 */
#define CPU1_BLK22_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC18u)
/** Alias (User Manual Name) for CPU1_BLK22_RABR */
#define CPU1_RABR22 (CPU1_BLK22_RABR)

/** \brief FC1C, CPU1 overlay target address register 22 (Low priority) */
#define CPU1_BLK22_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC1Cu)
/** Alias (User Manual Name) for CPU1_BLK22_OTAR */
#define CPU1_OTAR22 (CPU1_BLK22_OTAR)

/** \brief FC20, CPU1 overlay mask register 22 */
#define CPU1_BLK22_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC20u)
/** Alias (User Manual Name) for CPU1_BLK22_OMASK */
#define CPU1_OMASK22 (CPU1_BLK22_OMASK)

/** \brief FC24, CPU1 redirected address base register 23 */
#define CPU1_BLK23_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC24u)
/** Alias (User Manual Name) for CPU1_BLK23_RABR */
#define CPU1_RABR23 (CPU1_BLK23_RABR)

/** \brief FC28, CPU1 overlay target address register 23 (Low priority) */
#define CPU1_BLK23_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC28u)
/** Alias (User Manual Name) for CPU1_BLK23_OTAR */
#define CPU1_OTAR23 (CPU1_BLK23_OTAR)

/** \brief FC2C, CPU1 overlay mask register 23 */
#define CPU1_BLK23_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC2Cu)
/** Alias (User Manual Name) for CPU1_BLK23_OMASK */
#define CPU1_OMASK23 (CPU1_BLK23_OMASK)

/** \brief FC30, CPU1 redirected address base register 24 */
#define CPU1_BLK24_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC30u)
/** Alias (User Manual Name) for CPU1_BLK24_RABR */
#define CPU1_RABR24 (CPU1_BLK24_RABR)

/** \brief FC34, CPU1 overlay target address register 24 (Low priority) */
#define CPU1_BLK24_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC34u)
/** Alias (User Manual Name) for CPU1_BLK24_OTAR */
#define CPU1_OTAR24 (CPU1_BLK24_OTAR)

/** \brief FC38, CPU1 overlay mask register 24 */
#define CPU1_BLK24_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC38u)
/** Alias (User Manual Name) for CPU1_BLK24_OMASK */
#define CPU1_OMASK24 (CPU1_BLK24_OMASK)

/** \brief FC3C, CPU1 redirected address base register 25 */
#define CPU1_BLK25_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC3Cu)
/** Alias (User Manual Name) for CPU1_BLK25_RABR */
#define CPU1_RABR25 (CPU1_BLK25_RABR)

/** \brief FC40, CPU1 overlay target address register 25 (Low priority) */
#define CPU1_BLK25_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC40u)
/** Alias (User Manual Name) for CPU1_BLK25_OTAR */
#define CPU1_OTAR25 (CPU1_BLK25_OTAR)

/** \brief FC44, CPU1 overlay mask register 25 */
#define CPU1_BLK25_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC44u)
/** Alias (User Manual Name) for CPU1_BLK25_OMASK */
#define CPU1_OMASK25 (CPU1_BLK25_OMASK)

/** \brief FC48, CPU1 redirected address base register 26 */
#define CPU1_BLK26_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC48u)
/** Alias (User Manual Name) for CPU1_BLK26_RABR */
#define CPU1_RABR26 (CPU1_BLK26_RABR)

/** \brief FC4C, CPU1 overlay target address register 26 (Low priority) */
#define CPU1_BLK26_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC4Cu)
/** Alias (User Manual Name) for CPU1_BLK26_OTAR */
#define CPU1_OTAR26 (CPU1_BLK26_OTAR)

/** \brief FC50, CPU1 overlay mask register 26 */
#define CPU1_BLK26_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC50u)
/** Alias (User Manual Name) for CPU1_BLK26_OMASK */
#define CPU1_OMASK26 (CPU1_BLK26_OMASK)

/** \brief FC54, CPU1 redirected address base register 27 */
#define CPU1_BLK27_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC54u)
/** Alias (User Manual Name) for CPU1_BLK27_RABR */
#define CPU1_RABR27 (CPU1_BLK27_RABR)

/** \brief FC58, CPU1 overlay target address register 27 (Low priority) */
#define CPU1_BLK27_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC58u)
/** Alias (User Manual Name) for CPU1_BLK27_OTAR */
#define CPU1_OTAR27 (CPU1_BLK27_OTAR)

/** \brief FC5C, CPU1 overlay mask register 27 */
#define CPU1_BLK27_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC5Cu)
/** Alias (User Manual Name) for CPU1_BLK27_OMASK */
#define CPU1_OMASK27 (CPU1_BLK27_OMASK)

/** \brief FC60, CPU1 redirected address base register 28 */
#define CPU1_BLK28_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC60u)
/** Alias (User Manual Name) for CPU1_BLK28_RABR */
#define CPU1_RABR28 (CPU1_BLK28_RABR)

/** \brief FC64, CPU1 overlay target address register 28 (Low priority) */
#define CPU1_BLK28_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC64u)
/** Alias (User Manual Name) for CPU1_BLK28_OTAR */
#define CPU1_OTAR28 (CPU1_BLK28_OTAR)

/** \brief FC68, CPU1 overlay mask register 28 */
#define CPU1_BLK28_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC68u)
/** Alias (User Manual Name) for CPU1_BLK28_OMASK */
#define CPU1_OMASK28 (CPU1_BLK28_OMASK)

/** \brief FC6C, CPU1 redirected address base register 29 */
#define CPU1_BLK29_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC6Cu)
/** Alias (User Manual Name) for CPU1_BLK29_RABR */
#define CPU1_RABR29 (CPU1_BLK29_RABR)

/** \brief FC70, CPU1 overlay target address register 29 (Low priority) */
#define CPU1_BLK29_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC70u)
/** Alias (User Manual Name) for CPU1_BLK29_OTAR */
#define CPU1_OTAR29 (CPU1_BLK29_OTAR)

/** \brief FC74, CPU1 overlay mask register 29 */
#define CPU1_BLK29_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC74u)
/** Alias (User Manual Name) for CPU1_BLK29_OMASK */
#define CPU1_OMASK29 (CPU1_BLK29_OMASK)

/** \brief FC78, CPU1 redirected address base register 30 */
#define CPU1_BLK30_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC78u)
/** Alias (User Manual Name) for CPU1_BLK30_RABR */
#define CPU1_RABR30 (CPU1_BLK30_RABR)

/** \brief FC7C, CPU1 overlay target address register 30 (Low priority) */
#define CPU1_BLK30_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC7Cu)
/** Alias (User Manual Name) for CPU1_BLK30_OTAR */
#define CPU1_OTAR30 (CPU1_BLK30_OTAR)

/** \brief FC80, CPU1 overlay mask register 30 */
#define CPU1_BLK30_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC80u)
/** Alias (User Manual Name) for CPU1_BLK30_OMASK */
#define CPU1_OMASK30 (CPU1_BLK30_OMASK)

/** \brief FC84, CPU1 redirected address base register 31 */
#define CPU1_BLK31_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF884FC84u)
/** Alias (User Manual Name) for CPU1_BLK31_RABR */
#define CPU1_RABR31 (CPU1_BLK31_RABR)

/** \brief FC88, CPU1 overlay target address register 31 (Low priority) */
#define CPU1_BLK31_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF884FC88u)
/** Alias (User Manual Name) for CPU1_BLK31_OTAR */
#define CPU1_OTAR31 (CPU1_BLK31_OTAR)

/** \brief FC8C, CPU1 overlay mask register 31 */
#define CPU1_BLK31_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF884FC8Cu)
/** Alias (User Manual Name) for CPU1_BLK31_OMASK */
#define CPU1_OMASK31 (CPU1_BLK31_OMASK)

/** \brief 1030, CPU1 SRI error generation register */
#define CPU1_HRA_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8851030u)

/** \brief 1040, CPU1 lockstep test register */
#define CPU1_HRA_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8851040u)

/** \brief 8100, CPU1 data access cacheability register */
#define CPU1_HRA_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8858100u)

/** \brief 8104, CPU1 code access cacheability register */
#define CPU1_HRA_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8858104u)

/** \brief 8108, CPU1 peripheral space identifier register */
#define CPU1_HRA_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8858108u)

/** \brief 9000, CPU1 data control register 2 */
#define CPU1_HRA_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8859000u)

/** \brief 9008, CPU1 data control register 1 */
#define CPU1_HRA_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8859008u)

/** \brief 900C, CPU1 SIST mode access control register */
#define CPU1_HRA_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF885900Cu)

/** \brief 9010, CPU1 HR specific data synchronous trap register */
#define CPU1_HRA_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8859010u)

/** \brief 9018, CPU1 HR specific data asynchronous trap register */
#define CPU1_HRA_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8859018u)

/** \brief 901C, CPU1 HR specific data error address register */
#define CPU1_HRA_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF885901Cu)

/** \brief 9020, CPU1 data integrity error address register */
#define CPU1_HRA_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8859020u)

/** \brief 9024, CPU1 data integrity error trap register */
#define CPU1_HRA_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8859024u)

/** \brief 9040, CPU1 data memory control register */
#define CPU1_HRA_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8859040u)

/** \brief 9200, CPU1 HR specific program synchronous trap register */
#define CPU1_HRA_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8859200u)

/** \brief 9204, CPU1 program control 1 */
#define CPU1_HRA_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8859204u)

/** \brief 9208, CPU1 program control 2 */
#define CPU1_HRA_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8859208u)

/** \brief 920C, CPU1 program control 0 */
#define CPU1_HRA_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF885920Cu)

/** \brief 9210, CPU1 HR specific program integrity error address register */
#define CPU1_HRA_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8859210u)

/** \brief 9214, CPU1 HR specific program integrity error trap register */
#define CPU1_HRA_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8859214u)

/** \brief 9400, CPU1 compatibility control register */
#define CPU1_HRA_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8859400u)

/** \brief A000, CPU1 HR specific trap control register */
#define CPU1_HRA_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF885A000u)

/** \brief A004, CPU1 HR specific trapping instruction program counter register */
#define CPU1_HRA_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF885A004u)

/** \brief A008, CPU1 HR specific trapping instruction opcode register */
#define CPU1_HRA_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF885A008u)

/** \brief A010, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRA_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF885A010u)

/** \brief A014, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRA_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF885A014u)

/** \brief A018, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRA_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF885A018u)

/** \brief A01C, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRA_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF885A01Cu)

/** \brief A020, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRA_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF885A020u)

/** \brief A024, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRA_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF885A024u)

/** \brief A030, CPU1 HR specific synchronous trap control register */
#define CPU1_HRA_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF885A030u)

/** \brief A034, CPU1 HR specific trapping instruction opcode register */
#define CPU1_HRA_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF885A034u)

/** \brief C000, CPU1 HR specific data protection range 0, lower bound register */
#define CPU1_HRA_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C000u)

/** \brief C004, CPU1 HR specific data protection range 0, upper bound register */
#define CPU1_HRA_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C004u)

/** \brief C008, CPU1 HR specific data protection range 1, lower bound register */
#define CPU1_HRA_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C008u)

/** \brief C00C, CPU1 HR specific data protection range 1, upper bound register */
#define CPU1_HRA_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C00Cu)

/** \brief C010, CPU1 HR specific data protection range 2, lower bound register */
#define CPU1_HRA_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C010u)

/** \brief C014, CPU1 HR specific data protection range 2, upper bound register */
#define CPU1_HRA_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C014u)

/** \brief C018, CPU1 HR specific data protection range 3, lower bound register */
#define CPU1_HRA_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C018u)

/** \brief C01C, CPU1 HR specific data protection range 3, upper bound register */
#define CPU1_HRA_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C01Cu)

/** \brief C020, CPU1 HR specific data protection range 4, lower bound register */
#define CPU1_HRA_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C020u)

/** \brief C024, CPU1 HR specific data protection range 4, upper bound register */
#define CPU1_HRA_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C024u)

/** \brief C028, CPU1 HR specific data protection range 5, lower bound register */
#define CPU1_HRA_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C028u)

/** \brief C02C, CPU1 HR specific data protection range 5, upper bound register */
#define CPU1_HRA_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C02Cu)

/** \brief C030, CPU1 HR specific data protection range 6, lower bound register */
#define CPU1_HRA_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C030u)

/** \brief C034, CPU1 HR specific data protection range 6, upper bound register */
#define CPU1_HRA_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C034u)

/** \brief C038, CPU1 HR specific data protection range 7, lower bound register */
#define CPU1_HRA_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C038u)

/** \brief C03C, CPU1 HR specific data protection range 7, upper bound register */
#define CPU1_HRA_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C03Cu)

/** \brief C040, CPU1 HR specific data protection range 8, lower bound register */
#define CPU1_HRA_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C040u)

/** \brief C044, CPU1 HR specific data protection range 8, upper bound register */
#define CPU1_HRA_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C044u)

/** \brief C048, CPU1 HR specific data protection range 9, lower bound register */
#define CPU1_HRA_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C048u)

/** \brief C04C, CPU1 HR specific data protection range 9, upper bound register */
#define CPU1_HRA_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C04Cu)

/** \brief C050, CPU1 HR specific data protection range 10, lower bound register */
#define CPU1_HRA_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C050u)

/** \brief C054, CPU1 HR specific data protection range 10, upper bound register */
#define CPU1_HRA_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C054u)

/** \brief C058, CPU1 HR specific data protection range 11, lower bound register */
#define CPU1_HRA_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C058u)

/** \brief C05C, CPU1 HR specific data protection range 11, upper bound register */
#define CPU1_HRA_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C05Cu)

/** \brief C060, CPU1 HR specific data protection range 12, lower bound register */
#define CPU1_HRA_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C060u)

/** \brief C064, CPU1 HR specific data protection range 12, upper bound register */
#define CPU1_HRA_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C064u)

/** \brief C068, CPU1 HR specific data protection range 13, lower bound register */
#define CPU1_HRA_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C068u)

/** \brief C06C, CPU1 HR specific data protection range 13, upper bound register */
#define CPU1_HRA_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C06Cu)

/** \brief C070, CPU1 HR specific data protection range 14, lower bound register */
#define CPU1_HRA_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C070u)

/** \brief C074, CPU1 HR specific data protection range 14, upper bound register */
#define CPU1_HRA_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C074u)

/** \brief C078, CPU1 HR specific data protection range 15, lower bound register */
#define CPU1_HRA_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C078u)

/** \brief C07C, CPU1 HR specific data protection range 15, upper bound register */
#define CPU1_HRA_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C07Cu)

/** \brief C080, CPU1 HR specific data protection range 16, lower bound register */
#define CPU1_HRA_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C080u)

/** \brief C084, CPU1 HR specific data protection range 16, upper bound register */
#define CPU1_HRA_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C084u)

/** \brief C088, CPU1 HR specific data protection range 17, lower bound register */
#define CPU1_HRA_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C088u)

/** \brief C08C, CPU1 HR specific data protection range 17, upper bound register */
#define CPU1_HRA_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C08Cu)

/** \brief C090, CPU1 HR specific data protection range 18, lower bound register */
#define CPU1_HRA_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C090u)

/** \brief C094, CPU1 HR specific data protection range 18, upper bound register */
#define CPU1_HRA_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C094u)

/** \brief C098, CPU1 HR specific data protection range 19, lower bound register */
#define CPU1_HRA_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C098u)

/** \brief C09C, CPU1 HR specific data protection range 19, upper bound register */
#define CPU1_HRA_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C09Cu)

/** \brief C0A0, CPU1 HR specific data protection range 20, lower bound register */
#define CPU1_HRA_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C0A0u)

/** \brief C0A4, CPU1 HR specific data protection range 20, upper bound register */
#define CPU1_HRA_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C0A4u)

/** \brief C0A8, CPU1 HR specific data protection range 21, lower bound register */
#define CPU1_HRA_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C0A8u)

/** \brief C0AC, CPU1 HR specific data protection range 21, upper bound register */
#define CPU1_HRA_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C0ACu)

/** \brief C0B0, CPU1 HR specific data protection range 22, lower bound register */
#define CPU1_HRA_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C0B0u)

/** \brief C0B4, CPU1 HR specific data protection range 22, upper bound register */
#define CPU1_HRA_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C0B4u)

/** \brief C0B8, CPU1 HR specific data protection range 23, lower bound register */
#define CPU1_HRA_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF885C0B8u)

/** \brief C0BC, CPU1 HR specific data protection range 23, upper bound register */
#define CPU1_HRA_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF885C0BCu)

/** \brief D000, CPU1 HR specific code protection range 0, lower bound register */
#define CPU1_HRA_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D000u)

/** \brief D004, CPU1 HR specific code protection range 0, upper bound register */
#define CPU1_HRA_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D004u)

/** \brief D008, CPU1 HR specific code protection range 1, lower bound register */
#define CPU1_HRA_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D008u)

/** \brief D00C, CPU1 HR specific code protection range 1, upper bound register */
#define CPU1_HRA_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D00Cu)

/** \brief D010, CPU1 HR specific code protection range 2, lower bound register */
#define CPU1_HRA_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D010u)

/** \brief D014, CPU1 HR specific code protection range 2, upper bound register */
#define CPU1_HRA_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D014u)

/** \brief D018, CPU1 HR specific code protection range 3, lower bound register */
#define CPU1_HRA_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D018u)

/** \brief D01C, CPU1 HR specific code protection range 3, upper bound register */
#define CPU1_HRA_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D01Cu)

/** \brief D020, CPU1 HR specific code protection range 4, lower bound register */
#define CPU1_HRA_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D020u)

/** \brief D024, CPU1 HR specific code protection range 4, upper bound register */
#define CPU1_HRA_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D024u)

/** \brief D028, CPU1 HR specific code protection range 5, lower bound register */
#define CPU1_HRA_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D028u)

/** \brief D02C, CPU1 HR specific code protection range 5, upper bound register */
#define CPU1_HRA_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D02Cu)

/** \brief D030, CPU1 HR specific code protection range 6, lower bound register */
#define CPU1_HRA_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D030u)

/** \brief D034, CPU1 HR specific code protection range 6, upper bound register */
#define CPU1_HRA_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D034u)

/** \brief D038, CPU1 HR specific code protection range 7, lower bound register */
#define CPU1_HRA_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D038u)

/** \brief D03C, CPU1 HR specific code protection range 7, upper bound register */
#define CPU1_HRA_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D03Cu)

/** \brief D040, CPU1 HR specific code protection range 8, lower bound register */
#define CPU1_HRA_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D040u)

/** \brief D044, CPU1 HR specific code protection range 8, upper bound register */
#define CPU1_HRA_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D044u)

/** \brief D048, CPU1 HR specific code protection range 9, lower bound register */
#define CPU1_HRA_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D048u)

/** \brief D04C, CPU1 HR specific code protection range 9, upper bound register */
#define CPU1_HRA_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D04Cu)

/** \brief D050, CPU1 HR specific code protection range 10, lower bound register */
#define CPU1_HRA_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D050u)

/** \brief D054, CPU1 HR specific code protection range 10, upper bound register */
#define CPU1_HRA_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D054u)

/** \brief D058, CPU1 HR specific code protection range 11, lower bound register */
#define CPU1_HRA_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D058u)

/** \brief D05C, CPU1 HR specific code protection range 11, upper bound register */
#define CPU1_HRA_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D05Cu)

/** \brief D060, CPU1 HR specific code protection range 12, lower bound register */
#define CPU1_HRA_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D060u)

/** \brief D064, CPU1 HR specific code protection range 12, upper bound register */
#define CPU1_HRA_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D064u)

/** \brief D068, CPU1 HR specific code protection range 13, lower bound register */
#define CPU1_HRA_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D068u)

/** \brief D06C, CPU1 HR specific code protection range 13, upper bound register */
#define CPU1_HRA_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D06Cu)

/** \brief D070, CPU1 HR specific code protection range 14, lower bound register */
#define CPU1_HRA_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D070u)

/** \brief D074, CPU1 HR specific code protection range 14, upper bound register */
#define CPU1_HRA_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D074u)

/** \brief D078, CPU1 HR specific code protection range 15, lower bound register */
#define CPU1_HRA_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF885D078u)

/** \brief D07C, CPU1 HR specific code protection range 15, upper bound register */
#define CPU1_HRA_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF885D07Cu)

/** \brief E000, CPU1 HR specific code protection execute enable register set 0 */
#define CPU1_HRA_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E000u)

/** \brief E004, CPU1 HR specific code protection execute enable register set 1 */
#define CPU1_HRA_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E004u)

/** \brief E008, CPU1 HR specific code protection execute enable register set 2 */
#define CPU1_HRA_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E008u)

/** \brief E00C, CPU1 HR specific code protection execute enable register set 3 */
#define CPU1_HRA_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E00Cu)

/** \brief E010, CPU1 HR specific data protection read enable register set 0 */
#define CPU1_HRA_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E010u)

/** \brief E014, CPU1 HR specific data protection read enable register set 1 */
#define CPU1_HRA_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E014u)

/** \brief E018, CPU1 HR specific data protection read enable register set 2 */
#define CPU1_HRA_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E018u)

/** \brief E01C, CPU1 HR specific data protection read enable register set 3 */
#define CPU1_HRA_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E01Cu)

/** \brief E020, CPU1 HR specific data protection write enable register set 0 */
#define CPU1_HRA_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E020u)

/** \brief E024, CPU1 HR specific data protection write enable register set 1 */
#define CPU1_HRA_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E024u)

/** \brief E028, CPU1 HR specific data protection write enable register set 2 */
#define CPU1_HRA_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E028u)

/** \brief E02C, CPU1 HR specific data protection write enable register set 3 */
#define CPU1_HRA_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E02Cu)

/** \brief E040, CPU1 HR specific code protection execute enable register set 4 */
#define CPU1_HRA_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E040u)

/** \brief E044, CPU1 HR specific code protection execute enable register set 5 */
#define CPU1_HRA_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E044u)

/** \brief E048, CPU1 HR specific code protection execute enable register set 6 */
#define CPU1_HRA_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E048u)

/** \brief E04C, CPU1 HR specific code protection execute enable register set 7 */
#define CPU1_HRA_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF885E04Cu)

/** \brief E050, CPU1 HR specific data protection read enable register set 4 */
#define CPU1_HRA_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E050u)

/** \brief E054, CPU1 HR specific data protection read enable register set 5 */
#define CPU1_HRA_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E054u)

/** \brief E058, CPU1 HR specific data protection read enable register set 6 */
#define CPU1_HRA_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E058u)

/** \brief E05C, CPU1 HR specific data protection read enable register set 7 */
#define CPU1_HRA_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF885E05Cu)

/** \brief E060, CPU1 HR specific data protection write enable register set 4 */
#define CPU1_HRA_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E060u)

/** \brief E064, CPU1 HR specific data protection write enable register set 5 */
#define CPU1_HRA_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E064u)

/** \brief E068, CPU1 HR specific data protection write enable register set 6 */
#define CPU1_HRA_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E068u)

/** \brief E06C, CPU1 HR specific data protection write enable register set 7 */
#define CPU1_HRA_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF885E06Cu)

/** \brief E400, CPU1 HR specific temporal protection system control register */
#define CPU1_HRA_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF885E400u)

/** \brief E404, CPU1 HR specific temporal protection system timer register 0 */
#define CPU1_HRA_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E404u)

/** \brief E408, CPU1 HR specific temporal protection system timer register 1 */
#define CPU1_HRA_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E408u)

/** \brief E40C, CPU1 HR specific temporal protection system timer register 2 */
#define CPU1_HRA_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E40Cu)

/** \brief F000, CPU1 trigger event 0 */
#define CPU1_HRA_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F000u)
/** Alias (User Manual Name) for CPU1_HRA_TR0_EVT */
#define CPU1_HRA_TR0EVT (CPU1_HRA_TR0_EVT)

/** \brief F004, CPU1 trigger address 0 */
#define CPU1_HRA_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F004u)
/** Alias (User Manual Name) for CPU1_HRA_TR0_ADR */
#define CPU1_HRA_TR0ADR (CPU1_HRA_TR0_ADR)

/** \brief F008, CPU1 trigger event 1 */
#define CPU1_HRA_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F008u)
/** Alias (User Manual Name) for CPU1_HRA_TR1_EVT */
#define CPU1_HRA_TR1EVT (CPU1_HRA_TR1_EVT)

/** \brief F00C, CPU1 trigger address 1 */
#define CPU1_HRA_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F00Cu)
/** Alias (User Manual Name) for CPU1_HRA_TR1_ADR */
#define CPU1_HRA_TR1ADR (CPU1_HRA_TR1_ADR)

/** \brief F010, CPU1 trigger event 2 */
#define CPU1_HRA_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F010u)
/** Alias (User Manual Name) for CPU1_HRA_TR2_EVT */
#define CPU1_HRA_TR2EVT (CPU1_HRA_TR2_EVT)

/** \brief F014, CPU1 trigger address 2 */
#define CPU1_HRA_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F014u)
/** Alias (User Manual Name) for CPU1_HRA_TR2_ADR */
#define CPU1_HRA_TR2ADR (CPU1_HRA_TR2_ADR)

/** \brief F018, CPU1 trigger event 3 */
#define CPU1_HRA_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F018u)
/** Alias (User Manual Name) for CPU1_HRA_TR3_EVT */
#define CPU1_HRA_TR3EVT (CPU1_HRA_TR3_EVT)

/** \brief F01C, CPU1 trigger address 3 */
#define CPU1_HRA_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F01Cu)
/** Alias (User Manual Name) for CPU1_HRA_TR3_ADR */
#define CPU1_HRA_TR3ADR (CPU1_HRA_TR3_ADR)

/** \brief F020, CPU1 trigger event 4 */
#define CPU1_HRA_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F020u)
/** Alias (User Manual Name) for CPU1_HRA_TR4_EVT */
#define CPU1_HRA_TR4EVT (CPU1_HRA_TR4_EVT)

/** \brief F024, CPU1 trigger address 4 */
#define CPU1_HRA_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F024u)
/** Alias (User Manual Name) for CPU1_HRA_TR4_ADR */
#define CPU1_HRA_TR4ADR (CPU1_HRA_TR4_ADR)

/** \brief F028, CPU1 trigger event 5 */
#define CPU1_HRA_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F028u)
/** Alias (User Manual Name) for CPU1_HRA_TR5_EVT */
#define CPU1_HRA_TR5EVT (CPU1_HRA_TR5_EVT)

/** \brief F02C, CPU1 trigger address 5 */
#define CPU1_HRA_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F02Cu)
/** Alias (User Manual Name) for CPU1_HRA_TR5_ADR */
#define CPU1_HRA_TR5ADR (CPU1_HRA_TR5_ADR)

/** \brief F030, CPU1 trigger event 6 */
#define CPU1_HRA_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F030u)
/** Alias (User Manual Name) for CPU1_HRA_TR6_EVT */
#define CPU1_HRA_TR6EVT (CPU1_HRA_TR6_EVT)

/** \brief F034, CPU1 trigger address 6 */
#define CPU1_HRA_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F034u)
/** Alias (User Manual Name) for CPU1_HRA_TR6_ADR */
#define CPU1_HRA_TR6ADR (CPU1_HRA_TR6_ADR)

/** \brief F038, CPU1 trigger event 7 */
#define CPU1_HRA_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF885F038u)
/** Alias (User Manual Name) for CPU1_HRA_TR7_EVT */
#define CPU1_HRA_TR7EVT (CPU1_HRA_TR7_EVT)

/** \brief F03C, CPU1 trigger address 7 */
#define CPU1_HRA_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF885F03Cu)
/** Alias (User Manual Name) for CPU1_HRA_TR7_ADR */
#define CPU1_HRA_TR7ADR (CPU1_HRA_TR7_ADR)

/** \brief FC00, CPU1 HR specific counter control */
#define CPU1_HRA_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF885FC00u)

/** \brief FC04, CPU1 HR specific CPU clock cycle count */
#define CPU1_HRA_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF885FC04u)

/** \brief FC08, CPU1 HR specific instruction count */
#define CPU1_HRA_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF885FC08u)

/** \brief FC0C, CPU1 HR specific multi-count register 1 */
#define CPU1_HRA_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF885FC0Cu)

/** \brief FC10, CPU1 HR specific multi-count register 2 */
#define CPU1_HRA_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF885FC10u)

/** \brief FC14, CPU1 HR specific multi-count register 3 */
#define CPU1_HRA_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF885FC14u)

/** \brief FD00, CPU1 debug status register */
#define CPU1_HRA_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF885FD00u)

/** \brief FD08, CPU1 external event register */
#define CPU1_HRA_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF885FD08u)

/** \brief FD0C, CPU1 core register access event */
#define CPU1_HRA_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF885FD0Cu)

/** \brief FD10, CPU1 software debug event */
#define CPU1_HRA_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF885FD10u)

/** \brief FD14, CPU1 debug action configuration */
#define CPU1_HRA_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF885FD14u)

/** \brief FD30, CPU1 trigger accumulator */
#define CPU1_HRA_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF885FD30u)

/** \brief FD40, CPU1 debug monitor start address */
#define CPU1_HRA_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF885FD40u)

/** \brief FD44, CPU1 debug context save area pointer */
#define CPU1_HRA_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF885FD44u)

/** \brief FD48, CPU1 debug trap control */
#define CPU1_HRA_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF885FD48u)

/** \brief FD4C, CPU1 debug configuration */
#define CPU1_HRA_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF885FD4Cu)

/** \brief FD50, CPU1 trace configuration */
#define CPU1_HRA_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF885FD50u)

/** \brief FD54, CPU1 trace filter */
#define CPU1_HRA_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF885FD54u)

/** \brief FD58, CPU1 trace bandwidth limiter */
#define CPU1_HRA_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF885FD58u)

/** \brief FD60, CPU1 MCDS performance counter control register */
#define CPU1_HRA_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF885FD60u)

/** \brief FE00, CPU1 previous context information register */
#define CPU1_HRA_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF885FE00u)

/** \brief FE04, CPU1 HR specific program status word */
#define CPU1_HRA_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF885FE04u)

/** \brief FE08, CPU1 program counter */
#define CPU1_HRA_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF885FE08u)

/** \brief FE14, CPU1 HR specific core configuration register */
#define CPU1_HRA_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF885FE14u)

/** \brief FE18, CPU1 identification register */
#define CPU1_HRA_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF885FE18u)

/** \brief FE1C, CPU1 core identification register */
#define CPU1_HRA_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF885FE1Cu)

/** \brief FE20, CPU1 HR specific base interrupt vector table pointer */
#define CPU1_HRA_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF885FE20u)

/** \brief FE24, CPU1 HR specific base trap vector table pointer */
#define CPU1_HRA_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF885FE24u)

/** \brief FE28, CPU1 HR specific interrupt stack pointer */
#define CPU1_HRA_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF885FE28u)

/** \brief FE2C, CPU1 interrupt control register */
#define CPU1_HRA_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF885FE2Cu)

/** \brief FE34, CPU1 previous PRS */
#define CPU1_HRA_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF885FE34u)

/** \brief FE38, CPU1 HR specific free CSA list head pointer */
#define CPU1_HRA_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF885FE38u)

/** \brief FE3C, CPU1 HR specific free CSA list limit pointer */
#define CPU1_HRA_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF885FE3Cu)

/** \brief FE40, CPU1 software identification */
#define CPU1_HRA_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF885FE40u)

/** \brief FE50, CPU1 customer ID register */
#define CPU1_HRA_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF885FE50u)

/** \brief FE60, CPU1 core boot configuration register */
#define CPU1_HRA_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF885FE60u)

/** \brief FE64, CPU1 lockstep control register */
#define CPU1_HRA_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF885FE64u)

/** \brief FE68, CPU1 clock control register */
#define CPU1_HRA_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF885FE68u)

/** \brief FE6C, CPU1 hardware configuration  */
#define CPU1_HRA_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF885FE6Cu)

/** \brief FF00, CPU1 data general purpose register 0 */
#define CPU1_D0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF00u)

/** \brief FF04, CPU1 data general purpose register 1 */
#define CPU1_D1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF04u)

/** \brief FF08, CPU1 data general purpose register 2 */
#define CPU1_D2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF08u)

/** \brief FF0C, CPU1 data general purpose register 3 */
#define CPU1_D3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF0Cu)

/** \brief FF10, CPU1 data general purpose register 4 */
#define CPU1_D4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF10u)

/** \brief FF14, CPU1 data general purpose register 5 */
#define CPU1_D5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF14u)

/** \brief FF18, CPU1 data general purpose register 6 */
#define CPU1_D6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF18u)

/** \brief FF1C, CPU1 data general purpose register 7 */
#define CPU1_D7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF1Cu)

/** \brief FF20, CPU1 data general purpose register 8 */
#define CPU1_D8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF20u)

/** \brief FF24, CPU1 data general purpose register 9 */
#define CPU1_D9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF24u)

/** \brief FF28, CPU1 data general purpose register 10 */
#define CPU1_D10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF28u)

/** \brief FF2C, CPU1 data general purpose register 11 */
#define CPU1_D11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF2Cu)

/** \brief FF30, CPU1 data general purpose register 12 */
#define CPU1_D12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF30u)

/** \brief FF34, CPU1 data general purpose register 13 */
#define CPU1_D13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF34u)

/** \brief FF38, CPU1 data general purpose register 14 */
#define CPU1_D14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF38u)

/** \brief FF3C, CPU1 data general purpose register 15 */
#define CPU1_D15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF885FF3Cu)

/** \brief FF80, CPU1 address general purpose register 0 */
#define CPU1_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF80u)

/** \brief FF84, CPU1 address general purpose register 1 */
#define CPU1_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF84u)

/** \brief FF88, CPU1 address general purpose register 2 */
#define CPU1_A2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF88u)

/** \brief FF8C, CPU1 address general purpose register 3 */
#define CPU1_A3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF8Cu)

/** \brief FF90, CPU1 address general purpose register 4 */
#define CPU1_A4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF90u)

/** \brief FF94, CPU1 address general purpose register 5 */
#define CPU1_A5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF94u)

/** \brief FF98, CPU1 address general purpose register 6 */
#define CPU1_A6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF98u)

/** \brief FF9C, CPU1 address general purpose register 7 */
#define CPU1_A7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FF9Cu)

/** \brief FFA0, CPU1 address general purpose register 8 */
#define CPU1_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFA0u)

/** \brief FFA4, CPU1 address general purpose register 9 */
#define CPU1_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFA4u)

/** \brief FFA8, CPU1 address general purpose register 10 */
#define CPU1_A10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFA8u)

/** \brief FFAC, CPU1 address general purpose register 11 */
#define CPU1_A11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFACu)

/** \brief FFB0, CPU1 address general purpose register 12 */
#define CPU1_A12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFB0u)

/** \brief FFB4, CPU1 address general purpose register 13 */
#define CPU1_A13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFB4u)

/** \brief FFB8, CPU1 address general purpose register 14 */
#define CPU1_A14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFB8u)

/** \brief FFBC, CPU1 address general purpose register 15 */
#define CPU1_A15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF885FFBCu)

/** \brief 1030, CPU1 SRI error generation register */
#define CPU1_HRB_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8861030u)

/** \brief 1040, CPU1 lockstep test register */
#define CPU1_HRB_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8861040u)

/** \brief 8100, CPU1 data access cacheability register */
#define CPU1_HRB_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8868100u)

/** \brief 8104, CPU1 code access cacheability register */
#define CPU1_HRB_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8868104u)

/** \brief 8108, CPU1 peripheral space identifier register */
#define CPU1_HRB_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8868108u)

/** \brief 9000, CPU1 data control register 2 */
#define CPU1_HRB_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8869000u)

/** \brief 9008, CPU1 data control register 1 */
#define CPU1_HRB_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8869008u)

/** \brief 900C, CPU1 SIST mode access control register */
#define CPU1_HRB_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF886900Cu)

/** \brief 9010, CPU1 HR specific data synchronous trap register */
#define CPU1_HRB_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8869010u)

/** \brief 9018, CPU1 HR specific data asynchronous trap register */
#define CPU1_HRB_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8869018u)

/** \brief 901C, CPU1 HR specific data error address register */
#define CPU1_HRB_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF886901Cu)

/** \brief 9020, CPU1 data integrity error address register */
#define CPU1_HRB_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8869020u)

/** \brief 9024, CPU1 data integrity error trap register */
#define CPU1_HRB_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8869024u)

/** \brief 9040, CPU1 data memory control register */
#define CPU1_HRB_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8869040u)

/** \brief 9200, CPU1 HR specific program synchronous trap register */
#define CPU1_HRB_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8869200u)

/** \brief 9204, CPU1 program control 1 */
#define CPU1_HRB_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8869204u)

/** \brief 9208, CPU1 program control 2 */
#define CPU1_HRB_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8869208u)

/** \brief 920C, CPU1 program control 0 */
#define CPU1_HRB_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF886920Cu)

/** \brief 9210, CPU1 HR specific program integrity error address register */
#define CPU1_HRB_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8869210u)

/** \brief 9214, CPU1 HR specific program integrity error trap register */
#define CPU1_HRB_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8869214u)

/** \brief 9400, CPU1 compatibility control register */
#define CPU1_HRB_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8869400u)

/** \brief A000, CPU1 HR specific trap control register */
#define CPU1_HRB_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF886A000u)

/** \brief A004, CPU1 HR specific trapping instruction program counter register */
#define CPU1_HRB_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF886A004u)

/** \brief A008, CPU1 HR specific trapping instruction opcode register */
#define CPU1_HRB_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF886A008u)

/** \brief A010, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRB_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF886A010u)

/** \brief A014, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRB_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF886A014u)

/** \brief A018, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRB_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF886A018u)

/** \brief A01C, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRB_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF886A01Cu)

/** \brief A020, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRB_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF886A020u)

/** \brief A024, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRB_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF886A024u)

/** \brief A030, CPU1 HR specific synchronous trap control register */
#define CPU1_HRB_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF886A030u)

/** \brief A034, CPU1 HR specific trapping instruction opcode register */
#define CPU1_HRB_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF886A034u)

/** \brief C000, CPU1 HR specific data protection range 0, lower bound register */
#define CPU1_HRB_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C000u)

/** \brief C004, CPU1 HR specific data protection range 0, upper bound register */
#define CPU1_HRB_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C004u)

/** \brief C008, CPU1 HR specific data protection range 1, lower bound register */
#define CPU1_HRB_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C008u)

/** \brief C00C, CPU1 HR specific data protection range 1, upper bound register */
#define CPU1_HRB_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C00Cu)

/** \brief C010, CPU1 HR specific data protection range 2, lower bound register */
#define CPU1_HRB_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C010u)

/** \brief C014, CPU1 HR specific data protection range 2, upper bound register */
#define CPU1_HRB_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C014u)

/** \brief C018, CPU1 HR specific data protection range 3, lower bound register */
#define CPU1_HRB_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C018u)

/** \brief C01C, CPU1 HR specific data protection range 3, upper bound register */
#define CPU1_HRB_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C01Cu)

/** \brief C020, CPU1 HR specific data protection range 4, lower bound register */
#define CPU1_HRB_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C020u)

/** \brief C024, CPU1 HR specific data protection range 4, upper bound register */
#define CPU1_HRB_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C024u)

/** \brief C028, CPU1 HR specific data protection range 5, lower bound register */
#define CPU1_HRB_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C028u)

/** \brief C02C, CPU1 HR specific data protection range 5, upper bound register */
#define CPU1_HRB_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C02Cu)

/** \brief C030, CPU1 HR specific data protection range 6, lower bound register */
#define CPU1_HRB_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C030u)

/** \brief C034, CPU1 HR specific data protection range 6, upper bound register */
#define CPU1_HRB_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C034u)

/** \brief C038, CPU1 HR specific data protection range 7, lower bound register */
#define CPU1_HRB_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C038u)

/** \brief C03C, CPU1 HR specific data protection range 7, upper bound register */
#define CPU1_HRB_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C03Cu)

/** \brief C040, CPU1 HR specific data protection range 8, lower bound register */
#define CPU1_HRB_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C040u)

/** \brief C044, CPU1 HR specific data protection range 8, upper bound register */
#define CPU1_HRB_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C044u)

/** \brief C048, CPU1 HR specific data protection range 9, lower bound register */
#define CPU1_HRB_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C048u)

/** \brief C04C, CPU1 HR specific data protection range 9, upper bound register */
#define CPU1_HRB_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C04Cu)

/** \brief C050, CPU1 HR specific data protection range 10, lower bound register */
#define CPU1_HRB_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C050u)

/** \brief C054, CPU1 HR specific data protection range 10, upper bound register */
#define CPU1_HRB_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C054u)

/** \brief C058, CPU1 HR specific data protection range 11, lower bound register */
#define CPU1_HRB_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C058u)

/** \brief C05C, CPU1 HR specific data protection range 11, upper bound register */
#define CPU1_HRB_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C05Cu)

/** \brief C060, CPU1 HR specific data protection range 12, lower bound register */
#define CPU1_HRB_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C060u)

/** \brief C064, CPU1 HR specific data protection range 12, upper bound register */
#define CPU1_HRB_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C064u)

/** \brief C068, CPU1 HR specific data protection range 13, lower bound register */
#define CPU1_HRB_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C068u)

/** \brief C06C, CPU1 HR specific data protection range 13, upper bound register */
#define CPU1_HRB_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C06Cu)

/** \brief C070, CPU1 HR specific data protection range 14, lower bound register */
#define CPU1_HRB_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C070u)

/** \brief C074, CPU1 HR specific data protection range 14, upper bound register */
#define CPU1_HRB_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C074u)

/** \brief C078, CPU1 HR specific data protection range 15, lower bound register */
#define CPU1_HRB_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C078u)

/** \brief C07C, CPU1 HR specific data protection range 15, upper bound register */
#define CPU1_HRB_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C07Cu)

/** \brief C080, CPU1 HR specific data protection range 16, lower bound register */
#define CPU1_HRB_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C080u)

/** \brief C084, CPU1 HR specific data protection range 16, upper bound register */
#define CPU1_HRB_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C084u)

/** \brief C088, CPU1 HR specific data protection range 17, lower bound register */
#define CPU1_HRB_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C088u)

/** \brief C08C, CPU1 HR specific data protection range 17, upper bound register */
#define CPU1_HRB_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C08Cu)

/** \brief C090, CPU1 HR specific data protection range 18, lower bound register */
#define CPU1_HRB_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C090u)

/** \brief C094, CPU1 HR specific data protection range 18, upper bound register */
#define CPU1_HRB_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C094u)

/** \brief C098, CPU1 HR specific data protection range 19, lower bound register */
#define CPU1_HRB_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C098u)

/** \brief C09C, CPU1 HR specific data protection range 19, upper bound register */
#define CPU1_HRB_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C09Cu)

/** \brief C0A0, CPU1 HR specific data protection range 20, lower bound register */
#define CPU1_HRB_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C0A0u)

/** \brief C0A4, CPU1 HR specific data protection range 20, upper bound register */
#define CPU1_HRB_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C0A4u)

/** \brief C0A8, CPU1 HR specific data protection range 21, lower bound register */
#define CPU1_HRB_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C0A8u)

/** \brief C0AC, CPU1 HR specific data protection range 21, upper bound register */
#define CPU1_HRB_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C0ACu)

/** \brief C0B0, CPU1 HR specific data protection range 22, lower bound register */
#define CPU1_HRB_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C0B0u)

/** \brief C0B4, CPU1 HR specific data protection range 22, upper bound register */
#define CPU1_HRB_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C0B4u)

/** \brief C0B8, CPU1 HR specific data protection range 23, lower bound register */
#define CPU1_HRB_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF886C0B8u)

/** \brief C0BC, CPU1 HR specific data protection range 23, upper bound register */
#define CPU1_HRB_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF886C0BCu)

/** \brief D000, CPU1 HR specific code protection range 0, lower bound register */
#define CPU1_HRB_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D000u)

/** \brief D004, CPU1 HR specific code protection range 0, upper bound register */
#define CPU1_HRB_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D004u)

/** \brief D008, CPU1 HR specific code protection range 1, lower bound register */
#define CPU1_HRB_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D008u)

/** \brief D00C, CPU1 HR specific code protection range 1, upper bound register */
#define CPU1_HRB_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D00Cu)

/** \brief D010, CPU1 HR specific code protection range 2, lower bound register */
#define CPU1_HRB_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D010u)

/** \brief D014, CPU1 HR specific code protection range 2, upper bound register */
#define CPU1_HRB_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D014u)

/** \brief D018, CPU1 HR specific code protection range 3, lower bound register */
#define CPU1_HRB_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D018u)

/** \brief D01C, CPU1 HR specific code protection range 3, upper bound register */
#define CPU1_HRB_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D01Cu)

/** \brief D020, CPU1 HR specific code protection range 4, lower bound register */
#define CPU1_HRB_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D020u)

/** \brief D024, CPU1 HR specific code protection range 4, upper bound register */
#define CPU1_HRB_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D024u)

/** \brief D028, CPU1 HR specific code protection range 5, lower bound register */
#define CPU1_HRB_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D028u)

/** \brief D02C, CPU1 HR specific code protection range 5, upper bound register */
#define CPU1_HRB_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D02Cu)

/** \brief D030, CPU1 HR specific code protection range 6, lower bound register */
#define CPU1_HRB_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D030u)

/** \brief D034, CPU1 HR specific code protection range 6, upper bound register */
#define CPU1_HRB_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D034u)

/** \brief D038, CPU1 HR specific code protection range 7, lower bound register */
#define CPU1_HRB_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D038u)

/** \brief D03C, CPU1 HR specific code protection range 7, upper bound register */
#define CPU1_HRB_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D03Cu)

/** \brief D040, CPU1 HR specific code protection range 8, lower bound register */
#define CPU1_HRB_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D040u)

/** \brief D044, CPU1 HR specific code protection range 8, upper bound register */
#define CPU1_HRB_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D044u)

/** \brief D048, CPU1 HR specific code protection range 9, lower bound register */
#define CPU1_HRB_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D048u)

/** \brief D04C, CPU1 HR specific code protection range 9, upper bound register */
#define CPU1_HRB_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D04Cu)

/** \brief D050, CPU1 HR specific code protection range 10, lower bound register */
#define CPU1_HRB_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D050u)

/** \brief D054, CPU1 HR specific code protection range 10, upper bound register */
#define CPU1_HRB_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D054u)

/** \brief D058, CPU1 HR specific code protection range 11, lower bound register */
#define CPU1_HRB_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D058u)

/** \brief D05C, CPU1 HR specific code protection range 11, upper bound register */
#define CPU1_HRB_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D05Cu)

/** \brief D060, CPU1 HR specific code protection range 12, lower bound register */
#define CPU1_HRB_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D060u)

/** \brief D064, CPU1 HR specific code protection range 12, upper bound register */
#define CPU1_HRB_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D064u)

/** \brief D068, CPU1 HR specific code protection range 13, lower bound register */
#define CPU1_HRB_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D068u)

/** \brief D06C, CPU1 HR specific code protection range 13, upper bound register */
#define CPU1_HRB_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D06Cu)

/** \brief D070, CPU1 HR specific code protection range 14, lower bound register */
#define CPU1_HRB_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D070u)

/** \brief D074, CPU1 HR specific code protection range 14, upper bound register */
#define CPU1_HRB_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D074u)

/** \brief D078, CPU1 HR specific code protection range 15, lower bound register */
#define CPU1_HRB_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF886D078u)

/** \brief D07C, CPU1 HR specific code protection range 15, upper bound register */
#define CPU1_HRB_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF886D07Cu)

/** \brief E000, CPU1 HR specific code protection execute enable register set 0 */
#define CPU1_HRB_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E000u)

/** \brief E004, CPU1 HR specific code protection execute enable register set 1 */
#define CPU1_HRB_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E004u)

/** \brief E008, CPU1 HR specific code protection execute enable register set 2 */
#define CPU1_HRB_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E008u)

/** \brief E00C, CPU1 HR specific code protection execute enable register set 3 */
#define CPU1_HRB_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E00Cu)

/** \brief E010, CPU1 HR specific data protection read enable register set 0 */
#define CPU1_HRB_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E010u)

/** \brief E014, CPU1 HR specific data protection read enable register set 1 */
#define CPU1_HRB_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E014u)

/** \brief E018, CPU1 HR specific data protection read enable register set 2 */
#define CPU1_HRB_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E018u)

/** \brief E01C, CPU1 HR specific data protection read enable register set 3 */
#define CPU1_HRB_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E01Cu)

/** \brief E020, CPU1 HR specific data protection write enable register set 0 */
#define CPU1_HRB_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E020u)

/** \brief E024, CPU1 HR specific data protection write enable register set 1 */
#define CPU1_HRB_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E024u)

/** \brief E028, CPU1 HR specific data protection write enable register set 2 */
#define CPU1_HRB_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E028u)

/** \brief E02C, CPU1 HR specific data protection write enable register set 3 */
#define CPU1_HRB_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E02Cu)

/** \brief E040, CPU1 HR specific code protection execute enable register set 4 */
#define CPU1_HRB_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E040u)

/** \brief E044, CPU1 HR specific code protection execute enable register set 5 */
#define CPU1_HRB_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E044u)

/** \brief E048, CPU1 HR specific code protection execute enable register set 6 */
#define CPU1_HRB_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E048u)

/** \brief E04C, CPU1 HR specific code protection execute enable register set 7 */
#define CPU1_HRB_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF886E04Cu)

/** \brief E050, CPU1 HR specific data protection read enable register set 4 */
#define CPU1_HRB_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E050u)

/** \brief E054, CPU1 HR specific data protection read enable register set 5 */
#define CPU1_HRB_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E054u)

/** \brief E058, CPU1 HR specific data protection read enable register set 6 */
#define CPU1_HRB_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E058u)

/** \brief E05C, CPU1 HR specific data protection read enable register set 7 */
#define CPU1_HRB_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF886E05Cu)

/** \brief E060, CPU1 HR specific data protection write enable register set 4 */
#define CPU1_HRB_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E060u)

/** \brief E064, CPU1 HR specific data protection write enable register set 5 */
#define CPU1_HRB_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E064u)

/** \brief E068, CPU1 HR specific data protection write enable register set 6 */
#define CPU1_HRB_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E068u)

/** \brief E06C, CPU1 HR specific data protection write enable register set 7 */
#define CPU1_HRB_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF886E06Cu)

/** \brief E400, CPU1 HR specific temporal protection system control register */
#define CPU1_HRB_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF886E400u)

/** \brief E404, CPU1 HR specific temporal protection system timer register 0 */
#define CPU1_HRB_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF886E404u)

/** \brief E408, CPU1 HR specific temporal protection system timer register 1 */
#define CPU1_HRB_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF886E408u)

/** \brief E40C, CPU1 HR specific temporal protection system timer register 2 */
#define CPU1_HRB_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF886E40Cu)

/** \brief F000, CPU1 trigger event 0 */
#define CPU1_HRB_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F000u)
/** Alias (User Manual Name) for CPU1_HRB_TR0_EVT */
#define CPU1_HRB_TR0EVT (CPU1_HRB_TR0_EVT)

/** \brief F004, CPU1 trigger address 0 */
#define CPU1_HRB_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F004u)
/** Alias (User Manual Name) for CPU1_HRB_TR0_ADR */
#define CPU1_HRB_TR0ADR (CPU1_HRB_TR0_ADR)

/** \brief F008, CPU1 trigger event 1 */
#define CPU1_HRB_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F008u)
/** Alias (User Manual Name) for CPU1_HRB_TR1_EVT */
#define CPU1_HRB_TR1EVT (CPU1_HRB_TR1_EVT)

/** \brief F00C, CPU1 trigger address 1 */
#define CPU1_HRB_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F00Cu)
/** Alias (User Manual Name) for CPU1_HRB_TR1_ADR */
#define CPU1_HRB_TR1ADR (CPU1_HRB_TR1_ADR)

/** \brief F010, CPU1 trigger event 2 */
#define CPU1_HRB_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F010u)
/** Alias (User Manual Name) for CPU1_HRB_TR2_EVT */
#define CPU1_HRB_TR2EVT (CPU1_HRB_TR2_EVT)

/** \brief F014, CPU1 trigger address 2 */
#define CPU1_HRB_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F014u)
/** Alias (User Manual Name) for CPU1_HRB_TR2_ADR */
#define CPU1_HRB_TR2ADR (CPU1_HRB_TR2_ADR)

/** \brief F018, CPU1 trigger event 3 */
#define CPU1_HRB_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F018u)
/** Alias (User Manual Name) for CPU1_HRB_TR3_EVT */
#define CPU1_HRB_TR3EVT (CPU1_HRB_TR3_EVT)

/** \brief F01C, CPU1 trigger address 3 */
#define CPU1_HRB_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F01Cu)
/** Alias (User Manual Name) for CPU1_HRB_TR3_ADR */
#define CPU1_HRB_TR3ADR (CPU1_HRB_TR3_ADR)

/** \brief F020, CPU1 trigger event 4 */
#define CPU1_HRB_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F020u)
/** Alias (User Manual Name) for CPU1_HRB_TR4_EVT */
#define CPU1_HRB_TR4EVT (CPU1_HRB_TR4_EVT)

/** \brief F024, CPU1 trigger address 4 */
#define CPU1_HRB_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F024u)
/** Alias (User Manual Name) for CPU1_HRB_TR4_ADR */
#define CPU1_HRB_TR4ADR (CPU1_HRB_TR4_ADR)

/** \brief F028, CPU1 trigger event 5 */
#define CPU1_HRB_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F028u)
/** Alias (User Manual Name) for CPU1_HRB_TR5_EVT */
#define CPU1_HRB_TR5EVT (CPU1_HRB_TR5_EVT)

/** \brief F02C, CPU1 trigger address 5 */
#define CPU1_HRB_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F02Cu)
/** Alias (User Manual Name) for CPU1_HRB_TR5_ADR */
#define CPU1_HRB_TR5ADR (CPU1_HRB_TR5_ADR)

/** \brief F030, CPU1 trigger event 6 */
#define CPU1_HRB_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F030u)
/** Alias (User Manual Name) for CPU1_HRB_TR6_EVT */
#define CPU1_HRB_TR6EVT (CPU1_HRB_TR6_EVT)

/** \brief F034, CPU1 trigger address 6 */
#define CPU1_HRB_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F034u)
/** Alias (User Manual Name) for CPU1_HRB_TR6_ADR */
#define CPU1_HRB_TR6ADR (CPU1_HRB_TR6_ADR)

/** \brief F038, CPU1 trigger event 7 */
#define CPU1_HRB_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF886F038u)
/** Alias (User Manual Name) for CPU1_HRB_TR7_EVT */
#define CPU1_HRB_TR7EVT (CPU1_HRB_TR7_EVT)

/** \brief F03C, CPU1 trigger address 7 */
#define CPU1_HRB_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF886F03Cu)
/** Alias (User Manual Name) for CPU1_HRB_TR7_ADR */
#define CPU1_HRB_TR7ADR (CPU1_HRB_TR7_ADR)

/** \brief FC00, CPU1 HR specific counter control */
#define CPU1_HRB_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF886FC00u)

/** \brief FC04, CPU1 HR specific CPU clock cycle count */
#define CPU1_HRB_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF886FC04u)

/** \brief FC08, CPU1 HR specific instruction count */
#define CPU1_HRB_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF886FC08u)

/** \brief FC0C, CPU1 HR specific multi-count register 1 */
#define CPU1_HRB_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF886FC0Cu)

/** \brief FC10, CPU1 HR specific multi-count register 2 */
#define CPU1_HRB_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF886FC10u)

/** \brief FC14, CPU1 HR specific multi-count register 3 */
#define CPU1_HRB_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF886FC14u)

/** \brief FD00, CPU1 debug status register */
#define CPU1_HRB_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF886FD00u)

/** \brief FD08, CPU1 external event register */
#define CPU1_HRB_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF886FD08u)

/** \brief FD0C, CPU1 core register access event */
#define CPU1_HRB_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF886FD0Cu)

/** \brief FD10, CPU1 software debug event */
#define CPU1_HRB_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF886FD10u)

/** \brief FD14, CPU1 debug action configuration */
#define CPU1_HRB_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF886FD14u)

/** \brief FD30, CPU1 trigger accumulator */
#define CPU1_HRB_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF886FD30u)

/** \brief FD40, CPU1 debug monitor start address */
#define CPU1_HRB_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF886FD40u)

/** \brief FD44, CPU1 debug context save area pointer */
#define CPU1_HRB_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF886FD44u)

/** \brief FD48, CPU1 debug trap control */
#define CPU1_HRB_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF886FD48u)

/** \brief FD4C, CPU1 debug configuration */
#define CPU1_HRB_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF886FD4Cu)

/** \brief FD50, CPU1 trace configuration */
#define CPU1_HRB_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF886FD50u)

/** \brief FD54, CPU1 trace filter */
#define CPU1_HRB_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF886FD54u)

/** \brief FD58, CPU1 trace bandwidth limiter */
#define CPU1_HRB_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF886FD58u)

/** \brief FD60, CPU1 MCDS performance counter control register */
#define CPU1_HRB_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF886FD60u)

/** \brief FE00, CPU1 previous context information register */
#define CPU1_HRB_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF886FE00u)

/** \brief FE04, CPU1 HR specific program status word */
#define CPU1_HRB_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF886FE04u)

/** \brief FE08, CPU1 program counter */
#define CPU1_HRB_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF886FE08u)

/** \brief FE14, CPU1 HR specific core configuration register */
#define CPU1_HRB_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF886FE14u)

/** \brief FE18, CPU1 identification register */
#define CPU1_HRB_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF886FE18u)

/** \brief FE1C, CPU1 core identification register */
#define CPU1_HRB_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF886FE1Cu)

/** \brief FE20, CPU1 HR specific base interrupt vector table pointer */
#define CPU1_HRB_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF886FE20u)

/** \brief FE24, CPU1 HR specific base trap vector table pointer */
#define CPU1_HRB_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF886FE24u)

/** \brief FE28, CPU1 HR specific interrupt stack pointer */
#define CPU1_HRB_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF886FE28u)

/** \brief FE2C, CPU1 interrupt control register */
#define CPU1_HRB_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF886FE2Cu)

/** \brief FE34, CPU1 previous PRS */
#define CPU1_HRB_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF886FE34u)

/** \brief FE38, CPU1 HR specific free CSA list head pointer */
#define CPU1_HRB_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF886FE38u)

/** \brief FE3C, CPU1 HR specific free CSA list limit pointer */
#define CPU1_HRB_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF886FE3Cu)

/** \brief FE40, CPU1 software identification */
#define CPU1_HRB_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF886FE40u)

/** \brief FE50, CPU1 customer ID register */
#define CPU1_HRB_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF886FE50u)

/** \brief FE60, CPU1 core boot configuration register */
#define CPU1_HRB_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF886FE60u)

/** \brief FE64, CPU1 lockstep control register */
#define CPU1_HRB_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF886FE64u)

/** \brief FE68, CPU1 clock control register */
#define CPU1_HRB_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF886FE68u)

/** \brief FE6C, CPU1 hardware configuration  */
#define CPU1_HRB_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF886FE6Cu)

/** \brief FF80, CPU1 HR specific address general purpose register 0 */
#define CPU1_HRB_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF886FF80u)

/** \brief FF84, CPU1 HR specific address general purpose register 1 */
#define CPU1_HRB_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF886FF84u)

/** \brief FFA0, CPU1 HR specific address general purpose register 8 */
#define CPU1_HRB_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF886FFA0u)

/** \brief FFA4, CPU1 HR specific address general purpose register 9 */
#define CPU1_HRB_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF886FFA4u)

/** \brief 1030, CPU1 SRI error generation register */
#define CPU1_HRHV_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8871030u)

/** \brief 1040, CPU1 lockstep test register */
#define CPU1_HRHV_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8871040u)

/** \brief 8100, CPU1 data access cacheability register */
#define CPU1_HRHV_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8878100u)

/** \brief 8104, CPU1 code access cacheability register */
#define CPU1_HRHV_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8878104u)

/** \brief 8108, CPU1 peripheral space identifier register */
#define CPU1_HRHV_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8878108u)

/** \brief 9000, CPU1 data control register 2 */
#define CPU1_HRHV_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8879000u)

/** \brief 9008, CPU1 data control register 1 */
#define CPU1_HRHV_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8879008u)

/** \brief 900C, CPU1 SIST mode access control register */
#define CPU1_HRHV_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF887900Cu)

/** \brief 9010, CPU1 HR specific data synchronous trap register */
#define CPU1_HRHV_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8879010u)

/** \brief 9018, CPU1 HR specific data asynchronous trap register */
#define CPU1_HRHV_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8879018u)

/** \brief 901C, CPU1 HR specific data error address register */
#define CPU1_HRHV_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF887901Cu)

/** \brief 9020, CPU1 data integrity error address register */
#define CPU1_HRHV_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8879020u)

/** \brief 9024, CPU1 data integrity error trap register */
#define CPU1_HRHV_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8879024u)

/** \brief 9040, CPU1 data memory control register */
#define CPU1_HRHV_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8879040u)

/** \brief 9200, CPU1 HR specific program synchronous trap register */
#define CPU1_HRHV_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8879200u)

/** \brief 9204, CPU1 program control 1 */
#define CPU1_HRHV_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8879204u)

/** \brief 9208, CPU1 program control 2 */
#define CPU1_HRHV_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8879208u)

/** \brief 920C, CPU1 program control 0 */
#define CPU1_HRHV_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF887920Cu)

/** \brief 9210, CPU1 HR specific program integrity error address register */
#define CPU1_HRHV_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8879210u)

/** \brief 9214, CPU1 HR specific program integrity error trap register */
#define CPU1_HRHV_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8879214u)

/** \brief 9400, CPU1 compatibility control register */
#define CPU1_HRHV_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8879400u)

/** \brief A000, CPU1 HR specific trap control register */
#define CPU1_HRHV_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF887A000u)

/** \brief A004, CPU1 HR specific trapping instruction program counter register */
#define CPU1_HRHV_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF887A004u)

/** \brief A008, CPU1 HR specific trapping instruction opcode register */
#define CPU1_HRHV_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF887A008u)

/** \brief A010, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRHV_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF887A010u)

/** \brief A014, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRHV_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF887A014u)

/** \brief A018, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRHV_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF887A018u)

/** \brief A01C, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRHV_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF887A01Cu)

/** \brief A020, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRHV_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF887A020u)

/** \brief A024, CPU1 HR specific trapping instruction operand register */
#define CPU1_HRHV_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF887A024u)

/** \brief A030, CPU1 HR specific synchronous trap control register */
#define CPU1_HRHV_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF887A030u)

/** \brief A034, CPU1 HR specific trapping instruction opcode register */
#define CPU1_HRHV_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF887A034u)

/** \brief B000, CPU1 virtualization control register 0 */
#define CPU1_HRHV_VCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON0*)0xF887B000u)

/** \brief B004, CPU1 virtualization control register 1 */
#define CPU1_HRHV_VCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON1*)0xF887B004u)

/** \brief B008, CPU1 virtualization control register 2 */
#define CPU1_HRHV_VCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON2*)0xF887B008u)

/** \brief B010, CPU1 base hypervisor vector table pointer */
#define CPU1_HRHV_BHV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BHV*)0xF887B010u)

/** \brief B100, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B100u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR0 */
#define CPU1_HRHV_VM0_ICR (CPU1_HRHV_VM_ICR0)

/** \brief B104, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B104u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR1 */
#define CPU1_HRHV_VM1_ICR (CPU1_HRHV_VM_ICR1)

/** \brief B108, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B108u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR2 */
#define CPU1_HRHV_VM2_ICR (CPU1_HRHV_VM_ICR2)

/** \brief B10C, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B10Cu)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR3 */
#define CPU1_HRHV_VM3_ICR (CPU1_HRHV_VM_ICR3)

/** \brief B110, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B110u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR4 */
#define CPU1_HRHV_VM4_ICR (CPU1_HRHV_VM_ICR4)

/** \brief B114, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B114u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR5 */
#define CPU1_HRHV_VM5_ICR (CPU1_HRHV_VM_ICR5)

/** \brief B118, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B118u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR6 */
#define CPU1_HRHV_VM6_ICR (CPU1_HRHV_VM_ICR6)

/** \brief B11C, CPU1 Virtual machine n interrupt state */
#define CPU1_HRHV_VM_ICR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF887B11Cu)
/** Alias (User Manual Name) for CPU1_HRHV_VM_ICR7 */
#define CPU1_HRHV_VM7_ICR (CPU1_HRHV_VM_ICR7)

/** \brief B200, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B200u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH0 */
#define CPU1_HRHV_VM0_PETHRESH (CPU1_HRHV_VM_PETHRESH0)

/** \brief B204, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B204u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH1 */
#define CPU1_HRHV_VM1_PETHRESH (CPU1_HRHV_VM_PETHRESH1)

/** \brief B208, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B208u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH2 */
#define CPU1_HRHV_VM2_PETHRESH (CPU1_HRHV_VM_PETHRESH2)

/** \brief B20C, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B20Cu)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH3 */
#define CPU1_HRHV_VM3_PETHRESH (CPU1_HRHV_VM_PETHRESH3)

/** \brief B210, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B210u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH4 */
#define CPU1_HRHV_VM4_PETHRESH (CPU1_HRHV_VM_PETHRESH4)

/** \brief B214, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B214u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH5 */
#define CPU1_HRHV_VM5_PETHRESH (CPU1_HRHV_VM_PETHRESH5)

/** \brief B218, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B218u)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH6 */
#define CPU1_HRHV_VM6_PETHRESH (CPU1_HRHV_VM_PETHRESH6)

/** \brief B21C, CPU1 Virtual machine n pre-emption threshold */
#define CPU1_HRHV_VM_PETHRESH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF887B21Cu)
/** Alias (User Manual Name) for CPU1_HRHV_VM_PETHRESH7 */
#define CPU1_HRHV_VM7_PETHRESH (CPU1_HRHV_VM_PETHRESH7)

/** \brief C000, CPU1 HR specific data protection range 0, lower bound register */
#define CPU1_HRHV_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C000u)

/** \brief C004, CPU1 HR specific data protection range 0, upper bound register */
#define CPU1_HRHV_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C004u)

/** \brief C008, CPU1 HR specific data protection range 1, lower bound register */
#define CPU1_HRHV_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C008u)

/** \brief C00C, CPU1 HR specific data protection range 1, upper bound register */
#define CPU1_HRHV_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C00Cu)

/** \brief C010, CPU1 HR specific data protection range 2, lower bound register */
#define CPU1_HRHV_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C010u)

/** \brief C014, CPU1 HR specific data protection range 2, upper bound register */
#define CPU1_HRHV_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C014u)

/** \brief C018, CPU1 HR specific data protection range 3, lower bound register */
#define CPU1_HRHV_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C018u)

/** \brief C01C, CPU1 HR specific data protection range 3, upper bound register */
#define CPU1_HRHV_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C01Cu)

/** \brief C020, CPU1 HR specific data protection range 4, lower bound register */
#define CPU1_HRHV_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C020u)

/** \brief C024, CPU1 HR specific data protection range 4, upper bound register */
#define CPU1_HRHV_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C024u)

/** \brief C028, CPU1 HR specific data protection range 5, lower bound register */
#define CPU1_HRHV_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C028u)

/** \brief C02C, CPU1 HR specific data protection range 5, upper bound register */
#define CPU1_HRHV_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C02Cu)

/** \brief C030, CPU1 HR specific data protection range 6, lower bound register */
#define CPU1_HRHV_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C030u)

/** \brief C034, CPU1 HR specific data protection range 6, upper bound register */
#define CPU1_HRHV_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C034u)

/** \brief C038, CPU1 HR specific data protection range 7, lower bound register */
#define CPU1_HRHV_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C038u)

/** \brief C03C, CPU1 HR specific data protection range 7, upper bound register */
#define CPU1_HRHV_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C03Cu)

/** \brief C040, CPU1 HR specific data protection range 8, lower bound register */
#define CPU1_HRHV_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C040u)

/** \brief C044, CPU1 HR specific data protection range 8, upper bound register */
#define CPU1_HRHV_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C044u)

/** \brief C048, CPU1 HR specific data protection range 9, lower bound register */
#define CPU1_HRHV_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C048u)

/** \brief C04C, CPU1 HR specific data protection range 9, upper bound register */
#define CPU1_HRHV_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C04Cu)

/** \brief C050, CPU1 HR specific data protection range 10, lower bound register */
#define CPU1_HRHV_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C050u)

/** \brief C054, CPU1 HR specific data protection range 10, upper bound register */
#define CPU1_HRHV_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C054u)

/** \brief C058, CPU1 HR specific data protection range 11, lower bound register */
#define CPU1_HRHV_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C058u)

/** \brief C05C, CPU1 HR specific data protection range 11, upper bound register */
#define CPU1_HRHV_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C05Cu)

/** \brief C060, CPU1 HR specific data protection range 12, lower bound register */
#define CPU1_HRHV_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C060u)

/** \brief C064, CPU1 HR specific data protection range 12, upper bound register */
#define CPU1_HRHV_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C064u)

/** \brief C068, CPU1 HR specific data protection range 13, lower bound register */
#define CPU1_HRHV_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C068u)

/** \brief C06C, CPU1 HR specific data protection range 13, upper bound register */
#define CPU1_HRHV_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C06Cu)

/** \brief C070, CPU1 HR specific data protection range 14, lower bound register */
#define CPU1_HRHV_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C070u)

/** \brief C074, CPU1 HR specific data protection range 14, upper bound register */
#define CPU1_HRHV_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C074u)

/** \brief C078, CPU1 HR specific data protection range 15, lower bound register */
#define CPU1_HRHV_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C078u)

/** \brief C07C, CPU1 HR specific data protection range 15, upper bound register */
#define CPU1_HRHV_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C07Cu)

/** \brief C080, CPU1 HR specific data protection range 16, lower bound register */
#define CPU1_HRHV_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C080u)

/** \brief C084, CPU1 HR specific data protection range 16, upper bound register */
#define CPU1_HRHV_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C084u)

/** \brief C088, CPU1 HR specific data protection range 17, lower bound register */
#define CPU1_HRHV_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C088u)

/** \brief C08C, CPU1 HR specific data protection range 17, upper bound register */
#define CPU1_HRHV_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C08Cu)

/** \brief C090, CPU1 HR specific data protection range 18, lower bound register */
#define CPU1_HRHV_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C090u)

/** \brief C094, CPU1 HR specific data protection range 18, upper bound register */
#define CPU1_HRHV_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C094u)

/** \brief C098, CPU1 HR specific data protection range 19, lower bound register */
#define CPU1_HRHV_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C098u)

/** \brief C09C, CPU1 HR specific data protection range 19, upper bound register */
#define CPU1_HRHV_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C09Cu)

/** \brief C0A0, CPU1 HR specific data protection range 20, lower bound register */
#define CPU1_HRHV_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C0A0u)

/** \brief C0A4, CPU1 HR specific data protection range 20, upper bound register */
#define CPU1_HRHV_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C0A4u)

/** \brief C0A8, CPU1 HR specific data protection range 21, lower bound register */
#define CPU1_HRHV_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C0A8u)

/** \brief C0AC, CPU1 HR specific data protection range 21, upper bound register */
#define CPU1_HRHV_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C0ACu)

/** \brief C0B0, CPU1 HR specific data protection range 22, lower bound register */
#define CPU1_HRHV_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C0B0u)

/** \brief C0B4, CPU1 HR specific data protection range 22, upper bound register */
#define CPU1_HRHV_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C0B4u)

/** \brief C0B8, CPU1 HR specific data protection range 23, lower bound register */
#define CPU1_HRHV_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF887C0B8u)

/** \brief C0BC, CPU1 HR specific data protection range 23, upper bound register */
#define CPU1_HRHV_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF887C0BCu)

/** \brief D000, CPU1 HR specific code protection range 0, lower bound register */
#define CPU1_HRHV_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D000u)

/** \brief D004, CPU1 HR specific code protection range 0, upper bound register */
#define CPU1_HRHV_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D004u)

/** \brief D008, CPU1 HR specific code protection range 1, lower bound register */
#define CPU1_HRHV_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D008u)

/** \brief D00C, CPU1 HR specific code protection range 1, upper bound register */
#define CPU1_HRHV_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D00Cu)

/** \brief D010, CPU1 HR specific code protection range 2, lower bound register */
#define CPU1_HRHV_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D010u)

/** \brief D014, CPU1 HR specific code protection range 2, upper bound register */
#define CPU1_HRHV_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D014u)

/** \brief D018, CPU1 HR specific code protection range 3, lower bound register */
#define CPU1_HRHV_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D018u)

/** \brief D01C, CPU1 HR specific code protection range 3, upper bound register */
#define CPU1_HRHV_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D01Cu)

/** \brief D020, CPU1 HR specific code protection range 4, lower bound register */
#define CPU1_HRHV_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D020u)

/** \brief D024, CPU1 HR specific code protection range 4, upper bound register */
#define CPU1_HRHV_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D024u)

/** \brief D028, CPU1 HR specific code protection range 5, lower bound register */
#define CPU1_HRHV_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D028u)

/** \brief D02C, CPU1 HR specific code protection range 5, upper bound register */
#define CPU1_HRHV_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D02Cu)

/** \brief D030, CPU1 HR specific code protection range 6, lower bound register */
#define CPU1_HRHV_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D030u)

/** \brief D034, CPU1 HR specific code protection range 6, upper bound register */
#define CPU1_HRHV_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D034u)

/** \brief D038, CPU1 HR specific code protection range 7, lower bound register */
#define CPU1_HRHV_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D038u)

/** \brief D03C, CPU1 HR specific code protection range 7, upper bound register */
#define CPU1_HRHV_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D03Cu)

/** \brief D040, CPU1 HR specific code protection range 8, lower bound register */
#define CPU1_HRHV_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D040u)

/** \brief D044, CPU1 HR specific code protection range 8, upper bound register */
#define CPU1_HRHV_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D044u)

/** \brief D048, CPU1 HR specific code protection range 9, lower bound register */
#define CPU1_HRHV_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D048u)

/** \brief D04C, CPU1 HR specific code protection range 9, upper bound register */
#define CPU1_HRHV_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D04Cu)

/** \brief D050, CPU1 HR specific code protection range 10, lower bound register */
#define CPU1_HRHV_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D050u)

/** \brief D054, CPU1 HR specific code protection range 10, upper bound register */
#define CPU1_HRHV_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D054u)

/** \brief D058, CPU1 HR specific code protection range 11, lower bound register */
#define CPU1_HRHV_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D058u)

/** \brief D05C, CPU1 HR specific code protection range 11, upper bound register */
#define CPU1_HRHV_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D05Cu)

/** \brief D060, CPU1 HR specific code protection range 12, lower bound register */
#define CPU1_HRHV_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D060u)

/** \brief D064, CPU1 HR specific code protection range 12, upper bound register */
#define CPU1_HRHV_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D064u)

/** \brief D068, CPU1 HR specific code protection range 13, lower bound register */
#define CPU1_HRHV_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D068u)

/** \brief D06C, CPU1 HR specific code protection range 13, upper bound register */
#define CPU1_HRHV_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D06Cu)

/** \brief D070, CPU1 HR specific code protection range 14, lower bound register */
#define CPU1_HRHV_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D070u)

/** \brief D074, CPU1 HR specific code protection range 14, upper bound register */
#define CPU1_HRHV_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D074u)

/** \brief D078, CPU1 HR specific code protection range 15, lower bound register */
#define CPU1_HRHV_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF887D078u)

/** \brief D07C, CPU1 HR specific code protection range 15, upper bound register */
#define CPU1_HRHV_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF887D07Cu)

/** \brief E000, CPU1 HR specific code protection execute enable register set 0 */
#define CPU1_HRHV_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E000u)

/** \brief E004, CPU1 HR specific code protection execute enable register set 1 */
#define CPU1_HRHV_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E004u)

/** \brief E008, CPU1 HR specific code protection execute enable register set 2 */
#define CPU1_HRHV_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E008u)

/** \brief E00C, CPU1 HR specific code protection execute enable register set 3 */
#define CPU1_HRHV_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E00Cu)

/** \brief E010, CPU1 HR specific data protection read enable register set 0 */
#define CPU1_HRHV_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E010u)

/** \brief E014, CPU1 HR specific data protection read enable register set 1 */
#define CPU1_HRHV_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E014u)

/** \brief E018, CPU1 HR specific data protection read enable register set 2 */
#define CPU1_HRHV_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E018u)

/** \brief E01C, CPU1 HR specific data protection read enable register set 3 */
#define CPU1_HRHV_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E01Cu)

/** \brief E020, CPU1 HR specific data protection write enable register set 0 */
#define CPU1_HRHV_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E020u)

/** \brief E024, CPU1 HR specific data protection write enable register set 1 */
#define CPU1_HRHV_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E024u)

/** \brief E028, CPU1 HR specific data protection write enable register set 2 */
#define CPU1_HRHV_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E028u)

/** \brief E02C, CPU1 HR specific data protection write enable register set 3 */
#define CPU1_HRHV_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E02Cu)

/** \brief E040, CPU1 HR specific code protection execute enable register set 4 */
#define CPU1_HRHV_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E040u)

/** \brief E044, CPU1 HR specific code protection execute enable register set 5 */
#define CPU1_HRHV_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E044u)

/** \brief E048, CPU1 HR specific code protection execute enable register set 6 */
#define CPU1_HRHV_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E048u)

/** \brief E04C, CPU1 HR specific code protection execute enable register set 7 */
#define CPU1_HRHV_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF887E04Cu)

/** \brief E050, CPU1 HR specific data protection read enable register set 4 */
#define CPU1_HRHV_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E050u)

/** \brief E054, CPU1 HR specific data protection read enable register set 5 */
#define CPU1_HRHV_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E054u)

/** \brief E058, CPU1 HR specific data protection read enable register set 6 */
#define CPU1_HRHV_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E058u)

/** \brief E05C, CPU1 HR specific data protection read enable register set 7 */
#define CPU1_HRHV_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF887E05Cu)

/** \brief E060, CPU1 HR specific data protection write enable register set 4 */
#define CPU1_HRHV_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E060u)

/** \brief E064, CPU1 HR specific data protection write enable register set 5 */
#define CPU1_HRHV_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E064u)

/** \brief E068, CPU1 HR specific data protection write enable register set 6 */
#define CPU1_HRHV_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E068u)

/** \brief E06C, CPU1 HR specific data protection write enable register set 7 */
#define CPU1_HRHV_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF887E06Cu)

/** \brief E400, CPU1 HR specific temporal protection system control register */
#define CPU1_HRHV_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF887E400u)

/** \brief E404, CPU1 HR specific temporal protection system timer register 0 */
#define CPU1_HRHV_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF887E404u)

/** \brief E408, CPU1 HR specific temporal protection system timer register 1 */
#define CPU1_HRHV_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF887E408u)

/** \brief E40C, CPU1 HR specific temporal protection system timer register 2 */
#define CPU1_HRHV_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF887E40Cu)

/** \brief F000, CPU1 trigger event 0 */
#define CPU1_HRHV_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F000u)
/** Alias (User Manual Name) for CPU1_HRHV_TR0_EVT */
#define CPU1_HRHV_TR0EVT (CPU1_HRHV_TR0_EVT)

/** \brief F004, CPU1 trigger address 0 */
#define CPU1_HRHV_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F004u)
/** Alias (User Manual Name) for CPU1_HRHV_TR0_ADR */
#define CPU1_HRHV_TR0ADR (CPU1_HRHV_TR0_ADR)

/** \brief F008, CPU1 trigger event 1 */
#define CPU1_HRHV_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F008u)
/** Alias (User Manual Name) for CPU1_HRHV_TR1_EVT */
#define CPU1_HRHV_TR1EVT (CPU1_HRHV_TR1_EVT)

/** \brief F00C, CPU1 trigger address 1 */
#define CPU1_HRHV_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F00Cu)
/** Alias (User Manual Name) for CPU1_HRHV_TR1_ADR */
#define CPU1_HRHV_TR1ADR (CPU1_HRHV_TR1_ADR)

/** \brief F010, CPU1 trigger event 2 */
#define CPU1_HRHV_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F010u)
/** Alias (User Manual Name) for CPU1_HRHV_TR2_EVT */
#define CPU1_HRHV_TR2EVT (CPU1_HRHV_TR2_EVT)

/** \brief F014, CPU1 trigger address 2 */
#define CPU1_HRHV_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F014u)
/** Alias (User Manual Name) for CPU1_HRHV_TR2_ADR */
#define CPU1_HRHV_TR2ADR (CPU1_HRHV_TR2_ADR)

/** \brief F018, CPU1 trigger event 3 */
#define CPU1_HRHV_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F018u)
/** Alias (User Manual Name) for CPU1_HRHV_TR3_EVT */
#define CPU1_HRHV_TR3EVT (CPU1_HRHV_TR3_EVT)

/** \brief F01C, CPU1 trigger address 3 */
#define CPU1_HRHV_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F01Cu)
/** Alias (User Manual Name) for CPU1_HRHV_TR3_ADR */
#define CPU1_HRHV_TR3ADR (CPU1_HRHV_TR3_ADR)

/** \brief F020, CPU1 trigger event 4 */
#define CPU1_HRHV_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F020u)
/** Alias (User Manual Name) for CPU1_HRHV_TR4_EVT */
#define CPU1_HRHV_TR4EVT (CPU1_HRHV_TR4_EVT)

/** \brief F024, CPU1 trigger address 4 */
#define CPU1_HRHV_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F024u)
/** Alias (User Manual Name) for CPU1_HRHV_TR4_ADR */
#define CPU1_HRHV_TR4ADR (CPU1_HRHV_TR4_ADR)

/** \brief F028, CPU1 trigger event 5 */
#define CPU1_HRHV_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F028u)
/** Alias (User Manual Name) for CPU1_HRHV_TR5_EVT */
#define CPU1_HRHV_TR5EVT (CPU1_HRHV_TR5_EVT)

/** \brief F02C, CPU1 trigger address 5 */
#define CPU1_HRHV_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F02Cu)
/** Alias (User Manual Name) for CPU1_HRHV_TR5_ADR */
#define CPU1_HRHV_TR5ADR (CPU1_HRHV_TR5_ADR)

/** \brief F030, CPU1 trigger event 6 */
#define CPU1_HRHV_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F030u)
/** Alias (User Manual Name) for CPU1_HRHV_TR6_EVT */
#define CPU1_HRHV_TR6EVT (CPU1_HRHV_TR6_EVT)

/** \brief F034, CPU1 trigger address 6 */
#define CPU1_HRHV_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F034u)
/** Alias (User Manual Name) for CPU1_HRHV_TR6_ADR */
#define CPU1_HRHV_TR6ADR (CPU1_HRHV_TR6_ADR)

/** \brief F038, CPU1 trigger event 7 */
#define CPU1_HRHV_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF887F038u)
/** Alias (User Manual Name) for CPU1_HRHV_TR7_EVT */
#define CPU1_HRHV_TR7EVT (CPU1_HRHV_TR7_EVT)

/** \brief F03C, CPU1 trigger address 7 */
#define CPU1_HRHV_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF887F03Cu)
/** Alias (User Manual Name) for CPU1_HRHV_TR7_ADR */
#define CPU1_HRHV_TR7ADR (CPU1_HRHV_TR7_ADR)

/** \brief FC00, CPU1 HR specific counter control */
#define CPU1_HRHV_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF887FC00u)

/** \brief FC04, CPU1 HR specific CPU clock cycle count */
#define CPU1_HRHV_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF887FC04u)

/** \brief FC08, CPU1 HR specific instruction count */
#define CPU1_HRHV_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF887FC08u)

/** \brief FC0C, CPU1 HR specific multi-count register 1 */
#define CPU1_HRHV_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF887FC0Cu)

/** \brief FC10, CPU1 HR specific multi-count register 2 */
#define CPU1_HRHV_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF887FC10u)

/** \brief FC14, CPU1 HR specific multi-count register 3 */
#define CPU1_HRHV_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF887FC14u)

/** \brief FD00, CPU1 debug status register */
#define CPU1_HRHV_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF887FD00u)

/** \brief FD08, CPU1 external event register */
#define CPU1_HRHV_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF887FD08u)

/** \brief FD0C, CPU1 core register access event */
#define CPU1_HRHV_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF887FD0Cu)

/** \brief FD10, CPU1 software debug event */
#define CPU1_HRHV_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF887FD10u)

/** \brief FD14, CPU1 debug action configuration */
#define CPU1_HRHV_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF887FD14u)

/** \brief FD30, CPU1 trigger accumulator */
#define CPU1_HRHV_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF887FD30u)

/** \brief FD40, CPU1 debug monitor start address */
#define CPU1_HRHV_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF887FD40u)

/** \brief FD44, CPU1 debug context save area pointer */
#define CPU1_HRHV_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF887FD44u)

/** \brief FD48, CPU1 debug trap control */
#define CPU1_HRHV_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF887FD48u)

/** \brief FD4C, CPU1 debug configuration */
#define CPU1_HRHV_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF887FD4Cu)

/** \brief FD50, CPU1 trace configuration */
#define CPU1_HRHV_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF887FD50u)

/** \brief FD54, CPU1 trace filter */
#define CPU1_HRHV_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF887FD54u)

/** \brief FD58, CPU1 trace bandwidth limiter */
#define CPU1_HRHV_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF887FD58u)

/** \brief FD60, CPU1 MCDS performance counter control register */
#define CPU1_HRHV_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF887FD60u)

/** \brief FE00, CPU1 previous context information register */
#define CPU1_HRHV_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF887FE00u)

/** \brief FE04, CPU1 HR specific program status word */
#define CPU1_HRHV_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF887FE04u)

/** \brief FE08, CPU1 program counter */
#define CPU1_HRHV_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF887FE08u)

/** \brief FE14, CPU1 HR specific core configuration register */
#define CPU1_HRHV_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF887FE14u)

/** \brief FE18, CPU1 identification register */
#define CPU1_HRHV_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF887FE18u)

/** \brief FE1C, CPU1 core identification register */
#define CPU1_HRHV_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF887FE1Cu)

/** \brief FE20, CPU1 HR specific base interrupt vector table pointer */
#define CPU1_HRHV_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF887FE20u)

/** \brief FE24, CPU1 HR specific base trap vector table pointer */
#define CPU1_HRHV_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF887FE24u)

/** \brief FE28, CPU1 HR specific interrupt stack pointer */
#define CPU1_HRHV_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF887FE28u)

/** \brief FE2C, CPU1 interrupt control register */
#define CPU1_HRHV_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF887FE2Cu)

/** \brief FE34, CPU1 previous PRS */
#define CPU1_HRHV_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF887FE34u)

/** \brief FE38, CPU1 HR specific free CSA list head pointer */
#define CPU1_HRHV_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF887FE38u)

/** \brief FE3C, CPU1 HR specific free CSA list limit pointer */
#define CPU1_HRHV_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF887FE3Cu)

/** \brief FE40, CPU1 software identification */
#define CPU1_HRHV_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF887FE40u)

/** \brief FE50, CPU1 customer ID register */
#define CPU1_HRHV_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF887FE50u)

/** \brief FE60, CPU1 core boot configuration register */
#define CPU1_HRHV_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF887FE60u)

/** \brief FE64, CPU1 lockstep control register */
#define CPU1_HRHV_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF887FE64u)

/** \brief FE68, CPU1 clock control register */
#define CPU1_HRHV_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF887FE68u)

/** \brief FE6C, CPU1 hardware configuration  */
#define CPU1_HRHV_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF887FE6Cu)

/** \brief FF80, CPU1 HR specific address general purpose register 0 */
#define CPU1_HRHV_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF887FF80u)

/** \brief FF84, CPU1 HR specific address general purpose register 1 */
#define CPU1_HRHV_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF887FF84u)

/** \brief FFA0, CPU1 HR specific address general purpose register 8 */
#define CPU1_HRHV_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF887FFA0u)

/** \brief FFA4, CPU1 HR specific address general purpose register 9 */
#define CPU1_HRHV_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF887FFA4u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpu_Registers_Cfg_Cpu2
 * \{  */
/** \brief 0, CPU2 system timer clock control register */
#define CPU2_STM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8880000u)

/** \brief 0, CPU2 system timer clock control register", hypervisor view" */
#define CPU2_STMHV_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8880000u)

/** \brief 4, CPU2 OCDS control and status register */
#define CPU2_STM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8880004u)

/** \brief 4, CPU2 OCDS control and status register", hypervisor view" */
#define CPU2_STMHV_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8880004u)

/** \brief 20, CPU2 system timer absolute timer */
#define CPU2_STM_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8880020u)

/** \brief 20, CPU2 system timer absolute timer", hypervisor view" */
#define CPU2_STMHV_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8880020u)

/** \brief 100, CPU2 VM0 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM0_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880100u)

/** \brief 104, CPU2 VM0 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM0_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880104u)

/** \brief 108, CPU2 VM0 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM0_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8880108u)

/** \brief 10C, CPU2 VM0 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM0_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF888010Cu)
/** Alias (User Manual Name) for CPU2_STMHV_VM0_STM_ICR */
#define CPU2_STMHV_VM0_ICR (CPU2_STMHV_VM0_STM_ICR)

/** \brief 110, CPU2 VM0 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM0_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8880110u)

/** \brief 114, CPU2 VM0 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8880114u)

/** \brief 118, CPU2 VM0 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM0_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8880118u)

/** \brief 120, CPU2 system timer compare register 0 */
#define CPU2_STM_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880120u)

/** \brief 120, CPU2 VM1 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM1_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880120u)

/** \brief 124, CPU2 system timer compare register 1 */
#define CPU2_STM_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880124u)

/** \brief 124, CPU2 VM1 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM1_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880124u)

/** \brief 128, CPU2 system timer compare match control register */
#define CPU2_STM_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8880128u)

/** \brief 128, CPU2 VM1 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM1_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8880128u)

/** \brief 12C, CPU2 system timer interrupt control register */
#define CPU2_STM_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF888012Cu)
/** Alias (User Manual Name) for CPU2_STM_STM_ICR */
#define CPU2_STM_ICR (CPU2_STM_STM_ICR)

/** \brief 12C, CPU2 VM1 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM1_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF888012Cu)
/** Alias (User Manual Name) for CPU2_STMHV_VM1_STM_ICR */
#define CPU2_STMHV_VM1_ICR (CPU2_STMHV_VM1_STM_ICR)

/** \brief 130, CPU2 system timer interrupt set/clear register */
#define CPU2_STM_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8880130u)

/** \brief 130, CPU2 VM1 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM1_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8880130u)

/** \brief 134, CPU2 system timer interrupt status register */
#define CPU2_STM_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8880134u)

/** \brief 134, CPU2 VM1 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM1_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8880134u)

/** \brief 138, CPU2 system timer relative timer */
#define CPU2_STM_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8880138u)

/** \brief 138, CPU2 VM1 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM1_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8880138u)

/** \brief 140, CPU2 VM2 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM2_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880140u)

/** \brief 144, CPU2 VM2 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM2_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880144u)

/** \brief 148, CPU2 VM2 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM2_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8880148u)

/** \brief 14C, CPU2 VM2 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM2_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF888014Cu)
/** Alias (User Manual Name) for CPU2_STMHV_VM2_STM_ICR */
#define CPU2_STMHV_VM2_ICR (CPU2_STMHV_VM2_STM_ICR)

/** \brief 150, CPU2 VM2 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM2_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8880150u)

/** \brief 154, CPU2 VM2 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM2_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8880154u)

/** \brief 158, CPU2 VM2 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM2_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8880158u)

/** \brief 160, CPU2 VM3 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM3_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880160u)

/** \brief 164, CPU2 VM3 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM3_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880164u)

/** \brief 168, CPU2 VM3 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM3_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8880168u)

/** \brief 16C, CPU2 VM3 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM3_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF888016Cu)
/** Alias (User Manual Name) for CPU2_STMHV_VM3_STM_ICR */
#define CPU2_STMHV_VM3_ICR (CPU2_STMHV_VM3_STM_ICR)

/** \brief 170, CPU2 VM3 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM3_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8880170u)

/** \brief 174, CPU2 VM3 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM3_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8880174u)

/** \brief 178, CPU2 VM3 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM3_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8880178u)

/** \brief 180, CPU2 VM4 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM4_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880180u)

/** \brief 184, CPU2 VM4 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM4_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8880184u)

/** \brief 188, CPU2 VM4 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM4_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8880188u)

/** \brief 18C, CPU2 VM4 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM4_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF888018Cu)
/** Alias (User Manual Name) for CPU2_STMHV_VM4_STM_ICR */
#define CPU2_STMHV_VM4_ICR (CPU2_STMHV_VM4_STM_ICR)

/** \brief 190, CPU2 VM4 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM4_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8880190u)

/** \brief 194, CPU2 VM4 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM4_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8880194u)

/** \brief 198, CPU2 VM4 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM4_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8880198u)

/** \brief 1A0, CPU2 VM5 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM5_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88801A0u)

/** \brief 1A4, CPU2 VM5 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM5_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88801A4u)

/** \brief 1A8, CPU2 VM5 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM5_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88801A8u)

/** \brief 1AC, CPU2 VM5 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM5_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88801ACu)
/** Alias (User Manual Name) for CPU2_STMHV_VM5_STM_ICR */
#define CPU2_STMHV_VM5_ICR (CPU2_STMHV_VM5_STM_ICR)

/** \brief 1B0, CPU2 VM5 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM5_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88801B0u)

/** \brief 1B4, CPU2 VM5 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM5_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88801B4u)

/** \brief 1B8, CPU2 VM5 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM5_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88801B8u)

/** \brief 1C0, CPU2 VM6 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM6_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88801C0u)

/** \brief 1C4, CPU2 VM6 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM6_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88801C4u)

/** \brief 1C8, CPU2 VM6 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM6_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88801C8u)

/** \brief 1CC, CPU2 VM6 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM6_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88801CCu)
/** Alias (User Manual Name) for CPU2_STMHV_VM6_STM_ICR */
#define CPU2_STMHV_VM6_ICR (CPU2_STMHV_VM6_STM_ICR)

/** \brief 1D0, CPU2 VM6 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM6_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88801D0u)

/** \brief 1D4, CPU2 VM6 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM6_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88801D4u)

/** \brief 1D8, CPU2 VM6 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM6_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88801D8u)

/** \brief 1E0, CPU2 VM7 system timer compare register 0", hypervisor view" */
#define CPU2_STMHV_VM7_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88801E0u)

/** \brief 1E4, CPU2 VM7 system timer compare register 1", hypervisor view" */
#define CPU2_STMHV_VM7_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88801E4u)

/** \brief 1E8, CPU2 VM7 system timer compare match control register", hypervisor view" */
#define CPU2_STMHV_VM7_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88801E8u)

/** \brief 1EC, CPU2 VM7 system timer interrupt control register", hypervisor view" */
#define CPU2_STMHV_VM7_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88801ECu)
/** Alias (User Manual Name) for CPU2_STMHV_VM7_STM_ICR */
#define CPU2_STMHV_VM7_ICR (CPU2_STMHV_VM7_STM_ICR)

/** \brief 1F0, CPU2 VM7 system timer interrupt set/clear register", hypervisor view" */
#define CPU2_STMHV_VM7_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88801F0u)

/** \brief 1F4, CPU2 VM7 system timer interrupt status register", hypervisor view" */
#define CPU2_STMHV_VM7_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88801F4u)

/** \brief 1F8, CPU2 VM7 system timer relative timer", hypervisor view" */
#define CPU2_STMHV_VM7_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88801F8u)

/** \brief D000, CPU2 reset register 0 */
#define CPU2_KRST0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST0*)0xF888D000u)

/** \brief D004, CPU2 reset register 1 */
#define CPU2_KRST1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST1*)0xF888D004u)

/** \brief D008, CPU2 reset clear register */
#define CPU2_KRSTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRSTCLR*)0xF888D008u)

/** \brief 8, CPU2 PROTSPR register safe endinit */
#define CPU2_PROTSPRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF888E008u)

/** \brief 20, CPU2 shadow SPR, write access enable register A */
#define CPU2_ACCENSPRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF888E020u)

/** \brief 24, CPU2 shadow SPR, write access enable register B */
#define CPU2_ACCENSPRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF888E024u)

/** \brief 28, CPU2 shadow SPR, read access enable register A */
#define CPU2_ACCENSPRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF888E028u)

/** \brief 2C, CPU2 shadow SPR, read access enable register B */
#define CPU2_ACCENSPRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF888E02Cu)

/** \brief 30, CPU2 shadow SPR, VM access enable register */
#define CPU2_ACCENSPRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF888E030u)

/** \brief 34, CPU2 shadow SPR, PRS access enable register */
#define CPU2_ACCENSPRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF888E034u)

/** \brief 38, CPU2 shadow SPR, region lower address register */
#define CPU2_ACCENSPRCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA*)0xF888E038u)

/** \brief 3C, CPU2 shadow SPR, region upper address register */
#define CPU2_ACCENSPRCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA*)0xF888E03Cu)

/** \brief 48, CPU2 PROTDLMU register safe endinit */
#define CPU2_PROTDLMUSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF888E048u)

/** \brief 60, CPU2 shadow DLMU, write access enable register A */
#define CPU2_ACCENDLMUCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF888E060u)

/** \brief 64, CPU2 shadow DLMU, write access enable register B */
#define CPU2_ACCENDLMUCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF888E064u)

/** \brief 68, CPU2 shadow DLMU, read access enable register A */
#define CPU2_ACCENDLMUCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF888E068u)

/** \brief 6C, CPU2 shadow DLMU, read access enable register B */
#define CPU2_ACCENDLMUCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF888E06Cu)

/** \brief 70, CPU2 shadow DLMU, VM access enable register */
#define CPU2_ACCENDLMUCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF888E070u)

/** \brief 74, CPU2 shadow DLMU, PRS access enable register */
#define CPU2_ACCENDLMUCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF888E074u)

/** \brief 78, CPU2 shadow DLMU, region lower address register */
#define CPU2_ACCENDLMUCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA_89*)0xF888E078u)

/** \brief 7C, CPU2 shadow DLMU, region upper address register */
#define CPU2_ACCENDLMUCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA_89*)0xF888E07Cu)

/** \brief 80, CPU2 PROTSFR register endinit */
#define CPU2_PROTSFRE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF888E080u)

/** \brief 88, CPU2 PROTSFR register safe endinit */
#define CPU2_PROTSFRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF888E088u)

/** \brief A0, CPU2 shadow SFR, write access enable register A */
#define CPU2_ACCENSFRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF888E0A0u)

/** \brief A4, CPU2 shadow SFR, write access enable register B */
#define CPU2_ACCENSFRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF888E0A4u)

/** \brief A8, CPU2 shadow SFR, read access enable register A */
#define CPU2_ACCENSFRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF888E0A8u)

/** \brief AC, CPU2 shadow SFR, read access enable register B */
#define CPU2_ACCENSFRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF888E0ACu)

/** \brief B0, CPU2 shadow SFR, VM access enable register */
#define CPU2_ACCENSFRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF888E0B0u)

/** \brief B4, CPU2 shadow SFR, PRS access enable register */
#define CPU2_ACCENSFRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF888E0B4u)

/** \brief C0, CPU2 PROTRST register endinit */
#define CPU2_PROTRSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF888E0C0u)

/** \brief D8, CPU2 PROTSTM Register Safe Endinit */
#define CPU2_PROTSTMSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROTSTMSE*)0xF888E0D8u)

/** \brief E0, CPU2 shadow STM, write access enable register A */
#define CPU2_ACCENSTMCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF888E0E0u)

/** \brief E4, CPU2 shadow STM, write access enable register B */
#define CPU2_ACCENSTMCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF888E0E4u)

/** \brief E8, CPU2 shadow STM, read access enable register A */
#define CPU2_ACCENSTMCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF888E0E8u)

/** \brief EC, CPU2 shadow STM, read access enable register B */
#define CPU2_ACCENSTMCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF888E0ECu)

/** \brief F0, CPU2 shadow STM, VM access enable register */
#define CPU2_ACCENSTMCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF888E0F0u)

/** \brief F4, CPU2 shadow STM, PRS access enable register */
#define CPU2_ACCENSTMCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF888E0F4u)

/** \brief 200, CPU2 SPR range 0, write access enable register A */
#define CPU2_ACCENSPR0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E200u)

/** \brief 204, CPU2 SPR range 0, write access enable register B */
#define CPU2_ACCENSPR0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E204u)

/** \brief 208, CPU2 SPR range 0, read access enable register A */
#define CPU2_ACCENSPR0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E208u)

/** \brief 20C, CPU2 SPR range 0, read access enable register B */
#define CPU2_ACCENSPR0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E20Cu)

/** \brief 210, CPU2 SPR range 0, VM access enable register */
#define CPU2_ACCENSPR0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E210u)

/** \brief 214, CPU2 SPR range 0, PRS access enable register */
#define CPU2_ACCENSPR0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E214u)

/** \brief 218, CPU2 SPR range 0, region lower address register */
#define CPU2_ACCENSPR0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E218u)

/** \brief 21C, CPU2 SPR range 0, region upper address register */
#define CPU2_ACCENSPR0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E21Cu)

/** \brief 220, CPU2 SPR range 1, write access enable register A */
#define CPU2_ACCENSPR1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E220u)

/** \brief 224, CPU2 SPR range 1, write access enable register B */
#define CPU2_ACCENSPR1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E224u)

/** \brief 228, CPU2 SPR range 1, read access enable register A */
#define CPU2_ACCENSPR1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E228u)

/** \brief 22C, CPU2 SPR range 1, read access enable register B */
#define CPU2_ACCENSPR1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E22Cu)

/** \brief 230, CPU2 SPR range 1, VM access enable register */
#define CPU2_ACCENSPR1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E230u)

/** \brief 234, CPU2 SPR range 1, PRS access enable register */
#define CPU2_ACCENSPR1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E234u)

/** \brief 238, CPU2 SPR range 1, region lower address register */
#define CPU2_ACCENSPR1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E238u)

/** \brief 23C, CPU2 SPR range 1, region upper address register */
#define CPU2_ACCENSPR1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E23Cu)

/** \brief 240, CPU2 SPR range 2, write access enable register A */
#define CPU2_ACCENSPR2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E240u)

/** \brief 244, CPU2 SPR range 2, write access enable register B */
#define CPU2_ACCENSPR2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E244u)

/** \brief 248, CPU2 SPR range 2, read access enable register A */
#define CPU2_ACCENSPR2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E248u)

/** \brief 24C, CPU2 SPR range 2, read access enable register B */
#define CPU2_ACCENSPR2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E24Cu)

/** \brief 250, CPU2 SPR range 2, VM access enable register */
#define CPU2_ACCENSPR2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E250u)

/** \brief 254, CPU2 SPR range 2, PRS access enable register */
#define CPU2_ACCENSPR2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E254u)

/** \brief 258, CPU2 SPR range 2, region lower address register */
#define CPU2_ACCENSPR2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E258u)

/** \brief 25C, CPU2 SPR range 2, region upper address register */
#define CPU2_ACCENSPR2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E25Cu)

/** \brief 260, CPU2 SPR range 3, write access enable register A */
#define CPU2_ACCENSPR3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E260u)

/** \brief 264, CPU2 SPR range 3, write access enable register B */
#define CPU2_ACCENSPR3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E264u)

/** \brief 268, CPU2 SPR range 3, read access enable register A */
#define CPU2_ACCENSPR3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E268u)

/** \brief 26C, CPU2 SPR range 3, read access enable register B */
#define CPU2_ACCENSPR3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E26Cu)

/** \brief 270, CPU2 SPR range 3, VM access enable register */
#define CPU2_ACCENSPR3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E270u)

/** \brief 274, CPU2 SPR range 3, PRS access enable register */
#define CPU2_ACCENSPR3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E274u)

/** \brief 278, CPU2 SPR range 3, region lower address register */
#define CPU2_ACCENSPR3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E278u)

/** \brief 27C, CPU2 SPR range 3, region upper address register */
#define CPU2_ACCENSPR3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E27Cu)

/** \brief 280, CPU2 SPR range 4, write access enable register A */
#define CPU2_ACCENSPR4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E280u)

/** \brief 284, CPU2 SPR range 4, write access enable register B */
#define CPU2_ACCENSPR4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E284u)

/** \brief 288, CPU2 SPR range 4, read access enable register A */
#define CPU2_ACCENSPR4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E288u)

/** \brief 28C, CPU2 SPR range 4, read access enable register B */
#define CPU2_ACCENSPR4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E28Cu)

/** \brief 290, CPU2 SPR range 4, VM access enable register */
#define CPU2_ACCENSPR4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E290u)

/** \brief 294, CPU2 SPR range 4, PRS access enable register */
#define CPU2_ACCENSPR4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E294u)

/** \brief 298, CPU2 SPR range 4, region lower address register */
#define CPU2_ACCENSPR4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E298u)

/** \brief 29C, CPU2 SPR range 4, region upper address register */
#define CPU2_ACCENSPR4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E29Cu)

/** \brief 2A0, CPU2 SPR range 5, write access enable register A */
#define CPU2_ACCENSPR5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E2A0u)

/** \brief 2A4, CPU2 SPR range 5, write access enable register B */
#define CPU2_ACCENSPR5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E2A4u)

/** \brief 2A8, CPU2 SPR range 5, read access enable register A */
#define CPU2_ACCENSPR5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E2A8u)

/** \brief 2AC, CPU2 SPR range 5, read access enable register B */
#define CPU2_ACCENSPR5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E2ACu)

/** \brief 2B0, CPU2 SPR range 5, VM access enable register */
#define CPU2_ACCENSPR5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E2B0u)

/** \brief 2B4, CPU2 SPR range 5, PRS access enable register */
#define CPU2_ACCENSPR5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E2B4u)

/** \brief 2B8, CPU2 SPR range 5, region lower address register */
#define CPU2_ACCENSPR5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E2B8u)

/** \brief 2BC, CPU2 SPR range 5, region upper address register */
#define CPU2_ACCENSPR5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E2BCu)

/** \brief 2C0, CPU2 SPR range 6, write access enable register A */
#define CPU2_ACCENSPR6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E2C0u)

/** \brief 2C4, CPU2 SPR range 6, write access enable register B */
#define CPU2_ACCENSPR6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E2C4u)

/** \brief 2C8, CPU2 SPR range 6, read access enable register A */
#define CPU2_ACCENSPR6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E2C8u)

/** \brief 2CC, CPU2 SPR range 6, read access enable register B */
#define CPU2_ACCENSPR6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E2CCu)

/** \brief 2D0, CPU2 SPR range 6, VM access enable register */
#define CPU2_ACCENSPR6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E2D0u)

/** \brief 2D4, CPU2 SPR range 6, PRS access enable register */
#define CPU2_ACCENSPR6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E2D4u)

/** \brief 2D8, CPU2 SPR range 6, region lower address register */
#define CPU2_ACCENSPR6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E2D8u)

/** \brief 2DC, CPU2 SPR range 6, region upper address register */
#define CPU2_ACCENSPR6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E2DCu)

/** \brief 2E0, CPU2 SPR range 7, write access enable register A */
#define CPU2_ACCENSPR7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E2E0u)

/** \brief 2E4, CPU2 SPR range 7, write access enable register B */
#define CPU2_ACCENSPR7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E2E4u)

/** \brief 2E8, CPU2 SPR range 7, read access enable register A */
#define CPU2_ACCENSPR7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E2E8u)

/** \brief 2EC, CPU2 SPR range 7, read access enable register B */
#define CPU2_ACCENSPR7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E2ECu)

/** \brief 2F0, CPU2 SPR range 7, VM access enable register */
#define CPU2_ACCENSPR7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E2F0u)

/** \brief 2F4, CPU2 SPR range 7, PRS access enable register */
#define CPU2_ACCENSPR7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E2F4u)

/** \brief 2F8, CPU2 SPR range 7, region lower address register */
#define CPU2_ACCENSPR7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E2F8u)

/** \brief 2FC, CPU2 SPR range 7, region upper address register */
#define CPU2_ACCENSPR7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E2FCu)

/** \brief 300, CPU2 SPR range 8, write access enable register A */
#define CPU2_ACCENSPR8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E300u)

/** \brief 304, CPU2 SPR range 8, write access enable register B */
#define CPU2_ACCENSPR8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E304u)

/** \brief 308, CPU2 SPR range 8, read access enable register A */
#define CPU2_ACCENSPR8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E308u)

/** \brief 30C, CPU2 SPR range 8, read access enable register B */
#define CPU2_ACCENSPR8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E30Cu)

/** \brief 310, CPU2 SPR range 8, VM access enable register */
#define CPU2_ACCENSPR8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E310u)

/** \brief 314, CPU2 SPR range 8, PRS access enable register */
#define CPU2_ACCENSPR8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E314u)

/** \brief 318, CPU2 SPR range 8, region lower address register */
#define CPU2_ACCENSPR8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E318u)

/** \brief 31C, CPU2 SPR range 8, region upper address register */
#define CPU2_ACCENSPR8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E31Cu)

/** \brief 320, CPU2 SPR range 9, write access enable register A */
#define CPU2_ACCENSPR9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E320u)

/** \brief 324, CPU2 SPR range 9, write access enable register B */
#define CPU2_ACCENSPR9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E324u)

/** \brief 328, CPU2 SPR range 9, read access enable register A */
#define CPU2_ACCENSPR9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E328u)

/** \brief 32C, CPU2 SPR range 9, read access enable register B */
#define CPU2_ACCENSPR9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E32Cu)

/** \brief 330, CPU2 SPR range 9, VM access enable register */
#define CPU2_ACCENSPR9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E330u)

/** \brief 334, CPU2 SPR range 9, PRS access enable register */
#define CPU2_ACCENSPR9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E334u)

/** \brief 338, CPU2 SPR range 9, region lower address register */
#define CPU2_ACCENSPR9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E338u)

/** \brief 33C, CPU2 SPR range 9, region upper address register */
#define CPU2_ACCENSPR9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E33Cu)

/** \brief 340, CPU2 SPR range 10, write access enable register A */
#define CPU2_ACCENSPR10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E340u)

/** \brief 344, CPU2 SPR range 10, write access enable register B */
#define CPU2_ACCENSPR10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E344u)

/** \brief 348, CPU2 SPR range 10, read access enable register A */
#define CPU2_ACCENSPR10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E348u)

/** \brief 34C, CPU2 SPR range 10, read access enable register B */
#define CPU2_ACCENSPR10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E34Cu)

/** \brief 350, CPU2 SPR range 10, VM access enable register */
#define CPU2_ACCENSPR10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E350u)

/** \brief 354, CPU2 SPR range 10, PRS access enable register */
#define CPU2_ACCENSPR10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E354u)

/** \brief 358, CPU2 SPR range 10, region lower address register */
#define CPU2_ACCENSPR10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E358u)

/** \brief 35C, CPU2 SPR range 10, region upper address register */
#define CPU2_ACCENSPR10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E35Cu)

/** \brief 360, CPU2 SPR range 11, write access enable register A */
#define CPU2_ACCENSPR11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E360u)

/** \brief 364, CPU2 SPR range 11, write access enable register B */
#define CPU2_ACCENSPR11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E364u)

/** \brief 368, CPU2 SPR range 11, read access enable register A */
#define CPU2_ACCENSPR11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E368u)

/** \brief 36C, CPU2 SPR range 11, read access enable register B */
#define CPU2_ACCENSPR11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E36Cu)

/** \brief 370, CPU2 SPR range 11, VM access enable register */
#define CPU2_ACCENSPR11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E370u)

/** \brief 374, CPU2 SPR range 11, PRS access enable register */
#define CPU2_ACCENSPR11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E374u)

/** \brief 378, CPU2 SPR range 11, region lower address register */
#define CPU2_ACCENSPR11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E378u)

/** \brief 37C, CPU2 SPR range 11, region upper address register */
#define CPU2_ACCENSPR11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E37Cu)

/** \brief 380, CPU2 SPR range 12, write access enable register A */
#define CPU2_ACCENSPR12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E380u)

/** \brief 384, CPU2 SPR range 12, write access enable register B */
#define CPU2_ACCENSPR12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E384u)

/** \brief 388, CPU2 SPR range 12, read access enable register A */
#define CPU2_ACCENSPR12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E388u)

/** \brief 38C, CPU2 SPR range 12, read access enable register B */
#define CPU2_ACCENSPR12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E38Cu)

/** \brief 390, CPU2 SPR range 12, VM access enable register */
#define CPU2_ACCENSPR12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E390u)

/** \brief 394, CPU2 SPR range 12, PRS access enable register */
#define CPU2_ACCENSPR12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E394u)

/** \brief 398, CPU2 SPR range 12, region lower address register */
#define CPU2_ACCENSPR12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E398u)

/** \brief 39C, CPU2 SPR range 12, region upper address register */
#define CPU2_ACCENSPR12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E39Cu)

/** \brief 3A0, CPU2 SPR range 13, write access enable register A */
#define CPU2_ACCENSPR13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E3A0u)

/** \brief 3A4, CPU2 SPR range 13, write access enable register B */
#define CPU2_ACCENSPR13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E3A4u)

/** \brief 3A8, CPU2 SPR range 13, read access enable register A */
#define CPU2_ACCENSPR13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E3A8u)

/** \brief 3AC, CPU2 SPR range 13, read access enable register B */
#define CPU2_ACCENSPR13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E3ACu)

/** \brief 3B0, CPU2 SPR range 13, VM access enable register */
#define CPU2_ACCENSPR13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E3B0u)

/** \brief 3B4, CPU2 SPR range 13, PRS access enable register */
#define CPU2_ACCENSPR13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E3B4u)

/** \brief 3B8, CPU2 SPR range 13, region lower address register */
#define CPU2_ACCENSPR13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E3B8u)

/** \brief 3BC, CPU2 SPR range 13, region upper address register */
#define CPU2_ACCENSPR13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E3BCu)

/** \brief 3C0, CPU2 SPR range 14, write access enable register A */
#define CPU2_ACCENSPR14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E3C0u)

/** \brief 3C4, CPU2 SPR range 14, write access enable register B */
#define CPU2_ACCENSPR14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E3C4u)

/** \brief 3C8, CPU2 SPR range 14, read access enable register A */
#define CPU2_ACCENSPR14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E3C8u)

/** \brief 3CC, CPU2 SPR range 14, read access enable register B */
#define CPU2_ACCENSPR14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E3CCu)

/** \brief 3D0, CPU2 SPR range 14, VM access enable register */
#define CPU2_ACCENSPR14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E3D0u)

/** \brief 3D4, CPU2 SPR range 14, PRS access enable register */
#define CPU2_ACCENSPR14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E3D4u)

/** \brief 3D8, CPU2 SPR range 14, region lower address register */
#define CPU2_ACCENSPR14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E3D8u)

/** \brief 3DC, CPU2 SPR range 14, region upper address register */
#define CPU2_ACCENSPR14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E3DCu)

/** \brief 3E0, CPU2 SPR range 15, write access enable register A */
#define CPU2_ACCENSPR15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E3E0u)

/** \brief 3E4, CPU2 SPR range 15, write access enable register B */
#define CPU2_ACCENSPR15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E3E4u)

/** \brief 3E8, CPU2 SPR range 15, read access enable register A */
#define CPU2_ACCENSPR15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E3E8u)

/** \brief 3EC, CPU2 SPR range 15, read access enable register B */
#define CPU2_ACCENSPR15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E3ECu)

/** \brief 3F0, CPU2 SPR range 15, VM access enable register */
#define CPU2_ACCENSPR15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E3F0u)

/** \brief 3F4, CPU2 SPR range 15, PRS access enable register */
#define CPU2_ACCENSPR15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E3F4u)

/** \brief 3F8, CPU2 SPR range 15, region lower address register */
#define CPU2_ACCENSPR15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF888E3F8u)

/** \brief 3FC, CPU2 SPR range 15, region upper address register */
#define CPU2_ACCENSPR15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF888E3FCu)

/** \brief 400, CPU2 DLMU range 0, write access enable register A */
#define CPU2_ACCENDLMU0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E400u)

/** \brief 404, CPU2 DLMU range 0, write access enable register B */
#define CPU2_ACCENDLMU0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E404u)

/** \brief 408, CPU2 DLMU range 0, read access enable register A */
#define CPU2_ACCENDLMU0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E408u)

/** \brief 40C, CPU2 DLMU range 0, read access enable register B */
#define CPU2_ACCENDLMU0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E40Cu)

/** \brief 410, CPU2 DLMU range 0, VM access enable register */
#define CPU2_ACCENDLMU0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E410u)

/** \brief 414, CPU2 DLMU range 0, PRS access enable register */
#define CPU2_ACCENDLMU0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E414u)

/** \brief 418, CPU2 DLMU range 0, region lower address register */
#define CPU2_ACCENDLMU0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E418u)

/** \brief 41C, CPU2 DLMU range 0, region upper address register */
#define CPU2_ACCENDLMU0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E41Cu)

/** \brief 420, CPU2 DLMU range 1, write access enable register A */
#define CPU2_ACCENDLMU1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E420u)

/** \brief 424, CPU2 DLMU range 1, write access enable register B */
#define CPU2_ACCENDLMU1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E424u)

/** \brief 428, CPU2 DLMU range 1, read access enable register A */
#define CPU2_ACCENDLMU1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E428u)

/** \brief 42C, CPU2 DLMU range 1, read access enable register B */
#define CPU2_ACCENDLMU1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E42Cu)

/** \brief 430, CPU2 DLMU range 1, VM access enable register */
#define CPU2_ACCENDLMU1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E430u)

/** \brief 434, CPU2 DLMU range 1, PRS access enable register */
#define CPU2_ACCENDLMU1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E434u)

/** \brief 438, CPU2 DLMU range 1, region lower address register */
#define CPU2_ACCENDLMU1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E438u)

/** \brief 43C, CPU2 DLMU range 1, region upper address register */
#define CPU2_ACCENDLMU1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E43Cu)

/** \brief 440, CPU2 DLMU range 2, write access enable register A */
#define CPU2_ACCENDLMU2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E440u)

/** \brief 444, CPU2 DLMU range 2, write access enable register B */
#define CPU2_ACCENDLMU2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E444u)

/** \brief 448, CPU2 DLMU range 2, read access enable register A */
#define CPU2_ACCENDLMU2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E448u)

/** \brief 44C, CPU2 DLMU range 2, read access enable register B */
#define CPU2_ACCENDLMU2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E44Cu)

/** \brief 450, CPU2 DLMU range 2, VM access enable register */
#define CPU2_ACCENDLMU2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E450u)

/** \brief 454, CPU2 DLMU range 2, PRS access enable register */
#define CPU2_ACCENDLMU2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E454u)

/** \brief 458, CPU2 DLMU range 2, region lower address register */
#define CPU2_ACCENDLMU2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E458u)

/** \brief 45C, CPU2 DLMU range 2, region upper address register */
#define CPU2_ACCENDLMU2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E45Cu)

/** \brief 460, CPU2 DLMU range 3, write access enable register A */
#define CPU2_ACCENDLMU3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E460u)

/** \brief 464, CPU2 DLMU range 3, write access enable register B */
#define CPU2_ACCENDLMU3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E464u)

/** \brief 468, CPU2 DLMU range 3, read access enable register A */
#define CPU2_ACCENDLMU3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E468u)

/** \brief 46C, CPU2 DLMU range 3, read access enable register B */
#define CPU2_ACCENDLMU3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E46Cu)

/** \brief 470, CPU2 DLMU range 3, VM access enable register */
#define CPU2_ACCENDLMU3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E470u)

/** \brief 474, CPU2 DLMU range 3, PRS access enable register */
#define CPU2_ACCENDLMU3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E474u)

/** \brief 478, CPU2 DLMU range 3, region lower address register */
#define CPU2_ACCENDLMU3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E478u)

/** \brief 47C, CPU2 DLMU range 3, region upper address register */
#define CPU2_ACCENDLMU3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E47Cu)

/** \brief 480, CPU2 DLMU range 4, write access enable register A */
#define CPU2_ACCENDLMU4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E480u)

/** \brief 484, CPU2 DLMU range 4, write access enable register B */
#define CPU2_ACCENDLMU4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E484u)

/** \brief 488, CPU2 DLMU range 4, read access enable register A */
#define CPU2_ACCENDLMU4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E488u)

/** \brief 48C, CPU2 DLMU range 4, read access enable register B */
#define CPU2_ACCENDLMU4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E48Cu)

/** \brief 490, CPU2 DLMU range 4, VM access enable register */
#define CPU2_ACCENDLMU4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E490u)

/** \brief 494, CPU2 DLMU range 4, PRS access enable register */
#define CPU2_ACCENDLMU4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E494u)

/** \brief 498, CPU2 DLMU range 4, region lower address register */
#define CPU2_ACCENDLMU4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E498u)

/** \brief 49C, CPU2 DLMU range 4, region upper address register */
#define CPU2_ACCENDLMU4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E49Cu)

/** \brief 4A0, CPU2 DLMU range 5, write access enable register A */
#define CPU2_ACCENDLMU5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E4A0u)

/** \brief 4A4, CPU2 DLMU range 5, write access enable register B */
#define CPU2_ACCENDLMU5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E4A4u)

/** \brief 4A8, CPU2 DLMU range 5, read access enable register A */
#define CPU2_ACCENDLMU5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E4A8u)

/** \brief 4AC, CPU2 DLMU range 5, read access enable register B */
#define CPU2_ACCENDLMU5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E4ACu)

/** \brief 4B0, CPU2 DLMU range 5, VM access enable register */
#define CPU2_ACCENDLMU5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E4B0u)

/** \brief 4B4, CPU2 DLMU range 5, PRS access enable register */
#define CPU2_ACCENDLMU5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E4B4u)

/** \brief 4B8, CPU2 DLMU range 5, region lower address register */
#define CPU2_ACCENDLMU5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E4B8u)

/** \brief 4BC, CPU2 DLMU range 5, region upper address register */
#define CPU2_ACCENDLMU5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E4BCu)

/** \brief 4C0, CPU2 DLMU range 6, write access enable register A */
#define CPU2_ACCENDLMU6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E4C0u)

/** \brief 4C4, CPU2 DLMU range 6, write access enable register B */
#define CPU2_ACCENDLMU6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E4C4u)

/** \brief 4C8, CPU2 DLMU range 6, read access enable register A */
#define CPU2_ACCENDLMU6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E4C8u)

/** \brief 4CC, CPU2 DLMU range 6, read access enable register B */
#define CPU2_ACCENDLMU6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E4CCu)

/** \brief 4D0, CPU2 DLMU range 6, VM access enable register */
#define CPU2_ACCENDLMU6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E4D0u)

/** \brief 4D4, CPU2 DLMU range 6, PRS access enable register */
#define CPU2_ACCENDLMU6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E4D4u)

/** \brief 4D8, CPU2 DLMU range 6, region lower address register */
#define CPU2_ACCENDLMU6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E4D8u)

/** \brief 4DC, CPU2 DLMU range 6, region upper address register */
#define CPU2_ACCENDLMU6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E4DCu)

/** \brief 4E0, CPU2 DLMU range 7, write access enable register A */
#define CPU2_ACCENDLMU7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E4E0u)

/** \brief 4E4, CPU2 DLMU range 7, write access enable register B */
#define CPU2_ACCENDLMU7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E4E4u)

/** \brief 4E8, CPU2 DLMU range 7, read access enable register A */
#define CPU2_ACCENDLMU7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E4E8u)

/** \brief 4EC, CPU2 DLMU range 7, read access enable register B */
#define CPU2_ACCENDLMU7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E4ECu)

/** \brief 4F0, CPU2 DLMU range 7, VM access enable register */
#define CPU2_ACCENDLMU7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E4F0u)

/** \brief 4F4, CPU2 DLMU range 7, PRS access enable register */
#define CPU2_ACCENDLMU7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E4F4u)

/** \brief 4F8, CPU2 DLMU range 7, region lower address register */
#define CPU2_ACCENDLMU7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E4F8u)

/** \brief 4FC, CPU2 DLMU range 7, region upper address register */
#define CPU2_ACCENDLMU7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E4FCu)

/** \brief 500, CPU2 DLMU range 8, write access enable register A */
#define CPU2_ACCENDLMU8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E500u)

/** \brief 504, CPU2 DLMU range 8, write access enable register B */
#define CPU2_ACCENDLMU8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E504u)

/** \brief 508, CPU2 DLMU range 8, read access enable register A */
#define CPU2_ACCENDLMU8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E508u)

/** \brief 50C, CPU2 DLMU range 8, read access enable register B */
#define CPU2_ACCENDLMU8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E50Cu)

/** \brief 510, CPU2 DLMU range 8, VM access enable register */
#define CPU2_ACCENDLMU8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E510u)

/** \brief 514, CPU2 DLMU range 8, PRS access enable register */
#define CPU2_ACCENDLMU8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E514u)

/** \brief 518, CPU2 DLMU range 8, region lower address register */
#define CPU2_ACCENDLMU8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E518u)

/** \brief 51C, CPU2 DLMU range 8, region upper address register */
#define CPU2_ACCENDLMU8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E51Cu)

/** \brief 520, CPU2 DLMU range 9, write access enable register A */
#define CPU2_ACCENDLMU9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E520u)

/** \brief 524, CPU2 DLMU range 9, write access enable register B */
#define CPU2_ACCENDLMU9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E524u)

/** \brief 528, CPU2 DLMU range 9, read access enable register A */
#define CPU2_ACCENDLMU9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E528u)

/** \brief 52C, CPU2 DLMU range 9, read access enable register B */
#define CPU2_ACCENDLMU9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E52Cu)

/** \brief 530, CPU2 DLMU range 9, VM access enable register */
#define CPU2_ACCENDLMU9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E530u)

/** \brief 534, CPU2 DLMU range 9, PRS access enable register */
#define CPU2_ACCENDLMU9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E534u)

/** \brief 538, CPU2 DLMU range 9, region lower address register */
#define CPU2_ACCENDLMU9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E538u)

/** \brief 53C, CPU2 DLMU range 9, region upper address register */
#define CPU2_ACCENDLMU9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E53Cu)

/** \brief 540, CPU2 DLMU range 10, write access enable register A */
#define CPU2_ACCENDLMU10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E540u)

/** \brief 544, CPU2 DLMU range 10, write access enable register B */
#define CPU2_ACCENDLMU10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E544u)

/** \brief 548, CPU2 DLMU range 10, read access enable register A */
#define CPU2_ACCENDLMU10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E548u)

/** \brief 54C, CPU2 DLMU range 10, read access enable register B */
#define CPU2_ACCENDLMU10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E54Cu)

/** \brief 550, CPU2 DLMU range 10, VM access enable register */
#define CPU2_ACCENDLMU10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E550u)

/** \brief 554, CPU2 DLMU range 10, PRS access enable register */
#define CPU2_ACCENDLMU10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E554u)

/** \brief 558, CPU2 DLMU range 10, region lower address register */
#define CPU2_ACCENDLMU10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E558u)

/** \brief 55C, CPU2 DLMU range 10, region upper address register */
#define CPU2_ACCENDLMU10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E55Cu)

/** \brief 560, CPU2 DLMU range 11, write access enable register A */
#define CPU2_ACCENDLMU11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E560u)

/** \brief 564, CPU2 DLMU range 11, write access enable register B */
#define CPU2_ACCENDLMU11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E564u)

/** \brief 568, CPU2 DLMU range 11, read access enable register A */
#define CPU2_ACCENDLMU11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E568u)

/** \brief 56C, CPU2 DLMU range 11, read access enable register B */
#define CPU2_ACCENDLMU11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E56Cu)

/** \brief 570, CPU2 DLMU range 11, VM access enable register */
#define CPU2_ACCENDLMU11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E570u)

/** \brief 574, CPU2 DLMU range 11, PRS access enable register */
#define CPU2_ACCENDLMU11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E574u)

/** \brief 578, CPU2 DLMU range 11, region lower address register */
#define CPU2_ACCENDLMU11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E578u)

/** \brief 57C, CPU2 DLMU range 11, region upper address register */
#define CPU2_ACCENDLMU11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E57Cu)

/** \brief 580, CPU2 DLMU range 12, write access enable register A */
#define CPU2_ACCENDLMU12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E580u)

/** \brief 584, CPU2 DLMU range 12, write access enable register B */
#define CPU2_ACCENDLMU12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E584u)

/** \brief 588, CPU2 DLMU range 12, read access enable register A */
#define CPU2_ACCENDLMU12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E588u)

/** \brief 58C, CPU2 DLMU range 12, read access enable register B */
#define CPU2_ACCENDLMU12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E58Cu)

/** \brief 590, CPU2 DLMU range 12, VM access enable register */
#define CPU2_ACCENDLMU12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E590u)

/** \brief 594, CPU2 DLMU range 12, PRS access enable register */
#define CPU2_ACCENDLMU12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E594u)

/** \brief 598, CPU2 DLMU range 12, region lower address register */
#define CPU2_ACCENDLMU12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E598u)

/** \brief 59C, CPU2 DLMU range 12, region upper address register */
#define CPU2_ACCENDLMU12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E59Cu)

/** \brief 5A0, CPU2 DLMU range 13, write access enable register A */
#define CPU2_ACCENDLMU13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E5A0u)

/** \brief 5A4, CPU2 DLMU range 13, write access enable register B */
#define CPU2_ACCENDLMU13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E5A4u)

/** \brief 5A8, CPU2 DLMU range 13, read access enable register A */
#define CPU2_ACCENDLMU13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E5A8u)

/** \brief 5AC, CPU2 DLMU range 13, read access enable register B */
#define CPU2_ACCENDLMU13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E5ACu)

/** \brief 5B0, CPU2 DLMU range 13, VM access enable register */
#define CPU2_ACCENDLMU13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E5B0u)

/** \brief 5B4, CPU2 DLMU range 13, PRS access enable register */
#define CPU2_ACCENDLMU13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E5B4u)

/** \brief 5B8, CPU2 DLMU range 13, region lower address register */
#define CPU2_ACCENDLMU13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E5B8u)

/** \brief 5BC, CPU2 DLMU range 13, region upper address register */
#define CPU2_ACCENDLMU13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E5BCu)

/** \brief 5C0, CPU2 DLMU range 14, write access enable register A */
#define CPU2_ACCENDLMU14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E5C0u)

/** \brief 5C4, CPU2 DLMU range 14, write access enable register B */
#define CPU2_ACCENDLMU14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E5C4u)

/** \brief 5C8, CPU2 DLMU range 14, read access enable register A */
#define CPU2_ACCENDLMU14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E5C8u)

/** \brief 5CC, CPU2 DLMU range 14, read access enable register B */
#define CPU2_ACCENDLMU14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E5CCu)

/** \brief 5D0, CPU2 DLMU range 14, VM access enable register */
#define CPU2_ACCENDLMU14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E5D0u)

/** \brief 5D4, CPU2 DLMU range 14, PRS access enable register */
#define CPU2_ACCENDLMU14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E5D4u)

/** \brief 5D8, CPU2 DLMU range 14, region lower address register */
#define CPU2_ACCENDLMU14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E5D8u)

/** \brief 5DC, CPU2 DLMU range 14, region upper address register */
#define CPU2_ACCENDLMU14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E5DCu)

/** \brief 5E0, CPU2 DLMU range 15, write access enable register A */
#define CPU2_ACCENDLMU15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E5E0u)

/** \brief 5E4, CPU2 DLMU range 15, write access enable register B */
#define CPU2_ACCENDLMU15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E5E4u)

/** \brief 5E8, CPU2 DLMU range 15, read access enable register A */
#define CPU2_ACCENDLMU15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E5E8u)

/** \brief 5EC, CPU2 DLMU range 15, read access enable register B */
#define CPU2_ACCENDLMU15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E5ECu)

/** \brief 5F0, CPU2 DLMU range 15, VM access enable register */
#define CPU2_ACCENDLMU15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E5F0u)

/** \brief 5F4, CPU2 DLMU range 15, PRS access enable register */
#define CPU2_ACCENDLMU15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E5F4u)

/** \brief 5F8, CPU2 DLMU range 15, region lower address register */
#define CPU2_ACCENDLMU15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF888E5F8u)

/** \brief 5FC, CPU2 DLMU range 15, region upper address register */
#define CPU2_ACCENDLMU15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF888E5FCu)

/** \brief 600, CPU2 SFR, write access enable register A */
#define CPU2_ACCENSFR_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E600u)

/** \brief 604, CPU2 SFR, write access enable register B */
#define CPU2_ACCENSFR_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E604u)

/** \brief 608, CPU2 SFR, read access enable register A */
#define CPU2_ACCENSFR_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E608u)

/** \brief 60C, CPU2 SFR, read access enable register B */
#define CPU2_ACCENSFR_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E60Cu)

/** \brief 610, CPU2 SFR, VM access enable register */
#define CPU2_ACCENSFR_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E610u)

/** \brief 614, CPU2 SFR, PRS access enable register */
#define CPU2_ACCENSFR_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E614u)

/** \brief 700, CPU2 VM0 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E700u)

/** \brief 704, CPU2 VM0 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E704u)

/** \brief 708, CPU2 VM0 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E708u)

/** \brief 70C, CPU2 VM0 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E70Cu)

/** \brief 710, CPU2 VM0 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E710u)

/** \brief 714, CPU2 VM0 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E714u)

/** \brief 720, CPU2 VM1 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E720u)

/** \brief 724, CPU2 VM1 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E724u)

/** \brief 728, CPU2 VM1 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E728u)

/** \brief 72C, CPU2 VM1 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E72Cu)

/** \brief 730, CPU2 VM1 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E730u)

/** \brief 734, CPU2 VM1 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E734u)

/** \brief 740, CPU2 VM2 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E740u)

/** \brief 744, CPU2 VM2 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E744u)

/** \brief 748, CPU2 VM2 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E748u)

/** \brief 74C, CPU2 VM2 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E74Cu)

/** \brief 750, CPU2 VM2 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E750u)

/** \brief 754, CPU2 VM2 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E754u)

/** \brief 760, CPU2 VM3 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E760u)

/** \brief 764, CPU2 VM3 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E764u)

/** \brief 768, CPU2 VM3 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E768u)

/** \brief 76C, CPU2 VM3 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E76Cu)

/** \brief 770, CPU2 VM3 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E770u)

/** \brief 774, CPU2 VM3 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E774u)

/** \brief 780, CPU2 VM4 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E780u)

/** \brief 784, CPU2 VM4 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E784u)

/** \brief 788, CPU2 VM4 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E788u)

/** \brief 78C, CPU2 VM4 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E78Cu)

/** \brief 790, CPU2 VM4 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E790u)

/** \brief 794, CPU2 VM4 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E794u)

/** \brief 7A0, CPU2 VM5 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E7A0u)

/** \brief 7A4, CPU2 VM5 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E7A4u)

/** \brief 7A8, CPU2 VM5 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E7A8u)

/** \brief 7AC, CPU2 VM5 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E7ACu)

/** \brief 7B0, CPU2 VM5 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E7B0u)

/** \brief 7B4, CPU2 VM5 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E7B4u)

/** \brief 7C0, CPU2 VM6 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E7C0u)

/** \brief 7C4, CPU2 VM6 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E7C4u)

/** \brief 7C8, CPU2 VM6 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E7C8u)

/** \brief 7CC, CPU2 VM6 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E7CCu)

/** \brief 7D0, CPU2 VM6 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E7D0u)

/** \brief 7D4, CPU2 VM6 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E7D4u)

/** \brief 7E0, CPU2 VM7 STM, write access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF888E7E0u)

/** \brief 7E4, CPU2 VM7 STM, write access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF888E7E4u)

/** \brief 7E8, CPU2 VM7 STM, read access enable register A", virtualization view" */
#define CPU2_ACCENSTMVM7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF888E7E8u)

/** \brief 7EC, CPU2 VM7 STM, read access enable register B", virtualization view" */
#define CPU2_ACCENSTMVM7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF888E7ECu)

/** \brief 7F0, CPU2 VM7 STM, VM access enable register", virtualization view" */
#define CPU2_ACCENSTMVM7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF888E7F0u)

/** \brief 7F4, CPU2 VM7 STM, PRS access enable register", virtualization view" */
#define CPU2_ACCENSTMVM7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF888E7F4u)

/** \brief FB00, CPU2 overlay range select register */
#define CPU2_OSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OSEL*)0xF888FB00u)

/** \brief FB10, CPU2 redirected address base register 0 */
#define CPU2_BLK0_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB10u)
/** Alias (User Manual Name) for CPU2_BLK0_RABR */
#define CPU2_RABR0 (CPU2_BLK0_RABR)

/** \brief FB14, CPU2 overlay target address register 0 (Low priority) */
#define CPU2_BLK0_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB14u)
/** Alias (User Manual Name) for CPU2_BLK0_OTAR */
#define CPU2_OTAR0 (CPU2_BLK0_OTAR)

/** \brief FB18, CPU2 overlay mask register 0 */
#define CPU2_BLK0_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB18u)
/** Alias (User Manual Name) for CPU2_BLK0_OMASK */
#define CPU2_OMASK0 (CPU2_BLK0_OMASK)

/** \brief FB1C, CPU2 redirected address base register 1 */
#define CPU2_BLK1_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB1Cu)
/** Alias (User Manual Name) for CPU2_BLK1_RABR */
#define CPU2_RABR1 (CPU2_BLK1_RABR)

/** \brief FB20, CPU2 overlay target address register 1 (Low priority) */
#define CPU2_BLK1_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB20u)
/** Alias (User Manual Name) for CPU2_BLK1_OTAR */
#define CPU2_OTAR1 (CPU2_BLK1_OTAR)

/** \brief FB24, CPU2 overlay mask register 1 */
#define CPU2_BLK1_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB24u)
/** Alias (User Manual Name) for CPU2_BLK1_OMASK */
#define CPU2_OMASK1 (CPU2_BLK1_OMASK)

/** \brief FB28, CPU2 redirected address base register 2 */
#define CPU2_BLK2_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB28u)
/** Alias (User Manual Name) for CPU2_BLK2_RABR */
#define CPU2_RABR2 (CPU2_BLK2_RABR)

/** \brief FB2C, CPU2 overlay target address register 2 (Low priority) */
#define CPU2_BLK2_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB2Cu)
/** Alias (User Manual Name) for CPU2_BLK2_OTAR */
#define CPU2_OTAR2 (CPU2_BLK2_OTAR)

/** \brief FB30, CPU2 overlay mask register 2 */
#define CPU2_BLK2_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB30u)
/** Alias (User Manual Name) for CPU2_BLK2_OMASK */
#define CPU2_OMASK2 (CPU2_BLK2_OMASK)

/** \brief FB34, CPU2 redirected address base register 3 */
#define CPU2_BLK3_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB34u)
/** Alias (User Manual Name) for CPU2_BLK3_RABR */
#define CPU2_RABR3 (CPU2_BLK3_RABR)

/** \brief FB38, CPU2 overlay target address register 3 (Low priority) */
#define CPU2_BLK3_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB38u)
/** Alias (User Manual Name) for CPU2_BLK3_OTAR */
#define CPU2_OTAR3 (CPU2_BLK3_OTAR)

/** \brief FB3C, CPU2 overlay mask register 3 */
#define CPU2_BLK3_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB3Cu)
/** Alias (User Manual Name) for CPU2_BLK3_OMASK */
#define CPU2_OMASK3 (CPU2_BLK3_OMASK)

/** \brief FB40, CPU2 redirected address base register 4 */
#define CPU2_BLK4_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB40u)
/** Alias (User Manual Name) for CPU2_BLK4_RABR */
#define CPU2_RABR4 (CPU2_BLK4_RABR)

/** \brief FB44, CPU2 overlay target address register 4 (Low priority) */
#define CPU2_BLK4_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB44u)
/** Alias (User Manual Name) for CPU2_BLK4_OTAR */
#define CPU2_OTAR4 (CPU2_BLK4_OTAR)

/** \brief FB48, CPU2 overlay mask register 4 */
#define CPU2_BLK4_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB48u)
/** Alias (User Manual Name) for CPU2_BLK4_OMASK */
#define CPU2_OMASK4 (CPU2_BLK4_OMASK)

/** \brief FB4C, CPU2 redirected address base register 5 */
#define CPU2_BLK5_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB4Cu)
/** Alias (User Manual Name) for CPU2_BLK5_RABR */
#define CPU2_RABR5 (CPU2_BLK5_RABR)

/** \brief FB50, CPU2 overlay target address register 5 (Low priority) */
#define CPU2_BLK5_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB50u)
/** Alias (User Manual Name) for CPU2_BLK5_OTAR */
#define CPU2_OTAR5 (CPU2_BLK5_OTAR)

/** \brief FB54, CPU2 overlay mask register 5 */
#define CPU2_BLK5_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB54u)
/** Alias (User Manual Name) for CPU2_BLK5_OMASK */
#define CPU2_OMASK5 (CPU2_BLK5_OMASK)

/** \brief FB58, CPU2 redirected address base register 6 */
#define CPU2_BLK6_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB58u)
/** Alias (User Manual Name) for CPU2_BLK6_RABR */
#define CPU2_RABR6 (CPU2_BLK6_RABR)

/** \brief FB5C, CPU2 overlay target address register 6 (Low priority) */
#define CPU2_BLK6_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB5Cu)
/** Alias (User Manual Name) for CPU2_BLK6_OTAR */
#define CPU2_OTAR6 (CPU2_BLK6_OTAR)

/** \brief FB60, CPU2 overlay mask register 6 */
#define CPU2_BLK6_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB60u)
/** Alias (User Manual Name) for CPU2_BLK6_OMASK */
#define CPU2_OMASK6 (CPU2_BLK6_OMASK)

/** \brief FB64, CPU2 redirected address base register 7 */
#define CPU2_BLK7_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB64u)
/** Alias (User Manual Name) for CPU2_BLK7_RABR */
#define CPU2_RABR7 (CPU2_BLK7_RABR)

/** \brief FB68, CPU2 overlay target address register 7 (Low priority) */
#define CPU2_BLK7_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB68u)
/** Alias (User Manual Name) for CPU2_BLK7_OTAR */
#define CPU2_OTAR7 (CPU2_BLK7_OTAR)

/** \brief FB6C, CPU2 overlay mask register 7 */
#define CPU2_BLK7_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB6Cu)
/** Alias (User Manual Name) for CPU2_BLK7_OMASK */
#define CPU2_OMASK7 (CPU2_BLK7_OMASK)

/** \brief FB70, CPU2 redirected address base register 8 */
#define CPU2_BLK8_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB70u)
/** Alias (User Manual Name) for CPU2_BLK8_RABR */
#define CPU2_RABR8 (CPU2_BLK8_RABR)

/** \brief FB74, CPU2 overlay target address register 8 (Low priority) */
#define CPU2_BLK8_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB74u)
/** Alias (User Manual Name) for CPU2_BLK8_OTAR */
#define CPU2_OTAR8 (CPU2_BLK8_OTAR)

/** \brief FB78, CPU2 overlay mask register 8 */
#define CPU2_BLK8_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB78u)
/** Alias (User Manual Name) for CPU2_BLK8_OMASK */
#define CPU2_OMASK8 (CPU2_BLK8_OMASK)

/** \brief FB7C, CPU2 redirected address base register 9 */
#define CPU2_BLK9_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB7Cu)
/** Alias (User Manual Name) for CPU2_BLK9_RABR */
#define CPU2_RABR9 (CPU2_BLK9_RABR)

/** \brief FB80, CPU2 overlay target address register 9 (Low priority) */
#define CPU2_BLK9_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB80u)
/** Alias (User Manual Name) for CPU2_BLK9_OTAR */
#define CPU2_OTAR9 (CPU2_BLK9_OTAR)

/** \brief FB84, CPU2 overlay mask register 9 */
#define CPU2_BLK9_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB84u)
/** Alias (User Manual Name) for CPU2_BLK9_OMASK */
#define CPU2_OMASK9 (CPU2_BLK9_OMASK)

/** \brief FB88, CPU2 redirected address base register 10 */
#define CPU2_BLK10_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB88u)
/** Alias (User Manual Name) for CPU2_BLK10_RABR */
#define CPU2_RABR10 (CPU2_BLK10_RABR)

/** \brief FB8C, CPU2 overlay target address register 10 (Low priority) */
#define CPU2_BLK10_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB8Cu)
/** Alias (User Manual Name) for CPU2_BLK10_OTAR */
#define CPU2_OTAR10 (CPU2_BLK10_OTAR)

/** \brief FB90, CPU2 overlay mask register 10 */
#define CPU2_BLK10_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB90u)
/** Alias (User Manual Name) for CPU2_BLK10_OMASK */
#define CPU2_OMASK10 (CPU2_BLK10_OMASK)

/** \brief FB94, CPU2 redirected address base register 11 */
#define CPU2_BLK11_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FB94u)
/** Alias (User Manual Name) for CPU2_BLK11_RABR */
#define CPU2_RABR11 (CPU2_BLK11_RABR)

/** \brief FB98, CPU2 overlay target address register 11 (Low priority) */
#define CPU2_BLK11_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FB98u)
/** Alias (User Manual Name) for CPU2_BLK11_OTAR */
#define CPU2_OTAR11 (CPU2_BLK11_OTAR)

/** \brief FB9C, CPU2 overlay mask register 11 */
#define CPU2_BLK11_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FB9Cu)
/** Alias (User Manual Name) for CPU2_BLK11_OMASK */
#define CPU2_OMASK11 (CPU2_BLK11_OMASK)

/** \brief FBA0, CPU2 redirected address base register 12 */
#define CPU2_BLK12_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBA0u)
/** Alias (User Manual Name) for CPU2_BLK12_RABR */
#define CPU2_RABR12 (CPU2_BLK12_RABR)

/** \brief FBA4, CPU2 overlay target address register 12 (Low priority) */
#define CPU2_BLK12_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBA4u)
/** Alias (User Manual Name) for CPU2_BLK12_OTAR */
#define CPU2_OTAR12 (CPU2_BLK12_OTAR)

/** \brief FBA8, CPU2 overlay mask register 12 */
#define CPU2_BLK12_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBA8u)
/** Alias (User Manual Name) for CPU2_BLK12_OMASK */
#define CPU2_OMASK12 (CPU2_BLK12_OMASK)

/** \brief FBAC, CPU2 redirected address base register 13 */
#define CPU2_BLK13_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBACu)
/** Alias (User Manual Name) for CPU2_BLK13_RABR */
#define CPU2_RABR13 (CPU2_BLK13_RABR)

/** \brief FBB0, CPU2 overlay target address register 13 (Low priority) */
#define CPU2_BLK13_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBB0u)
/** Alias (User Manual Name) for CPU2_BLK13_OTAR */
#define CPU2_OTAR13 (CPU2_BLK13_OTAR)

/** \brief FBB4, CPU2 overlay mask register 13 */
#define CPU2_BLK13_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBB4u)
/** Alias (User Manual Name) for CPU2_BLK13_OMASK */
#define CPU2_OMASK13 (CPU2_BLK13_OMASK)

/** \brief FBB8, CPU2 redirected address base register 14 */
#define CPU2_BLK14_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBB8u)
/** Alias (User Manual Name) for CPU2_BLK14_RABR */
#define CPU2_RABR14 (CPU2_BLK14_RABR)

/** \brief FBBC, CPU2 overlay target address register 14 (Low priority) */
#define CPU2_BLK14_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBBCu)
/** Alias (User Manual Name) for CPU2_BLK14_OTAR */
#define CPU2_OTAR14 (CPU2_BLK14_OTAR)

/** \brief FBC0, CPU2 overlay mask register 14 */
#define CPU2_BLK14_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBC0u)
/** Alias (User Manual Name) for CPU2_BLK14_OMASK */
#define CPU2_OMASK14 (CPU2_BLK14_OMASK)

/** \brief FBC4, CPU2 redirected address base register 15 */
#define CPU2_BLK15_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBC4u)
/** Alias (User Manual Name) for CPU2_BLK15_RABR */
#define CPU2_RABR15 (CPU2_BLK15_RABR)

/** \brief FBC8, CPU2 overlay target address register 15 (Low priority) */
#define CPU2_BLK15_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBC8u)
/** Alias (User Manual Name) for CPU2_BLK15_OTAR */
#define CPU2_OTAR15 (CPU2_BLK15_OTAR)

/** \brief FBCC, CPU2 overlay mask register 15 */
#define CPU2_BLK15_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBCCu)
/** Alias (User Manual Name) for CPU2_BLK15_OMASK */
#define CPU2_OMASK15 (CPU2_BLK15_OMASK)

/** \brief FBD0, CPU2 redirected address base register 16 */
#define CPU2_BLK16_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBD0u)
/** Alias (User Manual Name) for CPU2_BLK16_RABR */
#define CPU2_RABR16 (CPU2_BLK16_RABR)

/** \brief FBD4, CPU2 overlay target address register 16 (Low priority) */
#define CPU2_BLK16_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBD4u)
/** Alias (User Manual Name) for CPU2_BLK16_OTAR */
#define CPU2_OTAR16 (CPU2_BLK16_OTAR)

/** \brief FBD8, CPU2 overlay mask register 16 */
#define CPU2_BLK16_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBD8u)
/** Alias (User Manual Name) for CPU2_BLK16_OMASK */
#define CPU2_OMASK16 (CPU2_BLK16_OMASK)

/** \brief FBDC, CPU2 redirected address base register 17 */
#define CPU2_BLK17_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBDCu)
/** Alias (User Manual Name) for CPU2_BLK17_RABR */
#define CPU2_RABR17 (CPU2_BLK17_RABR)

/** \brief FBE0, CPU2 overlay target address register 17 (Low priority) */
#define CPU2_BLK17_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBE0u)
/** Alias (User Manual Name) for CPU2_BLK17_OTAR */
#define CPU2_OTAR17 (CPU2_BLK17_OTAR)

/** \brief FBE4, CPU2 overlay mask register 17 */
#define CPU2_BLK17_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBE4u)
/** Alias (User Manual Name) for CPU2_BLK17_OMASK */
#define CPU2_OMASK17 (CPU2_BLK17_OMASK)

/** \brief FBE8, CPU2 redirected address base register 18 */
#define CPU2_BLK18_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBE8u)
/** Alias (User Manual Name) for CPU2_BLK18_RABR */
#define CPU2_RABR18 (CPU2_BLK18_RABR)

/** \brief FBEC, CPU2 overlay target address register 18 (Low priority) */
#define CPU2_BLK18_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBECu)
/** Alias (User Manual Name) for CPU2_BLK18_OTAR */
#define CPU2_OTAR18 (CPU2_BLK18_OTAR)

/** \brief FBF0, CPU2 overlay mask register 18 */
#define CPU2_BLK18_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBF0u)
/** Alias (User Manual Name) for CPU2_BLK18_OMASK */
#define CPU2_OMASK18 (CPU2_BLK18_OMASK)

/** \brief FBF4, CPU2 redirected address base register 19 */
#define CPU2_BLK19_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FBF4u)
/** Alias (User Manual Name) for CPU2_BLK19_RABR */
#define CPU2_RABR19 (CPU2_BLK19_RABR)

/** \brief FBF8, CPU2 overlay target address register 19 (Low priority) */
#define CPU2_BLK19_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FBF8u)
/** Alias (User Manual Name) for CPU2_BLK19_OTAR */
#define CPU2_OTAR19 (CPU2_BLK19_OTAR)

/** \brief FBFC, CPU2 overlay mask register 19 */
#define CPU2_BLK19_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FBFCu)
/** Alias (User Manual Name) for CPU2_BLK19_OMASK */
#define CPU2_OMASK19 (CPU2_BLK19_OMASK)

/** \brief FC00, CPU2 redirected address base register 20 */
#define CPU2_BLK20_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC00u)
/** Alias (User Manual Name) for CPU2_BLK20_RABR */
#define CPU2_RABR20 (CPU2_BLK20_RABR)

/** \brief FC04, CPU2 overlay target address register 20 (Low priority) */
#define CPU2_BLK20_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC04u)
/** Alias (User Manual Name) for CPU2_BLK20_OTAR */
#define CPU2_OTAR20 (CPU2_BLK20_OTAR)

/** \brief FC08, CPU2 overlay mask register 20 */
#define CPU2_BLK20_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC08u)
/** Alias (User Manual Name) for CPU2_BLK20_OMASK */
#define CPU2_OMASK20 (CPU2_BLK20_OMASK)

/** \brief FC0C, CPU2 redirected address base register 21 */
#define CPU2_BLK21_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC0Cu)
/** Alias (User Manual Name) for CPU2_BLK21_RABR */
#define CPU2_RABR21 (CPU2_BLK21_RABR)

/** \brief FC10, CPU2 overlay target address register 21 (Low priority) */
#define CPU2_BLK21_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC10u)
/** Alias (User Manual Name) for CPU2_BLK21_OTAR */
#define CPU2_OTAR21 (CPU2_BLK21_OTAR)

/** \brief FC14, CPU2 overlay mask register 21 */
#define CPU2_BLK21_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC14u)
/** Alias (User Manual Name) for CPU2_BLK21_OMASK */
#define CPU2_OMASK21 (CPU2_BLK21_OMASK)

/** \brief FC18, CPU2 redirected address base register 22 */
#define CPU2_BLK22_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC18u)
/** Alias (User Manual Name) for CPU2_BLK22_RABR */
#define CPU2_RABR22 (CPU2_BLK22_RABR)

/** \brief FC1C, CPU2 overlay target address register 22 (Low priority) */
#define CPU2_BLK22_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC1Cu)
/** Alias (User Manual Name) for CPU2_BLK22_OTAR */
#define CPU2_OTAR22 (CPU2_BLK22_OTAR)

/** \brief FC20, CPU2 overlay mask register 22 */
#define CPU2_BLK22_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC20u)
/** Alias (User Manual Name) for CPU2_BLK22_OMASK */
#define CPU2_OMASK22 (CPU2_BLK22_OMASK)

/** \brief FC24, CPU2 redirected address base register 23 */
#define CPU2_BLK23_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC24u)
/** Alias (User Manual Name) for CPU2_BLK23_RABR */
#define CPU2_RABR23 (CPU2_BLK23_RABR)

/** \brief FC28, CPU2 overlay target address register 23 (Low priority) */
#define CPU2_BLK23_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC28u)
/** Alias (User Manual Name) for CPU2_BLK23_OTAR */
#define CPU2_OTAR23 (CPU2_BLK23_OTAR)

/** \brief FC2C, CPU2 overlay mask register 23 */
#define CPU2_BLK23_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC2Cu)
/** Alias (User Manual Name) for CPU2_BLK23_OMASK */
#define CPU2_OMASK23 (CPU2_BLK23_OMASK)

/** \brief FC30, CPU2 redirected address base register 24 */
#define CPU2_BLK24_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC30u)
/** Alias (User Manual Name) for CPU2_BLK24_RABR */
#define CPU2_RABR24 (CPU2_BLK24_RABR)

/** \brief FC34, CPU2 overlay target address register 24 (Low priority) */
#define CPU2_BLK24_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC34u)
/** Alias (User Manual Name) for CPU2_BLK24_OTAR */
#define CPU2_OTAR24 (CPU2_BLK24_OTAR)

/** \brief FC38, CPU2 overlay mask register 24 */
#define CPU2_BLK24_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC38u)
/** Alias (User Manual Name) for CPU2_BLK24_OMASK */
#define CPU2_OMASK24 (CPU2_BLK24_OMASK)

/** \brief FC3C, CPU2 redirected address base register 25 */
#define CPU2_BLK25_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC3Cu)
/** Alias (User Manual Name) for CPU2_BLK25_RABR */
#define CPU2_RABR25 (CPU2_BLK25_RABR)

/** \brief FC40, CPU2 overlay target address register 25 (Low priority) */
#define CPU2_BLK25_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC40u)
/** Alias (User Manual Name) for CPU2_BLK25_OTAR */
#define CPU2_OTAR25 (CPU2_BLK25_OTAR)

/** \brief FC44, CPU2 overlay mask register 25 */
#define CPU2_BLK25_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC44u)
/** Alias (User Manual Name) for CPU2_BLK25_OMASK */
#define CPU2_OMASK25 (CPU2_BLK25_OMASK)

/** \brief FC48, CPU2 redirected address base register 26 */
#define CPU2_BLK26_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC48u)
/** Alias (User Manual Name) for CPU2_BLK26_RABR */
#define CPU2_RABR26 (CPU2_BLK26_RABR)

/** \brief FC4C, CPU2 overlay target address register 26 (Low priority) */
#define CPU2_BLK26_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC4Cu)
/** Alias (User Manual Name) for CPU2_BLK26_OTAR */
#define CPU2_OTAR26 (CPU2_BLK26_OTAR)

/** \brief FC50, CPU2 overlay mask register 26 */
#define CPU2_BLK26_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC50u)
/** Alias (User Manual Name) for CPU2_BLK26_OMASK */
#define CPU2_OMASK26 (CPU2_BLK26_OMASK)

/** \brief FC54, CPU2 redirected address base register 27 */
#define CPU2_BLK27_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC54u)
/** Alias (User Manual Name) for CPU2_BLK27_RABR */
#define CPU2_RABR27 (CPU2_BLK27_RABR)

/** \brief FC58, CPU2 overlay target address register 27 (Low priority) */
#define CPU2_BLK27_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC58u)
/** Alias (User Manual Name) for CPU2_BLK27_OTAR */
#define CPU2_OTAR27 (CPU2_BLK27_OTAR)

/** \brief FC5C, CPU2 overlay mask register 27 */
#define CPU2_BLK27_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC5Cu)
/** Alias (User Manual Name) for CPU2_BLK27_OMASK */
#define CPU2_OMASK27 (CPU2_BLK27_OMASK)

/** \brief FC60, CPU2 redirected address base register 28 */
#define CPU2_BLK28_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC60u)
/** Alias (User Manual Name) for CPU2_BLK28_RABR */
#define CPU2_RABR28 (CPU2_BLK28_RABR)

/** \brief FC64, CPU2 overlay target address register 28 (Low priority) */
#define CPU2_BLK28_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC64u)
/** Alias (User Manual Name) for CPU2_BLK28_OTAR */
#define CPU2_OTAR28 (CPU2_BLK28_OTAR)

/** \brief FC68, CPU2 overlay mask register 28 */
#define CPU2_BLK28_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC68u)
/** Alias (User Manual Name) for CPU2_BLK28_OMASK */
#define CPU2_OMASK28 (CPU2_BLK28_OMASK)

/** \brief FC6C, CPU2 redirected address base register 29 */
#define CPU2_BLK29_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC6Cu)
/** Alias (User Manual Name) for CPU2_BLK29_RABR */
#define CPU2_RABR29 (CPU2_BLK29_RABR)

/** \brief FC70, CPU2 overlay target address register 29 (Low priority) */
#define CPU2_BLK29_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC70u)
/** Alias (User Manual Name) for CPU2_BLK29_OTAR */
#define CPU2_OTAR29 (CPU2_BLK29_OTAR)

/** \brief FC74, CPU2 overlay mask register 29 */
#define CPU2_BLK29_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC74u)
/** Alias (User Manual Name) for CPU2_BLK29_OMASK */
#define CPU2_OMASK29 (CPU2_BLK29_OMASK)

/** \brief FC78, CPU2 redirected address base register 30 */
#define CPU2_BLK30_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC78u)
/** Alias (User Manual Name) for CPU2_BLK30_RABR */
#define CPU2_RABR30 (CPU2_BLK30_RABR)

/** \brief FC7C, CPU2 overlay target address register 30 (Low priority) */
#define CPU2_BLK30_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC7Cu)
/** Alias (User Manual Name) for CPU2_BLK30_OTAR */
#define CPU2_OTAR30 (CPU2_BLK30_OTAR)

/** \brief FC80, CPU2 overlay mask register 30 */
#define CPU2_BLK30_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC80u)
/** Alias (User Manual Name) for CPU2_BLK30_OMASK */
#define CPU2_OMASK30 (CPU2_BLK30_OMASK)

/** \brief FC84, CPU2 redirected address base register 31 */
#define CPU2_BLK31_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF888FC84u)
/** Alias (User Manual Name) for CPU2_BLK31_RABR */
#define CPU2_RABR31 (CPU2_BLK31_RABR)

/** \brief FC88, CPU2 overlay target address register 31 (Low priority) */
#define CPU2_BLK31_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF888FC88u)
/** Alias (User Manual Name) for CPU2_BLK31_OTAR */
#define CPU2_OTAR31 (CPU2_BLK31_OTAR)

/** \brief FC8C, CPU2 overlay mask register 31 */
#define CPU2_BLK31_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF888FC8Cu)
/** Alias (User Manual Name) for CPU2_BLK31_OMASK */
#define CPU2_OMASK31 (CPU2_BLK31_OMASK)

/** \brief 1030, CPU2 SRI error generation register */
#define CPU2_HRA_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8891030u)

/** \brief 1040, CPU2 lockstep test register */
#define CPU2_HRA_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8891040u)

/** \brief 8100, CPU2 data access cacheability register */
#define CPU2_HRA_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8898100u)

/** \brief 8104, CPU2 code access cacheability register */
#define CPU2_HRA_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8898104u)

/** \brief 8108, CPU2 peripheral space identifier register */
#define CPU2_HRA_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8898108u)

/** \brief 9000, CPU2 data control register 2 */
#define CPU2_HRA_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8899000u)

/** \brief 9008, CPU2 data control register 1 */
#define CPU2_HRA_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8899008u)

/** \brief 900C, CPU2 SIST mode access control register */
#define CPU2_HRA_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF889900Cu)

/** \brief 9010, CPU2 HR specific data synchronous trap register */
#define CPU2_HRA_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8899010u)

/** \brief 9018, CPU2 HR specific data asynchronous trap register */
#define CPU2_HRA_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8899018u)

/** \brief 901C, CPU2 HR specific data error address register */
#define CPU2_HRA_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF889901Cu)

/** \brief 9020, CPU2 data integrity error address register */
#define CPU2_HRA_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8899020u)

/** \brief 9024, CPU2 data integrity error trap register */
#define CPU2_HRA_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8899024u)

/** \brief 9040, CPU2 data memory control register */
#define CPU2_HRA_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8899040u)

/** \brief 9200, CPU2 HR specific program synchronous trap register */
#define CPU2_HRA_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8899200u)

/** \brief 9204, CPU2 program control 1 */
#define CPU2_HRA_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8899204u)

/** \brief 9208, CPU2 program control 2 */
#define CPU2_HRA_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8899208u)

/** \brief 920C, CPU2 program control 0 */
#define CPU2_HRA_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF889920Cu)

/** \brief 9210, CPU2 HR specific program integrity error address register */
#define CPU2_HRA_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8899210u)

/** \brief 9214, CPU2 HR specific program integrity error trap register */
#define CPU2_HRA_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8899214u)

/** \brief 9400, CPU2 compatibility control register */
#define CPU2_HRA_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8899400u)

/** \brief A000, CPU2 HR specific trap control register */
#define CPU2_HRA_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF889A000u)

/** \brief A004, CPU2 HR specific trapping instruction program counter register */
#define CPU2_HRA_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF889A004u)

/** \brief A008, CPU2 HR specific trapping instruction opcode register */
#define CPU2_HRA_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF889A008u)

/** \brief A010, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRA_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF889A010u)

/** \brief A014, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRA_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF889A014u)

/** \brief A018, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRA_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF889A018u)

/** \brief A01C, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRA_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF889A01Cu)

/** \brief A020, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRA_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF889A020u)

/** \brief A024, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRA_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF889A024u)

/** \brief A030, CPU2 HR specific synchronous trap control register */
#define CPU2_HRA_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF889A030u)

/** \brief A034, CPU2 HR specific trapping instruction opcode register */
#define CPU2_HRA_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF889A034u)

/** \brief C000, CPU2 HR specific data protection range 0, lower bound register */
#define CPU2_HRA_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C000u)

/** \brief C004, CPU2 HR specific data protection range 0, upper bound register */
#define CPU2_HRA_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C004u)

/** \brief C008, CPU2 HR specific data protection range 1, lower bound register */
#define CPU2_HRA_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C008u)

/** \brief C00C, CPU2 HR specific data protection range 1, upper bound register */
#define CPU2_HRA_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C00Cu)

/** \brief C010, CPU2 HR specific data protection range 2, lower bound register */
#define CPU2_HRA_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C010u)

/** \brief C014, CPU2 HR specific data protection range 2, upper bound register */
#define CPU2_HRA_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C014u)

/** \brief C018, CPU2 HR specific data protection range 3, lower bound register */
#define CPU2_HRA_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C018u)

/** \brief C01C, CPU2 HR specific data protection range 3, upper bound register */
#define CPU2_HRA_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C01Cu)

/** \brief C020, CPU2 HR specific data protection range 4, lower bound register */
#define CPU2_HRA_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C020u)

/** \brief C024, CPU2 HR specific data protection range 4, upper bound register */
#define CPU2_HRA_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C024u)

/** \brief C028, CPU2 HR specific data protection range 5, lower bound register */
#define CPU2_HRA_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C028u)

/** \brief C02C, CPU2 HR specific data protection range 5, upper bound register */
#define CPU2_HRA_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C02Cu)

/** \brief C030, CPU2 HR specific data protection range 6, lower bound register */
#define CPU2_HRA_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C030u)

/** \brief C034, CPU2 HR specific data protection range 6, upper bound register */
#define CPU2_HRA_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C034u)

/** \brief C038, CPU2 HR specific data protection range 7, lower bound register */
#define CPU2_HRA_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C038u)

/** \brief C03C, CPU2 HR specific data protection range 7, upper bound register */
#define CPU2_HRA_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C03Cu)

/** \brief C040, CPU2 HR specific data protection range 8, lower bound register */
#define CPU2_HRA_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C040u)

/** \brief C044, CPU2 HR specific data protection range 8, upper bound register */
#define CPU2_HRA_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C044u)

/** \brief C048, CPU2 HR specific data protection range 9, lower bound register */
#define CPU2_HRA_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C048u)

/** \brief C04C, CPU2 HR specific data protection range 9, upper bound register */
#define CPU2_HRA_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C04Cu)

/** \brief C050, CPU2 HR specific data protection range 10, lower bound register */
#define CPU2_HRA_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C050u)

/** \brief C054, CPU2 HR specific data protection range 10, upper bound register */
#define CPU2_HRA_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C054u)

/** \brief C058, CPU2 HR specific data protection range 11, lower bound register */
#define CPU2_HRA_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C058u)

/** \brief C05C, CPU2 HR specific data protection range 11, upper bound register */
#define CPU2_HRA_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C05Cu)

/** \brief C060, CPU2 HR specific data protection range 12, lower bound register */
#define CPU2_HRA_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C060u)

/** \brief C064, CPU2 HR specific data protection range 12, upper bound register */
#define CPU2_HRA_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C064u)

/** \brief C068, CPU2 HR specific data protection range 13, lower bound register */
#define CPU2_HRA_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C068u)

/** \brief C06C, CPU2 HR specific data protection range 13, upper bound register */
#define CPU2_HRA_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C06Cu)

/** \brief C070, CPU2 HR specific data protection range 14, lower bound register */
#define CPU2_HRA_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C070u)

/** \brief C074, CPU2 HR specific data protection range 14, upper bound register */
#define CPU2_HRA_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C074u)

/** \brief C078, CPU2 HR specific data protection range 15, lower bound register */
#define CPU2_HRA_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C078u)

/** \brief C07C, CPU2 HR specific data protection range 15, upper bound register */
#define CPU2_HRA_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C07Cu)

/** \brief C080, CPU2 HR specific data protection range 16, lower bound register */
#define CPU2_HRA_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C080u)

/** \brief C084, CPU2 HR specific data protection range 16, upper bound register */
#define CPU2_HRA_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C084u)

/** \brief C088, CPU2 HR specific data protection range 17, lower bound register */
#define CPU2_HRA_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C088u)

/** \brief C08C, CPU2 HR specific data protection range 17, upper bound register */
#define CPU2_HRA_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C08Cu)

/** \brief C090, CPU2 HR specific data protection range 18, lower bound register */
#define CPU2_HRA_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C090u)

/** \brief C094, CPU2 HR specific data protection range 18, upper bound register */
#define CPU2_HRA_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C094u)

/** \brief C098, CPU2 HR specific data protection range 19, lower bound register */
#define CPU2_HRA_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C098u)

/** \brief C09C, CPU2 HR specific data protection range 19, upper bound register */
#define CPU2_HRA_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C09Cu)

/** \brief C0A0, CPU2 HR specific data protection range 20, lower bound register */
#define CPU2_HRA_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C0A0u)

/** \brief C0A4, CPU2 HR specific data protection range 20, upper bound register */
#define CPU2_HRA_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C0A4u)

/** \brief C0A8, CPU2 HR specific data protection range 21, lower bound register */
#define CPU2_HRA_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C0A8u)

/** \brief C0AC, CPU2 HR specific data protection range 21, upper bound register */
#define CPU2_HRA_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C0ACu)

/** \brief C0B0, CPU2 HR specific data protection range 22, lower bound register */
#define CPU2_HRA_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C0B0u)

/** \brief C0B4, CPU2 HR specific data protection range 22, upper bound register */
#define CPU2_HRA_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C0B4u)

/** \brief C0B8, CPU2 HR specific data protection range 23, lower bound register */
#define CPU2_HRA_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF889C0B8u)

/** \brief C0BC, CPU2 HR specific data protection range 23, upper bound register */
#define CPU2_HRA_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF889C0BCu)

/** \brief D000, CPU2 HR specific code protection range 0, lower bound register */
#define CPU2_HRA_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D000u)

/** \brief D004, CPU2 HR specific code protection range 0, upper bound register */
#define CPU2_HRA_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D004u)

/** \brief D008, CPU2 HR specific code protection range 1, lower bound register */
#define CPU2_HRA_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D008u)

/** \brief D00C, CPU2 HR specific code protection range 1, upper bound register */
#define CPU2_HRA_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D00Cu)

/** \brief D010, CPU2 HR specific code protection range 2, lower bound register */
#define CPU2_HRA_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D010u)

/** \brief D014, CPU2 HR specific code protection range 2, upper bound register */
#define CPU2_HRA_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D014u)

/** \brief D018, CPU2 HR specific code protection range 3, lower bound register */
#define CPU2_HRA_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D018u)

/** \brief D01C, CPU2 HR specific code protection range 3, upper bound register */
#define CPU2_HRA_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D01Cu)

/** \brief D020, CPU2 HR specific code protection range 4, lower bound register */
#define CPU2_HRA_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D020u)

/** \brief D024, CPU2 HR specific code protection range 4, upper bound register */
#define CPU2_HRA_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D024u)

/** \brief D028, CPU2 HR specific code protection range 5, lower bound register */
#define CPU2_HRA_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D028u)

/** \brief D02C, CPU2 HR specific code protection range 5, upper bound register */
#define CPU2_HRA_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D02Cu)

/** \brief D030, CPU2 HR specific code protection range 6, lower bound register */
#define CPU2_HRA_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D030u)

/** \brief D034, CPU2 HR specific code protection range 6, upper bound register */
#define CPU2_HRA_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D034u)

/** \brief D038, CPU2 HR specific code protection range 7, lower bound register */
#define CPU2_HRA_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D038u)

/** \brief D03C, CPU2 HR specific code protection range 7, upper bound register */
#define CPU2_HRA_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D03Cu)

/** \brief D040, CPU2 HR specific code protection range 8, lower bound register */
#define CPU2_HRA_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D040u)

/** \brief D044, CPU2 HR specific code protection range 8, upper bound register */
#define CPU2_HRA_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D044u)

/** \brief D048, CPU2 HR specific code protection range 9, lower bound register */
#define CPU2_HRA_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D048u)

/** \brief D04C, CPU2 HR specific code protection range 9, upper bound register */
#define CPU2_HRA_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D04Cu)

/** \brief D050, CPU2 HR specific code protection range 10, lower bound register */
#define CPU2_HRA_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D050u)

/** \brief D054, CPU2 HR specific code protection range 10, upper bound register */
#define CPU2_HRA_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D054u)

/** \brief D058, CPU2 HR specific code protection range 11, lower bound register */
#define CPU2_HRA_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D058u)

/** \brief D05C, CPU2 HR specific code protection range 11, upper bound register */
#define CPU2_HRA_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D05Cu)

/** \brief D060, CPU2 HR specific code protection range 12, lower bound register */
#define CPU2_HRA_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D060u)

/** \brief D064, CPU2 HR specific code protection range 12, upper bound register */
#define CPU2_HRA_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D064u)

/** \brief D068, CPU2 HR specific code protection range 13, lower bound register */
#define CPU2_HRA_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D068u)

/** \brief D06C, CPU2 HR specific code protection range 13, upper bound register */
#define CPU2_HRA_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D06Cu)

/** \brief D070, CPU2 HR specific code protection range 14, lower bound register */
#define CPU2_HRA_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D070u)

/** \brief D074, CPU2 HR specific code protection range 14, upper bound register */
#define CPU2_HRA_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D074u)

/** \brief D078, CPU2 HR specific code protection range 15, lower bound register */
#define CPU2_HRA_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF889D078u)

/** \brief D07C, CPU2 HR specific code protection range 15, upper bound register */
#define CPU2_HRA_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF889D07Cu)

/** \brief E000, CPU2 HR specific code protection execute enable register set 0 */
#define CPU2_HRA_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E000u)

/** \brief E004, CPU2 HR specific code protection execute enable register set 1 */
#define CPU2_HRA_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E004u)

/** \brief E008, CPU2 HR specific code protection execute enable register set 2 */
#define CPU2_HRA_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E008u)

/** \brief E00C, CPU2 HR specific code protection execute enable register set 3 */
#define CPU2_HRA_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E00Cu)

/** \brief E010, CPU2 HR specific data protection read enable register set 0 */
#define CPU2_HRA_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E010u)

/** \brief E014, CPU2 HR specific data protection read enable register set 1 */
#define CPU2_HRA_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E014u)

/** \brief E018, CPU2 HR specific data protection read enable register set 2 */
#define CPU2_HRA_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E018u)

/** \brief E01C, CPU2 HR specific data protection read enable register set 3 */
#define CPU2_HRA_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E01Cu)

/** \brief E020, CPU2 HR specific data protection write enable register set 0 */
#define CPU2_HRA_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E020u)

/** \brief E024, CPU2 HR specific data protection write enable register set 1 */
#define CPU2_HRA_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E024u)

/** \brief E028, CPU2 HR specific data protection write enable register set 2 */
#define CPU2_HRA_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E028u)

/** \brief E02C, CPU2 HR specific data protection write enable register set 3 */
#define CPU2_HRA_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E02Cu)

/** \brief E040, CPU2 HR specific code protection execute enable register set 4 */
#define CPU2_HRA_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E040u)

/** \brief E044, CPU2 HR specific code protection execute enable register set 5 */
#define CPU2_HRA_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E044u)

/** \brief E048, CPU2 HR specific code protection execute enable register set 6 */
#define CPU2_HRA_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E048u)

/** \brief E04C, CPU2 HR specific code protection execute enable register set 7 */
#define CPU2_HRA_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF889E04Cu)

/** \brief E050, CPU2 HR specific data protection read enable register set 4 */
#define CPU2_HRA_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E050u)

/** \brief E054, CPU2 HR specific data protection read enable register set 5 */
#define CPU2_HRA_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E054u)

/** \brief E058, CPU2 HR specific data protection read enable register set 6 */
#define CPU2_HRA_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E058u)

/** \brief E05C, CPU2 HR specific data protection read enable register set 7 */
#define CPU2_HRA_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF889E05Cu)

/** \brief E060, CPU2 HR specific data protection write enable register set 4 */
#define CPU2_HRA_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E060u)

/** \brief E064, CPU2 HR specific data protection write enable register set 5 */
#define CPU2_HRA_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E064u)

/** \brief E068, CPU2 HR specific data protection write enable register set 6 */
#define CPU2_HRA_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E068u)

/** \brief E06C, CPU2 HR specific data protection write enable register set 7 */
#define CPU2_HRA_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF889E06Cu)

/** \brief E400, CPU2 HR specific temporal protection system control register */
#define CPU2_HRA_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF889E400u)

/** \brief E404, CPU2 HR specific temporal protection system timer register 0 */
#define CPU2_HRA_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF889E404u)

/** \brief E408, CPU2 HR specific temporal protection system timer register 1 */
#define CPU2_HRA_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF889E408u)

/** \brief E40C, CPU2 HR specific temporal protection system timer register 2 */
#define CPU2_HRA_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF889E40Cu)

/** \brief F000, CPU2 trigger event 0 */
#define CPU2_HRA_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F000u)
/** Alias (User Manual Name) for CPU2_HRA_TR0_EVT */
#define CPU2_HRA_TR0EVT (CPU2_HRA_TR0_EVT)

/** \brief F004, CPU2 trigger address 0 */
#define CPU2_HRA_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F004u)
/** Alias (User Manual Name) for CPU2_HRA_TR0_ADR */
#define CPU2_HRA_TR0ADR (CPU2_HRA_TR0_ADR)

/** \brief F008, CPU2 trigger event 1 */
#define CPU2_HRA_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F008u)
/** Alias (User Manual Name) for CPU2_HRA_TR1_EVT */
#define CPU2_HRA_TR1EVT (CPU2_HRA_TR1_EVT)

/** \brief F00C, CPU2 trigger address 1 */
#define CPU2_HRA_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F00Cu)
/** Alias (User Manual Name) for CPU2_HRA_TR1_ADR */
#define CPU2_HRA_TR1ADR (CPU2_HRA_TR1_ADR)

/** \brief F010, CPU2 trigger event 2 */
#define CPU2_HRA_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F010u)
/** Alias (User Manual Name) for CPU2_HRA_TR2_EVT */
#define CPU2_HRA_TR2EVT (CPU2_HRA_TR2_EVT)

/** \brief F014, CPU2 trigger address 2 */
#define CPU2_HRA_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F014u)
/** Alias (User Manual Name) for CPU2_HRA_TR2_ADR */
#define CPU2_HRA_TR2ADR (CPU2_HRA_TR2_ADR)

/** \brief F018, CPU2 trigger event 3 */
#define CPU2_HRA_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F018u)
/** Alias (User Manual Name) for CPU2_HRA_TR3_EVT */
#define CPU2_HRA_TR3EVT (CPU2_HRA_TR3_EVT)

/** \brief F01C, CPU2 trigger address 3 */
#define CPU2_HRA_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F01Cu)
/** Alias (User Manual Name) for CPU2_HRA_TR3_ADR */
#define CPU2_HRA_TR3ADR (CPU2_HRA_TR3_ADR)

/** \brief F020, CPU2 trigger event 4 */
#define CPU2_HRA_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F020u)
/** Alias (User Manual Name) for CPU2_HRA_TR4_EVT */
#define CPU2_HRA_TR4EVT (CPU2_HRA_TR4_EVT)

/** \brief F024, CPU2 trigger address 4 */
#define CPU2_HRA_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F024u)
/** Alias (User Manual Name) for CPU2_HRA_TR4_ADR */
#define CPU2_HRA_TR4ADR (CPU2_HRA_TR4_ADR)

/** \brief F028, CPU2 trigger event 5 */
#define CPU2_HRA_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F028u)
/** Alias (User Manual Name) for CPU2_HRA_TR5_EVT */
#define CPU2_HRA_TR5EVT (CPU2_HRA_TR5_EVT)

/** \brief F02C, CPU2 trigger address 5 */
#define CPU2_HRA_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F02Cu)
/** Alias (User Manual Name) for CPU2_HRA_TR5_ADR */
#define CPU2_HRA_TR5ADR (CPU2_HRA_TR5_ADR)

/** \brief F030, CPU2 trigger event 6 */
#define CPU2_HRA_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F030u)
/** Alias (User Manual Name) for CPU2_HRA_TR6_EVT */
#define CPU2_HRA_TR6EVT (CPU2_HRA_TR6_EVT)

/** \brief F034, CPU2 trigger address 6 */
#define CPU2_HRA_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F034u)
/** Alias (User Manual Name) for CPU2_HRA_TR6_ADR */
#define CPU2_HRA_TR6ADR (CPU2_HRA_TR6_ADR)

/** \brief F038, CPU2 trigger event 7 */
#define CPU2_HRA_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF889F038u)
/** Alias (User Manual Name) for CPU2_HRA_TR7_EVT */
#define CPU2_HRA_TR7EVT (CPU2_HRA_TR7_EVT)

/** \brief F03C, CPU2 trigger address 7 */
#define CPU2_HRA_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF889F03Cu)
/** Alias (User Manual Name) for CPU2_HRA_TR7_ADR */
#define CPU2_HRA_TR7ADR (CPU2_HRA_TR7_ADR)

/** \brief FC00, CPU2 HR specific counter control */
#define CPU2_HRA_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF889FC00u)

/** \brief FC04, CPU2 HR specific CPU clock cycle count */
#define CPU2_HRA_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF889FC04u)

/** \brief FC08, CPU2 HR specific instruction count */
#define CPU2_HRA_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF889FC08u)

/** \brief FC0C, CPU2 HR specific multi-count register 1 */
#define CPU2_HRA_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF889FC0Cu)

/** \brief FC10, CPU2 HR specific multi-count register 2 */
#define CPU2_HRA_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF889FC10u)

/** \brief FC14, CPU2 HR specific multi-count register 3 */
#define CPU2_HRA_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF889FC14u)

/** \brief FD00, CPU2 debug status register */
#define CPU2_HRA_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF889FD00u)

/** \brief FD08, CPU2 external event register */
#define CPU2_HRA_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF889FD08u)

/** \brief FD0C, CPU2 core register access event */
#define CPU2_HRA_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF889FD0Cu)

/** \brief FD10, CPU2 software debug event */
#define CPU2_HRA_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF889FD10u)

/** \brief FD14, CPU2 debug action configuration */
#define CPU2_HRA_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF889FD14u)

/** \brief FD30, CPU2 trigger accumulator */
#define CPU2_HRA_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF889FD30u)

/** \brief FD40, CPU2 debug monitor start address */
#define CPU2_HRA_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF889FD40u)

/** \brief FD44, CPU2 debug context save area pointer */
#define CPU2_HRA_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF889FD44u)

/** \brief FD48, CPU2 debug trap control */
#define CPU2_HRA_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF889FD48u)

/** \brief FD4C, CPU2 debug configuration */
#define CPU2_HRA_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF889FD4Cu)

/** \brief FD50, CPU2 trace configuration */
#define CPU2_HRA_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF889FD50u)

/** \brief FD54, CPU2 trace filter */
#define CPU2_HRA_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF889FD54u)

/** \brief FD58, CPU2 trace bandwidth limiter */
#define CPU2_HRA_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF889FD58u)

/** \brief FD60, CPU2 MCDS performance counter control register */
#define CPU2_HRA_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF889FD60u)

/** \brief FE00, CPU2 previous context information register */
#define CPU2_HRA_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF889FE00u)

/** \brief FE04, CPU2 HR specific program status word */
#define CPU2_HRA_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF889FE04u)

/** \brief FE08, CPU2 program counter */
#define CPU2_HRA_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF889FE08u)

/** \brief FE14, CPU2 HR specific core configuration register */
#define CPU2_HRA_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF889FE14u)

/** \brief FE18, CPU2 identification register */
#define CPU2_HRA_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF889FE18u)

/** \brief FE1C, CPU2 core identification register */
#define CPU2_HRA_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF889FE1Cu)

/** \brief FE20, CPU2 HR specific base interrupt vector table pointer */
#define CPU2_HRA_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF889FE20u)

/** \brief FE24, CPU2 HR specific base trap vector table pointer */
#define CPU2_HRA_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF889FE24u)

/** \brief FE28, CPU2 HR specific interrupt stack pointer */
#define CPU2_HRA_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF889FE28u)

/** \brief FE2C, CPU2 interrupt control register */
#define CPU2_HRA_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF889FE2Cu)

/** \brief FE34, CPU2 previous PRS */
#define CPU2_HRA_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF889FE34u)

/** \brief FE38, CPU2 HR specific free CSA list head pointer */
#define CPU2_HRA_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF889FE38u)

/** \brief FE3C, CPU2 HR specific free CSA list limit pointer */
#define CPU2_HRA_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF889FE3Cu)

/** \brief FE40, CPU2 software identification */
#define CPU2_HRA_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF889FE40u)

/** \brief FE50, CPU2 customer ID register */
#define CPU2_HRA_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF889FE50u)

/** \brief FE60, CPU2 core boot configuration register */
#define CPU2_HRA_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF889FE60u)

/** \brief FE64, CPU2 lockstep control register */
#define CPU2_HRA_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF889FE64u)

/** \brief FE68, CPU2 clock control register */
#define CPU2_HRA_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF889FE68u)

/** \brief FE6C, CPU2 hardware configuration  */
#define CPU2_HRA_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF889FE6Cu)

/** \brief FF00, CPU2 data general purpose register 0 */
#define CPU2_D0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF00u)

/** \brief FF04, CPU2 data general purpose register 1 */
#define CPU2_D1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF04u)

/** \brief FF08, CPU2 data general purpose register 2 */
#define CPU2_D2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF08u)

/** \brief FF0C, CPU2 data general purpose register 3 */
#define CPU2_D3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF0Cu)

/** \brief FF10, CPU2 data general purpose register 4 */
#define CPU2_D4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF10u)

/** \brief FF14, CPU2 data general purpose register 5 */
#define CPU2_D5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF14u)

/** \brief FF18, CPU2 data general purpose register 6 */
#define CPU2_D6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF18u)

/** \brief FF1C, CPU2 data general purpose register 7 */
#define CPU2_D7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF1Cu)

/** \brief FF20, CPU2 data general purpose register 8 */
#define CPU2_D8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF20u)

/** \brief FF24, CPU2 data general purpose register 9 */
#define CPU2_D9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF24u)

/** \brief FF28, CPU2 data general purpose register 10 */
#define CPU2_D10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF28u)

/** \brief FF2C, CPU2 data general purpose register 11 */
#define CPU2_D11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF2Cu)

/** \brief FF30, CPU2 data general purpose register 12 */
#define CPU2_D12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF30u)

/** \brief FF34, CPU2 data general purpose register 13 */
#define CPU2_D13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF34u)

/** \brief FF38, CPU2 data general purpose register 14 */
#define CPU2_D14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF38u)

/** \brief FF3C, CPU2 data general purpose register 15 */
#define CPU2_D15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF889FF3Cu)

/** \brief FF80, CPU2 address general purpose register 0 */
#define CPU2_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF80u)

/** \brief FF84, CPU2 address general purpose register 1 */
#define CPU2_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF84u)

/** \brief FF88, CPU2 address general purpose register 2 */
#define CPU2_A2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF88u)

/** \brief FF8C, CPU2 address general purpose register 3 */
#define CPU2_A3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF8Cu)

/** \brief FF90, CPU2 address general purpose register 4 */
#define CPU2_A4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF90u)

/** \brief FF94, CPU2 address general purpose register 5 */
#define CPU2_A5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF94u)

/** \brief FF98, CPU2 address general purpose register 6 */
#define CPU2_A6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF98u)

/** \brief FF9C, CPU2 address general purpose register 7 */
#define CPU2_A7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FF9Cu)

/** \brief FFA0, CPU2 address general purpose register 8 */
#define CPU2_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFA0u)

/** \brief FFA4, CPU2 address general purpose register 9 */
#define CPU2_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFA4u)

/** \brief FFA8, CPU2 address general purpose register 10 */
#define CPU2_A10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFA8u)

/** \brief FFAC, CPU2 address general purpose register 11 */
#define CPU2_A11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFACu)

/** \brief FFB0, CPU2 address general purpose register 12 */
#define CPU2_A12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFB0u)

/** \brief FFB4, CPU2 address general purpose register 13 */
#define CPU2_A13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFB4u)

/** \brief FFB8, CPU2 address general purpose register 14 */
#define CPU2_A14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFB8u)

/** \brief FFBC, CPU2 address general purpose register 15 */
#define CPU2_A15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF889FFBCu)

/** \brief 1030, CPU2 SRI error generation register */
#define CPU2_HRB_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF88A1030u)

/** \brief 1040, CPU2 lockstep test register */
#define CPU2_HRB_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF88A1040u)

/** \brief 8100, CPU2 data access cacheability register */
#define CPU2_HRB_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF88A8100u)

/** \brief 8104, CPU2 code access cacheability register */
#define CPU2_HRB_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF88A8104u)

/** \brief 8108, CPU2 peripheral space identifier register */
#define CPU2_HRB_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF88A8108u)

/** \brief 9000, CPU2 data control register 2 */
#define CPU2_HRB_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF88A9000u)

/** \brief 9008, CPU2 data control register 1 */
#define CPU2_HRB_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF88A9008u)

/** \brief 900C, CPU2 SIST mode access control register */
#define CPU2_HRB_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF88A900Cu)

/** \brief 9010, CPU2 HR specific data synchronous trap register */
#define CPU2_HRB_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF88A9010u)

/** \brief 9018, CPU2 HR specific data asynchronous trap register */
#define CPU2_HRB_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF88A9018u)

/** \brief 901C, CPU2 HR specific data error address register */
#define CPU2_HRB_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF88A901Cu)

/** \brief 9020, CPU2 data integrity error address register */
#define CPU2_HRB_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88A9020u)

/** \brief 9024, CPU2 data integrity error trap register */
#define CPU2_HRB_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF88A9024u)

/** \brief 9040, CPU2 data memory control register */
#define CPU2_HRB_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF88A9040u)

/** \brief 9200, CPU2 HR specific program synchronous trap register */
#define CPU2_HRB_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF88A9200u)

/** \brief 9204, CPU2 program control 1 */
#define CPU2_HRB_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF88A9204u)

/** \brief 9208, CPU2 program control 2 */
#define CPU2_HRB_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF88A9208u)

/** \brief 920C, CPU2 program control 0 */
#define CPU2_HRB_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF88A920Cu)

/** \brief 9210, CPU2 HR specific program integrity error address register */
#define CPU2_HRB_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88A9210u)

/** \brief 9214, CPU2 HR specific program integrity error trap register */
#define CPU2_HRB_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF88A9214u)

/** \brief 9400, CPU2 compatibility control register */
#define CPU2_HRB_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF88A9400u)

/** \brief A000, CPU2 HR specific trap control register */
#define CPU2_HRB_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF88AA000u)

/** \brief A004, CPU2 HR specific trapping instruction program counter register */
#define CPU2_HRB_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF88AA004u)

/** \brief A008, CPU2 HR specific trapping instruction opcode register */
#define CPU2_HRB_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88AA008u)

/** \brief A010, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRB_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF88AA010u)

/** \brief A014, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRB_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF88AA014u)

/** \brief A018, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRB_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF88AA018u)

/** \brief A01C, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRB_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF88AA01Cu)

/** \brief A020, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRB_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF88AA020u)

/** \brief A024, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRB_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF88AA024u)

/** \brief A030, CPU2 HR specific synchronous trap control register */
#define CPU2_HRB_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF88AA030u)

/** \brief A034, CPU2 HR specific trapping instruction opcode register */
#define CPU2_HRB_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88AA034u)

/** \brief C000, CPU2 HR specific data protection range 0, lower bound register */
#define CPU2_HRB_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC000u)

/** \brief C004, CPU2 HR specific data protection range 0, upper bound register */
#define CPU2_HRB_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC004u)

/** \brief C008, CPU2 HR specific data protection range 1, lower bound register */
#define CPU2_HRB_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC008u)

/** \brief C00C, CPU2 HR specific data protection range 1, upper bound register */
#define CPU2_HRB_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC00Cu)

/** \brief C010, CPU2 HR specific data protection range 2, lower bound register */
#define CPU2_HRB_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC010u)

/** \brief C014, CPU2 HR specific data protection range 2, upper bound register */
#define CPU2_HRB_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC014u)

/** \brief C018, CPU2 HR specific data protection range 3, lower bound register */
#define CPU2_HRB_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC018u)

/** \brief C01C, CPU2 HR specific data protection range 3, upper bound register */
#define CPU2_HRB_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC01Cu)

/** \brief C020, CPU2 HR specific data protection range 4, lower bound register */
#define CPU2_HRB_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC020u)

/** \brief C024, CPU2 HR specific data protection range 4, upper bound register */
#define CPU2_HRB_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC024u)

/** \brief C028, CPU2 HR specific data protection range 5, lower bound register */
#define CPU2_HRB_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC028u)

/** \brief C02C, CPU2 HR specific data protection range 5, upper bound register */
#define CPU2_HRB_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC02Cu)

/** \brief C030, CPU2 HR specific data protection range 6, lower bound register */
#define CPU2_HRB_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC030u)

/** \brief C034, CPU2 HR specific data protection range 6, upper bound register */
#define CPU2_HRB_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC034u)

/** \brief C038, CPU2 HR specific data protection range 7, lower bound register */
#define CPU2_HRB_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC038u)

/** \brief C03C, CPU2 HR specific data protection range 7, upper bound register */
#define CPU2_HRB_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC03Cu)

/** \brief C040, CPU2 HR specific data protection range 8, lower bound register */
#define CPU2_HRB_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC040u)

/** \brief C044, CPU2 HR specific data protection range 8, upper bound register */
#define CPU2_HRB_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC044u)

/** \brief C048, CPU2 HR specific data protection range 9, lower bound register */
#define CPU2_HRB_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC048u)

/** \brief C04C, CPU2 HR specific data protection range 9, upper bound register */
#define CPU2_HRB_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC04Cu)

/** \brief C050, CPU2 HR specific data protection range 10, lower bound register */
#define CPU2_HRB_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC050u)

/** \brief C054, CPU2 HR specific data protection range 10, upper bound register */
#define CPU2_HRB_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC054u)

/** \brief C058, CPU2 HR specific data protection range 11, lower bound register */
#define CPU2_HRB_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC058u)

/** \brief C05C, CPU2 HR specific data protection range 11, upper bound register */
#define CPU2_HRB_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC05Cu)

/** \brief C060, CPU2 HR specific data protection range 12, lower bound register */
#define CPU2_HRB_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC060u)

/** \brief C064, CPU2 HR specific data protection range 12, upper bound register */
#define CPU2_HRB_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC064u)

/** \brief C068, CPU2 HR specific data protection range 13, lower bound register */
#define CPU2_HRB_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC068u)

/** \brief C06C, CPU2 HR specific data protection range 13, upper bound register */
#define CPU2_HRB_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC06Cu)

/** \brief C070, CPU2 HR specific data protection range 14, lower bound register */
#define CPU2_HRB_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC070u)

/** \brief C074, CPU2 HR specific data protection range 14, upper bound register */
#define CPU2_HRB_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC074u)

/** \brief C078, CPU2 HR specific data protection range 15, lower bound register */
#define CPU2_HRB_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC078u)

/** \brief C07C, CPU2 HR specific data protection range 15, upper bound register */
#define CPU2_HRB_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC07Cu)

/** \brief C080, CPU2 HR specific data protection range 16, lower bound register */
#define CPU2_HRB_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC080u)

/** \brief C084, CPU2 HR specific data protection range 16, upper bound register */
#define CPU2_HRB_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC084u)

/** \brief C088, CPU2 HR specific data protection range 17, lower bound register */
#define CPU2_HRB_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC088u)

/** \brief C08C, CPU2 HR specific data protection range 17, upper bound register */
#define CPU2_HRB_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC08Cu)

/** \brief C090, CPU2 HR specific data protection range 18, lower bound register */
#define CPU2_HRB_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC090u)

/** \brief C094, CPU2 HR specific data protection range 18, upper bound register */
#define CPU2_HRB_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC094u)

/** \brief C098, CPU2 HR specific data protection range 19, lower bound register */
#define CPU2_HRB_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC098u)

/** \brief C09C, CPU2 HR specific data protection range 19, upper bound register */
#define CPU2_HRB_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC09Cu)

/** \brief C0A0, CPU2 HR specific data protection range 20, lower bound register */
#define CPU2_HRB_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC0A0u)

/** \brief C0A4, CPU2 HR specific data protection range 20, upper bound register */
#define CPU2_HRB_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC0A4u)

/** \brief C0A8, CPU2 HR specific data protection range 21, lower bound register */
#define CPU2_HRB_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC0A8u)

/** \brief C0AC, CPU2 HR specific data protection range 21, upper bound register */
#define CPU2_HRB_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC0ACu)

/** \brief C0B0, CPU2 HR specific data protection range 22, lower bound register */
#define CPU2_HRB_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC0B0u)

/** \brief C0B4, CPU2 HR specific data protection range 22, upper bound register */
#define CPU2_HRB_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC0B4u)

/** \brief C0B8, CPU2 HR specific data protection range 23, lower bound register */
#define CPU2_HRB_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88AC0B8u)

/** \brief C0BC, CPU2 HR specific data protection range 23, upper bound register */
#define CPU2_HRB_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88AC0BCu)

/** \brief D000, CPU2 HR specific code protection range 0, lower bound register */
#define CPU2_HRB_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD000u)

/** \brief D004, CPU2 HR specific code protection range 0, upper bound register */
#define CPU2_HRB_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD004u)

/** \brief D008, CPU2 HR specific code protection range 1, lower bound register */
#define CPU2_HRB_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD008u)

/** \brief D00C, CPU2 HR specific code protection range 1, upper bound register */
#define CPU2_HRB_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD00Cu)

/** \brief D010, CPU2 HR specific code protection range 2, lower bound register */
#define CPU2_HRB_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD010u)

/** \brief D014, CPU2 HR specific code protection range 2, upper bound register */
#define CPU2_HRB_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD014u)

/** \brief D018, CPU2 HR specific code protection range 3, lower bound register */
#define CPU2_HRB_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD018u)

/** \brief D01C, CPU2 HR specific code protection range 3, upper bound register */
#define CPU2_HRB_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD01Cu)

/** \brief D020, CPU2 HR specific code protection range 4, lower bound register */
#define CPU2_HRB_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD020u)

/** \brief D024, CPU2 HR specific code protection range 4, upper bound register */
#define CPU2_HRB_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD024u)

/** \brief D028, CPU2 HR specific code protection range 5, lower bound register */
#define CPU2_HRB_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD028u)

/** \brief D02C, CPU2 HR specific code protection range 5, upper bound register */
#define CPU2_HRB_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD02Cu)

/** \brief D030, CPU2 HR specific code protection range 6, lower bound register */
#define CPU2_HRB_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD030u)

/** \brief D034, CPU2 HR specific code protection range 6, upper bound register */
#define CPU2_HRB_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD034u)

/** \brief D038, CPU2 HR specific code protection range 7, lower bound register */
#define CPU2_HRB_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD038u)

/** \brief D03C, CPU2 HR specific code protection range 7, upper bound register */
#define CPU2_HRB_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD03Cu)

/** \brief D040, CPU2 HR specific code protection range 8, lower bound register */
#define CPU2_HRB_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD040u)

/** \brief D044, CPU2 HR specific code protection range 8, upper bound register */
#define CPU2_HRB_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD044u)

/** \brief D048, CPU2 HR specific code protection range 9, lower bound register */
#define CPU2_HRB_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD048u)

/** \brief D04C, CPU2 HR specific code protection range 9, upper bound register */
#define CPU2_HRB_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD04Cu)

/** \brief D050, CPU2 HR specific code protection range 10, lower bound register */
#define CPU2_HRB_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD050u)

/** \brief D054, CPU2 HR specific code protection range 10, upper bound register */
#define CPU2_HRB_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD054u)

/** \brief D058, CPU2 HR specific code protection range 11, lower bound register */
#define CPU2_HRB_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD058u)

/** \brief D05C, CPU2 HR specific code protection range 11, upper bound register */
#define CPU2_HRB_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD05Cu)

/** \brief D060, CPU2 HR specific code protection range 12, lower bound register */
#define CPU2_HRB_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD060u)

/** \brief D064, CPU2 HR specific code protection range 12, upper bound register */
#define CPU2_HRB_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD064u)

/** \brief D068, CPU2 HR specific code protection range 13, lower bound register */
#define CPU2_HRB_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD068u)

/** \brief D06C, CPU2 HR specific code protection range 13, upper bound register */
#define CPU2_HRB_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD06Cu)

/** \brief D070, CPU2 HR specific code protection range 14, lower bound register */
#define CPU2_HRB_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD070u)

/** \brief D074, CPU2 HR specific code protection range 14, upper bound register */
#define CPU2_HRB_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD074u)

/** \brief D078, CPU2 HR specific code protection range 15, lower bound register */
#define CPU2_HRB_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88AD078u)

/** \brief D07C, CPU2 HR specific code protection range 15, upper bound register */
#define CPU2_HRB_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88AD07Cu)

/** \brief E000, CPU2 HR specific code protection execute enable register set 0 */
#define CPU2_HRB_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE000u)

/** \brief E004, CPU2 HR specific code protection execute enable register set 1 */
#define CPU2_HRB_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE004u)

/** \brief E008, CPU2 HR specific code protection execute enable register set 2 */
#define CPU2_HRB_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE008u)

/** \brief E00C, CPU2 HR specific code protection execute enable register set 3 */
#define CPU2_HRB_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE00Cu)

/** \brief E010, CPU2 HR specific data protection read enable register set 0 */
#define CPU2_HRB_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE010u)

/** \brief E014, CPU2 HR specific data protection read enable register set 1 */
#define CPU2_HRB_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE014u)

/** \brief E018, CPU2 HR specific data protection read enable register set 2 */
#define CPU2_HRB_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE018u)

/** \brief E01C, CPU2 HR specific data protection read enable register set 3 */
#define CPU2_HRB_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE01Cu)

/** \brief E020, CPU2 HR specific data protection write enable register set 0 */
#define CPU2_HRB_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE020u)

/** \brief E024, CPU2 HR specific data protection write enable register set 1 */
#define CPU2_HRB_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE024u)

/** \brief E028, CPU2 HR specific data protection write enable register set 2 */
#define CPU2_HRB_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE028u)

/** \brief E02C, CPU2 HR specific data protection write enable register set 3 */
#define CPU2_HRB_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE02Cu)

/** \brief E040, CPU2 HR specific code protection execute enable register set 4 */
#define CPU2_HRB_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE040u)

/** \brief E044, CPU2 HR specific code protection execute enable register set 5 */
#define CPU2_HRB_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE044u)

/** \brief E048, CPU2 HR specific code protection execute enable register set 6 */
#define CPU2_HRB_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE048u)

/** \brief E04C, CPU2 HR specific code protection execute enable register set 7 */
#define CPU2_HRB_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88AE04Cu)

/** \brief E050, CPU2 HR specific data protection read enable register set 4 */
#define CPU2_HRB_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE050u)

/** \brief E054, CPU2 HR specific data protection read enable register set 5 */
#define CPU2_HRB_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE054u)

/** \brief E058, CPU2 HR specific data protection read enable register set 6 */
#define CPU2_HRB_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE058u)

/** \brief E05C, CPU2 HR specific data protection read enable register set 7 */
#define CPU2_HRB_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88AE05Cu)

/** \brief E060, CPU2 HR specific data protection write enable register set 4 */
#define CPU2_HRB_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE060u)

/** \brief E064, CPU2 HR specific data protection write enable register set 5 */
#define CPU2_HRB_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE064u)

/** \brief E068, CPU2 HR specific data protection write enable register set 6 */
#define CPU2_HRB_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE068u)

/** \brief E06C, CPU2 HR specific data protection write enable register set 7 */
#define CPU2_HRB_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88AE06Cu)

/** \brief E400, CPU2 HR specific temporal protection system control register */
#define CPU2_HRB_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF88AE400u)

/** \brief E404, CPU2 HR specific temporal protection system timer register 0 */
#define CPU2_HRB_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88AE404u)

/** \brief E408, CPU2 HR specific temporal protection system timer register 1 */
#define CPU2_HRB_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88AE408u)

/** \brief E40C, CPU2 HR specific temporal protection system timer register 2 */
#define CPU2_HRB_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88AE40Cu)

/** \brief F000, CPU2 trigger event 0 */
#define CPU2_HRB_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF000u)
/** Alias (User Manual Name) for CPU2_HRB_TR0_EVT */
#define CPU2_HRB_TR0EVT (CPU2_HRB_TR0_EVT)

/** \brief F004, CPU2 trigger address 0 */
#define CPU2_HRB_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF004u)
/** Alias (User Manual Name) for CPU2_HRB_TR0_ADR */
#define CPU2_HRB_TR0ADR (CPU2_HRB_TR0_ADR)

/** \brief F008, CPU2 trigger event 1 */
#define CPU2_HRB_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF008u)
/** Alias (User Manual Name) for CPU2_HRB_TR1_EVT */
#define CPU2_HRB_TR1EVT (CPU2_HRB_TR1_EVT)

/** \brief F00C, CPU2 trigger address 1 */
#define CPU2_HRB_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF00Cu)
/** Alias (User Manual Name) for CPU2_HRB_TR1_ADR */
#define CPU2_HRB_TR1ADR (CPU2_HRB_TR1_ADR)

/** \brief F010, CPU2 trigger event 2 */
#define CPU2_HRB_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF010u)
/** Alias (User Manual Name) for CPU2_HRB_TR2_EVT */
#define CPU2_HRB_TR2EVT (CPU2_HRB_TR2_EVT)

/** \brief F014, CPU2 trigger address 2 */
#define CPU2_HRB_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF014u)
/** Alias (User Manual Name) for CPU2_HRB_TR2_ADR */
#define CPU2_HRB_TR2ADR (CPU2_HRB_TR2_ADR)

/** \brief F018, CPU2 trigger event 3 */
#define CPU2_HRB_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF018u)
/** Alias (User Manual Name) for CPU2_HRB_TR3_EVT */
#define CPU2_HRB_TR3EVT (CPU2_HRB_TR3_EVT)

/** \brief F01C, CPU2 trigger address 3 */
#define CPU2_HRB_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF01Cu)
/** Alias (User Manual Name) for CPU2_HRB_TR3_ADR */
#define CPU2_HRB_TR3ADR (CPU2_HRB_TR3_ADR)

/** \brief F020, CPU2 trigger event 4 */
#define CPU2_HRB_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF020u)
/** Alias (User Manual Name) for CPU2_HRB_TR4_EVT */
#define CPU2_HRB_TR4EVT (CPU2_HRB_TR4_EVT)

/** \brief F024, CPU2 trigger address 4 */
#define CPU2_HRB_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF024u)
/** Alias (User Manual Name) for CPU2_HRB_TR4_ADR */
#define CPU2_HRB_TR4ADR (CPU2_HRB_TR4_ADR)

/** \brief F028, CPU2 trigger event 5 */
#define CPU2_HRB_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF028u)
/** Alias (User Manual Name) for CPU2_HRB_TR5_EVT */
#define CPU2_HRB_TR5EVT (CPU2_HRB_TR5_EVT)

/** \brief F02C, CPU2 trigger address 5 */
#define CPU2_HRB_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF02Cu)
/** Alias (User Manual Name) for CPU2_HRB_TR5_ADR */
#define CPU2_HRB_TR5ADR (CPU2_HRB_TR5_ADR)

/** \brief F030, CPU2 trigger event 6 */
#define CPU2_HRB_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF030u)
/** Alias (User Manual Name) for CPU2_HRB_TR6_EVT */
#define CPU2_HRB_TR6EVT (CPU2_HRB_TR6_EVT)

/** \brief F034, CPU2 trigger address 6 */
#define CPU2_HRB_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF034u)
/** Alias (User Manual Name) for CPU2_HRB_TR6_ADR */
#define CPU2_HRB_TR6ADR (CPU2_HRB_TR6_ADR)

/** \brief F038, CPU2 trigger event 7 */
#define CPU2_HRB_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88AF038u)
/** Alias (User Manual Name) for CPU2_HRB_TR7_EVT */
#define CPU2_HRB_TR7EVT (CPU2_HRB_TR7_EVT)

/** \brief F03C, CPU2 trigger address 7 */
#define CPU2_HRB_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88AF03Cu)
/** Alias (User Manual Name) for CPU2_HRB_TR7_ADR */
#define CPU2_HRB_TR7ADR (CPU2_HRB_TR7_ADR)

/** \brief FC00, CPU2 HR specific counter control */
#define CPU2_HRB_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF88AFC00u)

/** \brief FC04, CPU2 HR specific CPU clock cycle count */
#define CPU2_HRB_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF88AFC04u)

/** \brief FC08, CPU2 HR specific instruction count */
#define CPU2_HRB_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF88AFC08u)

/** \brief FC0C, CPU2 HR specific multi-count register 1 */
#define CPU2_HRB_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF88AFC0Cu)

/** \brief FC10, CPU2 HR specific multi-count register 2 */
#define CPU2_HRB_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF88AFC10u)

/** \brief FC14, CPU2 HR specific multi-count register 3 */
#define CPU2_HRB_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF88AFC14u)

/** \brief FD00, CPU2 debug status register */
#define CPU2_HRB_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF88AFD00u)

/** \brief FD08, CPU2 external event register */
#define CPU2_HRB_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88AFD08u)

/** \brief FD0C, CPU2 core register access event */
#define CPU2_HRB_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88AFD0Cu)

/** \brief FD10, CPU2 software debug event */
#define CPU2_HRB_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88AFD10u)

/** \brief FD14, CPU2 debug action configuration */
#define CPU2_HRB_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF88AFD14u)

/** \brief FD30, CPU2 trigger accumulator */
#define CPU2_HRB_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF88AFD30u)

/** \brief FD40, CPU2 debug monitor start address */
#define CPU2_HRB_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF88AFD40u)

/** \brief FD44, CPU2 debug context save area pointer */
#define CPU2_HRB_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF88AFD44u)

/** \brief FD48, CPU2 debug trap control */
#define CPU2_HRB_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF88AFD48u)

/** \brief FD4C, CPU2 debug configuration */
#define CPU2_HRB_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF88AFD4Cu)

/** \brief FD50, CPU2 trace configuration */
#define CPU2_HRB_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF88AFD50u)

/** \brief FD54, CPU2 trace filter */
#define CPU2_HRB_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF88AFD54u)

/** \brief FD58, CPU2 trace bandwidth limiter */
#define CPU2_HRB_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF88AFD58u)

/** \brief FD60, CPU2 MCDS performance counter control register */
#define CPU2_HRB_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF88AFD60u)

/** \brief FE00, CPU2 previous context information register */
#define CPU2_HRB_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF88AFE00u)

/** \brief FE04, CPU2 HR specific program status word */
#define CPU2_HRB_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF88AFE04u)

/** \brief FE08, CPU2 program counter */
#define CPU2_HRB_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF88AFE08u)

/** \brief FE14, CPU2 HR specific core configuration register */
#define CPU2_HRB_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF88AFE14u)

/** \brief FE18, CPU2 identification register */
#define CPU2_HRB_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF88AFE18u)

/** \brief FE1C, CPU2 core identification register */
#define CPU2_HRB_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF88AFE1Cu)

/** \brief FE20, CPU2 HR specific base interrupt vector table pointer */
#define CPU2_HRB_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF88AFE20u)

/** \brief FE24, CPU2 HR specific base trap vector table pointer */
#define CPU2_HRB_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF88AFE24u)

/** \brief FE28, CPU2 HR specific interrupt stack pointer */
#define CPU2_HRB_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF88AFE28u)

/** \brief FE2C, CPU2 interrupt control register */
#define CPU2_HRB_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF88AFE2Cu)

/** \brief FE34, CPU2 previous PRS */
#define CPU2_HRB_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF88AFE34u)

/** \brief FE38, CPU2 HR specific free CSA list head pointer */
#define CPU2_HRB_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF88AFE38u)

/** \brief FE3C, CPU2 HR specific free CSA list limit pointer */
#define CPU2_HRB_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF88AFE3Cu)

/** \brief FE40, CPU2 software identification */
#define CPU2_HRB_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF88AFE40u)

/** \brief FE50, CPU2 customer ID register */
#define CPU2_HRB_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF88AFE50u)

/** \brief FE60, CPU2 core boot configuration register */
#define CPU2_HRB_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF88AFE60u)

/** \brief FE64, CPU2 lockstep control register */
#define CPU2_HRB_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF88AFE64u)

/** \brief FE68, CPU2 clock control register */
#define CPU2_HRB_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF88AFE68u)

/** \brief FE6C, CPU2 hardware configuration  */
#define CPU2_HRB_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF88AFE6Cu)

/** \brief FF80, CPU2 HR specific address general purpose register 0 */
#define CPU2_HRB_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88AFF80u)

/** \brief FF84, CPU2 HR specific address general purpose register 1 */
#define CPU2_HRB_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88AFF84u)

/** \brief FFA0, CPU2 HR specific address general purpose register 8 */
#define CPU2_HRB_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88AFFA0u)

/** \brief FFA4, CPU2 HR specific address general purpose register 9 */
#define CPU2_HRB_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88AFFA4u)

/** \brief 1030, CPU2 SRI error generation register */
#define CPU2_HRHV_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF88B1030u)

/** \brief 1040, CPU2 lockstep test register */
#define CPU2_HRHV_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF88B1040u)

/** \brief 8100, CPU2 data access cacheability register */
#define CPU2_HRHV_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF88B8100u)

/** \brief 8104, CPU2 code access cacheability register */
#define CPU2_HRHV_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF88B8104u)

/** \brief 8108, CPU2 peripheral space identifier register */
#define CPU2_HRHV_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF88B8108u)

/** \brief 9000, CPU2 data control register 2 */
#define CPU2_HRHV_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF88B9000u)

/** \brief 9008, CPU2 data control register 1 */
#define CPU2_HRHV_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF88B9008u)

/** \brief 900C, CPU2 SIST mode access control register */
#define CPU2_HRHV_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF88B900Cu)

/** \brief 9010, CPU2 HR specific data synchronous trap register */
#define CPU2_HRHV_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF88B9010u)

/** \brief 9018, CPU2 HR specific data asynchronous trap register */
#define CPU2_HRHV_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF88B9018u)

/** \brief 901C, CPU2 HR specific data error address register */
#define CPU2_HRHV_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF88B901Cu)

/** \brief 9020, CPU2 data integrity error address register */
#define CPU2_HRHV_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88B9020u)

/** \brief 9024, CPU2 data integrity error trap register */
#define CPU2_HRHV_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF88B9024u)

/** \brief 9040, CPU2 data memory control register */
#define CPU2_HRHV_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF88B9040u)

/** \brief 9200, CPU2 HR specific program synchronous trap register */
#define CPU2_HRHV_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF88B9200u)

/** \brief 9204, CPU2 program control 1 */
#define CPU2_HRHV_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF88B9204u)

/** \brief 9208, CPU2 program control 2 */
#define CPU2_HRHV_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF88B9208u)

/** \brief 920C, CPU2 program control 0 */
#define CPU2_HRHV_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF88B920Cu)

/** \brief 9210, CPU2 HR specific program integrity error address register */
#define CPU2_HRHV_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88B9210u)

/** \brief 9214, CPU2 HR specific program integrity error trap register */
#define CPU2_HRHV_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF88B9214u)

/** \brief 9400, CPU2 compatibility control register */
#define CPU2_HRHV_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF88B9400u)

/** \brief A000, CPU2 HR specific trap control register */
#define CPU2_HRHV_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF88BA000u)

/** \brief A004, CPU2 HR specific trapping instruction program counter register */
#define CPU2_HRHV_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF88BA004u)

/** \brief A008, CPU2 HR specific trapping instruction opcode register */
#define CPU2_HRHV_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88BA008u)

/** \brief A010, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRHV_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF88BA010u)

/** \brief A014, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRHV_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF88BA014u)

/** \brief A018, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRHV_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF88BA018u)

/** \brief A01C, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRHV_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF88BA01Cu)

/** \brief A020, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRHV_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF88BA020u)

/** \brief A024, CPU2 HR specific trapping instruction operand register */
#define CPU2_HRHV_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF88BA024u)

/** \brief A030, CPU2 HR specific synchronous trap control register */
#define CPU2_HRHV_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF88BA030u)

/** \brief A034, CPU2 HR specific trapping instruction opcode register */
#define CPU2_HRHV_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88BA034u)

/** \brief B000, CPU2 virtualization control register 0 */
#define CPU2_HRHV_VCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON0*)0xF88BB000u)

/** \brief B004, CPU2 virtualization control register 1 */
#define CPU2_HRHV_VCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON1*)0xF88BB004u)

/** \brief B008, CPU2 virtualization control register 2 */
#define CPU2_HRHV_VCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON2*)0xF88BB008u)

/** \brief B010, CPU2 base hypervisor vector table pointer */
#define CPU2_HRHV_BHV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BHV*)0xF88BB010u)

/** \brief B100, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB100u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR0 */
#define CPU2_HRHV_VM0_ICR (CPU2_HRHV_VM_ICR0)

/** \brief B104, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB104u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR1 */
#define CPU2_HRHV_VM1_ICR (CPU2_HRHV_VM_ICR1)

/** \brief B108, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB108u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR2 */
#define CPU2_HRHV_VM2_ICR (CPU2_HRHV_VM_ICR2)

/** \brief B10C, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB10Cu)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR3 */
#define CPU2_HRHV_VM3_ICR (CPU2_HRHV_VM_ICR3)

/** \brief B110, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB110u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR4 */
#define CPU2_HRHV_VM4_ICR (CPU2_HRHV_VM_ICR4)

/** \brief B114, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB114u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR5 */
#define CPU2_HRHV_VM5_ICR (CPU2_HRHV_VM_ICR5)

/** \brief B118, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB118u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR6 */
#define CPU2_HRHV_VM6_ICR (CPU2_HRHV_VM_ICR6)

/** \brief B11C, CPU2 Virtual machine n interrupt state */
#define CPU2_HRHV_VM_ICR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88BB11Cu)
/** Alias (User Manual Name) for CPU2_HRHV_VM_ICR7 */
#define CPU2_HRHV_VM7_ICR (CPU2_HRHV_VM_ICR7)

/** \brief B200, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB200u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH0 */
#define CPU2_HRHV_VM0_PETHRESH (CPU2_HRHV_VM_PETHRESH0)

/** \brief B204, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB204u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH1 */
#define CPU2_HRHV_VM1_PETHRESH (CPU2_HRHV_VM_PETHRESH1)

/** \brief B208, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB208u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH2 */
#define CPU2_HRHV_VM2_PETHRESH (CPU2_HRHV_VM_PETHRESH2)

/** \brief B20C, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB20Cu)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH3 */
#define CPU2_HRHV_VM3_PETHRESH (CPU2_HRHV_VM_PETHRESH3)

/** \brief B210, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB210u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH4 */
#define CPU2_HRHV_VM4_PETHRESH (CPU2_HRHV_VM_PETHRESH4)

/** \brief B214, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB214u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH5 */
#define CPU2_HRHV_VM5_PETHRESH (CPU2_HRHV_VM_PETHRESH5)

/** \brief B218, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB218u)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH6 */
#define CPU2_HRHV_VM6_PETHRESH (CPU2_HRHV_VM_PETHRESH6)

/** \brief B21C, CPU2 Virtual machine n pre-emption threshold */
#define CPU2_HRHV_VM_PETHRESH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88BB21Cu)
/** Alias (User Manual Name) for CPU2_HRHV_VM_PETHRESH7 */
#define CPU2_HRHV_VM7_PETHRESH (CPU2_HRHV_VM_PETHRESH7)

/** \brief C000, CPU2 HR specific data protection range 0, lower bound register */
#define CPU2_HRHV_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC000u)

/** \brief C004, CPU2 HR specific data protection range 0, upper bound register */
#define CPU2_HRHV_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC004u)

/** \brief C008, CPU2 HR specific data protection range 1, lower bound register */
#define CPU2_HRHV_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC008u)

/** \brief C00C, CPU2 HR specific data protection range 1, upper bound register */
#define CPU2_HRHV_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC00Cu)

/** \brief C010, CPU2 HR specific data protection range 2, lower bound register */
#define CPU2_HRHV_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC010u)

/** \brief C014, CPU2 HR specific data protection range 2, upper bound register */
#define CPU2_HRHV_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC014u)

/** \brief C018, CPU2 HR specific data protection range 3, lower bound register */
#define CPU2_HRHV_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC018u)

/** \brief C01C, CPU2 HR specific data protection range 3, upper bound register */
#define CPU2_HRHV_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC01Cu)

/** \brief C020, CPU2 HR specific data protection range 4, lower bound register */
#define CPU2_HRHV_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC020u)

/** \brief C024, CPU2 HR specific data protection range 4, upper bound register */
#define CPU2_HRHV_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC024u)

/** \brief C028, CPU2 HR specific data protection range 5, lower bound register */
#define CPU2_HRHV_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC028u)

/** \brief C02C, CPU2 HR specific data protection range 5, upper bound register */
#define CPU2_HRHV_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC02Cu)

/** \brief C030, CPU2 HR specific data protection range 6, lower bound register */
#define CPU2_HRHV_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC030u)

/** \brief C034, CPU2 HR specific data protection range 6, upper bound register */
#define CPU2_HRHV_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC034u)

/** \brief C038, CPU2 HR specific data protection range 7, lower bound register */
#define CPU2_HRHV_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC038u)

/** \brief C03C, CPU2 HR specific data protection range 7, upper bound register */
#define CPU2_HRHV_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC03Cu)

/** \brief C040, CPU2 HR specific data protection range 8, lower bound register */
#define CPU2_HRHV_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC040u)

/** \brief C044, CPU2 HR specific data protection range 8, upper bound register */
#define CPU2_HRHV_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC044u)

/** \brief C048, CPU2 HR specific data protection range 9, lower bound register */
#define CPU2_HRHV_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC048u)

/** \brief C04C, CPU2 HR specific data protection range 9, upper bound register */
#define CPU2_HRHV_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC04Cu)

/** \brief C050, CPU2 HR specific data protection range 10, lower bound register */
#define CPU2_HRHV_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC050u)

/** \brief C054, CPU2 HR specific data protection range 10, upper bound register */
#define CPU2_HRHV_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC054u)

/** \brief C058, CPU2 HR specific data protection range 11, lower bound register */
#define CPU2_HRHV_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC058u)

/** \brief C05C, CPU2 HR specific data protection range 11, upper bound register */
#define CPU2_HRHV_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC05Cu)

/** \brief C060, CPU2 HR specific data protection range 12, lower bound register */
#define CPU2_HRHV_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC060u)

/** \brief C064, CPU2 HR specific data protection range 12, upper bound register */
#define CPU2_HRHV_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC064u)

/** \brief C068, CPU2 HR specific data protection range 13, lower bound register */
#define CPU2_HRHV_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC068u)

/** \brief C06C, CPU2 HR specific data protection range 13, upper bound register */
#define CPU2_HRHV_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC06Cu)

/** \brief C070, CPU2 HR specific data protection range 14, lower bound register */
#define CPU2_HRHV_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC070u)

/** \brief C074, CPU2 HR specific data protection range 14, upper bound register */
#define CPU2_HRHV_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC074u)

/** \brief C078, CPU2 HR specific data protection range 15, lower bound register */
#define CPU2_HRHV_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC078u)

/** \brief C07C, CPU2 HR specific data protection range 15, upper bound register */
#define CPU2_HRHV_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC07Cu)

/** \brief C080, CPU2 HR specific data protection range 16, lower bound register */
#define CPU2_HRHV_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC080u)

/** \brief C084, CPU2 HR specific data protection range 16, upper bound register */
#define CPU2_HRHV_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC084u)

/** \brief C088, CPU2 HR specific data protection range 17, lower bound register */
#define CPU2_HRHV_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC088u)

/** \brief C08C, CPU2 HR specific data protection range 17, upper bound register */
#define CPU2_HRHV_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC08Cu)

/** \brief C090, CPU2 HR specific data protection range 18, lower bound register */
#define CPU2_HRHV_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC090u)

/** \brief C094, CPU2 HR specific data protection range 18, upper bound register */
#define CPU2_HRHV_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC094u)

/** \brief C098, CPU2 HR specific data protection range 19, lower bound register */
#define CPU2_HRHV_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC098u)

/** \brief C09C, CPU2 HR specific data protection range 19, upper bound register */
#define CPU2_HRHV_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC09Cu)

/** \brief C0A0, CPU2 HR specific data protection range 20, lower bound register */
#define CPU2_HRHV_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC0A0u)

/** \brief C0A4, CPU2 HR specific data protection range 20, upper bound register */
#define CPU2_HRHV_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC0A4u)

/** \brief C0A8, CPU2 HR specific data protection range 21, lower bound register */
#define CPU2_HRHV_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC0A8u)

/** \brief C0AC, CPU2 HR specific data protection range 21, upper bound register */
#define CPU2_HRHV_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC0ACu)

/** \brief C0B0, CPU2 HR specific data protection range 22, lower bound register */
#define CPU2_HRHV_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC0B0u)

/** \brief C0B4, CPU2 HR specific data protection range 22, upper bound register */
#define CPU2_HRHV_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC0B4u)

/** \brief C0B8, CPU2 HR specific data protection range 23, lower bound register */
#define CPU2_HRHV_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88BC0B8u)

/** \brief C0BC, CPU2 HR specific data protection range 23, upper bound register */
#define CPU2_HRHV_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88BC0BCu)

/** \brief D000, CPU2 HR specific code protection range 0, lower bound register */
#define CPU2_HRHV_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD000u)

/** \brief D004, CPU2 HR specific code protection range 0, upper bound register */
#define CPU2_HRHV_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD004u)

/** \brief D008, CPU2 HR specific code protection range 1, lower bound register */
#define CPU2_HRHV_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD008u)

/** \brief D00C, CPU2 HR specific code protection range 1, upper bound register */
#define CPU2_HRHV_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD00Cu)

/** \brief D010, CPU2 HR specific code protection range 2, lower bound register */
#define CPU2_HRHV_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD010u)

/** \brief D014, CPU2 HR specific code protection range 2, upper bound register */
#define CPU2_HRHV_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD014u)

/** \brief D018, CPU2 HR specific code protection range 3, lower bound register */
#define CPU2_HRHV_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD018u)

/** \brief D01C, CPU2 HR specific code protection range 3, upper bound register */
#define CPU2_HRHV_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD01Cu)

/** \brief D020, CPU2 HR specific code protection range 4, lower bound register */
#define CPU2_HRHV_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD020u)

/** \brief D024, CPU2 HR specific code protection range 4, upper bound register */
#define CPU2_HRHV_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD024u)

/** \brief D028, CPU2 HR specific code protection range 5, lower bound register */
#define CPU2_HRHV_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD028u)

/** \brief D02C, CPU2 HR specific code protection range 5, upper bound register */
#define CPU2_HRHV_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD02Cu)

/** \brief D030, CPU2 HR specific code protection range 6, lower bound register */
#define CPU2_HRHV_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD030u)

/** \brief D034, CPU2 HR specific code protection range 6, upper bound register */
#define CPU2_HRHV_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD034u)

/** \brief D038, CPU2 HR specific code protection range 7, lower bound register */
#define CPU2_HRHV_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD038u)

/** \brief D03C, CPU2 HR specific code protection range 7, upper bound register */
#define CPU2_HRHV_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD03Cu)

/** \brief D040, CPU2 HR specific code protection range 8, lower bound register */
#define CPU2_HRHV_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD040u)

/** \brief D044, CPU2 HR specific code protection range 8, upper bound register */
#define CPU2_HRHV_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD044u)

/** \brief D048, CPU2 HR specific code protection range 9, lower bound register */
#define CPU2_HRHV_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD048u)

/** \brief D04C, CPU2 HR specific code protection range 9, upper bound register */
#define CPU2_HRHV_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD04Cu)

/** \brief D050, CPU2 HR specific code protection range 10, lower bound register */
#define CPU2_HRHV_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD050u)

/** \brief D054, CPU2 HR specific code protection range 10, upper bound register */
#define CPU2_HRHV_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD054u)

/** \brief D058, CPU2 HR specific code protection range 11, lower bound register */
#define CPU2_HRHV_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD058u)

/** \brief D05C, CPU2 HR specific code protection range 11, upper bound register */
#define CPU2_HRHV_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD05Cu)

/** \brief D060, CPU2 HR specific code protection range 12, lower bound register */
#define CPU2_HRHV_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD060u)

/** \brief D064, CPU2 HR specific code protection range 12, upper bound register */
#define CPU2_HRHV_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD064u)

/** \brief D068, CPU2 HR specific code protection range 13, lower bound register */
#define CPU2_HRHV_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD068u)

/** \brief D06C, CPU2 HR specific code protection range 13, upper bound register */
#define CPU2_HRHV_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD06Cu)

/** \brief D070, CPU2 HR specific code protection range 14, lower bound register */
#define CPU2_HRHV_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD070u)

/** \brief D074, CPU2 HR specific code protection range 14, upper bound register */
#define CPU2_HRHV_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD074u)

/** \brief D078, CPU2 HR specific code protection range 15, lower bound register */
#define CPU2_HRHV_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88BD078u)

/** \brief D07C, CPU2 HR specific code protection range 15, upper bound register */
#define CPU2_HRHV_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88BD07Cu)

/** \brief E000, CPU2 HR specific code protection execute enable register set 0 */
#define CPU2_HRHV_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE000u)

/** \brief E004, CPU2 HR specific code protection execute enable register set 1 */
#define CPU2_HRHV_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE004u)

/** \brief E008, CPU2 HR specific code protection execute enable register set 2 */
#define CPU2_HRHV_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE008u)

/** \brief E00C, CPU2 HR specific code protection execute enable register set 3 */
#define CPU2_HRHV_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE00Cu)

/** \brief E010, CPU2 HR specific data protection read enable register set 0 */
#define CPU2_HRHV_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE010u)

/** \brief E014, CPU2 HR specific data protection read enable register set 1 */
#define CPU2_HRHV_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE014u)

/** \brief E018, CPU2 HR specific data protection read enable register set 2 */
#define CPU2_HRHV_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE018u)

/** \brief E01C, CPU2 HR specific data protection read enable register set 3 */
#define CPU2_HRHV_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE01Cu)

/** \brief E020, CPU2 HR specific data protection write enable register set 0 */
#define CPU2_HRHV_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE020u)

/** \brief E024, CPU2 HR specific data protection write enable register set 1 */
#define CPU2_HRHV_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE024u)

/** \brief E028, CPU2 HR specific data protection write enable register set 2 */
#define CPU2_HRHV_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE028u)

/** \brief E02C, CPU2 HR specific data protection write enable register set 3 */
#define CPU2_HRHV_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE02Cu)

/** \brief E040, CPU2 HR specific code protection execute enable register set 4 */
#define CPU2_HRHV_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE040u)

/** \brief E044, CPU2 HR specific code protection execute enable register set 5 */
#define CPU2_HRHV_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE044u)

/** \brief E048, CPU2 HR specific code protection execute enable register set 6 */
#define CPU2_HRHV_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE048u)

/** \brief E04C, CPU2 HR specific code protection execute enable register set 7 */
#define CPU2_HRHV_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88BE04Cu)

/** \brief E050, CPU2 HR specific data protection read enable register set 4 */
#define CPU2_HRHV_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE050u)

/** \brief E054, CPU2 HR specific data protection read enable register set 5 */
#define CPU2_HRHV_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE054u)

/** \brief E058, CPU2 HR specific data protection read enable register set 6 */
#define CPU2_HRHV_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE058u)

/** \brief E05C, CPU2 HR specific data protection read enable register set 7 */
#define CPU2_HRHV_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88BE05Cu)

/** \brief E060, CPU2 HR specific data protection write enable register set 4 */
#define CPU2_HRHV_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE060u)

/** \brief E064, CPU2 HR specific data protection write enable register set 5 */
#define CPU2_HRHV_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE064u)

/** \brief E068, CPU2 HR specific data protection write enable register set 6 */
#define CPU2_HRHV_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE068u)

/** \brief E06C, CPU2 HR specific data protection write enable register set 7 */
#define CPU2_HRHV_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88BE06Cu)

/** \brief E400, CPU2 HR specific temporal protection system control register */
#define CPU2_HRHV_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF88BE400u)

/** \brief E404, CPU2 HR specific temporal protection system timer register 0 */
#define CPU2_HRHV_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88BE404u)

/** \brief E408, CPU2 HR specific temporal protection system timer register 1 */
#define CPU2_HRHV_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88BE408u)

/** \brief E40C, CPU2 HR specific temporal protection system timer register 2 */
#define CPU2_HRHV_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88BE40Cu)

/** \brief F000, CPU2 trigger event 0 */
#define CPU2_HRHV_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF000u)
/** Alias (User Manual Name) for CPU2_HRHV_TR0_EVT */
#define CPU2_HRHV_TR0EVT (CPU2_HRHV_TR0_EVT)

/** \brief F004, CPU2 trigger address 0 */
#define CPU2_HRHV_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF004u)
/** Alias (User Manual Name) for CPU2_HRHV_TR0_ADR */
#define CPU2_HRHV_TR0ADR (CPU2_HRHV_TR0_ADR)

/** \brief F008, CPU2 trigger event 1 */
#define CPU2_HRHV_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF008u)
/** Alias (User Manual Name) for CPU2_HRHV_TR1_EVT */
#define CPU2_HRHV_TR1EVT (CPU2_HRHV_TR1_EVT)

/** \brief F00C, CPU2 trigger address 1 */
#define CPU2_HRHV_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF00Cu)
/** Alias (User Manual Name) for CPU2_HRHV_TR1_ADR */
#define CPU2_HRHV_TR1ADR (CPU2_HRHV_TR1_ADR)

/** \brief F010, CPU2 trigger event 2 */
#define CPU2_HRHV_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF010u)
/** Alias (User Manual Name) for CPU2_HRHV_TR2_EVT */
#define CPU2_HRHV_TR2EVT (CPU2_HRHV_TR2_EVT)

/** \brief F014, CPU2 trigger address 2 */
#define CPU2_HRHV_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF014u)
/** Alias (User Manual Name) for CPU2_HRHV_TR2_ADR */
#define CPU2_HRHV_TR2ADR (CPU2_HRHV_TR2_ADR)

/** \brief F018, CPU2 trigger event 3 */
#define CPU2_HRHV_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF018u)
/** Alias (User Manual Name) for CPU2_HRHV_TR3_EVT */
#define CPU2_HRHV_TR3EVT (CPU2_HRHV_TR3_EVT)

/** \brief F01C, CPU2 trigger address 3 */
#define CPU2_HRHV_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF01Cu)
/** Alias (User Manual Name) for CPU2_HRHV_TR3_ADR */
#define CPU2_HRHV_TR3ADR (CPU2_HRHV_TR3_ADR)

/** \brief F020, CPU2 trigger event 4 */
#define CPU2_HRHV_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF020u)
/** Alias (User Manual Name) for CPU2_HRHV_TR4_EVT */
#define CPU2_HRHV_TR4EVT (CPU2_HRHV_TR4_EVT)

/** \brief F024, CPU2 trigger address 4 */
#define CPU2_HRHV_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF024u)
/** Alias (User Manual Name) for CPU2_HRHV_TR4_ADR */
#define CPU2_HRHV_TR4ADR (CPU2_HRHV_TR4_ADR)

/** \brief F028, CPU2 trigger event 5 */
#define CPU2_HRHV_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF028u)
/** Alias (User Manual Name) for CPU2_HRHV_TR5_EVT */
#define CPU2_HRHV_TR5EVT (CPU2_HRHV_TR5_EVT)

/** \brief F02C, CPU2 trigger address 5 */
#define CPU2_HRHV_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF02Cu)
/** Alias (User Manual Name) for CPU2_HRHV_TR5_ADR */
#define CPU2_HRHV_TR5ADR (CPU2_HRHV_TR5_ADR)

/** \brief F030, CPU2 trigger event 6 */
#define CPU2_HRHV_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF030u)
/** Alias (User Manual Name) for CPU2_HRHV_TR6_EVT */
#define CPU2_HRHV_TR6EVT (CPU2_HRHV_TR6_EVT)

/** \brief F034, CPU2 trigger address 6 */
#define CPU2_HRHV_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF034u)
/** Alias (User Manual Name) for CPU2_HRHV_TR6_ADR */
#define CPU2_HRHV_TR6ADR (CPU2_HRHV_TR6_ADR)

/** \brief F038, CPU2 trigger event 7 */
#define CPU2_HRHV_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88BF038u)
/** Alias (User Manual Name) for CPU2_HRHV_TR7_EVT */
#define CPU2_HRHV_TR7EVT (CPU2_HRHV_TR7_EVT)

/** \brief F03C, CPU2 trigger address 7 */
#define CPU2_HRHV_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88BF03Cu)
/** Alias (User Manual Name) for CPU2_HRHV_TR7_ADR */
#define CPU2_HRHV_TR7ADR (CPU2_HRHV_TR7_ADR)

/** \brief FC00, CPU2 HR specific counter control */
#define CPU2_HRHV_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF88BFC00u)

/** \brief FC04, CPU2 HR specific CPU clock cycle count */
#define CPU2_HRHV_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF88BFC04u)

/** \brief FC08, CPU2 HR specific instruction count */
#define CPU2_HRHV_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF88BFC08u)

/** \brief FC0C, CPU2 HR specific multi-count register 1 */
#define CPU2_HRHV_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF88BFC0Cu)

/** \brief FC10, CPU2 HR specific multi-count register 2 */
#define CPU2_HRHV_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF88BFC10u)

/** \brief FC14, CPU2 HR specific multi-count register 3 */
#define CPU2_HRHV_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF88BFC14u)

/** \brief FD00, CPU2 debug status register */
#define CPU2_HRHV_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF88BFD00u)

/** \brief FD08, CPU2 external event register */
#define CPU2_HRHV_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88BFD08u)

/** \brief FD0C, CPU2 core register access event */
#define CPU2_HRHV_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88BFD0Cu)

/** \brief FD10, CPU2 software debug event */
#define CPU2_HRHV_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88BFD10u)

/** \brief FD14, CPU2 debug action configuration */
#define CPU2_HRHV_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF88BFD14u)

/** \brief FD30, CPU2 trigger accumulator */
#define CPU2_HRHV_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF88BFD30u)

/** \brief FD40, CPU2 debug monitor start address */
#define CPU2_HRHV_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF88BFD40u)

/** \brief FD44, CPU2 debug context save area pointer */
#define CPU2_HRHV_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF88BFD44u)

/** \brief FD48, CPU2 debug trap control */
#define CPU2_HRHV_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF88BFD48u)

/** \brief FD4C, CPU2 debug configuration */
#define CPU2_HRHV_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF88BFD4Cu)

/** \brief FD50, CPU2 trace configuration */
#define CPU2_HRHV_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF88BFD50u)

/** \brief FD54, CPU2 trace filter */
#define CPU2_HRHV_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF88BFD54u)

/** \brief FD58, CPU2 trace bandwidth limiter */
#define CPU2_HRHV_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF88BFD58u)

/** \brief FD60, CPU2 MCDS performance counter control register */
#define CPU2_HRHV_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF88BFD60u)

/** \brief FE00, CPU2 previous context information register */
#define CPU2_HRHV_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF88BFE00u)

/** \brief FE04, CPU2 HR specific program status word */
#define CPU2_HRHV_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF88BFE04u)

/** \brief FE08, CPU2 program counter */
#define CPU2_HRHV_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF88BFE08u)

/** \brief FE14, CPU2 HR specific core configuration register */
#define CPU2_HRHV_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF88BFE14u)

/** \brief FE18, CPU2 identification register */
#define CPU2_HRHV_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF88BFE18u)

/** \brief FE1C, CPU2 core identification register */
#define CPU2_HRHV_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF88BFE1Cu)

/** \brief FE20, CPU2 HR specific base interrupt vector table pointer */
#define CPU2_HRHV_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF88BFE20u)

/** \brief FE24, CPU2 HR specific base trap vector table pointer */
#define CPU2_HRHV_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF88BFE24u)

/** \brief FE28, CPU2 HR specific interrupt stack pointer */
#define CPU2_HRHV_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF88BFE28u)

/** \brief FE2C, CPU2 interrupt control register */
#define CPU2_HRHV_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF88BFE2Cu)

/** \brief FE34, CPU2 previous PRS */
#define CPU2_HRHV_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF88BFE34u)

/** \brief FE38, CPU2 HR specific free CSA list head pointer */
#define CPU2_HRHV_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF88BFE38u)

/** \brief FE3C, CPU2 HR specific free CSA list limit pointer */
#define CPU2_HRHV_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF88BFE3Cu)

/** \brief FE40, CPU2 software identification */
#define CPU2_HRHV_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF88BFE40u)

/** \brief FE50, CPU2 customer ID register */
#define CPU2_HRHV_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF88BFE50u)

/** \brief FE60, CPU2 core boot configuration register */
#define CPU2_HRHV_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF88BFE60u)

/** \brief FE64, CPU2 lockstep control register */
#define CPU2_HRHV_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF88BFE64u)

/** \brief FE68, CPU2 clock control register */
#define CPU2_HRHV_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF88BFE68u)

/** \brief FE6C, CPU2 hardware configuration  */
#define CPU2_HRHV_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF88BFE6Cu)

/** \brief FF80, CPU2 HR specific address general purpose register 0 */
#define CPU2_HRHV_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88BFF80u)

/** \brief FF84, CPU2 HR specific address general purpose register 1 */
#define CPU2_HRHV_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88BFF84u)

/** \brief FFA0, CPU2 HR specific address general purpose register 8 */
#define CPU2_HRHV_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88BFFA0u)

/** \brief FFA4, CPU2 HR specific address general purpose register 9 */
#define CPU2_HRHV_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88BFFA4u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpu_Registers_Cfg_Cpu3
 * \{  */
/** \brief 0, CPU3 system timer clock control register */
#define CPU3_STM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF88C0000u)

/** \brief 0, CPU3 system timer clock control register", hypervisor view" */
#define CPU3_STMHV_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF88C0000u)

/** \brief 4, CPU3 OCDS control and status register */
#define CPU3_STM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF88C0004u)

/** \brief 4, CPU3 OCDS control and status register", hypervisor view" */
#define CPU3_STMHV_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF88C0004u)

/** \brief 20, CPU3 system timer absolute timer */
#define CPU3_STM_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF88C0020u)

/** \brief 20, CPU3 system timer absolute timer", hypervisor view" */
#define CPU3_STMHV_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF88C0020u)

/** \brief 100, CPU3 VM0 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM0_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0100u)

/** \brief 104, CPU3 VM0 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM0_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0104u)

/** \brief 108, CPU3 VM0 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM0_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C0108u)

/** \brief 10C, CPU3 VM0 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM0_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C010Cu)
/** Alias (User Manual Name) for CPU3_STMHV_VM0_STM_ICR */
#define CPU3_STMHV_VM0_ICR (CPU3_STMHV_VM0_STM_ICR)

/** \brief 110, CPU3 VM0 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM0_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C0110u)

/** \brief 114, CPU3 VM0 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C0114u)

/** \brief 118, CPU3 VM0 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM0_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C0118u)

/** \brief 120, CPU3 system timer compare register 0 */
#define CPU3_STM_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0120u)

/** \brief 120, CPU3 VM1 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM1_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0120u)

/** \brief 124, CPU3 system timer compare register 1 */
#define CPU3_STM_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0124u)

/** \brief 124, CPU3 VM1 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM1_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0124u)

/** \brief 128, CPU3 system timer compare match control register */
#define CPU3_STM_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C0128u)

/** \brief 128, CPU3 VM1 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM1_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C0128u)

/** \brief 12C, CPU3 system timer interrupt control register */
#define CPU3_STM_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C012Cu)
/** Alias (User Manual Name) for CPU3_STM_STM_ICR */
#define CPU3_STM_ICR (CPU3_STM_STM_ICR)

/** \brief 12C, CPU3 VM1 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM1_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C012Cu)
/** Alias (User Manual Name) for CPU3_STMHV_VM1_STM_ICR */
#define CPU3_STMHV_VM1_ICR (CPU3_STMHV_VM1_STM_ICR)

/** \brief 130, CPU3 system timer interrupt set/clear register */
#define CPU3_STM_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C0130u)

/** \brief 130, CPU3 VM1 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM1_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C0130u)

/** \brief 134, CPU3 system timer interrupt status register */
#define CPU3_STM_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C0134u)

/** \brief 134, CPU3 VM1 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM1_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C0134u)

/** \brief 138, CPU3 system timer relative timer */
#define CPU3_STM_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C0138u)

/** \brief 138, CPU3 VM1 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM1_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C0138u)

/** \brief 140, CPU3 VM2 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM2_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0140u)

/** \brief 144, CPU3 VM2 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM2_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0144u)

/** \brief 148, CPU3 VM2 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM2_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C0148u)

/** \brief 14C, CPU3 VM2 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM2_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C014Cu)
/** Alias (User Manual Name) for CPU3_STMHV_VM2_STM_ICR */
#define CPU3_STMHV_VM2_ICR (CPU3_STMHV_VM2_STM_ICR)

/** \brief 150, CPU3 VM2 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM2_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C0150u)

/** \brief 154, CPU3 VM2 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM2_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C0154u)

/** \brief 158, CPU3 VM2 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM2_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C0158u)

/** \brief 160, CPU3 VM3 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM3_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0160u)

/** \brief 164, CPU3 VM3 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM3_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0164u)

/** \brief 168, CPU3 VM3 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM3_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C0168u)

/** \brief 16C, CPU3 VM3 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM3_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C016Cu)
/** Alias (User Manual Name) for CPU3_STMHV_VM3_STM_ICR */
#define CPU3_STMHV_VM3_ICR (CPU3_STMHV_VM3_STM_ICR)

/** \brief 170, CPU3 VM3 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM3_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C0170u)

/** \brief 174, CPU3 VM3 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM3_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C0174u)

/** \brief 178, CPU3 VM3 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM3_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C0178u)

/** \brief 180, CPU3 VM4 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM4_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0180u)

/** \brief 184, CPU3 VM4 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM4_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C0184u)

/** \brief 188, CPU3 VM4 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM4_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C0188u)

/** \brief 18C, CPU3 VM4 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM4_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C018Cu)
/** Alias (User Manual Name) for CPU3_STMHV_VM4_STM_ICR */
#define CPU3_STMHV_VM4_ICR (CPU3_STMHV_VM4_STM_ICR)

/** \brief 190, CPU3 VM4 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM4_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C0190u)

/** \brief 194, CPU3 VM4 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM4_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C0194u)

/** \brief 198, CPU3 VM4 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM4_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C0198u)

/** \brief 1A0, CPU3 VM5 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM5_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C01A0u)

/** \brief 1A4, CPU3 VM5 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM5_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C01A4u)

/** \brief 1A8, CPU3 VM5 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM5_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C01A8u)

/** \brief 1AC, CPU3 VM5 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM5_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C01ACu)
/** Alias (User Manual Name) for CPU3_STMHV_VM5_STM_ICR */
#define CPU3_STMHV_VM5_ICR (CPU3_STMHV_VM5_STM_ICR)

/** \brief 1B0, CPU3 VM5 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM5_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C01B0u)

/** \brief 1B4, CPU3 VM5 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM5_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C01B4u)

/** \brief 1B8, CPU3 VM5 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM5_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C01B8u)

/** \brief 1C0, CPU3 VM6 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM6_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C01C0u)

/** \brief 1C4, CPU3 VM6 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM6_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C01C4u)

/** \brief 1C8, CPU3 VM6 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM6_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C01C8u)

/** \brief 1CC, CPU3 VM6 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM6_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C01CCu)
/** Alias (User Manual Name) for CPU3_STMHV_VM6_STM_ICR */
#define CPU3_STMHV_VM6_ICR (CPU3_STMHV_VM6_STM_ICR)

/** \brief 1D0, CPU3 VM6 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM6_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C01D0u)

/** \brief 1D4, CPU3 VM6 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM6_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C01D4u)

/** \brief 1D8, CPU3 VM6 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM6_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C01D8u)

/** \brief 1E0, CPU3 VM7 system timer compare register 0", hypervisor view" */
#define CPU3_STMHV_VM7_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C01E0u)

/** \brief 1E4, CPU3 VM7 system timer compare register 1", hypervisor view" */
#define CPU3_STMHV_VM7_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF88C01E4u)

/** \brief 1E8, CPU3 VM7 system timer compare match control register", hypervisor view" */
#define CPU3_STMHV_VM7_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF88C01E8u)

/** \brief 1EC, CPU3 VM7 system timer interrupt control register", hypervisor view" */
#define CPU3_STMHV_VM7_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF88C01ECu)
/** Alias (User Manual Name) for CPU3_STMHV_VM7_STM_ICR */
#define CPU3_STMHV_VM7_ICR (CPU3_STMHV_VM7_STM_ICR)

/** \brief 1F0, CPU3 VM7 system timer interrupt set/clear register", hypervisor view" */
#define CPU3_STMHV_VM7_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF88C01F0u)

/** \brief 1F4, CPU3 VM7 system timer interrupt status register", hypervisor view" */
#define CPU3_STMHV_VM7_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF88C01F4u)

/** \brief 1F8, CPU3 VM7 system timer relative timer", hypervisor view" */
#define CPU3_STMHV_VM7_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF88C01F8u)

/** \brief D000, CPU3 reset register 0 */
#define CPU3_KRST0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST0*)0xF88CD000u)

/** \brief D004, CPU3 reset register 1 */
#define CPU3_KRST1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST1*)0xF88CD004u)

/** \brief D008, CPU3 reset clear register */
#define CPU3_KRSTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRSTCLR*)0xF88CD008u)

/** \brief 8, CPU3 PROTSPR register safe endinit */
#define CPU3_PROTSPRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF88CE008u)

/** \brief 20, CPU3 shadow SPR, write access enable register A */
#define CPU3_ACCENSPRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF88CE020u)

/** \brief 24, CPU3 shadow SPR, write access enable register B */
#define CPU3_ACCENSPRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF88CE024u)

/** \brief 28, CPU3 shadow SPR, read access enable register A */
#define CPU3_ACCENSPRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF88CE028u)

/** \brief 2C, CPU3 shadow SPR, read access enable register B */
#define CPU3_ACCENSPRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF88CE02Cu)

/** \brief 30, CPU3 shadow SPR, VM access enable register */
#define CPU3_ACCENSPRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF88CE030u)

/** \brief 34, CPU3 shadow SPR, PRS access enable register */
#define CPU3_ACCENSPRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF88CE034u)

/** \brief 38, CPU3 shadow SPR, region lower address register */
#define CPU3_ACCENSPRCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA*)0xF88CE038u)

/** \brief 3C, CPU3 shadow SPR, region upper address register */
#define CPU3_ACCENSPRCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA*)0xF88CE03Cu)

/** \brief 48, CPU3 PROTDLMU register safe endinit */
#define CPU3_PROTDLMUSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF88CE048u)

/** \brief 60, CPU3 shadow DLMU, write access enable register A */
#define CPU3_ACCENDLMUCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF88CE060u)

/** \brief 64, CPU3 shadow DLMU, write access enable register B */
#define CPU3_ACCENDLMUCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF88CE064u)

/** \brief 68, CPU3 shadow DLMU, read access enable register A */
#define CPU3_ACCENDLMUCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF88CE068u)

/** \brief 6C, CPU3 shadow DLMU, read access enable register B */
#define CPU3_ACCENDLMUCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF88CE06Cu)

/** \brief 70, CPU3 shadow DLMU, VM access enable register */
#define CPU3_ACCENDLMUCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF88CE070u)

/** \brief 74, CPU3 shadow DLMU, PRS access enable register */
#define CPU3_ACCENDLMUCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF88CE074u)

/** \brief 78, CPU3 shadow DLMU, region lower address register */
#define CPU3_ACCENDLMUCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA_89*)0xF88CE078u)

/** \brief 7C, CPU3 shadow DLMU, region upper address register */
#define CPU3_ACCENDLMUCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA_89*)0xF88CE07Cu)

/** \brief 80, CPU3 PROTSFR register endinit */
#define CPU3_PROTSFRE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF88CE080u)

/** \brief 88, CPU3 PROTSFR register safe endinit */
#define CPU3_PROTSFRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF88CE088u)

/** \brief A0, CPU3 shadow SFR, write access enable register A */
#define CPU3_ACCENSFRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF88CE0A0u)

/** \brief A4, CPU3 shadow SFR, write access enable register B */
#define CPU3_ACCENSFRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF88CE0A4u)

/** \brief A8, CPU3 shadow SFR, read access enable register A */
#define CPU3_ACCENSFRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF88CE0A8u)

/** \brief AC, CPU3 shadow SFR, read access enable register B */
#define CPU3_ACCENSFRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF88CE0ACu)

/** \brief B0, CPU3 shadow SFR, VM access enable register */
#define CPU3_ACCENSFRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF88CE0B0u)

/** \brief B4, CPU3 shadow SFR, PRS access enable register */
#define CPU3_ACCENSFRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF88CE0B4u)

/** \brief C0, CPU3 PROTRST register endinit */
#define CPU3_PROTRSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF88CE0C0u)

/** \brief D8, CPU3 PROTSTM Register Safe Endinit */
#define CPU3_PROTSTMSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROTSTMSE*)0xF88CE0D8u)

/** \brief E0, CPU3 shadow STM, write access enable register A */
#define CPU3_ACCENSTMCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF88CE0E0u)

/** \brief E4, CPU3 shadow STM, write access enable register B */
#define CPU3_ACCENSTMCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF88CE0E4u)

/** \brief E8, CPU3 shadow STM, read access enable register A */
#define CPU3_ACCENSTMCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF88CE0E8u)

/** \brief EC, CPU3 shadow STM, read access enable register B */
#define CPU3_ACCENSTMCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF88CE0ECu)

/** \brief F0, CPU3 shadow STM, VM access enable register */
#define CPU3_ACCENSTMCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF88CE0F0u)

/** \brief F4, CPU3 shadow STM, PRS access enable register */
#define CPU3_ACCENSTMCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF88CE0F4u)

/** \brief 200, CPU3 SPR range 0, write access enable register A */
#define CPU3_ACCENSPR0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE200u)

/** \brief 204, CPU3 SPR range 0, write access enable register B */
#define CPU3_ACCENSPR0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE204u)

/** \brief 208, CPU3 SPR range 0, read access enable register A */
#define CPU3_ACCENSPR0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE208u)

/** \brief 20C, CPU3 SPR range 0, read access enable register B */
#define CPU3_ACCENSPR0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE20Cu)

/** \brief 210, CPU3 SPR range 0, VM access enable register */
#define CPU3_ACCENSPR0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE210u)

/** \brief 214, CPU3 SPR range 0, PRS access enable register */
#define CPU3_ACCENSPR0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE214u)

/** \brief 218, CPU3 SPR range 0, region lower address register */
#define CPU3_ACCENSPR0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE218u)

/** \brief 21C, CPU3 SPR range 0, region upper address register */
#define CPU3_ACCENSPR0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE21Cu)

/** \brief 220, CPU3 SPR range 1, write access enable register A */
#define CPU3_ACCENSPR1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE220u)

/** \brief 224, CPU3 SPR range 1, write access enable register B */
#define CPU3_ACCENSPR1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE224u)

/** \brief 228, CPU3 SPR range 1, read access enable register A */
#define CPU3_ACCENSPR1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE228u)

/** \brief 22C, CPU3 SPR range 1, read access enable register B */
#define CPU3_ACCENSPR1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE22Cu)

/** \brief 230, CPU3 SPR range 1, VM access enable register */
#define CPU3_ACCENSPR1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE230u)

/** \brief 234, CPU3 SPR range 1, PRS access enable register */
#define CPU3_ACCENSPR1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE234u)

/** \brief 238, CPU3 SPR range 1, region lower address register */
#define CPU3_ACCENSPR1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE238u)

/** \brief 23C, CPU3 SPR range 1, region upper address register */
#define CPU3_ACCENSPR1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE23Cu)

/** \brief 240, CPU3 SPR range 2, write access enable register A */
#define CPU3_ACCENSPR2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE240u)

/** \brief 244, CPU3 SPR range 2, write access enable register B */
#define CPU3_ACCENSPR2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE244u)

/** \brief 248, CPU3 SPR range 2, read access enable register A */
#define CPU3_ACCENSPR2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE248u)

/** \brief 24C, CPU3 SPR range 2, read access enable register B */
#define CPU3_ACCENSPR2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE24Cu)

/** \brief 250, CPU3 SPR range 2, VM access enable register */
#define CPU3_ACCENSPR2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE250u)

/** \brief 254, CPU3 SPR range 2, PRS access enable register */
#define CPU3_ACCENSPR2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE254u)

/** \brief 258, CPU3 SPR range 2, region lower address register */
#define CPU3_ACCENSPR2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE258u)

/** \brief 25C, CPU3 SPR range 2, region upper address register */
#define CPU3_ACCENSPR2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE25Cu)

/** \brief 260, CPU3 SPR range 3, write access enable register A */
#define CPU3_ACCENSPR3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE260u)

/** \brief 264, CPU3 SPR range 3, write access enable register B */
#define CPU3_ACCENSPR3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE264u)

/** \brief 268, CPU3 SPR range 3, read access enable register A */
#define CPU3_ACCENSPR3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE268u)

/** \brief 26C, CPU3 SPR range 3, read access enable register B */
#define CPU3_ACCENSPR3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE26Cu)

/** \brief 270, CPU3 SPR range 3, VM access enable register */
#define CPU3_ACCENSPR3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE270u)

/** \brief 274, CPU3 SPR range 3, PRS access enable register */
#define CPU3_ACCENSPR3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE274u)

/** \brief 278, CPU3 SPR range 3, region lower address register */
#define CPU3_ACCENSPR3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE278u)

/** \brief 27C, CPU3 SPR range 3, region upper address register */
#define CPU3_ACCENSPR3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE27Cu)

/** \brief 280, CPU3 SPR range 4, write access enable register A */
#define CPU3_ACCENSPR4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE280u)

/** \brief 284, CPU3 SPR range 4, write access enable register B */
#define CPU3_ACCENSPR4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE284u)

/** \brief 288, CPU3 SPR range 4, read access enable register A */
#define CPU3_ACCENSPR4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE288u)

/** \brief 28C, CPU3 SPR range 4, read access enable register B */
#define CPU3_ACCENSPR4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE28Cu)

/** \brief 290, CPU3 SPR range 4, VM access enable register */
#define CPU3_ACCENSPR4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE290u)

/** \brief 294, CPU3 SPR range 4, PRS access enable register */
#define CPU3_ACCENSPR4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE294u)

/** \brief 298, CPU3 SPR range 4, region lower address register */
#define CPU3_ACCENSPR4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE298u)

/** \brief 29C, CPU3 SPR range 4, region upper address register */
#define CPU3_ACCENSPR4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE29Cu)

/** \brief 2A0, CPU3 SPR range 5, write access enable register A */
#define CPU3_ACCENSPR5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE2A0u)

/** \brief 2A4, CPU3 SPR range 5, write access enable register B */
#define CPU3_ACCENSPR5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE2A4u)

/** \brief 2A8, CPU3 SPR range 5, read access enable register A */
#define CPU3_ACCENSPR5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE2A8u)

/** \brief 2AC, CPU3 SPR range 5, read access enable register B */
#define CPU3_ACCENSPR5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE2ACu)

/** \brief 2B0, CPU3 SPR range 5, VM access enable register */
#define CPU3_ACCENSPR5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE2B0u)

/** \brief 2B4, CPU3 SPR range 5, PRS access enable register */
#define CPU3_ACCENSPR5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE2B4u)

/** \brief 2B8, CPU3 SPR range 5, region lower address register */
#define CPU3_ACCENSPR5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE2B8u)

/** \brief 2BC, CPU3 SPR range 5, region upper address register */
#define CPU3_ACCENSPR5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE2BCu)

/** \brief 2C0, CPU3 SPR range 6, write access enable register A */
#define CPU3_ACCENSPR6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE2C0u)

/** \brief 2C4, CPU3 SPR range 6, write access enable register B */
#define CPU3_ACCENSPR6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE2C4u)

/** \brief 2C8, CPU3 SPR range 6, read access enable register A */
#define CPU3_ACCENSPR6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE2C8u)

/** \brief 2CC, CPU3 SPR range 6, read access enable register B */
#define CPU3_ACCENSPR6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE2CCu)

/** \brief 2D0, CPU3 SPR range 6, VM access enable register */
#define CPU3_ACCENSPR6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE2D0u)

/** \brief 2D4, CPU3 SPR range 6, PRS access enable register */
#define CPU3_ACCENSPR6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE2D4u)

/** \brief 2D8, CPU3 SPR range 6, region lower address register */
#define CPU3_ACCENSPR6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE2D8u)

/** \brief 2DC, CPU3 SPR range 6, region upper address register */
#define CPU3_ACCENSPR6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE2DCu)

/** \brief 2E0, CPU3 SPR range 7, write access enable register A */
#define CPU3_ACCENSPR7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE2E0u)

/** \brief 2E4, CPU3 SPR range 7, write access enable register B */
#define CPU3_ACCENSPR7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE2E4u)

/** \brief 2E8, CPU3 SPR range 7, read access enable register A */
#define CPU3_ACCENSPR7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE2E8u)

/** \brief 2EC, CPU3 SPR range 7, read access enable register B */
#define CPU3_ACCENSPR7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE2ECu)

/** \brief 2F0, CPU3 SPR range 7, VM access enable register */
#define CPU3_ACCENSPR7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE2F0u)

/** \brief 2F4, CPU3 SPR range 7, PRS access enable register */
#define CPU3_ACCENSPR7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE2F4u)

/** \brief 2F8, CPU3 SPR range 7, region lower address register */
#define CPU3_ACCENSPR7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE2F8u)

/** \brief 2FC, CPU3 SPR range 7, region upper address register */
#define CPU3_ACCENSPR7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE2FCu)

/** \brief 300, CPU3 SPR range 8, write access enable register A */
#define CPU3_ACCENSPR8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE300u)

/** \brief 304, CPU3 SPR range 8, write access enable register B */
#define CPU3_ACCENSPR8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE304u)

/** \brief 308, CPU3 SPR range 8, read access enable register A */
#define CPU3_ACCENSPR8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE308u)

/** \brief 30C, CPU3 SPR range 8, read access enable register B */
#define CPU3_ACCENSPR8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE30Cu)

/** \brief 310, CPU3 SPR range 8, VM access enable register */
#define CPU3_ACCENSPR8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE310u)

/** \brief 314, CPU3 SPR range 8, PRS access enable register */
#define CPU3_ACCENSPR8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE314u)

/** \brief 318, CPU3 SPR range 8, region lower address register */
#define CPU3_ACCENSPR8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE318u)

/** \brief 31C, CPU3 SPR range 8, region upper address register */
#define CPU3_ACCENSPR8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE31Cu)

/** \brief 320, CPU3 SPR range 9, write access enable register A */
#define CPU3_ACCENSPR9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE320u)

/** \brief 324, CPU3 SPR range 9, write access enable register B */
#define CPU3_ACCENSPR9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE324u)

/** \brief 328, CPU3 SPR range 9, read access enable register A */
#define CPU3_ACCENSPR9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE328u)

/** \brief 32C, CPU3 SPR range 9, read access enable register B */
#define CPU3_ACCENSPR9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE32Cu)

/** \brief 330, CPU3 SPR range 9, VM access enable register */
#define CPU3_ACCENSPR9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE330u)

/** \brief 334, CPU3 SPR range 9, PRS access enable register */
#define CPU3_ACCENSPR9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE334u)

/** \brief 338, CPU3 SPR range 9, region lower address register */
#define CPU3_ACCENSPR9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE338u)

/** \brief 33C, CPU3 SPR range 9, region upper address register */
#define CPU3_ACCENSPR9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE33Cu)

/** \brief 340, CPU3 SPR range 10, write access enable register A */
#define CPU3_ACCENSPR10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE340u)

/** \brief 344, CPU3 SPR range 10, write access enable register B */
#define CPU3_ACCENSPR10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE344u)

/** \brief 348, CPU3 SPR range 10, read access enable register A */
#define CPU3_ACCENSPR10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE348u)

/** \brief 34C, CPU3 SPR range 10, read access enable register B */
#define CPU3_ACCENSPR10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE34Cu)

/** \brief 350, CPU3 SPR range 10, VM access enable register */
#define CPU3_ACCENSPR10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE350u)

/** \brief 354, CPU3 SPR range 10, PRS access enable register */
#define CPU3_ACCENSPR10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE354u)

/** \brief 358, CPU3 SPR range 10, region lower address register */
#define CPU3_ACCENSPR10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE358u)

/** \brief 35C, CPU3 SPR range 10, region upper address register */
#define CPU3_ACCENSPR10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE35Cu)

/** \brief 360, CPU3 SPR range 11, write access enable register A */
#define CPU3_ACCENSPR11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE360u)

/** \brief 364, CPU3 SPR range 11, write access enable register B */
#define CPU3_ACCENSPR11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE364u)

/** \brief 368, CPU3 SPR range 11, read access enable register A */
#define CPU3_ACCENSPR11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE368u)

/** \brief 36C, CPU3 SPR range 11, read access enable register B */
#define CPU3_ACCENSPR11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE36Cu)

/** \brief 370, CPU3 SPR range 11, VM access enable register */
#define CPU3_ACCENSPR11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE370u)

/** \brief 374, CPU3 SPR range 11, PRS access enable register */
#define CPU3_ACCENSPR11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE374u)

/** \brief 378, CPU3 SPR range 11, region lower address register */
#define CPU3_ACCENSPR11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE378u)

/** \brief 37C, CPU3 SPR range 11, region upper address register */
#define CPU3_ACCENSPR11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE37Cu)

/** \brief 380, CPU3 SPR range 12, write access enable register A */
#define CPU3_ACCENSPR12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE380u)

/** \brief 384, CPU3 SPR range 12, write access enable register B */
#define CPU3_ACCENSPR12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE384u)

/** \brief 388, CPU3 SPR range 12, read access enable register A */
#define CPU3_ACCENSPR12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE388u)

/** \brief 38C, CPU3 SPR range 12, read access enable register B */
#define CPU3_ACCENSPR12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE38Cu)

/** \brief 390, CPU3 SPR range 12, VM access enable register */
#define CPU3_ACCENSPR12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE390u)

/** \brief 394, CPU3 SPR range 12, PRS access enable register */
#define CPU3_ACCENSPR12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE394u)

/** \brief 398, CPU3 SPR range 12, region lower address register */
#define CPU3_ACCENSPR12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE398u)

/** \brief 39C, CPU3 SPR range 12, region upper address register */
#define CPU3_ACCENSPR12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE39Cu)

/** \brief 3A0, CPU3 SPR range 13, write access enable register A */
#define CPU3_ACCENSPR13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE3A0u)

/** \brief 3A4, CPU3 SPR range 13, write access enable register B */
#define CPU3_ACCENSPR13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE3A4u)

/** \brief 3A8, CPU3 SPR range 13, read access enable register A */
#define CPU3_ACCENSPR13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE3A8u)

/** \brief 3AC, CPU3 SPR range 13, read access enable register B */
#define CPU3_ACCENSPR13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE3ACu)

/** \brief 3B0, CPU3 SPR range 13, VM access enable register */
#define CPU3_ACCENSPR13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE3B0u)

/** \brief 3B4, CPU3 SPR range 13, PRS access enable register */
#define CPU3_ACCENSPR13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE3B4u)

/** \brief 3B8, CPU3 SPR range 13, region lower address register */
#define CPU3_ACCENSPR13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE3B8u)

/** \brief 3BC, CPU3 SPR range 13, region upper address register */
#define CPU3_ACCENSPR13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE3BCu)

/** \brief 3C0, CPU3 SPR range 14, write access enable register A */
#define CPU3_ACCENSPR14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE3C0u)

/** \brief 3C4, CPU3 SPR range 14, write access enable register B */
#define CPU3_ACCENSPR14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE3C4u)

/** \brief 3C8, CPU3 SPR range 14, read access enable register A */
#define CPU3_ACCENSPR14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE3C8u)

/** \brief 3CC, CPU3 SPR range 14, read access enable register B */
#define CPU3_ACCENSPR14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE3CCu)

/** \brief 3D0, CPU3 SPR range 14, VM access enable register */
#define CPU3_ACCENSPR14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE3D0u)

/** \brief 3D4, CPU3 SPR range 14, PRS access enable register */
#define CPU3_ACCENSPR14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE3D4u)

/** \brief 3D8, CPU3 SPR range 14, region lower address register */
#define CPU3_ACCENSPR14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE3D8u)

/** \brief 3DC, CPU3 SPR range 14, region upper address register */
#define CPU3_ACCENSPR14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE3DCu)

/** \brief 3E0, CPU3 SPR range 15, write access enable register A */
#define CPU3_ACCENSPR15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE3E0u)

/** \brief 3E4, CPU3 SPR range 15, write access enable register B */
#define CPU3_ACCENSPR15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE3E4u)

/** \brief 3E8, CPU3 SPR range 15, read access enable register A */
#define CPU3_ACCENSPR15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE3E8u)

/** \brief 3EC, CPU3 SPR range 15, read access enable register B */
#define CPU3_ACCENSPR15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE3ECu)

/** \brief 3F0, CPU3 SPR range 15, VM access enable register */
#define CPU3_ACCENSPR15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE3F0u)

/** \brief 3F4, CPU3 SPR range 15, PRS access enable register */
#define CPU3_ACCENSPR15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE3F4u)

/** \brief 3F8, CPU3 SPR range 15, region lower address register */
#define CPU3_ACCENSPR15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF88CE3F8u)

/** \brief 3FC, CPU3 SPR range 15, region upper address register */
#define CPU3_ACCENSPR15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF88CE3FCu)

/** \brief 400, CPU3 DLMU range 0, write access enable register A */
#define CPU3_ACCENDLMU0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE400u)

/** \brief 404, CPU3 DLMU range 0, write access enable register B */
#define CPU3_ACCENDLMU0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE404u)

/** \brief 408, CPU3 DLMU range 0, read access enable register A */
#define CPU3_ACCENDLMU0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE408u)

/** \brief 40C, CPU3 DLMU range 0, read access enable register B */
#define CPU3_ACCENDLMU0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE40Cu)

/** \brief 410, CPU3 DLMU range 0, VM access enable register */
#define CPU3_ACCENDLMU0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE410u)

/** \brief 414, CPU3 DLMU range 0, PRS access enable register */
#define CPU3_ACCENDLMU0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE414u)

/** \brief 418, CPU3 DLMU range 0, region lower address register */
#define CPU3_ACCENDLMU0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE418u)

/** \brief 41C, CPU3 DLMU range 0, region upper address register */
#define CPU3_ACCENDLMU0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE41Cu)

/** \brief 420, CPU3 DLMU range 1, write access enable register A */
#define CPU3_ACCENDLMU1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE420u)

/** \brief 424, CPU3 DLMU range 1, write access enable register B */
#define CPU3_ACCENDLMU1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE424u)

/** \brief 428, CPU3 DLMU range 1, read access enable register A */
#define CPU3_ACCENDLMU1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE428u)

/** \brief 42C, CPU3 DLMU range 1, read access enable register B */
#define CPU3_ACCENDLMU1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE42Cu)

/** \brief 430, CPU3 DLMU range 1, VM access enable register */
#define CPU3_ACCENDLMU1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE430u)

/** \brief 434, CPU3 DLMU range 1, PRS access enable register */
#define CPU3_ACCENDLMU1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE434u)

/** \brief 438, CPU3 DLMU range 1, region lower address register */
#define CPU3_ACCENDLMU1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE438u)

/** \brief 43C, CPU3 DLMU range 1, region upper address register */
#define CPU3_ACCENDLMU1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE43Cu)

/** \brief 440, CPU3 DLMU range 2, write access enable register A */
#define CPU3_ACCENDLMU2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE440u)

/** \brief 444, CPU3 DLMU range 2, write access enable register B */
#define CPU3_ACCENDLMU2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE444u)

/** \brief 448, CPU3 DLMU range 2, read access enable register A */
#define CPU3_ACCENDLMU2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE448u)

/** \brief 44C, CPU3 DLMU range 2, read access enable register B */
#define CPU3_ACCENDLMU2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE44Cu)

/** \brief 450, CPU3 DLMU range 2, VM access enable register */
#define CPU3_ACCENDLMU2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE450u)

/** \brief 454, CPU3 DLMU range 2, PRS access enable register */
#define CPU3_ACCENDLMU2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE454u)

/** \brief 458, CPU3 DLMU range 2, region lower address register */
#define CPU3_ACCENDLMU2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE458u)

/** \brief 45C, CPU3 DLMU range 2, region upper address register */
#define CPU3_ACCENDLMU2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE45Cu)

/** \brief 460, CPU3 DLMU range 3, write access enable register A */
#define CPU3_ACCENDLMU3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE460u)

/** \brief 464, CPU3 DLMU range 3, write access enable register B */
#define CPU3_ACCENDLMU3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE464u)

/** \brief 468, CPU3 DLMU range 3, read access enable register A */
#define CPU3_ACCENDLMU3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE468u)

/** \brief 46C, CPU3 DLMU range 3, read access enable register B */
#define CPU3_ACCENDLMU3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE46Cu)

/** \brief 470, CPU3 DLMU range 3, VM access enable register */
#define CPU3_ACCENDLMU3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE470u)

/** \brief 474, CPU3 DLMU range 3, PRS access enable register */
#define CPU3_ACCENDLMU3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE474u)

/** \brief 478, CPU3 DLMU range 3, region lower address register */
#define CPU3_ACCENDLMU3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE478u)

/** \brief 47C, CPU3 DLMU range 3, region upper address register */
#define CPU3_ACCENDLMU3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE47Cu)

/** \brief 480, CPU3 DLMU range 4, write access enable register A */
#define CPU3_ACCENDLMU4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE480u)

/** \brief 484, CPU3 DLMU range 4, write access enable register B */
#define CPU3_ACCENDLMU4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE484u)

/** \brief 488, CPU3 DLMU range 4, read access enable register A */
#define CPU3_ACCENDLMU4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE488u)

/** \brief 48C, CPU3 DLMU range 4, read access enable register B */
#define CPU3_ACCENDLMU4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE48Cu)

/** \brief 490, CPU3 DLMU range 4, VM access enable register */
#define CPU3_ACCENDLMU4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE490u)

/** \brief 494, CPU3 DLMU range 4, PRS access enable register */
#define CPU3_ACCENDLMU4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE494u)

/** \brief 498, CPU3 DLMU range 4, region lower address register */
#define CPU3_ACCENDLMU4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE498u)

/** \brief 49C, CPU3 DLMU range 4, region upper address register */
#define CPU3_ACCENDLMU4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE49Cu)

/** \brief 4A0, CPU3 DLMU range 5, write access enable register A */
#define CPU3_ACCENDLMU5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE4A0u)

/** \brief 4A4, CPU3 DLMU range 5, write access enable register B */
#define CPU3_ACCENDLMU5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE4A4u)

/** \brief 4A8, CPU3 DLMU range 5, read access enable register A */
#define CPU3_ACCENDLMU5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE4A8u)

/** \brief 4AC, CPU3 DLMU range 5, read access enable register B */
#define CPU3_ACCENDLMU5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE4ACu)

/** \brief 4B0, CPU3 DLMU range 5, VM access enable register */
#define CPU3_ACCENDLMU5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE4B0u)

/** \brief 4B4, CPU3 DLMU range 5, PRS access enable register */
#define CPU3_ACCENDLMU5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE4B4u)

/** \brief 4B8, CPU3 DLMU range 5, region lower address register */
#define CPU3_ACCENDLMU5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE4B8u)

/** \brief 4BC, CPU3 DLMU range 5, region upper address register */
#define CPU3_ACCENDLMU5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE4BCu)

/** \brief 4C0, CPU3 DLMU range 6, write access enable register A */
#define CPU3_ACCENDLMU6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE4C0u)

/** \brief 4C4, CPU3 DLMU range 6, write access enable register B */
#define CPU3_ACCENDLMU6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE4C4u)

/** \brief 4C8, CPU3 DLMU range 6, read access enable register A */
#define CPU3_ACCENDLMU6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE4C8u)

/** \brief 4CC, CPU3 DLMU range 6, read access enable register B */
#define CPU3_ACCENDLMU6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE4CCu)

/** \brief 4D0, CPU3 DLMU range 6, VM access enable register */
#define CPU3_ACCENDLMU6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE4D0u)

/** \brief 4D4, CPU3 DLMU range 6, PRS access enable register */
#define CPU3_ACCENDLMU6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE4D4u)

/** \brief 4D8, CPU3 DLMU range 6, region lower address register */
#define CPU3_ACCENDLMU6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE4D8u)

/** \brief 4DC, CPU3 DLMU range 6, region upper address register */
#define CPU3_ACCENDLMU6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE4DCu)

/** \brief 4E0, CPU3 DLMU range 7, write access enable register A */
#define CPU3_ACCENDLMU7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE4E0u)

/** \brief 4E4, CPU3 DLMU range 7, write access enable register B */
#define CPU3_ACCENDLMU7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE4E4u)

/** \brief 4E8, CPU3 DLMU range 7, read access enable register A */
#define CPU3_ACCENDLMU7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE4E8u)

/** \brief 4EC, CPU3 DLMU range 7, read access enable register B */
#define CPU3_ACCENDLMU7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE4ECu)

/** \brief 4F0, CPU3 DLMU range 7, VM access enable register */
#define CPU3_ACCENDLMU7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE4F0u)

/** \brief 4F4, CPU3 DLMU range 7, PRS access enable register */
#define CPU3_ACCENDLMU7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE4F4u)

/** \brief 4F8, CPU3 DLMU range 7, region lower address register */
#define CPU3_ACCENDLMU7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE4F8u)

/** \brief 4FC, CPU3 DLMU range 7, region upper address register */
#define CPU3_ACCENDLMU7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE4FCu)

/** \brief 500, CPU3 DLMU range 8, write access enable register A */
#define CPU3_ACCENDLMU8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE500u)

/** \brief 504, CPU3 DLMU range 8, write access enable register B */
#define CPU3_ACCENDLMU8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE504u)

/** \brief 508, CPU3 DLMU range 8, read access enable register A */
#define CPU3_ACCENDLMU8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE508u)

/** \brief 50C, CPU3 DLMU range 8, read access enable register B */
#define CPU3_ACCENDLMU8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE50Cu)

/** \brief 510, CPU3 DLMU range 8, VM access enable register */
#define CPU3_ACCENDLMU8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE510u)

/** \brief 514, CPU3 DLMU range 8, PRS access enable register */
#define CPU3_ACCENDLMU8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE514u)

/** \brief 518, CPU3 DLMU range 8, region lower address register */
#define CPU3_ACCENDLMU8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE518u)

/** \brief 51C, CPU3 DLMU range 8, region upper address register */
#define CPU3_ACCENDLMU8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE51Cu)

/** \brief 520, CPU3 DLMU range 9, write access enable register A */
#define CPU3_ACCENDLMU9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE520u)

/** \brief 524, CPU3 DLMU range 9, write access enable register B */
#define CPU3_ACCENDLMU9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE524u)

/** \brief 528, CPU3 DLMU range 9, read access enable register A */
#define CPU3_ACCENDLMU9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE528u)

/** \brief 52C, CPU3 DLMU range 9, read access enable register B */
#define CPU3_ACCENDLMU9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE52Cu)

/** \brief 530, CPU3 DLMU range 9, VM access enable register */
#define CPU3_ACCENDLMU9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE530u)

/** \brief 534, CPU3 DLMU range 9, PRS access enable register */
#define CPU3_ACCENDLMU9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE534u)

/** \brief 538, CPU3 DLMU range 9, region lower address register */
#define CPU3_ACCENDLMU9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE538u)

/** \brief 53C, CPU3 DLMU range 9, region upper address register */
#define CPU3_ACCENDLMU9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE53Cu)

/** \brief 540, CPU3 DLMU range 10, write access enable register A */
#define CPU3_ACCENDLMU10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE540u)

/** \brief 544, CPU3 DLMU range 10, write access enable register B */
#define CPU3_ACCENDLMU10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE544u)

/** \brief 548, CPU3 DLMU range 10, read access enable register A */
#define CPU3_ACCENDLMU10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE548u)

/** \brief 54C, CPU3 DLMU range 10, read access enable register B */
#define CPU3_ACCENDLMU10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE54Cu)

/** \brief 550, CPU3 DLMU range 10, VM access enable register */
#define CPU3_ACCENDLMU10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE550u)

/** \brief 554, CPU3 DLMU range 10, PRS access enable register */
#define CPU3_ACCENDLMU10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE554u)

/** \brief 558, CPU3 DLMU range 10, region lower address register */
#define CPU3_ACCENDLMU10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE558u)

/** \brief 55C, CPU3 DLMU range 10, region upper address register */
#define CPU3_ACCENDLMU10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE55Cu)

/** \brief 560, CPU3 DLMU range 11, write access enable register A */
#define CPU3_ACCENDLMU11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE560u)

/** \brief 564, CPU3 DLMU range 11, write access enable register B */
#define CPU3_ACCENDLMU11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE564u)

/** \brief 568, CPU3 DLMU range 11, read access enable register A */
#define CPU3_ACCENDLMU11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE568u)

/** \brief 56C, CPU3 DLMU range 11, read access enable register B */
#define CPU3_ACCENDLMU11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE56Cu)

/** \brief 570, CPU3 DLMU range 11, VM access enable register */
#define CPU3_ACCENDLMU11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE570u)

/** \brief 574, CPU3 DLMU range 11, PRS access enable register */
#define CPU3_ACCENDLMU11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE574u)

/** \brief 578, CPU3 DLMU range 11, region lower address register */
#define CPU3_ACCENDLMU11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE578u)

/** \brief 57C, CPU3 DLMU range 11, region upper address register */
#define CPU3_ACCENDLMU11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE57Cu)

/** \brief 580, CPU3 DLMU range 12, write access enable register A */
#define CPU3_ACCENDLMU12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE580u)

/** \brief 584, CPU3 DLMU range 12, write access enable register B */
#define CPU3_ACCENDLMU12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE584u)

/** \brief 588, CPU3 DLMU range 12, read access enable register A */
#define CPU3_ACCENDLMU12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE588u)

/** \brief 58C, CPU3 DLMU range 12, read access enable register B */
#define CPU3_ACCENDLMU12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE58Cu)

/** \brief 590, CPU3 DLMU range 12, VM access enable register */
#define CPU3_ACCENDLMU12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE590u)

/** \brief 594, CPU3 DLMU range 12, PRS access enable register */
#define CPU3_ACCENDLMU12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE594u)

/** \brief 598, CPU3 DLMU range 12, region lower address register */
#define CPU3_ACCENDLMU12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE598u)

/** \brief 59C, CPU3 DLMU range 12, region upper address register */
#define CPU3_ACCENDLMU12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE59Cu)

/** \brief 5A0, CPU3 DLMU range 13, write access enable register A */
#define CPU3_ACCENDLMU13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE5A0u)

/** \brief 5A4, CPU3 DLMU range 13, write access enable register B */
#define CPU3_ACCENDLMU13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE5A4u)

/** \brief 5A8, CPU3 DLMU range 13, read access enable register A */
#define CPU3_ACCENDLMU13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE5A8u)

/** \brief 5AC, CPU3 DLMU range 13, read access enable register B */
#define CPU3_ACCENDLMU13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE5ACu)

/** \brief 5B0, CPU3 DLMU range 13, VM access enable register */
#define CPU3_ACCENDLMU13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE5B0u)

/** \brief 5B4, CPU3 DLMU range 13, PRS access enable register */
#define CPU3_ACCENDLMU13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE5B4u)

/** \brief 5B8, CPU3 DLMU range 13, region lower address register */
#define CPU3_ACCENDLMU13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE5B8u)

/** \brief 5BC, CPU3 DLMU range 13, region upper address register */
#define CPU3_ACCENDLMU13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE5BCu)

/** \brief 5C0, CPU3 DLMU range 14, write access enable register A */
#define CPU3_ACCENDLMU14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE5C0u)

/** \brief 5C4, CPU3 DLMU range 14, write access enable register B */
#define CPU3_ACCENDLMU14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE5C4u)

/** \brief 5C8, CPU3 DLMU range 14, read access enable register A */
#define CPU3_ACCENDLMU14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE5C8u)

/** \brief 5CC, CPU3 DLMU range 14, read access enable register B */
#define CPU3_ACCENDLMU14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE5CCu)

/** \brief 5D0, CPU3 DLMU range 14, VM access enable register */
#define CPU3_ACCENDLMU14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE5D0u)

/** \brief 5D4, CPU3 DLMU range 14, PRS access enable register */
#define CPU3_ACCENDLMU14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE5D4u)

/** \brief 5D8, CPU3 DLMU range 14, region lower address register */
#define CPU3_ACCENDLMU14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE5D8u)

/** \brief 5DC, CPU3 DLMU range 14, region upper address register */
#define CPU3_ACCENDLMU14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE5DCu)

/** \brief 5E0, CPU3 DLMU range 15, write access enable register A */
#define CPU3_ACCENDLMU15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE5E0u)

/** \brief 5E4, CPU3 DLMU range 15, write access enable register B */
#define CPU3_ACCENDLMU15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE5E4u)

/** \brief 5E8, CPU3 DLMU range 15, read access enable register A */
#define CPU3_ACCENDLMU15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE5E8u)

/** \brief 5EC, CPU3 DLMU range 15, read access enable register B */
#define CPU3_ACCENDLMU15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE5ECu)

/** \brief 5F0, CPU3 DLMU range 15, VM access enable register */
#define CPU3_ACCENDLMU15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE5F0u)

/** \brief 5F4, CPU3 DLMU range 15, PRS access enable register */
#define CPU3_ACCENDLMU15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE5F4u)

/** \brief 5F8, CPU3 DLMU range 15, region lower address register */
#define CPU3_ACCENDLMU15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF88CE5F8u)

/** \brief 5FC, CPU3 DLMU range 15, region upper address register */
#define CPU3_ACCENDLMU15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF88CE5FCu)

/** \brief 600, CPU3 SFR, write access enable register A */
#define CPU3_ACCENSFR_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE600u)

/** \brief 604, CPU3 SFR, write access enable register B */
#define CPU3_ACCENSFR_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE604u)

/** \brief 608, CPU3 SFR, read access enable register A */
#define CPU3_ACCENSFR_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE608u)

/** \brief 60C, CPU3 SFR, read access enable register B */
#define CPU3_ACCENSFR_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE60Cu)

/** \brief 610, CPU3 SFR, VM access enable register */
#define CPU3_ACCENSFR_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE610u)

/** \brief 614, CPU3 SFR, PRS access enable register */
#define CPU3_ACCENSFR_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE614u)

/** \brief 700, CPU3 VM0 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE700u)

/** \brief 704, CPU3 VM0 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE704u)

/** \brief 708, CPU3 VM0 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE708u)

/** \brief 70C, CPU3 VM0 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE70Cu)

/** \brief 710, CPU3 VM0 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE710u)

/** \brief 714, CPU3 VM0 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE714u)

/** \brief 720, CPU3 VM1 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE720u)

/** \brief 724, CPU3 VM1 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE724u)

/** \brief 728, CPU3 VM1 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE728u)

/** \brief 72C, CPU3 VM1 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE72Cu)

/** \brief 730, CPU3 VM1 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE730u)

/** \brief 734, CPU3 VM1 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE734u)

/** \brief 740, CPU3 VM2 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE740u)

/** \brief 744, CPU3 VM2 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE744u)

/** \brief 748, CPU3 VM2 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE748u)

/** \brief 74C, CPU3 VM2 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE74Cu)

/** \brief 750, CPU3 VM2 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE750u)

/** \brief 754, CPU3 VM2 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE754u)

/** \brief 760, CPU3 VM3 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE760u)

/** \brief 764, CPU3 VM3 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE764u)

/** \brief 768, CPU3 VM3 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE768u)

/** \brief 76C, CPU3 VM3 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE76Cu)

/** \brief 770, CPU3 VM3 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE770u)

/** \brief 774, CPU3 VM3 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE774u)

/** \brief 780, CPU3 VM4 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE780u)

/** \brief 784, CPU3 VM4 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE784u)

/** \brief 788, CPU3 VM4 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE788u)

/** \brief 78C, CPU3 VM4 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE78Cu)

/** \brief 790, CPU3 VM4 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE790u)

/** \brief 794, CPU3 VM4 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE794u)

/** \brief 7A0, CPU3 VM5 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE7A0u)

/** \brief 7A4, CPU3 VM5 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE7A4u)

/** \brief 7A8, CPU3 VM5 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE7A8u)

/** \brief 7AC, CPU3 VM5 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE7ACu)

/** \brief 7B0, CPU3 VM5 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE7B0u)

/** \brief 7B4, CPU3 VM5 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE7B4u)

/** \brief 7C0, CPU3 VM6 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE7C0u)

/** \brief 7C4, CPU3 VM6 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE7C4u)

/** \brief 7C8, CPU3 VM6 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE7C8u)

/** \brief 7CC, CPU3 VM6 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE7CCu)

/** \brief 7D0, CPU3 VM6 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE7D0u)

/** \brief 7D4, CPU3 VM6 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE7D4u)

/** \brief 7E0, CPU3 VM7 STM, write access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF88CE7E0u)

/** \brief 7E4, CPU3 VM7 STM, write access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF88CE7E4u)

/** \brief 7E8, CPU3 VM7 STM, read access enable register A", virtualization view" */
#define CPU3_ACCENSTMVM7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF88CE7E8u)

/** \brief 7EC, CPU3 VM7 STM, read access enable register B", virtualization view" */
#define CPU3_ACCENSTMVM7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF88CE7ECu)

/** \brief 7F0, CPU3 VM7 STM, VM access enable register", virtualization view" */
#define CPU3_ACCENSTMVM7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF88CE7F0u)

/** \brief 7F4, CPU3 VM7 STM, PRS access enable register", virtualization view" */
#define CPU3_ACCENSTMVM7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF88CE7F4u)

/** \brief FB00, CPU3 overlay range select register */
#define CPU3_OSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OSEL*)0xF88CFB00u)

/** \brief FB10, CPU3 redirected address base register 0 */
#define CPU3_BLK0_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB10u)
/** Alias (User Manual Name) for CPU3_BLK0_RABR */
#define CPU3_RABR0 (CPU3_BLK0_RABR)

/** \brief FB14, CPU3 overlay target address register 0 (Low priority) */
#define CPU3_BLK0_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB14u)
/** Alias (User Manual Name) for CPU3_BLK0_OTAR */
#define CPU3_OTAR0 (CPU3_BLK0_OTAR)

/** \brief FB18, CPU3 overlay mask register 0 */
#define CPU3_BLK0_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB18u)
/** Alias (User Manual Name) for CPU3_BLK0_OMASK */
#define CPU3_OMASK0 (CPU3_BLK0_OMASK)

/** \brief FB1C, CPU3 redirected address base register 1 */
#define CPU3_BLK1_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB1Cu)
/** Alias (User Manual Name) for CPU3_BLK1_RABR */
#define CPU3_RABR1 (CPU3_BLK1_RABR)

/** \brief FB20, CPU3 overlay target address register 1 (Low priority) */
#define CPU3_BLK1_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB20u)
/** Alias (User Manual Name) for CPU3_BLK1_OTAR */
#define CPU3_OTAR1 (CPU3_BLK1_OTAR)

/** \brief FB24, CPU3 overlay mask register 1 */
#define CPU3_BLK1_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB24u)
/** Alias (User Manual Name) for CPU3_BLK1_OMASK */
#define CPU3_OMASK1 (CPU3_BLK1_OMASK)

/** \brief FB28, CPU3 redirected address base register 2 */
#define CPU3_BLK2_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB28u)
/** Alias (User Manual Name) for CPU3_BLK2_RABR */
#define CPU3_RABR2 (CPU3_BLK2_RABR)

/** \brief FB2C, CPU3 overlay target address register 2 (Low priority) */
#define CPU3_BLK2_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB2Cu)
/** Alias (User Manual Name) for CPU3_BLK2_OTAR */
#define CPU3_OTAR2 (CPU3_BLK2_OTAR)

/** \brief FB30, CPU3 overlay mask register 2 */
#define CPU3_BLK2_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB30u)
/** Alias (User Manual Name) for CPU3_BLK2_OMASK */
#define CPU3_OMASK2 (CPU3_BLK2_OMASK)

/** \brief FB34, CPU3 redirected address base register 3 */
#define CPU3_BLK3_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB34u)
/** Alias (User Manual Name) for CPU3_BLK3_RABR */
#define CPU3_RABR3 (CPU3_BLK3_RABR)

/** \brief FB38, CPU3 overlay target address register 3 (Low priority) */
#define CPU3_BLK3_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB38u)
/** Alias (User Manual Name) for CPU3_BLK3_OTAR */
#define CPU3_OTAR3 (CPU3_BLK3_OTAR)

/** \brief FB3C, CPU3 overlay mask register 3 */
#define CPU3_BLK3_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB3Cu)
/** Alias (User Manual Name) for CPU3_BLK3_OMASK */
#define CPU3_OMASK3 (CPU3_BLK3_OMASK)

/** \brief FB40, CPU3 redirected address base register 4 */
#define CPU3_BLK4_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB40u)
/** Alias (User Manual Name) for CPU3_BLK4_RABR */
#define CPU3_RABR4 (CPU3_BLK4_RABR)

/** \brief FB44, CPU3 overlay target address register 4 (Low priority) */
#define CPU3_BLK4_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB44u)
/** Alias (User Manual Name) for CPU3_BLK4_OTAR */
#define CPU3_OTAR4 (CPU3_BLK4_OTAR)

/** \brief FB48, CPU3 overlay mask register 4 */
#define CPU3_BLK4_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB48u)
/** Alias (User Manual Name) for CPU3_BLK4_OMASK */
#define CPU3_OMASK4 (CPU3_BLK4_OMASK)

/** \brief FB4C, CPU3 redirected address base register 5 */
#define CPU3_BLK5_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB4Cu)
/** Alias (User Manual Name) for CPU3_BLK5_RABR */
#define CPU3_RABR5 (CPU3_BLK5_RABR)

/** \brief FB50, CPU3 overlay target address register 5 (Low priority) */
#define CPU3_BLK5_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB50u)
/** Alias (User Manual Name) for CPU3_BLK5_OTAR */
#define CPU3_OTAR5 (CPU3_BLK5_OTAR)

/** \brief FB54, CPU3 overlay mask register 5 */
#define CPU3_BLK5_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB54u)
/** Alias (User Manual Name) for CPU3_BLK5_OMASK */
#define CPU3_OMASK5 (CPU3_BLK5_OMASK)

/** \brief FB58, CPU3 redirected address base register 6 */
#define CPU3_BLK6_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB58u)
/** Alias (User Manual Name) for CPU3_BLK6_RABR */
#define CPU3_RABR6 (CPU3_BLK6_RABR)

/** \brief FB5C, CPU3 overlay target address register 6 (Low priority) */
#define CPU3_BLK6_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB5Cu)
/** Alias (User Manual Name) for CPU3_BLK6_OTAR */
#define CPU3_OTAR6 (CPU3_BLK6_OTAR)

/** \brief FB60, CPU3 overlay mask register 6 */
#define CPU3_BLK6_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB60u)
/** Alias (User Manual Name) for CPU3_BLK6_OMASK */
#define CPU3_OMASK6 (CPU3_BLK6_OMASK)

/** \brief FB64, CPU3 redirected address base register 7 */
#define CPU3_BLK7_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB64u)
/** Alias (User Manual Name) for CPU3_BLK7_RABR */
#define CPU3_RABR7 (CPU3_BLK7_RABR)

/** \brief FB68, CPU3 overlay target address register 7 (Low priority) */
#define CPU3_BLK7_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB68u)
/** Alias (User Manual Name) for CPU3_BLK7_OTAR */
#define CPU3_OTAR7 (CPU3_BLK7_OTAR)

/** \brief FB6C, CPU3 overlay mask register 7 */
#define CPU3_BLK7_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB6Cu)
/** Alias (User Manual Name) for CPU3_BLK7_OMASK */
#define CPU3_OMASK7 (CPU3_BLK7_OMASK)

/** \brief FB70, CPU3 redirected address base register 8 */
#define CPU3_BLK8_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB70u)
/** Alias (User Manual Name) for CPU3_BLK8_RABR */
#define CPU3_RABR8 (CPU3_BLK8_RABR)

/** \brief FB74, CPU3 overlay target address register 8 (Low priority) */
#define CPU3_BLK8_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB74u)
/** Alias (User Manual Name) for CPU3_BLK8_OTAR */
#define CPU3_OTAR8 (CPU3_BLK8_OTAR)

/** \brief FB78, CPU3 overlay mask register 8 */
#define CPU3_BLK8_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB78u)
/** Alias (User Manual Name) for CPU3_BLK8_OMASK */
#define CPU3_OMASK8 (CPU3_BLK8_OMASK)

/** \brief FB7C, CPU3 redirected address base register 9 */
#define CPU3_BLK9_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB7Cu)
/** Alias (User Manual Name) for CPU3_BLK9_RABR */
#define CPU3_RABR9 (CPU3_BLK9_RABR)

/** \brief FB80, CPU3 overlay target address register 9 (Low priority) */
#define CPU3_BLK9_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB80u)
/** Alias (User Manual Name) for CPU3_BLK9_OTAR */
#define CPU3_OTAR9 (CPU3_BLK9_OTAR)

/** \brief FB84, CPU3 overlay mask register 9 */
#define CPU3_BLK9_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB84u)
/** Alias (User Manual Name) for CPU3_BLK9_OMASK */
#define CPU3_OMASK9 (CPU3_BLK9_OMASK)

/** \brief FB88, CPU3 redirected address base register 10 */
#define CPU3_BLK10_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB88u)
/** Alias (User Manual Name) for CPU3_BLK10_RABR */
#define CPU3_RABR10 (CPU3_BLK10_RABR)

/** \brief FB8C, CPU3 overlay target address register 10 (Low priority) */
#define CPU3_BLK10_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB8Cu)
/** Alias (User Manual Name) for CPU3_BLK10_OTAR */
#define CPU3_OTAR10 (CPU3_BLK10_OTAR)

/** \brief FB90, CPU3 overlay mask register 10 */
#define CPU3_BLK10_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB90u)
/** Alias (User Manual Name) for CPU3_BLK10_OMASK */
#define CPU3_OMASK10 (CPU3_BLK10_OMASK)

/** \brief FB94, CPU3 redirected address base register 11 */
#define CPU3_BLK11_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFB94u)
/** Alias (User Manual Name) for CPU3_BLK11_RABR */
#define CPU3_RABR11 (CPU3_BLK11_RABR)

/** \brief FB98, CPU3 overlay target address register 11 (Low priority) */
#define CPU3_BLK11_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFB98u)
/** Alias (User Manual Name) for CPU3_BLK11_OTAR */
#define CPU3_OTAR11 (CPU3_BLK11_OTAR)

/** \brief FB9C, CPU3 overlay mask register 11 */
#define CPU3_BLK11_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFB9Cu)
/** Alias (User Manual Name) for CPU3_BLK11_OMASK */
#define CPU3_OMASK11 (CPU3_BLK11_OMASK)

/** \brief FBA0, CPU3 redirected address base register 12 */
#define CPU3_BLK12_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBA0u)
/** Alias (User Manual Name) for CPU3_BLK12_RABR */
#define CPU3_RABR12 (CPU3_BLK12_RABR)

/** \brief FBA4, CPU3 overlay target address register 12 (Low priority) */
#define CPU3_BLK12_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBA4u)
/** Alias (User Manual Name) for CPU3_BLK12_OTAR */
#define CPU3_OTAR12 (CPU3_BLK12_OTAR)

/** \brief FBA8, CPU3 overlay mask register 12 */
#define CPU3_BLK12_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBA8u)
/** Alias (User Manual Name) for CPU3_BLK12_OMASK */
#define CPU3_OMASK12 (CPU3_BLK12_OMASK)

/** \brief FBAC, CPU3 redirected address base register 13 */
#define CPU3_BLK13_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBACu)
/** Alias (User Manual Name) for CPU3_BLK13_RABR */
#define CPU3_RABR13 (CPU3_BLK13_RABR)

/** \brief FBB0, CPU3 overlay target address register 13 (Low priority) */
#define CPU3_BLK13_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBB0u)
/** Alias (User Manual Name) for CPU3_BLK13_OTAR */
#define CPU3_OTAR13 (CPU3_BLK13_OTAR)

/** \brief FBB4, CPU3 overlay mask register 13 */
#define CPU3_BLK13_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBB4u)
/** Alias (User Manual Name) for CPU3_BLK13_OMASK */
#define CPU3_OMASK13 (CPU3_BLK13_OMASK)

/** \brief FBB8, CPU3 redirected address base register 14 */
#define CPU3_BLK14_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBB8u)
/** Alias (User Manual Name) for CPU3_BLK14_RABR */
#define CPU3_RABR14 (CPU3_BLK14_RABR)

/** \brief FBBC, CPU3 overlay target address register 14 (Low priority) */
#define CPU3_BLK14_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBBCu)
/** Alias (User Manual Name) for CPU3_BLK14_OTAR */
#define CPU3_OTAR14 (CPU3_BLK14_OTAR)

/** \brief FBC0, CPU3 overlay mask register 14 */
#define CPU3_BLK14_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBC0u)
/** Alias (User Manual Name) for CPU3_BLK14_OMASK */
#define CPU3_OMASK14 (CPU3_BLK14_OMASK)

/** \brief FBC4, CPU3 redirected address base register 15 */
#define CPU3_BLK15_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBC4u)
/** Alias (User Manual Name) for CPU3_BLK15_RABR */
#define CPU3_RABR15 (CPU3_BLK15_RABR)

/** \brief FBC8, CPU3 overlay target address register 15 (Low priority) */
#define CPU3_BLK15_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBC8u)
/** Alias (User Manual Name) for CPU3_BLK15_OTAR */
#define CPU3_OTAR15 (CPU3_BLK15_OTAR)

/** \brief FBCC, CPU3 overlay mask register 15 */
#define CPU3_BLK15_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBCCu)
/** Alias (User Manual Name) for CPU3_BLK15_OMASK */
#define CPU3_OMASK15 (CPU3_BLK15_OMASK)

/** \brief FBD0, CPU3 redirected address base register 16 */
#define CPU3_BLK16_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBD0u)
/** Alias (User Manual Name) for CPU3_BLK16_RABR */
#define CPU3_RABR16 (CPU3_BLK16_RABR)

/** \brief FBD4, CPU3 overlay target address register 16 (Low priority) */
#define CPU3_BLK16_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBD4u)
/** Alias (User Manual Name) for CPU3_BLK16_OTAR */
#define CPU3_OTAR16 (CPU3_BLK16_OTAR)

/** \brief FBD8, CPU3 overlay mask register 16 */
#define CPU3_BLK16_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBD8u)
/** Alias (User Manual Name) for CPU3_BLK16_OMASK */
#define CPU3_OMASK16 (CPU3_BLK16_OMASK)

/** \brief FBDC, CPU3 redirected address base register 17 */
#define CPU3_BLK17_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBDCu)
/** Alias (User Manual Name) for CPU3_BLK17_RABR */
#define CPU3_RABR17 (CPU3_BLK17_RABR)

/** \brief FBE0, CPU3 overlay target address register 17 (Low priority) */
#define CPU3_BLK17_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBE0u)
/** Alias (User Manual Name) for CPU3_BLK17_OTAR */
#define CPU3_OTAR17 (CPU3_BLK17_OTAR)

/** \brief FBE4, CPU3 overlay mask register 17 */
#define CPU3_BLK17_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBE4u)
/** Alias (User Manual Name) for CPU3_BLK17_OMASK */
#define CPU3_OMASK17 (CPU3_BLK17_OMASK)

/** \brief FBE8, CPU3 redirected address base register 18 */
#define CPU3_BLK18_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBE8u)
/** Alias (User Manual Name) for CPU3_BLK18_RABR */
#define CPU3_RABR18 (CPU3_BLK18_RABR)

/** \brief FBEC, CPU3 overlay target address register 18 (Low priority) */
#define CPU3_BLK18_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBECu)
/** Alias (User Manual Name) for CPU3_BLK18_OTAR */
#define CPU3_OTAR18 (CPU3_BLK18_OTAR)

/** \brief FBF0, CPU3 overlay mask register 18 */
#define CPU3_BLK18_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBF0u)
/** Alias (User Manual Name) for CPU3_BLK18_OMASK */
#define CPU3_OMASK18 (CPU3_BLK18_OMASK)

/** \brief FBF4, CPU3 redirected address base register 19 */
#define CPU3_BLK19_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFBF4u)
/** Alias (User Manual Name) for CPU3_BLK19_RABR */
#define CPU3_RABR19 (CPU3_BLK19_RABR)

/** \brief FBF8, CPU3 overlay target address register 19 (Low priority) */
#define CPU3_BLK19_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFBF8u)
/** Alias (User Manual Name) for CPU3_BLK19_OTAR */
#define CPU3_OTAR19 (CPU3_BLK19_OTAR)

/** \brief FBFC, CPU3 overlay mask register 19 */
#define CPU3_BLK19_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFBFCu)
/** Alias (User Manual Name) for CPU3_BLK19_OMASK */
#define CPU3_OMASK19 (CPU3_BLK19_OMASK)

/** \brief FC00, CPU3 redirected address base register 20 */
#define CPU3_BLK20_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC00u)
/** Alias (User Manual Name) for CPU3_BLK20_RABR */
#define CPU3_RABR20 (CPU3_BLK20_RABR)

/** \brief FC04, CPU3 overlay target address register 20 (Low priority) */
#define CPU3_BLK20_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC04u)
/** Alias (User Manual Name) for CPU3_BLK20_OTAR */
#define CPU3_OTAR20 (CPU3_BLK20_OTAR)

/** \brief FC08, CPU3 overlay mask register 20 */
#define CPU3_BLK20_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC08u)
/** Alias (User Manual Name) for CPU3_BLK20_OMASK */
#define CPU3_OMASK20 (CPU3_BLK20_OMASK)

/** \brief FC0C, CPU3 redirected address base register 21 */
#define CPU3_BLK21_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC0Cu)
/** Alias (User Manual Name) for CPU3_BLK21_RABR */
#define CPU3_RABR21 (CPU3_BLK21_RABR)

/** \brief FC10, CPU3 overlay target address register 21 (Low priority) */
#define CPU3_BLK21_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC10u)
/** Alias (User Manual Name) for CPU3_BLK21_OTAR */
#define CPU3_OTAR21 (CPU3_BLK21_OTAR)

/** \brief FC14, CPU3 overlay mask register 21 */
#define CPU3_BLK21_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC14u)
/** Alias (User Manual Name) for CPU3_BLK21_OMASK */
#define CPU3_OMASK21 (CPU3_BLK21_OMASK)

/** \brief FC18, CPU3 redirected address base register 22 */
#define CPU3_BLK22_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC18u)
/** Alias (User Manual Name) for CPU3_BLK22_RABR */
#define CPU3_RABR22 (CPU3_BLK22_RABR)

/** \brief FC1C, CPU3 overlay target address register 22 (Low priority) */
#define CPU3_BLK22_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC1Cu)
/** Alias (User Manual Name) for CPU3_BLK22_OTAR */
#define CPU3_OTAR22 (CPU3_BLK22_OTAR)

/** \brief FC20, CPU3 overlay mask register 22 */
#define CPU3_BLK22_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC20u)
/** Alias (User Manual Name) for CPU3_BLK22_OMASK */
#define CPU3_OMASK22 (CPU3_BLK22_OMASK)

/** \brief FC24, CPU3 redirected address base register 23 */
#define CPU3_BLK23_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC24u)
/** Alias (User Manual Name) for CPU3_BLK23_RABR */
#define CPU3_RABR23 (CPU3_BLK23_RABR)

/** \brief FC28, CPU3 overlay target address register 23 (Low priority) */
#define CPU3_BLK23_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC28u)
/** Alias (User Manual Name) for CPU3_BLK23_OTAR */
#define CPU3_OTAR23 (CPU3_BLK23_OTAR)

/** \brief FC2C, CPU3 overlay mask register 23 */
#define CPU3_BLK23_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC2Cu)
/** Alias (User Manual Name) for CPU3_BLK23_OMASK */
#define CPU3_OMASK23 (CPU3_BLK23_OMASK)

/** \brief FC30, CPU3 redirected address base register 24 */
#define CPU3_BLK24_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC30u)
/** Alias (User Manual Name) for CPU3_BLK24_RABR */
#define CPU3_RABR24 (CPU3_BLK24_RABR)

/** \brief FC34, CPU3 overlay target address register 24 (Low priority) */
#define CPU3_BLK24_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC34u)
/** Alias (User Manual Name) for CPU3_BLK24_OTAR */
#define CPU3_OTAR24 (CPU3_BLK24_OTAR)

/** \brief FC38, CPU3 overlay mask register 24 */
#define CPU3_BLK24_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC38u)
/** Alias (User Manual Name) for CPU3_BLK24_OMASK */
#define CPU3_OMASK24 (CPU3_BLK24_OMASK)

/** \brief FC3C, CPU3 redirected address base register 25 */
#define CPU3_BLK25_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC3Cu)
/** Alias (User Manual Name) for CPU3_BLK25_RABR */
#define CPU3_RABR25 (CPU3_BLK25_RABR)

/** \brief FC40, CPU3 overlay target address register 25 (Low priority) */
#define CPU3_BLK25_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC40u)
/** Alias (User Manual Name) for CPU3_BLK25_OTAR */
#define CPU3_OTAR25 (CPU3_BLK25_OTAR)

/** \brief FC44, CPU3 overlay mask register 25 */
#define CPU3_BLK25_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC44u)
/** Alias (User Manual Name) for CPU3_BLK25_OMASK */
#define CPU3_OMASK25 (CPU3_BLK25_OMASK)

/** \brief FC48, CPU3 redirected address base register 26 */
#define CPU3_BLK26_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC48u)
/** Alias (User Manual Name) for CPU3_BLK26_RABR */
#define CPU3_RABR26 (CPU3_BLK26_RABR)

/** \brief FC4C, CPU3 overlay target address register 26 (Low priority) */
#define CPU3_BLK26_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC4Cu)
/** Alias (User Manual Name) for CPU3_BLK26_OTAR */
#define CPU3_OTAR26 (CPU3_BLK26_OTAR)

/** \brief FC50, CPU3 overlay mask register 26 */
#define CPU3_BLK26_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC50u)
/** Alias (User Manual Name) for CPU3_BLK26_OMASK */
#define CPU3_OMASK26 (CPU3_BLK26_OMASK)

/** \brief FC54, CPU3 redirected address base register 27 */
#define CPU3_BLK27_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC54u)
/** Alias (User Manual Name) for CPU3_BLK27_RABR */
#define CPU3_RABR27 (CPU3_BLK27_RABR)

/** \brief FC58, CPU3 overlay target address register 27 (Low priority) */
#define CPU3_BLK27_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC58u)
/** Alias (User Manual Name) for CPU3_BLK27_OTAR */
#define CPU3_OTAR27 (CPU3_BLK27_OTAR)

/** \brief FC5C, CPU3 overlay mask register 27 */
#define CPU3_BLK27_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC5Cu)
/** Alias (User Manual Name) for CPU3_BLK27_OMASK */
#define CPU3_OMASK27 (CPU3_BLK27_OMASK)

/** \brief FC60, CPU3 redirected address base register 28 */
#define CPU3_BLK28_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC60u)
/** Alias (User Manual Name) for CPU3_BLK28_RABR */
#define CPU3_RABR28 (CPU3_BLK28_RABR)

/** \brief FC64, CPU3 overlay target address register 28 (Low priority) */
#define CPU3_BLK28_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC64u)
/** Alias (User Manual Name) for CPU3_BLK28_OTAR */
#define CPU3_OTAR28 (CPU3_BLK28_OTAR)

/** \brief FC68, CPU3 overlay mask register 28 */
#define CPU3_BLK28_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC68u)
/** Alias (User Manual Name) for CPU3_BLK28_OMASK */
#define CPU3_OMASK28 (CPU3_BLK28_OMASK)

/** \brief FC6C, CPU3 redirected address base register 29 */
#define CPU3_BLK29_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC6Cu)
/** Alias (User Manual Name) for CPU3_BLK29_RABR */
#define CPU3_RABR29 (CPU3_BLK29_RABR)

/** \brief FC70, CPU3 overlay target address register 29 (Low priority) */
#define CPU3_BLK29_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC70u)
/** Alias (User Manual Name) for CPU3_BLK29_OTAR */
#define CPU3_OTAR29 (CPU3_BLK29_OTAR)

/** \brief FC74, CPU3 overlay mask register 29 */
#define CPU3_BLK29_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC74u)
/** Alias (User Manual Name) for CPU3_BLK29_OMASK */
#define CPU3_OMASK29 (CPU3_BLK29_OMASK)

/** \brief FC78, CPU3 redirected address base register 30 */
#define CPU3_BLK30_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC78u)
/** Alias (User Manual Name) for CPU3_BLK30_RABR */
#define CPU3_RABR30 (CPU3_BLK30_RABR)

/** \brief FC7C, CPU3 overlay target address register 30 (Low priority) */
#define CPU3_BLK30_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC7Cu)
/** Alias (User Manual Name) for CPU3_BLK30_OTAR */
#define CPU3_OTAR30 (CPU3_BLK30_OTAR)

/** \brief FC80, CPU3 overlay mask register 30 */
#define CPU3_BLK30_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC80u)
/** Alias (User Manual Name) for CPU3_BLK30_OMASK */
#define CPU3_OMASK30 (CPU3_BLK30_OMASK)

/** \brief FC84, CPU3 redirected address base register 31 */
#define CPU3_BLK31_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF88CFC84u)
/** Alias (User Manual Name) for CPU3_BLK31_RABR */
#define CPU3_RABR31 (CPU3_BLK31_RABR)

/** \brief FC88, CPU3 overlay target address register 31 (Low priority) */
#define CPU3_BLK31_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF88CFC88u)
/** Alias (User Manual Name) for CPU3_BLK31_OTAR */
#define CPU3_OTAR31 (CPU3_BLK31_OTAR)

/** \brief FC8C, CPU3 overlay mask register 31 */
#define CPU3_BLK31_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF88CFC8Cu)
/** Alias (User Manual Name) for CPU3_BLK31_OMASK */
#define CPU3_OMASK31 (CPU3_BLK31_OMASK)

/** \brief 1030, CPU3 SRI error generation register */
#define CPU3_HRA_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF88D1030u)

/** \brief 1040, CPU3 lockstep test register */
#define CPU3_HRA_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF88D1040u)

/** \brief 8100, CPU3 data access cacheability register */
#define CPU3_HRA_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF88D8100u)

/** \brief 8104, CPU3 code access cacheability register */
#define CPU3_HRA_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF88D8104u)

/** \brief 8108, CPU3 peripheral space identifier register */
#define CPU3_HRA_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF88D8108u)

/** \brief 9000, CPU3 data control register 2 */
#define CPU3_HRA_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF88D9000u)

/** \brief 9008, CPU3 data control register 1 */
#define CPU3_HRA_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF88D9008u)

/** \brief 900C, CPU3 SIST mode access control register */
#define CPU3_HRA_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF88D900Cu)

/** \brief 9010, CPU3 HR specific data synchronous trap register */
#define CPU3_HRA_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF88D9010u)

/** \brief 9018, CPU3 HR specific data asynchronous trap register */
#define CPU3_HRA_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF88D9018u)

/** \brief 901C, CPU3 HR specific data error address register */
#define CPU3_HRA_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF88D901Cu)

/** \brief 9020, CPU3 data integrity error address register */
#define CPU3_HRA_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88D9020u)

/** \brief 9024, CPU3 data integrity error trap register */
#define CPU3_HRA_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF88D9024u)

/** \brief 9040, CPU3 data memory control register */
#define CPU3_HRA_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF88D9040u)

/** \brief 9200, CPU3 HR specific program synchronous trap register */
#define CPU3_HRA_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF88D9200u)

/** \brief 9204, CPU3 program control 1 */
#define CPU3_HRA_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF88D9204u)

/** \brief 9208, CPU3 program control 2 */
#define CPU3_HRA_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF88D9208u)

/** \brief 920C, CPU3 program control 0 */
#define CPU3_HRA_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF88D920Cu)

/** \brief 9210, CPU3 HR specific program integrity error address register */
#define CPU3_HRA_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88D9210u)

/** \brief 9214, CPU3 HR specific program integrity error trap register */
#define CPU3_HRA_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF88D9214u)

/** \brief 9400, CPU3 compatibility control register */
#define CPU3_HRA_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF88D9400u)

/** \brief A000, CPU3 HR specific trap control register */
#define CPU3_HRA_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF88DA000u)

/** \brief A004, CPU3 HR specific trapping instruction program counter register */
#define CPU3_HRA_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF88DA004u)

/** \brief A008, CPU3 HR specific trapping instruction opcode register */
#define CPU3_HRA_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88DA008u)

/** \brief A010, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRA_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF88DA010u)

/** \brief A014, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRA_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF88DA014u)

/** \brief A018, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRA_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF88DA018u)

/** \brief A01C, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRA_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF88DA01Cu)

/** \brief A020, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRA_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF88DA020u)

/** \brief A024, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRA_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF88DA024u)

/** \brief A030, CPU3 HR specific synchronous trap control register */
#define CPU3_HRA_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF88DA030u)

/** \brief A034, CPU3 HR specific trapping instruction opcode register */
#define CPU3_HRA_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88DA034u)

/** \brief C000, CPU3 HR specific data protection range 0, lower bound register */
#define CPU3_HRA_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC000u)

/** \brief C004, CPU3 HR specific data protection range 0, upper bound register */
#define CPU3_HRA_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC004u)

/** \brief C008, CPU3 HR specific data protection range 1, lower bound register */
#define CPU3_HRA_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC008u)

/** \brief C00C, CPU3 HR specific data protection range 1, upper bound register */
#define CPU3_HRA_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC00Cu)

/** \brief C010, CPU3 HR specific data protection range 2, lower bound register */
#define CPU3_HRA_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC010u)

/** \brief C014, CPU3 HR specific data protection range 2, upper bound register */
#define CPU3_HRA_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC014u)

/** \brief C018, CPU3 HR specific data protection range 3, lower bound register */
#define CPU3_HRA_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC018u)

/** \brief C01C, CPU3 HR specific data protection range 3, upper bound register */
#define CPU3_HRA_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC01Cu)

/** \brief C020, CPU3 HR specific data protection range 4, lower bound register */
#define CPU3_HRA_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC020u)

/** \brief C024, CPU3 HR specific data protection range 4, upper bound register */
#define CPU3_HRA_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC024u)

/** \brief C028, CPU3 HR specific data protection range 5, lower bound register */
#define CPU3_HRA_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC028u)

/** \brief C02C, CPU3 HR specific data protection range 5, upper bound register */
#define CPU3_HRA_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC02Cu)

/** \brief C030, CPU3 HR specific data protection range 6, lower bound register */
#define CPU3_HRA_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC030u)

/** \brief C034, CPU3 HR specific data protection range 6, upper bound register */
#define CPU3_HRA_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC034u)

/** \brief C038, CPU3 HR specific data protection range 7, lower bound register */
#define CPU3_HRA_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC038u)

/** \brief C03C, CPU3 HR specific data protection range 7, upper bound register */
#define CPU3_HRA_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC03Cu)

/** \brief C040, CPU3 HR specific data protection range 8, lower bound register */
#define CPU3_HRA_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC040u)

/** \brief C044, CPU3 HR specific data protection range 8, upper bound register */
#define CPU3_HRA_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC044u)

/** \brief C048, CPU3 HR specific data protection range 9, lower bound register */
#define CPU3_HRA_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC048u)

/** \brief C04C, CPU3 HR specific data protection range 9, upper bound register */
#define CPU3_HRA_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC04Cu)

/** \brief C050, CPU3 HR specific data protection range 10, lower bound register */
#define CPU3_HRA_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC050u)

/** \brief C054, CPU3 HR specific data protection range 10, upper bound register */
#define CPU3_HRA_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC054u)

/** \brief C058, CPU3 HR specific data protection range 11, lower bound register */
#define CPU3_HRA_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC058u)

/** \brief C05C, CPU3 HR specific data protection range 11, upper bound register */
#define CPU3_HRA_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC05Cu)

/** \brief C060, CPU3 HR specific data protection range 12, lower bound register */
#define CPU3_HRA_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC060u)

/** \brief C064, CPU3 HR specific data protection range 12, upper bound register */
#define CPU3_HRA_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC064u)

/** \brief C068, CPU3 HR specific data protection range 13, lower bound register */
#define CPU3_HRA_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC068u)

/** \brief C06C, CPU3 HR specific data protection range 13, upper bound register */
#define CPU3_HRA_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC06Cu)

/** \brief C070, CPU3 HR specific data protection range 14, lower bound register */
#define CPU3_HRA_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC070u)

/** \brief C074, CPU3 HR specific data protection range 14, upper bound register */
#define CPU3_HRA_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC074u)

/** \brief C078, CPU3 HR specific data protection range 15, lower bound register */
#define CPU3_HRA_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC078u)

/** \brief C07C, CPU3 HR specific data protection range 15, upper bound register */
#define CPU3_HRA_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC07Cu)

/** \brief C080, CPU3 HR specific data protection range 16, lower bound register */
#define CPU3_HRA_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC080u)

/** \brief C084, CPU3 HR specific data protection range 16, upper bound register */
#define CPU3_HRA_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC084u)

/** \brief C088, CPU3 HR specific data protection range 17, lower bound register */
#define CPU3_HRA_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC088u)

/** \brief C08C, CPU3 HR specific data protection range 17, upper bound register */
#define CPU3_HRA_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC08Cu)

/** \brief C090, CPU3 HR specific data protection range 18, lower bound register */
#define CPU3_HRA_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC090u)

/** \brief C094, CPU3 HR specific data protection range 18, upper bound register */
#define CPU3_HRA_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC094u)

/** \brief C098, CPU3 HR specific data protection range 19, lower bound register */
#define CPU3_HRA_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC098u)

/** \brief C09C, CPU3 HR specific data protection range 19, upper bound register */
#define CPU3_HRA_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC09Cu)

/** \brief C0A0, CPU3 HR specific data protection range 20, lower bound register */
#define CPU3_HRA_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC0A0u)

/** \brief C0A4, CPU3 HR specific data protection range 20, upper bound register */
#define CPU3_HRA_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC0A4u)

/** \brief C0A8, CPU3 HR specific data protection range 21, lower bound register */
#define CPU3_HRA_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC0A8u)

/** \brief C0AC, CPU3 HR specific data protection range 21, upper bound register */
#define CPU3_HRA_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC0ACu)

/** \brief C0B0, CPU3 HR specific data protection range 22, lower bound register */
#define CPU3_HRA_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC0B0u)

/** \brief C0B4, CPU3 HR specific data protection range 22, upper bound register */
#define CPU3_HRA_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC0B4u)

/** \brief C0B8, CPU3 HR specific data protection range 23, lower bound register */
#define CPU3_HRA_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88DC0B8u)

/** \brief C0BC, CPU3 HR specific data protection range 23, upper bound register */
#define CPU3_HRA_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88DC0BCu)

/** \brief D000, CPU3 HR specific code protection range 0, lower bound register */
#define CPU3_HRA_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD000u)

/** \brief D004, CPU3 HR specific code protection range 0, upper bound register */
#define CPU3_HRA_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD004u)

/** \brief D008, CPU3 HR specific code protection range 1, lower bound register */
#define CPU3_HRA_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD008u)

/** \brief D00C, CPU3 HR specific code protection range 1, upper bound register */
#define CPU3_HRA_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD00Cu)

/** \brief D010, CPU3 HR specific code protection range 2, lower bound register */
#define CPU3_HRA_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD010u)

/** \brief D014, CPU3 HR specific code protection range 2, upper bound register */
#define CPU3_HRA_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD014u)

/** \brief D018, CPU3 HR specific code protection range 3, lower bound register */
#define CPU3_HRA_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD018u)

/** \brief D01C, CPU3 HR specific code protection range 3, upper bound register */
#define CPU3_HRA_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD01Cu)

/** \brief D020, CPU3 HR specific code protection range 4, lower bound register */
#define CPU3_HRA_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD020u)

/** \brief D024, CPU3 HR specific code protection range 4, upper bound register */
#define CPU3_HRA_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD024u)

/** \brief D028, CPU3 HR specific code protection range 5, lower bound register */
#define CPU3_HRA_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD028u)

/** \brief D02C, CPU3 HR specific code protection range 5, upper bound register */
#define CPU3_HRA_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD02Cu)

/** \brief D030, CPU3 HR specific code protection range 6, lower bound register */
#define CPU3_HRA_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD030u)

/** \brief D034, CPU3 HR specific code protection range 6, upper bound register */
#define CPU3_HRA_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD034u)

/** \brief D038, CPU3 HR specific code protection range 7, lower bound register */
#define CPU3_HRA_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD038u)

/** \brief D03C, CPU3 HR specific code protection range 7, upper bound register */
#define CPU3_HRA_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD03Cu)

/** \brief D040, CPU3 HR specific code protection range 8, lower bound register */
#define CPU3_HRA_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD040u)

/** \brief D044, CPU3 HR specific code protection range 8, upper bound register */
#define CPU3_HRA_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD044u)

/** \brief D048, CPU3 HR specific code protection range 9, lower bound register */
#define CPU3_HRA_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD048u)

/** \brief D04C, CPU3 HR specific code protection range 9, upper bound register */
#define CPU3_HRA_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD04Cu)

/** \brief D050, CPU3 HR specific code protection range 10, lower bound register */
#define CPU3_HRA_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD050u)

/** \brief D054, CPU3 HR specific code protection range 10, upper bound register */
#define CPU3_HRA_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD054u)

/** \brief D058, CPU3 HR specific code protection range 11, lower bound register */
#define CPU3_HRA_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD058u)

/** \brief D05C, CPU3 HR specific code protection range 11, upper bound register */
#define CPU3_HRA_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD05Cu)

/** \brief D060, CPU3 HR specific code protection range 12, lower bound register */
#define CPU3_HRA_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD060u)

/** \brief D064, CPU3 HR specific code protection range 12, upper bound register */
#define CPU3_HRA_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD064u)

/** \brief D068, CPU3 HR specific code protection range 13, lower bound register */
#define CPU3_HRA_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD068u)

/** \brief D06C, CPU3 HR specific code protection range 13, upper bound register */
#define CPU3_HRA_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD06Cu)

/** \brief D070, CPU3 HR specific code protection range 14, lower bound register */
#define CPU3_HRA_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD070u)

/** \brief D074, CPU3 HR specific code protection range 14, upper bound register */
#define CPU3_HRA_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD074u)

/** \brief D078, CPU3 HR specific code protection range 15, lower bound register */
#define CPU3_HRA_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88DD078u)

/** \brief D07C, CPU3 HR specific code protection range 15, upper bound register */
#define CPU3_HRA_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88DD07Cu)

/** \brief E000, CPU3 HR specific code protection execute enable register set 0 */
#define CPU3_HRA_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE000u)

/** \brief E004, CPU3 HR specific code protection execute enable register set 1 */
#define CPU3_HRA_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE004u)

/** \brief E008, CPU3 HR specific code protection execute enable register set 2 */
#define CPU3_HRA_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE008u)

/** \brief E00C, CPU3 HR specific code protection execute enable register set 3 */
#define CPU3_HRA_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE00Cu)

/** \brief E010, CPU3 HR specific data protection read enable register set 0 */
#define CPU3_HRA_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE010u)

/** \brief E014, CPU3 HR specific data protection read enable register set 1 */
#define CPU3_HRA_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE014u)

/** \brief E018, CPU3 HR specific data protection read enable register set 2 */
#define CPU3_HRA_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE018u)

/** \brief E01C, CPU3 HR specific data protection read enable register set 3 */
#define CPU3_HRA_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE01Cu)

/** \brief E020, CPU3 HR specific data protection write enable register set 0 */
#define CPU3_HRA_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE020u)

/** \brief E024, CPU3 HR specific data protection write enable register set 1 */
#define CPU3_HRA_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE024u)

/** \brief E028, CPU3 HR specific data protection write enable register set 2 */
#define CPU3_HRA_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE028u)

/** \brief E02C, CPU3 HR specific data protection write enable register set 3 */
#define CPU3_HRA_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE02Cu)

/** \brief E040, CPU3 HR specific code protection execute enable register set 4 */
#define CPU3_HRA_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE040u)

/** \brief E044, CPU3 HR specific code protection execute enable register set 5 */
#define CPU3_HRA_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE044u)

/** \brief E048, CPU3 HR specific code protection execute enable register set 6 */
#define CPU3_HRA_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE048u)

/** \brief E04C, CPU3 HR specific code protection execute enable register set 7 */
#define CPU3_HRA_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88DE04Cu)

/** \brief E050, CPU3 HR specific data protection read enable register set 4 */
#define CPU3_HRA_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE050u)

/** \brief E054, CPU3 HR specific data protection read enable register set 5 */
#define CPU3_HRA_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE054u)

/** \brief E058, CPU3 HR specific data protection read enable register set 6 */
#define CPU3_HRA_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE058u)

/** \brief E05C, CPU3 HR specific data protection read enable register set 7 */
#define CPU3_HRA_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88DE05Cu)

/** \brief E060, CPU3 HR specific data protection write enable register set 4 */
#define CPU3_HRA_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE060u)

/** \brief E064, CPU3 HR specific data protection write enable register set 5 */
#define CPU3_HRA_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE064u)

/** \brief E068, CPU3 HR specific data protection write enable register set 6 */
#define CPU3_HRA_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE068u)

/** \brief E06C, CPU3 HR specific data protection write enable register set 7 */
#define CPU3_HRA_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88DE06Cu)

/** \brief E400, CPU3 HR specific temporal protection system control register */
#define CPU3_HRA_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF88DE400u)

/** \brief E404, CPU3 HR specific temporal protection system timer register 0 */
#define CPU3_HRA_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88DE404u)

/** \brief E408, CPU3 HR specific temporal protection system timer register 1 */
#define CPU3_HRA_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88DE408u)

/** \brief E40C, CPU3 HR specific temporal protection system timer register 2 */
#define CPU3_HRA_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88DE40Cu)

/** \brief F000, CPU3 trigger event 0 */
#define CPU3_HRA_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF000u)
/** Alias (User Manual Name) for CPU3_HRA_TR0_EVT */
#define CPU3_HRA_TR0EVT (CPU3_HRA_TR0_EVT)

/** \brief F004, CPU3 trigger address 0 */
#define CPU3_HRA_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF004u)
/** Alias (User Manual Name) for CPU3_HRA_TR0_ADR */
#define CPU3_HRA_TR0ADR (CPU3_HRA_TR0_ADR)

/** \brief F008, CPU3 trigger event 1 */
#define CPU3_HRA_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF008u)
/** Alias (User Manual Name) for CPU3_HRA_TR1_EVT */
#define CPU3_HRA_TR1EVT (CPU3_HRA_TR1_EVT)

/** \brief F00C, CPU3 trigger address 1 */
#define CPU3_HRA_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF00Cu)
/** Alias (User Manual Name) for CPU3_HRA_TR1_ADR */
#define CPU3_HRA_TR1ADR (CPU3_HRA_TR1_ADR)

/** \brief F010, CPU3 trigger event 2 */
#define CPU3_HRA_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF010u)
/** Alias (User Manual Name) for CPU3_HRA_TR2_EVT */
#define CPU3_HRA_TR2EVT (CPU3_HRA_TR2_EVT)

/** \brief F014, CPU3 trigger address 2 */
#define CPU3_HRA_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF014u)
/** Alias (User Manual Name) for CPU3_HRA_TR2_ADR */
#define CPU3_HRA_TR2ADR (CPU3_HRA_TR2_ADR)

/** \brief F018, CPU3 trigger event 3 */
#define CPU3_HRA_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF018u)
/** Alias (User Manual Name) for CPU3_HRA_TR3_EVT */
#define CPU3_HRA_TR3EVT (CPU3_HRA_TR3_EVT)

/** \brief F01C, CPU3 trigger address 3 */
#define CPU3_HRA_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF01Cu)
/** Alias (User Manual Name) for CPU3_HRA_TR3_ADR */
#define CPU3_HRA_TR3ADR (CPU3_HRA_TR3_ADR)

/** \brief F020, CPU3 trigger event 4 */
#define CPU3_HRA_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF020u)
/** Alias (User Manual Name) for CPU3_HRA_TR4_EVT */
#define CPU3_HRA_TR4EVT (CPU3_HRA_TR4_EVT)

/** \brief F024, CPU3 trigger address 4 */
#define CPU3_HRA_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF024u)
/** Alias (User Manual Name) for CPU3_HRA_TR4_ADR */
#define CPU3_HRA_TR4ADR (CPU3_HRA_TR4_ADR)

/** \brief F028, CPU3 trigger event 5 */
#define CPU3_HRA_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF028u)
/** Alias (User Manual Name) for CPU3_HRA_TR5_EVT */
#define CPU3_HRA_TR5EVT (CPU3_HRA_TR5_EVT)

/** \brief F02C, CPU3 trigger address 5 */
#define CPU3_HRA_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF02Cu)
/** Alias (User Manual Name) for CPU3_HRA_TR5_ADR */
#define CPU3_HRA_TR5ADR (CPU3_HRA_TR5_ADR)

/** \brief F030, CPU3 trigger event 6 */
#define CPU3_HRA_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF030u)
/** Alias (User Manual Name) for CPU3_HRA_TR6_EVT */
#define CPU3_HRA_TR6EVT (CPU3_HRA_TR6_EVT)

/** \brief F034, CPU3 trigger address 6 */
#define CPU3_HRA_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF034u)
/** Alias (User Manual Name) for CPU3_HRA_TR6_ADR */
#define CPU3_HRA_TR6ADR (CPU3_HRA_TR6_ADR)

/** \brief F038, CPU3 trigger event 7 */
#define CPU3_HRA_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88DF038u)
/** Alias (User Manual Name) for CPU3_HRA_TR7_EVT */
#define CPU3_HRA_TR7EVT (CPU3_HRA_TR7_EVT)

/** \brief F03C, CPU3 trigger address 7 */
#define CPU3_HRA_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88DF03Cu)
/** Alias (User Manual Name) for CPU3_HRA_TR7_ADR */
#define CPU3_HRA_TR7ADR (CPU3_HRA_TR7_ADR)

/** \brief FC00, CPU3 HR specific counter control */
#define CPU3_HRA_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF88DFC00u)

/** \brief FC04, CPU3 HR specific CPU clock cycle count */
#define CPU3_HRA_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF88DFC04u)

/** \brief FC08, CPU3 HR specific instruction count */
#define CPU3_HRA_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF88DFC08u)

/** \brief FC0C, CPU3 HR specific multi-count register 1 */
#define CPU3_HRA_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF88DFC0Cu)

/** \brief FC10, CPU3 HR specific multi-count register 2 */
#define CPU3_HRA_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF88DFC10u)

/** \brief FC14, CPU3 HR specific multi-count register 3 */
#define CPU3_HRA_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF88DFC14u)

/** \brief FD00, CPU3 debug status register */
#define CPU3_HRA_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF88DFD00u)

/** \brief FD08, CPU3 external event register */
#define CPU3_HRA_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88DFD08u)

/** \brief FD0C, CPU3 core register access event */
#define CPU3_HRA_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88DFD0Cu)

/** \brief FD10, CPU3 software debug event */
#define CPU3_HRA_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88DFD10u)

/** \brief FD14, CPU3 debug action configuration */
#define CPU3_HRA_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF88DFD14u)

/** \brief FD30, CPU3 trigger accumulator */
#define CPU3_HRA_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF88DFD30u)

/** \brief FD40, CPU3 debug monitor start address */
#define CPU3_HRA_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF88DFD40u)

/** \brief FD44, CPU3 debug context save area pointer */
#define CPU3_HRA_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF88DFD44u)

/** \brief FD48, CPU3 debug trap control */
#define CPU3_HRA_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF88DFD48u)

/** \brief FD4C, CPU3 debug configuration */
#define CPU3_HRA_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF88DFD4Cu)

/** \brief FD50, CPU3 trace configuration */
#define CPU3_HRA_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF88DFD50u)

/** \brief FD54, CPU3 trace filter */
#define CPU3_HRA_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF88DFD54u)

/** \brief FD58, CPU3 trace bandwidth limiter */
#define CPU3_HRA_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF88DFD58u)

/** \brief FD60, CPU3 MCDS performance counter control register */
#define CPU3_HRA_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF88DFD60u)

/** \brief FE00, CPU3 previous context information register */
#define CPU3_HRA_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF88DFE00u)

/** \brief FE04, CPU3 HR specific program status word */
#define CPU3_HRA_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF88DFE04u)

/** \brief FE08, CPU3 program counter */
#define CPU3_HRA_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF88DFE08u)

/** \brief FE14, CPU3 HR specific core configuration register */
#define CPU3_HRA_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF88DFE14u)

/** \brief FE18, CPU3 identification register */
#define CPU3_HRA_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF88DFE18u)

/** \brief FE1C, CPU3 core identification register */
#define CPU3_HRA_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF88DFE1Cu)

/** \brief FE20, CPU3 HR specific base interrupt vector table pointer */
#define CPU3_HRA_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF88DFE20u)

/** \brief FE24, CPU3 HR specific base trap vector table pointer */
#define CPU3_HRA_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF88DFE24u)

/** \brief FE28, CPU3 HR specific interrupt stack pointer */
#define CPU3_HRA_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF88DFE28u)

/** \brief FE2C, CPU3 interrupt control register */
#define CPU3_HRA_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF88DFE2Cu)

/** \brief FE34, CPU3 previous PRS */
#define CPU3_HRA_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF88DFE34u)

/** \brief FE38, CPU3 HR specific free CSA list head pointer */
#define CPU3_HRA_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF88DFE38u)

/** \brief FE3C, CPU3 HR specific free CSA list limit pointer */
#define CPU3_HRA_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF88DFE3Cu)

/** \brief FE40, CPU3 software identification */
#define CPU3_HRA_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF88DFE40u)

/** \brief FE50, CPU3 customer ID register */
#define CPU3_HRA_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF88DFE50u)

/** \brief FE60, CPU3 core boot configuration register */
#define CPU3_HRA_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF88DFE60u)

/** \brief FE64, CPU3 lockstep control register */
#define CPU3_HRA_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF88DFE64u)

/** \brief FE68, CPU3 clock control register */
#define CPU3_HRA_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF88DFE68u)

/** \brief FE6C, CPU3 hardware configuration  */
#define CPU3_HRA_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF88DFE6Cu)

/** \brief FF00, CPU3 data general purpose register 0 */
#define CPU3_D0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF00u)

/** \brief FF04, CPU3 data general purpose register 1 */
#define CPU3_D1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF04u)

/** \brief FF08, CPU3 data general purpose register 2 */
#define CPU3_D2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF08u)

/** \brief FF0C, CPU3 data general purpose register 3 */
#define CPU3_D3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF0Cu)

/** \brief FF10, CPU3 data general purpose register 4 */
#define CPU3_D4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF10u)

/** \brief FF14, CPU3 data general purpose register 5 */
#define CPU3_D5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF14u)

/** \brief FF18, CPU3 data general purpose register 6 */
#define CPU3_D6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF18u)

/** \brief FF1C, CPU3 data general purpose register 7 */
#define CPU3_D7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF1Cu)

/** \brief FF20, CPU3 data general purpose register 8 */
#define CPU3_D8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF20u)

/** \brief FF24, CPU3 data general purpose register 9 */
#define CPU3_D9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF24u)

/** \brief FF28, CPU3 data general purpose register 10 */
#define CPU3_D10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF28u)

/** \brief FF2C, CPU3 data general purpose register 11 */
#define CPU3_D11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF2Cu)

/** \brief FF30, CPU3 data general purpose register 12 */
#define CPU3_D12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF30u)

/** \brief FF34, CPU3 data general purpose register 13 */
#define CPU3_D13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF34u)

/** \brief FF38, CPU3 data general purpose register 14 */
#define CPU3_D14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF38u)

/** \brief FF3C, CPU3 data general purpose register 15 */
#define CPU3_D15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF88DFF3Cu)

/** \brief FF80, CPU3 address general purpose register 0 */
#define CPU3_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF80u)

/** \brief FF84, CPU3 address general purpose register 1 */
#define CPU3_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF84u)

/** \brief FF88, CPU3 address general purpose register 2 */
#define CPU3_A2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF88u)

/** \brief FF8C, CPU3 address general purpose register 3 */
#define CPU3_A3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF8Cu)

/** \brief FF90, CPU3 address general purpose register 4 */
#define CPU3_A4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF90u)

/** \brief FF94, CPU3 address general purpose register 5 */
#define CPU3_A5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF94u)

/** \brief FF98, CPU3 address general purpose register 6 */
#define CPU3_A6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF98u)

/** \brief FF9C, CPU3 address general purpose register 7 */
#define CPU3_A7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFF9Cu)

/** \brief FFA0, CPU3 address general purpose register 8 */
#define CPU3_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFA0u)

/** \brief FFA4, CPU3 address general purpose register 9 */
#define CPU3_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFA4u)

/** \brief FFA8, CPU3 address general purpose register 10 */
#define CPU3_A10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFA8u)

/** \brief FFAC, CPU3 address general purpose register 11 */
#define CPU3_A11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFACu)

/** \brief FFB0, CPU3 address general purpose register 12 */
#define CPU3_A12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFB0u)

/** \brief FFB4, CPU3 address general purpose register 13 */
#define CPU3_A13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFB4u)

/** \brief FFB8, CPU3 address general purpose register 14 */
#define CPU3_A14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFB8u)

/** \brief FFBC, CPU3 address general purpose register 15 */
#define CPU3_A15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88DFFBCu)

/** \brief 1030, CPU3 SRI error generation register */
#define CPU3_HRB_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF88E1030u)

/** \brief 1040, CPU3 lockstep test register */
#define CPU3_HRB_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF88E1040u)

/** \brief 8100, CPU3 data access cacheability register */
#define CPU3_HRB_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF88E8100u)

/** \brief 8104, CPU3 code access cacheability register */
#define CPU3_HRB_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF88E8104u)

/** \brief 8108, CPU3 peripheral space identifier register */
#define CPU3_HRB_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF88E8108u)

/** \brief 9000, CPU3 data control register 2 */
#define CPU3_HRB_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF88E9000u)

/** \brief 9008, CPU3 data control register 1 */
#define CPU3_HRB_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF88E9008u)

/** \brief 900C, CPU3 SIST mode access control register */
#define CPU3_HRB_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF88E900Cu)

/** \brief 9010, CPU3 HR specific data synchronous trap register */
#define CPU3_HRB_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF88E9010u)

/** \brief 9018, CPU3 HR specific data asynchronous trap register */
#define CPU3_HRB_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF88E9018u)

/** \brief 901C, CPU3 HR specific data error address register */
#define CPU3_HRB_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF88E901Cu)

/** \brief 9020, CPU3 data integrity error address register */
#define CPU3_HRB_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88E9020u)

/** \brief 9024, CPU3 data integrity error trap register */
#define CPU3_HRB_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF88E9024u)

/** \brief 9040, CPU3 data memory control register */
#define CPU3_HRB_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF88E9040u)

/** \brief 9200, CPU3 HR specific program synchronous trap register */
#define CPU3_HRB_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF88E9200u)

/** \brief 9204, CPU3 program control 1 */
#define CPU3_HRB_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF88E9204u)

/** \brief 9208, CPU3 program control 2 */
#define CPU3_HRB_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF88E9208u)

/** \brief 920C, CPU3 program control 0 */
#define CPU3_HRB_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF88E920Cu)

/** \brief 9210, CPU3 HR specific program integrity error address register */
#define CPU3_HRB_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88E9210u)

/** \brief 9214, CPU3 HR specific program integrity error trap register */
#define CPU3_HRB_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF88E9214u)

/** \brief 9400, CPU3 compatibility control register */
#define CPU3_HRB_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF88E9400u)

/** \brief A000, CPU3 HR specific trap control register */
#define CPU3_HRB_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF88EA000u)

/** \brief A004, CPU3 HR specific trapping instruction program counter register */
#define CPU3_HRB_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF88EA004u)

/** \brief A008, CPU3 HR specific trapping instruction opcode register */
#define CPU3_HRB_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88EA008u)

/** \brief A010, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRB_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF88EA010u)

/** \brief A014, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRB_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF88EA014u)

/** \brief A018, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRB_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF88EA018u)

/** \brief A01C, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRB_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF88EA01Cu)

/** \brief A020, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRB_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF88EA020u)

/** \brief A024, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRB_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF88EA024u)

/** \brief A030, CPU3 HR specific synchronous trap control register */
#define CPU3_HRB_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF88EA030u)

/** \brief A034, CPU3 HR specific trapping instruction opcode register */
#define CPU3_HRB_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88EA034u)

/** \brief C000, CPU3 HR specific data protection range 0, lower bound register */
#define CPU3_HRB_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC000u)

/** \brief C004, CPU3 HR specific data protection range 0, upper bound register */
#define CPU3_HRB_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC004u)

/** \brief C008, CPU3 HR specific data protection range 1, lower bound register */
#define CPU3_HRB_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC008u)

/** \brief C00C, CPU3 HR specific data protection range 1, upper bound register */
#define CPU3_HRB_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC00Cu)

/** \brief C010, CPU3 HR specific data protection range 2, lower bound register */
#define CPU3_HRB_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC010u)

/** \brief C014, CPU3 HR specific data protection range 2, upper bound register */
#define CPU3_HRB_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC014u)

/** \brief C018, CPU3 HR specific data protection range 3, lower bound register */
#define CPU3_HRB_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC018u)

/** \brief C01C, CPU3 HR specific data protection range 3, upper bound register */
#define CPU3_HRB_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC01Cu)

/** \brief C020, CPU3 HR specific data protection range 4, lower bound register */
#define CPU3_HRB_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC020u)

/** \brief C024, CPU3 HR specific data protection range 4, upper bound register */
#define CPU3_HRB_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC024u)

/** \brief C028, CPU3 HR specific data protection range 5, lower bound register */
#define CPU3_HRB_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC028u)

/** \brief C02C, CPU3 HR specific data protection range 5, upper bound register */
#define CPU3_HRB_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC02Cu)

/** \brief C030, CPU3 HR specific data protection range 6, lower bound register */
#define CPU3_HRB_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC030u)

/** \brief C034, CPU3 HR specific data protection range 6, upper bound register */
#define CPU3_HRB_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC034u)

/** \brief C038, CPU3 HR specific data protection range 7, lower bound register */
#define CPU3_HRB_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC038u)

/** \brief C03C, CPU3 HR specific data protection range 7, upper bound register */
#define CPU3_HRB_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC03Cu)

/** \brief C040, CPU3 HR specific data protection range 8, lower bound register */
#define CPU3_HRB_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC040u)

/** \brief C044, CPU3 HR specific data protection range 8, upper bound register */
#define CPU3_HRB_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC044u)

/** \brief C048, CPU3 HR specific data protection range 9, lower bound register */
#define CPU3_HRB_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC048u)

/** \brief C04C, CPU3 HR specific data protection range 9, upper bound register */
#define CPU3_HRB_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC04Cu)

/** \brief C050, CPU3 HR specific data protection range 10, lower bound register */
#define CPU3_HRB_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC050u)

/** \brief C054, CPU3 HR specific data protection range 10, upper bound register */
#define CPU3_HRB_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC054u)

/** \brief C058, CPU3 HR specific data protection range 11, lower bound register */
#define CPU3_HRB_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC058u)

/** \brief C05C, CPU3 HR specific data protection range 11, upper bound register */
#define CPU3_HRB_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC05Cu)

/** \brief C060, CPU3 HR specific data protection range 12, lower bound register */
#define CPU3_HRB_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC060u)

/** \brief C064, CPU3 HR specific data protection range 12, upper bound register */
#define CPU3_HRB_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC064u)

/** \brief C068, CPU3 HR specific data protection range 13, lower bound register */
#define CPU3_HRB_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC068u)

/** \brief C06C, CPU3 HR specific data protection range 13, upper bound register */
#define CPU3_HRB_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC06Cu)

/** \brief C070, CPU3 HR specific data protection range 14, lower bound register */
#define CPU3_HRB_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC070u)

/** \brief C074, CPU3 HR specific data protection range 14, upper bound register */
#define CPU3_HRB_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC074u)

/** \brief C078, CPU3 HR specific data protection range 15, lower bound register */
#define CPU3_HRB_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC078u)

/** \brief C07C, CPU3 HR specific data protection range 15, upper bound register */
#define CPU3_HRB_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC07Cu)

/** \brief C080, CPU3 HR specific data protection range 16, lower bound register */
#define CPU3_HRB_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC080u)

/** \brief C084, CPU3 HR specific data protection range 16, upper bound register */
#define CPU3_HRB_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC084u)

/** \brief C088, CPU3 HR specific data protection range 17, lower bound register */
#define CPU3_HRB_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC088u)

/** \brief C08C, CPU3 HR specific data protection range 17, upper bound register */
#define CPU3_HRB_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC08Cu)

/** \brief C090, CPU3 HR specific data protection range 18, lower bound register */
#define CPU3_HRB_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC090u)

/** \brief C094, CPU3 HR specific data protection range 18, upper bound register */
#define CPU3_HRB_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC094u)

/** \brief C098, CPU3 HR specific data protection range 19, lower bound register */
#define CPU3_HRB_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC098u)

/** \brief C09C, CPU3 HR specific data protection range 19, upper bound register */
#define CPU3_HRB_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC09Cu)

/** \brief C0A0, CPU3 HR specific data protection range 20, lower bound register */
#define CPU3_HRB_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC0A0u)

/** \brief C0A4, CPU3 HR specific data protection range 20, upper bound register */
#define CPU3_HRB_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC0A4u)

/** \brief C0A8, CPU3 HR specific data protection range 21, lower bound register */
#define CPU3_HRB_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC0A8u)

/** \brief C0AC, CPU3 HR specific data protection range 21, upper bound register */
#define CPU3_HRB_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC0ACu)

/** \brief C0B0, CPU3 HR specific data protection range 22, lower bound register */
#define CPU3_HRB_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC0B0u)

/** \brief C0B4, CPU3 HR specific data protection range 22, upper bound register */
#define CPU3_HRB_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC0B4u)

/** \brief C0B8, CPU3 HR specific data protection range 23, lower bound register */
#define CPU3_HRB_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88EC0B8u)

/** \brief C0BC, CPU3 HR specific data protection range 23, upper bound register */
#define CPU3_HRB_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88EC0BCu)

/** \brief D000, CPU3 HR specific code protection range 0, lower bound register */
#define CPU3_HRB_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED000u)

/** \brief D004, CPU3 HR specific code protection range 0, upper bound register */
#define CPU3_HRB_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED004u)

/** \brief D008, CPU3 HR specific code protection range 1, lower bound register */
#define CPU3_HRB_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED008u)

/** \brief D00C, CPU3 HR specific code protection range 1, upper bound register */
#define CPU3_HRB_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED00Cu)

/** \brief D010, CPU3 HR specific code protection range 2, lower bound register */
#define CPU3_HRB_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED010u)

/** \brief D014, CPU3 HR specific code protection range 2, upper bound register */
#define CPU3_HRB_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED014u)

/** \brief D018, CPU3 HR specific code protection range 3, lower bound register */
#define CPU3_HRB_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED018u)

/** \brief D01C, CPU3 HR specific code protection range 3, upper bound register */
#define CPU3_HRB_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED01Cu)

/** \brief D020, CPU3 HR specific code protection range 4, lower bound register */
#define CPU3_HRB_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED020u)

/** \brief D024, CPU3 HR specific code protection range 4, upper bound register */
#define CPU3_HRB_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED024u)

/** \brief D028, CPU3 HR specific code protection range 5, lower bound register */
#define CPU3_HRB_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED028u)

/** \brief D02C, CPU3 HR specific code protection range 5, upper bound register */
#define CPU3_HRB_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED02Cu)

/** \brief D030, CPU3 HR specific code protection range 6, lower bound register */
#define CPU3_HRB_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED030u)

/** \brief D034, CPU3 HR specific code protection range 6, upper bound register */
#define CPU3_HRB_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED034u)

/** \brief D038, CPU3 HR specific code protection range 7, lower bound register */
#define CPU3_HRB_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED038u)

/** \brief D03C, CPU3 HR specific code protection range 7, upper bound register */
#define CPU3_HRB_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED03Cu)

/** \brief D040, CPU3 HR specific code protection range 8, lower bound register */
#define CPU3_HRB_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED040u)

/** \brief D044, CPU3 HR specific code protection range 8, upper bound register */
#define CPU3_HRB_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED044u)

/** \brief D048, CPU3 HR specific code protection range 9, lower bound register */
#define CPU3_HRB_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED048u)

/** \brief D04C, CPU3 HR specific code protection range 9, upper bound register */
#define CPU3_HRB_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED04Cu)

/** \brief D050, CPU3 HR specific code protection range 10, lower bound register */
#define CPU3_HRB_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED050u)

/** \brief D054, CPU3 HR specific code protection range 10, upper bound register */
#define CPU3_HRB_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED054u)

/** \brief D058, CPU3 HR specific code protection range 11, lower bound register */
#define CPU3_HRB_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED058u)

/** \brief D05C, CPU3 HR specific code protection range 11, upper bound register */
#define CPU3_HRB_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED05Cu)

/** \brief D060, CPU3 HR specific code protection range 12, lower bound register */
#define CPU3_HRB_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED060u)

/** \brief D064, CPU3 HR specific code protection range 12, upper bound register */
#define CPU3_HRB_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED064u)

/** \brief D068, CPU3 HR specific code protection range 13, lower bound register */
#define CPU3_HRB_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED068u)

/** \brief D06C, CPU3 HR specific code protection range 13, upper bound register */
#define CPU3_HRB_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED06Cu)

/** \brief D070, CPU3 HR specific code protection range 14, lower bound register */
#define CPU3_HRB_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED070u)

/** \brief D074, CPU3 HR specific code protection range 14, upper bound register */
#define CPU3_HRB_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED074u)

/** \brief D078, CPU3 HR specific code protection range 15, lower bound register */
#define CPU3_HRB_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88ED078u)

/** \brief D07C, CPU3 HR specific code protection range 15, upper bound register */
#define CPU3_HRB_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88ED07Cu)

/** \brief E000, CPU3 HR specific code protection execute enable register set 0 */
#define CPU3_HRB_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE000u)

/** \brief E004, CPU3 HR specific code protection execute enable register set 1 */
#define CPU3_HRB_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE004u)

/** \brief E008, CPU3 HR specific code protection execute enable register set 2 */
#define CPU3_HRB_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE008u)

/** \brief E00C, CPU3 HR specific code protection execute enable register set 3 */
#define CPU3_HRB_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE00Cu)

/** \brief E010, CPU3 HR specific data protection read enable register set 0 */
#define CPU3_HRB_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE010u)

/** \brief E014, CPU3 HR specific data protection read enable register set 1 */
#define CPU3_HRB_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE014u)

/** \brief E018, CPU3 HR specific data protection read enable register set 2 */
#define CPU3_HRB_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE018u)

/** \brief E01C, CPU3 HR specific data protection read enable register set 3 */
#define CPU3_HRB_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE01Cu)

/** \brief E020, CPU3 HR specific data protection write enable register set 0 */
#define CPU3_HRB_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE020u)

/** \brief E024, CPU3 HR specific data protection write enable register set 1 */
#define CPU3_HRB_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE024u)

/** \brief E028, CPU3 HR specific data protection write enable register set 2 */
#define CPU3_HRB_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE028u)

/** \brief E02C, CPU3 HR specific data protection write enable register set 3 */
#define CPU3_HRB_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE02Cu)

/** \brief E040, CPU3 HR specific code protection execute enable register set 4 */
#define CPU3_HRB_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE040u)

/** \brief E044, CPU3 HR specific code protection execute enable register set 5 */
#define CPU3_HRB_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE044u)

/** \brief E048, CPU3 HR specific code protection execute enable register set 6 */
#define CPU3_HRB_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE048u)

/** \brief E04C, CPU3 HR specific code protection execute enable register set 7 */
#define CPU3_HRB_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88EE04Cu)

/** \brief E050, CPU3 HR specific data protection read enable register set 4 */
#define CPU3_HRB_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE050u)

/** \brief E054, CPU3 HR specific data protection read enable register set 5 */
#define CPU3_HRB_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE054u)

/** \brief E058, CPU3 HR specific data protection read enable register set 6 */
#define CPU3_HRB_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE058u)

/** \brief E05C, CPU3 HR specific data protection read enable register set 7 */
#define CPU3_HRB_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88EE05Cu)

/** \brief E060, CPU3 HR specific data protection write enable register set 4 */
#define CPU3_HRB_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE060u)

/** \brief E064, CPU3 HR specific data protection write enable register set 5 */
#define CPU3_HRB_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE064u)

/** \brief E068, CPU3 HR specific data protection write enable register set 6 */
#define CPU3_HRB_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE068u)

/** \brief E06C, CPU3 HR specific data protection write enable register set 7 */
#define CPU3_HRB_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88EE06Cu)

/** \brief E400, CPU3 HR specific temporal protection system control register */
#define CPU3_HRB_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF88EE400u)

/** \brief E404, CPU3 HR specific temporal protection system timer register 0 */
#define CPU3_HRB_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88EE404u)

/** \brief E408, CPU3 HR specific temporal protection system timer register 1 */
#define CPU3_HRB_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88EE408u)

/** \brief E40C, CPU3 HR specific temporal protection system timer register 2 */
#define CPU3_HRB_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88EE40Cu)

/** \brief F000, CPU3 trigger event 0 */
#define CPU3_HRB_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF000u)
/** Alias (User Manual Name) for CPU3_HRB_TR0_EVT */
#define CPU3_HRB_TR0EVT (CPU3_HRB_TR0_EVT)

/** \brief F004, CPU3 trigger address 0 */
#define CPU3_HRB_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF004u)
/** Alias (User Manual Name) for CPU3_HRB_TR0_ADR */
#define CPU3_HRB_TR0ADR (CPU3_HRB_TR0_ADR)

/** \brief F008, CPU3 trigger event 1 */
#define CPU3_HRB_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF008u)
/** Alias (User Manual Name) for CPU3_HRB_TR1_EVT */
#define CPU3_HRB_TR1EVT (CPU3_HRB_TR1_EVT)

/** \brief F00C, CPU3 trigger address 1 */
#define CPU3_HRB_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF00Cu)
/** Alias (User Manual Name) for CPU3_HRB_TR1_ADR */
#define CPU3_HRB_TR1ADR (CPU3_HRB_TR1_ADR)

/** \brief F010, CPU3 trigger event 2 */
#define CPU3_HRB_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF010u)
/** Alias (User Manual Name) for CPU3_HRB_TR2_EVT */
#define CPU3_HRB_TR2EVT (CPU3_HRB_TR2_EVT)

/** \brief F014, CPU3 trigger address 2 */
#define CPU3_HRB_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF014u)
/** Alias (User Manual Name) for CPU3_HRB_TR2_ADR */
#define CPU3_HRB_TR2ADR (CPU3_HRB_TR2_ADR)

/** \brief F018, CPU3 trigger event 3 */
#define CPU3_HRB_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF018u)
/** Alias (User Manual Name) for CPU3_HRB_TR3_EVT */
#define CPU3_HRB_TR3EVT (CPU3_HRB_TR3_EVT)

/** \brief F01C, CPU3 trigger address 3 */
#define CPU3_HRB_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF01Cu)
/** Alias (User Manual Name) for CPU3_HRB_TR3_ADR */
#define CPU3_HRB_TR3ADR (CPU3_HRB_TR3_ADR)

/** \brief F020, CPU3 trigger event 4 */
#define CPU3_HRB_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF020u)
/** Alias (User Manual Name) for CPU3_HRB_TR4_EVT */
#define CPU3_HRB_TR4EVT (CPU3_HRB_TR4_EVT)

/** \brief F024, CPU3 trigger address 4 */
#define CPU3_HRB_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF024u)
/** Alias (User Manual Name) for CPU3_HRB_TR4_ADR */
#define CPU3_HRB_TR4ADR (CPU3_HRB_TR4_ADR)

/** \brief F028, CPU3 trigger event 5 */
#define CPU3_HRB_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF028u)
/** Alias (User Manual Name) for CPU3_HRB_TR5_EVT */
#define CPU3_HRB_TR5EVT (CPU3_HRB_TR5_EVT)

/** \brief F02C, CPU3 trigger address 5 */
#define CPU3_HRB_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF02Cu)
/** Alias (User Manual Name) for CPU3_HRB_TR5_ADR */
#define CPU3_HRB_TR5ADR (CPU3_HRB_TR5_ADR)

/** \brief F030, CPU3 trigger event 6 */
#define CPU3_HRB_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF030u)
/** Alias (User Manual Name) for CPU3_HRB_TR6_EVT */
#define CPU3_HRB_TR6EVT (CPU3_HRB_TR6_EVT)

/** \brief F034, CPU3 trigger address 6 */
#define CPU3_HRB_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF034u)
/** Alias (User Manual Name) for CPU3_HRB_TR6_ADR */
#define CPU3_HRB_TR6ADR (CPU3_HRB_TR6_ADR)

/** \brief F038, CPU3 trigger event 7 */
#define CPU3_HRB_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88EF038u)
/** Alias (User Manual Name) for CPU3_HRB_TR7_EVT */
#define CPU3_HRB_TR7EVT (CPU3_HRB_TR7_EVT)

/** \brief F03C, CPU3 trigger address 7 */
#define CPU3_HRB_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88EF03Cu)
/** Alias (User Manual Name) for CPU3_HRB_TR7_ADR */
#define CPU3_HRB_TR7ADR (CPU3_HRB_TR7_ADR)

/** \brief FC00, CPU3 HR specific counter control */
#define CPU3_HRB_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF88EFC00u)

/** \brief FC04, CPU3 HR specific CPU clock cycle count */
#define CPU3_HRB_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF88EFC04u)

/** \brief FC08, CPU3 HR specific instruction count */
#define CPU3_HRB_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF88EFC08u)

/** \brief FC0C, CPU3 HR specific multi-count register 1 */
#define CPU3_HRB_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF88EFC0Cu)

/** \brief FC10, CPU3 HR specific multi-count register 2 */
#define CPU3_HRB_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF88EFC10u)

/** \brief FC14, CPU3 HR specific multi-count register 3 */
#define CPU3_HRB_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF88EFC14u)

/** \brief FD00, CPU3 debug status register */
#define CPU3_HRB_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF88EFD00u)

/** \brief FD08, CPU3 external event register */
#define CPU3_HRB_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88EFD08u)

/** \brief FD0C, CPU3 core register access event */
#define CPU3_HRB_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88EFD0Cu)

/** \brief FD10, CPU3 software debug event */
#define CPU3_HRB_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88EFD10u)

/** \brief FD14, CPU3 debug action configuration */
#define CPU3_HRB_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF88EFD14u)

/** \brief FD30, CPU3 trigger accumulator */
#define CPU3_HRB_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF88EFD30u)

/** \brief FD40, CPU3 debug monitor start address */
#define CPU3_HRB_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF88EFD40u)

/** \brief FD44, CPU3 debug context save area pointer */
#define CPU3_HRB_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF88EFD44u)

/** \brief FD48, CPU3 debug trap control */
#define CPU3_HRB_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF88EFD48u)

/** \brief FD4C, CPU3 debug configuration */
#define CPU3_HRB_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF88EFD4Cu)

/** \brief FD50, CPU3 trace configuration */
#define CPU3_HRB_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF88EFD50u)

/** \brief FD54, CPU3 trace filter */
#define CPU3_HRB_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF88EFD54u)

/** \brief FD58, CPU3 trace bandwidth limiter */
#define CPU3_HRB_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF88EFD58u)

/** \brief FD60, CPU3 MCDS performance counter control register */
#define CPU3_HRB_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF88EFD60u)

/** \brief FE00, CPU3 previous context information register */
#define CPU3_HRB_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF88EFE00u)

/** \brief FE04, CPU3 HR specific program status word */
#define CPU3_HRB_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF88EFE04u)

/** \brief FE08, CPU3 program counter */
#define CPU3_HRB_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF88EFE08u)

/** \brief FE14, CPU3 HR specific core configuration register */
#define CPU3_HRB_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF88EFE14u)

/** \brief FE18, CPU3 identification register */
#define CPU3_HRB_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF88EFE18u)

/** \brief FE1C, CPU3 core identification register */
#define CPU3_HRB_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF88EFE1Cu)

/** \brief FE20, CPU3 HR specific base interrupt vector table pointer */
#define CPU3_HRB_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF88EFE20u)

/** \brief FE24, CPU3 HR specific base trap vector table pointer */
#define CPU3_HRB_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF88EFE24u)

/** \brief FE28, CPU3 HR specific interrupt stack pointer */
#define CPU3_HRB_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF88EFE28u)

/** \brief FE2C, CPU3 interrupt control register */
#define CPU3_HRB_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF88EFE2Cu)

/** \brief FE34, CPU3 previous PRS */
#define CPU3_HRB_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF88EFE34u)

/** \brief FE38, CPU3 HR specific free CSA list head pointer */
#define CPU3_HRB_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF88EFE38u)

/** \brief FE3C, CPU3 HR specific free CSA list limit pointer */
#define CPU3_HRB_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF88EFE3Cu)

/** \brief FE40, CPU3 software identification */
#define CPU3_HRB_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF88EFE40u)

/** \brief FE50, CPU3 customer ID register */
#define CPU3_HRB_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF88EFE50u)

/** \brief FE60, CPU3 core boot configuration register */
#define CPU3_HRB_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF88EFE60u)

/** \brief FE64, CPU3 lockstep control register */
#define CPU3_HRB_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF88EFE64u)

/** \brief FE68, CPU3 clock control register */
#define CPU3_HRB_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF88EFE68u)

/** \brief FE6C, CPU3 hardware configuration  */
#define CPU3_HRB_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF88EFE6Cu)

/** \brief FF80, CPU3 HR specific address general purpose register 0 */
#define CPU3_HRB_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88EFF80u)

/** \brief FF84, CPU3 HR specific address general purpose register 1 */
#define CPU3_HRB_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88EFF84u)

/** \brief FFA0, CPU3 HR specific address general purpose register 8 */
#define CPU3_HRB_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88EFFA0u)

/** \brief FFA4, CPU3 HR specific address general purpose register 9 */
#define CPU3_HRB_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88EFFA4u)

/** \brief 1030, CPU3 SRI error generation register */
#define CPU3_HRHV_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF88F1030u)

/** \brief 1040, CPU3 lockstep test register */
#define CPU3_HRHV_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF88F1040u)

/** \brief 8100, CPU3 data access cacheability register */
#define CPU3_HRHV_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF88F8100u)

/** \brief 8104, CPU3 code access cacheability register */
#define CPU3_HRHV_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF88F8104u)

/** \brief 8108, CPU3 peripheral space identifier register */
#define CPU3_HRHV_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF88F8108u)

/** \brief 9000, CPU3 data control register 2 */
#define CPU3_HRHV_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF88F9000u)

/** \brief 9008, CPU3 data control register 1 */
#define CPU3_HRHV_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF88F9008u)

/** \brief 900C, CPU3 SIST mode access control register */
#define CPU3_HRHV_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF88F900Cu)

/** \brief 9010, CPU3 HR specific data synchronous trap register */
#define CPU3_HRHV_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF88F9010u)

/** \brief 9018, CPU3 HR specific data asynchronous trap register */
#define CPU3_HRHV_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF88F9018u)

/** \brief 901C, CPU3 HR specific data error address register */
#define CPU3_HRHV_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF88F901Cu)

/** \brief 9020, CPU3 data integrity error address register */
#define CPU3_HRHV_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88F9020u)

/** \brief 9024, CPU3 data integrity error trap register */
#define CPU3_HRHV_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF88F9024u)

/** \brief 9040, CPU3 data memory control register */
#define CPU3_HRHV_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF88F9040u)

/** \brief 9200, CPU3 HR specific program synchronous trap register */
#define CPU3_HRHV_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF88F9200u)

/** \brief 9204, CPU3 program control 1 */
#define CPU3_HRHV_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF88F9204u)

/** \brief 9208, CPU3 program control 2 */
#define CPU3_HRHV_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF88F9208u)

/** \brief 920C, CPU3 program control 0 */
#define CPU3_HRHV_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF88F920Cu)

/** \brief 9210, CPU3 HR specific program integrity error address register */
#define CPU3_HRHV_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF88F9210u)

/** \brief 9214, CPU3 HR specific program integrity error trap register */
#define CPU3_HRHV_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF88F9214u)

/** \brief 9400, CPU3 compatibility control register */
#define CPU3_HRHV_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF88F9400u)

/** \brief A000, CPU3 HR specific trap control register */
#define CPU3_HRHV_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF88FA000u)

/** \brief A004, CPU3 HR specific trapping instruction program counter register */
#define CPU3_HRHV_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF88FA004u)

/** \brief A008, CPU3 HR specific trapping instruction opcode register */
#define CPU3_HRHV_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88FA008u)

/** \brief A010, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRHV_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF88FA010u)

/** \brief A014, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRHV_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF88FA014u)

/** \brief A018, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRHV_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF88FA018u)

/** \brief A01C, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRHV_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF88FA01Cu)

/** \brief A020, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRHV_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF88FA020u)

/** \brief A024, CPU3 HR specific trapping instruction operand register */
#define CPU3_HRHV_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF88FA024u)

/** \brief A030, CPU3 HR specific synchronous trap control register */
#define CPU3_HRHV_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF88FA030u)

/** \brief A034, CPU3 HR specific trapping instruction opcode register */
#define CPU3_HRHV_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF88FA034u)

/** \brief B000, CPU3 virtualization control register 0 */
#define CPU3_HRHV_VCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON0*)0xF88FB000u)

/** \brief B004, CPU3 virtualization control register 1 */
#define CPU3_HRHV_VCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON1*)0xF88FB004u)

/** \brief B008, CPU3 virtualization control register 2 */
#define CPU3_HRHV_VCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON2*)0xF88FB008u)

/** \brief B010, CPU3 base hypervisor vector table pointer */
#define CPU3_HRHV_BHV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BHV*)0xF88FB010u)

/** \brief B100, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB100u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR0 */
#define CPU3_HRHV_VM0_ICR (CPU3_HRHV_VM_ICR0)

/** \brief B104, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB104u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR1 */
#define CPU3_HRHV_VM1_ICR (CPU3_HRHV_VM_ICR1)

/** \brief B108, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB108u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR2 */
#define CPU3_HRHV_VM2_ICR (CPU3_HRHV_VM_ICR2)

/** \brief B10C, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB10Cu)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR3 */
#define CPU3_HRHV_VM3_ICR (CPU3_HRHV_VM_ICR3)

/** \brief B110, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB110u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR4 */
#define CPU3_HRHV_VM4_ICR (CPU3_HRHV_VM_ICR4)

/** \brief B114, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB114u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR5 */
#define CPU3_HRHV_VM5_ICR (CPU3_HRHV_VM_ICR5)

/** \brief B118, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB118u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR6 */
#define CPU3_HRHV_VM6_ICR (CPU3_HRHV_VM_ICR6)

/** \brief B11C, CPU3 Virtual machine n interrupt state */
#define CPU3_HRHV_VM_ICR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF88FB11Cu)
/** Alias (User Manual Name) for CPU3_HRHV_VM_ICR7 */
#define CPU3_HRHV_VM7_ICR (CPU3_HRHV_VM_ICR7)

/** \brief B200, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB200u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH0 */
#define CPU3_HRHV_VM0_PETHRESH (CPU3_HRHV_VM_PETHRESH0)

/** \brief B204, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB204u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH1 */
#define CPU3_HRHV_VM1_PETHRESH (CPU3_HRHV_VM_PETHRESH1)

/** \brief B208, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB208u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH2 */
#define CPU3_HRHV_VM2_PETHRESH (CPU3_HRHV_VM_PETHRESH2)

/** \brief B20C, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB20Cu)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH3 */
#define CPU3_HRHV_VM3_PETHRESH (CPU3_HRHV_VM_PETHRESH3)

/** \brief B210, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB210u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH4 */
#define CPU3_HRHV_VM4_PETHRESH (CPU3_HRHV_VM_PETHRESH4)

/** \brief B214, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB214u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH5 */
#define CPU3_HRHV_VM5_PETHRESH (CPU3_HRHV_VM_PETHRESH5)

/** \brief B218, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB218u)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH6 */
#define CPU3_HRHV_VM6_PETHRESH (CPU3_HRHV_VM_PETHRESH6)

/** \brief B21C, CPU3 Virtual machine n pre-emption threshold */
#define CPU3_HRHV_VM_PETHRESH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF88FB21Cu)
/** Alias (User Manual Name) for CPU3_HRHV_VM_PETHRESH7 */
#define CPU3_HRHV_VM7_PETHRESH (CPU3_HRHV_VM_PETHRESH7)

/** \brief C000, CPU3 HR specific data protection range 0, lower bound register */
#define CPU3_HRHV_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC000u)

/** \brief C004, CPU3 HR specific data protection range 0, upper bound register */
#define CPU3_HRHV_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC004u)

/** \brief C008, CPU3 HR specific data protection range 1, lower bound register */
#define CPU3_HRHV_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC008u)

/** \brief C00C, CPU3 HR specific data protection range 1, upper bound register */
#define CPU3_HRHV_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC00Cu)

/** \brief C010, CPU3 HR specific data protection range 2, lower bound register */
#define CPU3_HRHV_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC010u)

/** \brief C014, CPU3 HR specific data protection range 2, upper bound register */
#define CPU3_HRHV_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC014u)

/** \brief C018, CPU3 HR specific data protection range 3, lower bound register */
#define CPU3_HRHV_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC018u)

/** \brief C01C, CPU3 HR specific data protection range 3, upper bound register */
#define CPU3_HRHV_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC01Cu)

/** \brief C020, CPU3 HR specific data protection range 4, lower bound register */
#define CPU3_HRHV_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC020u)

/** \brief C024, CPU3 HR specific data protection range 4, upper bound register */
#define CPU3_HRHV_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC024u)

/** \brief C028, CPU3 HR specific data protection range 5, lower bound register */
#define CPU3_HRHV_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC028u)

/** \brief C02C, CPU3 HR specific data protection range 5, upper bound register */
#define CPU3_HRHV_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC02Cu)

/** \brief C030, CPU3 HR specific data protection range 6, lower bound register */
#define CPU3_HRHV_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC030u)

/** \brief C034, CPU3 HR specific data protection range 6, upper bound register */
#define CPU3_HRHV_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC034u)

/** \brief C038, CPU3 HR specific data protection range 7, lower bound register */
#define CPU3_HRHV_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC038u)

/** \brief C03C, CPU3 HR specific data protection range 7, upper bound register */
#define CPU3_HRHV_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC03Cu)

/** \brief C040, CPU3 HR specific data protection range 8, lower bound register */
#define CPU3_HRHV_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC040u)

/** \brief C044, CPU3 HR specific data protection range 8, upper bound register */
#define CPU3_HRHV_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC044u)

/** \brief C048, CPU3 HR specific data protection range 9, lower bound register */
#define CPU3_HRHV_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC048u)

/** \brief C04C, CPU3 HR specific data protection range 9, upper bound register */
#define CPU3_HRHV_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC04Cu)

/** \brief C050, CPU3 HR specific data protection range 10, lower bound register */
#define CPU3_HRHV_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC050u)

/** \brief C054, CPU3 HR specific data protection range 10, upper bound register */
#define CPU3_HRHV_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC054u)

/** \brief C058, CPU3 HR specific data protection range 11, lower bound register */
#define CPU3_HRHV_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC058u)

/** \brief C05C, CPU3 HR specific data protection range 11, upper bound register */
#define CPU3_HRHV_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC05Cu)

/** \brief C060, CPU3 HR specific data protection range 12, lower bound register */
#define CPU3_HRHV_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC060u)

/** \brief C064, CPU3 HR specific data protection range 12, upper bound register */
#define CPU3_HRHV_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC064u)

/** \brief C068, CPU3 HR specific data protection range 13, lower bound register */
#define CPU3_HRHV_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC068u)

/** \brief C06C, CPU3 HR specific data protection range 13, upper bound register */
#define CPU3_HRHV_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC06Cu)

/** \brief C070, CPU3 HR specific data protection range 14, lower bound register */
#define CPU3_HRHV_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC070u)

/** \brief C074, CPU3 HR specific data protection range 14, upper bound register */
#define CPU3_HRHV_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC074u)

/** \brief C078, CPU3 HR specific data protection range 15, lower bound register */
#define CPU3_HRHV_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC078u)

/** \brief C07C, CPU3 HR specific data protection range 15, upper bound register */
#define CPU3_HRHV_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC07Cu)

/** \brief C080, CPU3 HR specific data protection range 16, lower bound register */
#define CPU3_HRHV_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC080u)

/** \brief C084, CPU3 HR specific data protection range 16, upper bound register */
#define CPU3_HRHV_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC084u)

/** \brief C088, CPU3 HR specific data protection range 17, lower bound register */
#define CPU3_HRHV_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC088u)

/** \brief C08C, CPU3 HR specific data protection range 17, upper bound register */
#define CPU3_HRHV_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC08Cu)

/** \brief C090, CPU3 HR specific data protection range 18, lower bound register */
#define CPU3_HRHV_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC090u)

/** \brief C094, CPU3 HR specific data protection range 18, upper bound register */
#define CPU3_HRHV_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC094u)

/** \brief C098, CPU3 HR specific data protection range 19, lower bound register */
#define CPU3_HRHV_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC098u)

/** \brief C09C, CPU3 HR specific data protection range 19, upper bound register */
#define CPU3_HRHV_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC09Cu)

/** \brief C0A0, CPU3 HR specific data protection range 20, lower bound register */
#define CPU3_HRHV_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC0A0u)

/** \brief C0A4, CPU3 HR specific data protection range 20, upper bound register */
#define CPU3_HRHV_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC0A4u)

/** \brief C0A8, CPU3 HR specific data protection range 21, lower bound register */
#define CPU3_HRHV_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC0A8u)

/** \brief C0AC, CPU3 HR specific data protection range 21, upper bound register */
#define CPU3_HRHV_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC0ACu)

/** \brief C0B0, CPU3 HR specific data protection range 22, lower bound register */
#define CPU3_HRHV_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC0B0u)

/** \brief C0B4, CPU3 HR specific data protection range 22, upper bound register */
#define CPU3_HRHV_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC0B4u)

/** \brief C0B8, CPU3 HR specific data protection range 23, lower bound register */
#define CPU3_HRHV_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF88FC0B8u)

/** \brief C0BC, CPU3 HR specific data protection range 23, upper bound register */
#define CPU3_HRHV_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF88FC0BCu)

/** \brief D000, CPU3 HR specific code protection range 0, lower bound register */
#define CPU3_HRHV_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD000u)

/** \brief D004, CPU3 HR specific code protection range 0, upper bound register */
#define CPU3_HRHV_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD004u)

/** \brief D008, CPU3 HR specific code protection range 1, lower bound register */
#define CPU3_HRHV_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD008u)

/** \brief D00C, CPU3 HR specific code protection range 1, upper bound register */
#define CPU3_HRHV_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD00Cu)

/** \brief D010, CPU3 HR specific code protection range 2, lower bound register */
#define CPU3_HRHV_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD010u)

/** \brief D014, CPU3 HR specific code protection range 2, upper bound register */
#define CPU3_HRHV_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD014u)

/** \brief D018, CPU3 HR specific code protection range 3, lower bound register */
#define CPU3_HRHV_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD018u)

/** \brief D01C, CPU3 HR specific code protection range 3, upper bound register */
#define CPU3_HRHV_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD01Cu)

/** \brief D020, CPU3 HR specific code protection range 4, lower bound register */
#define CPU3_HRHV_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD020u)

/** \brief D024, CPU3 HR specific code protection range 4, upper bound register */
#define CPU3_HRHV_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD024u)

/** \brief D028, CPU3 HR specific code protection range 5, lower bound register */
#define CPU3_HRHV_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD028u)

/** \brief D02C, CPU3 HR specific code protection range 5, upper bound register */
#define CPU3_HRHV_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD02Cu)

/** \brief D030, CPU3 HR specific code protection range 6, lower bound register */
#define CPU3_HRHV_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD030u)

/** \brief D034, CPU3 HR specific code protection range 6, upper bound register */
#define CPU3_HRHV_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD034u)

/** \brief D038, CPU3 HR specific code protection range 7, lower bound register */
#define CPU3_HRHV_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD038u)

/** \brief D03C, CPU3 HR specific code protection range 7, upper bound register */
#define CPU3_HRHV_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD03Cu)

/** \brief D040, CPU3 HR specific code protection range 8, lower bound register */
#define CPU3_HRHV_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD040u)

/** \brief D044, CPU3 HR specific code protection range 8, upper bound register */
#define CPU3_HRHV_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD044u)

/** \brief D048, CPU3 HR specific code protection range 9, lower bound register */
#define CPU3_HRHV_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD048u)

/** \brief D04C, CPU3 HR specific code protection range 9, upper bound register */
#define CPU3_HRHV_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD04Cu)

/** \brief D050, CPU3 HR specific code protection range 10, lower bound register */
#define CPU3_HRHV_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD050u)

/** \brief D054, CPU3 HR specific code protection range 10, upper bound register */
#define CPU3_HRHV_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD054u)

/** \brief D058, CPU3 HR specific code protection range 11, lower bound register */
#define CPU3_HRHV_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD058u)

/** \brief D05C, CPU3 HR specific code protection range 11, upper bound register */
#define CPU3_HRHV_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD05Cu)

/** \brief D060, CPU3 HR specific code protection range 12, lower bound register */
#define CPU3_HRHV_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD060u)

/** \brief D064, CPU3 HR specific code protection range 12, upper bound register */
#define CPU3_HRHV_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD064u)

/** \brief D068, CPU3 HR specific code protection range 13, lower bound register */
#define CPU3_HRHV_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD068u)

/** \brief D06C, CPU3 HR specific code protection range 13, upper bound register */
#define CPU3_HRHV_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD06Cu)

/** \brief D070, CPU3 HR specific code protection range 14, lower bound register */
#define CPU3_HRHV_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD070u)

/** \brief D074, CPU3 HR specific code protection range 14, upper bound register */
#define CPU3_HRHV_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD074u)

/** \brief D078, CPU3 HR specific code protection range 15, lower bound register */
#define CPU3_HRHV_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF88FD078u)

/** \brief D07C, CPU3 HR specific code protection range 15, upper bound register */
#define CPU3_HRHV_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF88FD07Cu)

/** \brief E000, CPU3 HR specific code protection execute enable register set 0 */
#define CPU3_HRHV_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE000u)

/** \brief E004, CPU3 HR specific code protection execute enable register set 1 */
#define CPU3_HRHV_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE004u)

/** \brief E008, CPU3 HR specific code protection execute enable register set 2 */
#define CPU3_HRHV_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE008u)

/** \brief E00C, CPU3 HR specific code protection execute enable register set 3 */
#define CPU3_HRHV_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE00Cu)

/** \brief E010, CPU3 HR specific data protection read enable register set 0 */
#define CPU3_HRHV_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE010u)

/** \brief E014, CPU3 HR specific data protection read enable register set 1 */
#define CPU3_HRHV_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE014u)

/** \brief E018, CPU3 HR specific data protection read enable register set 2 */
#define CPU3_HRHV_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE018u)

/** \brief E01C, CPU3 HR specific data protection read enable register set 3 */
#define CPU3_HRHV_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE01Cu)

/** \brief E020, CPU3 HR specific data protection write enable register set 0 */
#define CPU3_HRHV_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE020u)

/** \brief E024, CPU3 HR specific data protection write enable register set 1 */
#define CPU3_HRHV_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE024u)

/** \brief E028, CPU3 HR specific data protection write enable register set 2 */
#define CPU3_HRHV_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE028u)

/** \brief E02C, CPU3 HR specific data protection write enable register set 3 */
#define CPU3_HRHV_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE02Cu)

/** \brief E040, CPU3 HR specific code protection execute enable register set 4 */
#define CPU3_HRHV_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE040u)

/** \brief E044, CPU3 HR specific code protection execute enable register set 5 */
#define CPU3_HRHV_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE044u)

/** \brief E048, CPU3 HR specific code protection execute enable register set 6 */
#define CPU3_HRHV_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE048u)

/** \brief E04C, CPU3 HR specific code protection execute enable register set 7 */
#define CPU3_HRHV_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF88FE04Cu)

/** \brief E050, CPU3 HR specific data protection read enable register set 4 */
#define CPU3_HRHV_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE050u)

/** \brief E054, CPU3 HR specific data protection read enable register set 5 */
#define CPU3_HRHV_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE054u)

/** \brief E058, CPU3 HR specific data protection read enable register set 6 */
#define CPU3_HRHV_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE058u)

/** \brief E05C, CPU3 HR specific data protection read enable register set 7 */
#define CPU3_HRHV_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF88FE05Cu)

/** \brief E060, CPU3 HR specific data protection write enable register set 4 */
#define CPU3_HRHV_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE060u)

/** \brief E064, CPU3 HR specific data protection write enable register set 5 */
#define CPU3_HRHV_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE064u)

/** \brief E068, CPU3 HR specific data protection write enable register set 6 */
#define CPU3_HRHV_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE068u)

/** \brief E06C, CPU3 HR specific data protection write enable register set 7 */
#define CPU3_HRHV_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF88FE06Cu)

/** \brief E400, CPU3 HR specific temporal protection system control register */
#define CPU3_HRHV_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF88FE400u)

/** \brief E404, CPU3 HR specific temporal protection system timer register 0 */
#define CPU3_HRHV_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88FE404u)

/** \brief E408, CPU3 HR specific temporal protection system timer register 1 */
#define CPU3_HRHV_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88FE408u)

/** \brief E40C, CPU3 HR specific temporal protection system timer register 2 */
#define CPU3_HRHV_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF88FE40Cu)

/** \brief F000, CPU3 trigger event 0 */
#define CPU3_HRHV_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF000u)
/** Alias (User Manual Name) for CPU3_HRHV_TR0_EVT */
#define CPU3_HRHV_TR0EVT (CPU3_HRHV_TR0_EVT)

/** \brief F004, CPU3 trigger address 0 */
#define CPU3_HRHV_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF004u)
/** Alias (User Manual Name) for CPU3_HRHV_TR0_ADR */
#define CPU3_HRHV_TR0ADR (CPU3_HRHV_TR0_ADR)

/** \brief F008, CPU3 trigger event 1 */
#define CPU3_HRHV_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF008u)
/** Alias (User Manual Name) for CPU3_HRHV_TR1_EVT */
#define CPU3_HRHV_TR1EVT (CPU3_HRHV_TR1_EVT)

/** \brief F00C, CPU3 trigger address 1 */
#define CPU3_HRHV_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF00Cu)
/** Alias (User Manual Name) for CPU3_HRHV_TR1_ADR */
#define CPU3_HRHV_TR1ADR (CPU3_HRHV_TR1_ADR)

/** \brief F010, CPU3 trigger event 2 */
#define CPU3_HRHV_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF010u)
/** Alias (User Manual Name) for CPU3_HRHV_TR2_EVT */
#define CPU3_HRHV_TR2EVT (CPU3_HRHV_TR2_EVT)

/** \brief F014, CPU3 trigger address 2 */
#define CPU3_HRHV_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF014u)
/** Alias (User Manual Name) for CPU3_HRHV_TR2_ADR */
#define CPU3_HRHV_TR2ADR (CPU3_HRHV_TR2_ADR)

/** \brief F018, CPU3 trigger event 3 */
#define CPU3_HRHV_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF018u)
/** Alias (User Manual Name) for CPU3_HRHV_TR3_EVT */
#define CPU3_HRHV_TR3EVT (CPU3_HRHV_TR3_EVT)

/** \brief F01C, CPU3 trigger address 3 */
#define CPU3_HRHV_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF01Cu)
/** Alias (User Manual Name) for CPU3_HRHV_TR3_ADR */
#define CPU3_HRHV_TR3ADR (CPU3_HRHV_TR3_ADR)

/** \brief F020, CPU3 trigger event 4 */
#define CPU3_HRHV_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF020u)
/** Alias (User Manual Name) for CPU3_HRHV_TR4_EVT */
#define CPU3_HRHV_TR4EVT (CPU3_HRHV_TR4_EVT)

/** \brief F024, CPU3 trigger address 4 */
#define CPU3_HRHV_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF024u)
/** Alias (User Manual Name) for CPU3_HRHV_TR4_ADR */
#define CPU3_HRHV_TR4ADR (CPU3_HRHV_TR4_ADR)

/** \brief F028, CPU3 trigger event 5 */
#define CPU3_HRHV_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF028u)
/** Alias (User Manual Name) for CPU3_HRHV_TR5_EVT */
#define CPU3_HRHV_TR5EVT (CPU3_HRHV_TR5_EVT)

/** \brief F02C, CPU3 trigger address 5 */
#define CPU3_HRHV_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF02Cu)
/** Alias (User Manual Name) for CPU3_HRHV_TR5_ADR */
#define CPU3_HRHV_TR5ADR (CPU3_HRHV_TR5_ADR)

/** \brief F030, CPU3 trigger event 6 */
#define CPU3_HRHV_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF030u)
/** Alias (User Manual Name) for CPU3_HRHV_TR6_EVT */
#define CPU3_HRHV_TR6EVT (CPU3_HRHV_TR6_EVT)

/** \brief F034, CPU3 trigger address 6 */
#define CPU3_HRHV_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF034u)
/** Alias (User Manual Name) for CPU3_HRHV_TR6_ADR */
#define CPU3_HRHV_TR6ADR (CPU3_HRHV_TR6_ADR)

/** \brief F038, CPU3 trigger event 7 */
#define CPU3_HRHV_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF88FF038u)
/** Alias (User Manual Name) for CPU3_HRHV_TR7_EVT */
#define CPU3_HRHV_TR7EVT (CPU3_HRHV_TR7_EVT)

/** \brief F03C, CPU3 trigger address 7 */
#define CPU3_HRHV_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF88FF03Cu)
/** Alias (User Manual Name) for CPU3_HRHV_TR7_ADR */
#define CPU3_HRHV_TR7ADR (CPU3_HRHV_TR7_ADR)

/** \brief FC00, CPU3 HR specific counter control */
#define CPU3_HRHV_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF88FFC00u)

/** \brief FC04, CPU3 HR specific CPU clock cycle count */
#define CPU3_HRHV_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF88FFC04u)

/** \brief FC08, CPU3 HR specific instruction count */
#define CPU3_HRHV_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF88FFC08u)

/** \brief FC0C, CPU3 HR specific multi-count register 1 */
#define CPU3_HRHV_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF88FFC0Cu)

/** \brief FC10, CPU3 HR specific multi-count register 2 */
#define CPU3_HRHV_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF88FFC10u)

/** \brief FC14, CPU3 HR specific multi-count register 3 */
#define CPU3_HRHV_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF88FFC14u)

/** \brief FD00, CPU3 debug status register */
#define CPU3_HRHV_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF88FFD00u)

/** \brief FD08, CPU3 external event register */
#define CPU3_HRHV_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88FFD08u)

/** \brief FD0C, CPU3 core register access event */
#define CPU3_HRHV_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88FFD0Cu)

/** \brief FD10, CPU3 software debug event */
#define CPU3_HRHV_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF88FFD10u)

/** \brief FD14, CPU3 debug action configuration */
#define CPU3_HRHV_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF88FFD14u)

/** \brief FD30, CPU3 trigger accumulator */
#define CPU3_HRHV_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF88FFD30u)

/** \brief FD40, CPU3 debug monitor start address */
#define CPU3_HRHV_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF88FFD40u)

/** \brief FD44, CPU3 debug context save area pointer */
#define CPU3_HRHV_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF88FFD44u)

/** \brief FD48, CPU3 debug trap control */
#define CPU3_HRHV_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF88FFD48u)

/** \brief FD4C, CPU3 debug configuration */
#define CPU3_HRHV_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF88FFD4Cu)

/** \brief FD50, CPU3 trace configuration */
#define CPU3_HRHV_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF88FFD50u)

/** \brief FD54, CPU3 trace filter */
#define CPU3_HRHV_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF88FFD54u)

/** \brief FD58, CPU3 trace bandwidth limiter */
#define CPU3_HRHV_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF88FFD58u)

/** \brief FD60, CPU3 MCDS performance counter control register */
#define CPU3_HRHV_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF88FFD60u)

/** \brief FE00, CPU3 previous context information register */
#define CPU3_HRHV_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF88FFE00u)

/** \brief FE04, CPU3 HR specific program status word */
#define CPU3_HRHV_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF88FFE04u)

/** \brief FE08, CPU3 program counter */
#define CPU3_HRHV_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF88FFE08u)

/** \brief FE14, CPU3 HR specific core configuration register */
#define CPU3_HRHV_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF88FFE14u)

/** \brief FE18, CPU3 identification register */
#define CPU3_HRHV_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF88FFE18u)

/** \brief FE1C, CPU3 core identification register */
#define CPU3_HRHV_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF88FFE1Cu)

/** \brief FE20, CPU3 HR specific base interrupt vector table pointer */
#define CPU3_HRHV_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF88FFE20u)

/** \brief FE24, CPU3 HR specific base trap vector table pointer */
#define CPU3_HRHV_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF88FFE24u)

/** \brief FE28, CPU3 HR specific interrupt stack pointer */
#define CPU3_HRHV_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF88FFE28u)

/** \brief FE2C, CPU3 interrupt control register */
#define CPU3_HRHV_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF88FFE2Cu)

/** \brief FE34, CPU3 previous PRS */
#define CPU3_HRHV_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF88FFE34u)

/** \brief FE38, CPU3 HR specific free CSA list head pointer */
#define CPU3_HRHV_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF88FFE38u)

/** \brief FE3C, CPU3 HR specific free CSA list limit pointer */
#define CPU3_HRHV_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF88FFE3Cu)

/** \brief FE40, CPU3 software identification */
#define CPU3_HRHV_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF88FFE40u)

/** \brief FE50, CPU3 customer ID register */
#define CPU3_HRHV_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF88FFE50u)

/** \brief FE60, CPU3 core boot configuration register */
#define CPU3_HRHV_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF88FFE60u)

/** \brief FE64, CPU3 lockstep control register */
#define CPU3_HRHV_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF88FFE64u)

/** \brief FE68, CPU3 clock control register */
#define CPU3_HRHV_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF88FFE68u)

/** \brief FE6C, CPU3 hardware configuration  */
#define CPU3_HRHV_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF88FFE6Cu)

/** \brief FF80, CPU3 HR specific address general purpose register 0 */
#define CPU3_HRHV_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88FFF80u)

/** \brief FF84, CPU3 HR specific address general purpose register 1 */
#define CPU3_HRHV_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88FFF84u)

/** \brief FFA0, CPU3 HR specific address general purpose register 8 */
#define CPU3_HRHV_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88FFFA0u)

/** \brief FFA4, CPU3 HR specific address general purpose register 9 */
#define CPU3_HRHV_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF88FFFA4u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpu_Registers_Cfg_Cpu4
 * \{  */
/** \brief 0, CPU4 system timer clock control register */
#define CPU4_STM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8900000u)

/** \brief 0, CPU4 system timer clock control register", hypervisor view" */
#define CPU4_STMHV_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8900000u)

/** \brief 4, CPU4 OCDS control and status register */
#define CPU4_STM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8900004u)

/** \brief 4, CPU4 OCDS control and status register", hypervisor view" */
#define CPU4_STMHV_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8900004u)

/** \brief 20, CPU4 system timer absolute timer */
#define CPU4_STM_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8900020u)

/** \brief 20, CPU4 system timer absolute timer", hypervisor view" */
#define CPU4_STMHV_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8900020u)

/** \brief 100, CPU4 VM0 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM0_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900100u)

/** \brief 104, CPU4 VM0 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM0_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900104u)

/** \brief 108, CPU4 VM0 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM0_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8900108u)

/** \brief 10C, CPU4 VM0 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM0_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF890010Cu)
/** Alias (User Manual Name) for CPU4_STMHV_VM0_STM_ICR */
#define CPU4_STMHV_VM0_ICR (CPU4_STMHV_VM0_STM_ICR)

/** \brief 110, CPU4 VM0 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM0_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8900110u)

/** \brief 114, CPU4 VM0 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8900114u)

/** \brief 118, CPU4 VM0 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM0_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8900118u)

/** \brief 120, CPU4 system timer compare register 0 */
#define CPU4_STM_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900120u)

/** \brief 120, CPU4 VM1 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM1_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900120u)

/** \brief 124, CPU4 system timer compare register 1 */
#define CPU4_STM_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900124u)

/** \brief 124, CPU4 VM1 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM1_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900124u)

/** \brief 128, CPU4 system timer compare match control register */
#define CPU4_STM_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8900128u)

/** \brief 128, CPU4 VM1 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM1_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8900128u)

/** \brief 12C, CPU4 system timer interrupt control register */
#define CPU4_STM_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF890012Cu)
/** Alias (User Manual Name) for CPU4_STM_STM_ICR */
#define CPU4_STM_ICR (CPU4_STM_STM_ICR)

/** \brief 12C, CPU4 VM1 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM1_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF890012Cu)
/** Alias (User Manual Name) for CPU4_STMHV_VM1_STM_ICR */
#define CPU4_STMHV_VM1_ICR (CPU4_STMHV_VM1_STM_ICR)

/** \brief 130, CPU4 system timer interrupt set/clear register */
#define CPU4_STM_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8900130u)

/** \brief 130, CPU4 VM1 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM1_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8900130u)

/** \brief 134, CPU4 system timer interrupt status register */
#define CPU4_STM_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8900134u)

/** \brief 134, CPU4 VM1 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM1_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8900134u)

/** \brief 138, CPU4 system timer relative timer */
#define CPU4_STM_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8900138u)

/** \brief 138, CPU4 VM1 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM1_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8900138u)

/** \brief 140, CPU4 VM2 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM2_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900140u)

/** \brief 144, CPU4 VM2 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM2_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900144u)

/** \brief 148, CPU4 VM2 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM2_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8900148u)

/** \brief 14C, CPU4 VM2 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM2_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF890014Cu)
/** Alias (User Manual Name) for CPU4_STMHV_VM2_STM_ICR */
#define CPU4_STMHV_VM2_ICR (CPU4_STMHV_VM2_STM_ICR)

/** \brief 150, CPU4 VM2 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM2_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8900150u)

/** \brief 154, CPU4 VM2 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM2_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8900154u)

/** \brief 158, CPU4 VM2 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM2_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8900158u)

/** \brief 160, CPU4 VM3 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM3_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900160u)

/** \brief 164, CPU4 VM3 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM3_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900164u)

/** \brief 168, CPU4 VM3 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM3_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8900168u)

/** \brief 16C, CPU4 VM3 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM3_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF890016Cu)
/** Alias (User Manual Name) for CPU4_STMHV_VM3_STM_ICR */
#define CPU4_STMHV_VM3_ICR (CPU4_STMHV_VM3_STM_ICR)

/** \brief 170, CPU4 VM3 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM3_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8900170u)

/** \brief 174, CPU4 VM3 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM3_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8900174u)

/** \brief 178, CPU4 VM3 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM3_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8900178u)

/** \brief 180, CPU4 VM4 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM4_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900180u)

/** \brief 184, CPU4 VM4 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM4_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8900184u)

/** \brief 188, CPU4 VM4 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM4_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8900188u)

/** \brief 18C, CPU4 VM4 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM4_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF890018Cu)
/** Alias (User Manual Name) for CPU4_STMHV_VM4_STM_ICR */
#define CPU4_STMHV_VM4_ICR (CPU4_STMHV_VM4_STM_ICR)

/** \brief 190, CPU4 VM4 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM4_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8900190u)

/** \brief 194, CPU4 VM4 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM4_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8900194u)

/** \brief 198, CPU4 VM4 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM4_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8900198u)

/** \brief 1A0, CPU4 VM5 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM5_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89001A0u)

/** \brief 1A4, CPU4 VM5 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM5_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89001A4u)

/** \brief 1A8, CPU4 VM5 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM5_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF89001A8u)

/** \brief 1AC, CPU4 VM5 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM5_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF89001ACu)
/** Alias (User Manual Name) for CPU4_STMHV_VM5_STM_ICR */
#define CPU4_STMHV_VM5_ICR (CPU4_STMHV_VM5_STM_ICR)

/** \brief 1B0, CPU4 VM5 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM5_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF89001B0u)

/** \brief 1B4, CPU4 VM5 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM5_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF89001B4u)

/** \brief 1B8, CPU4 VM5 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM5_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF89001B8u)

/** \brief 1C0, CPU4 VM6 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM6_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89001C0u)

/** \brief 1C4, CPU4 VM6 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM6_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89001C4u)

/** \brief 1C8, CPU4 VM6 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM6_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF89001C8u)

/** \brief 1CC, CPU4 VM6 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM6_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF89001CCu)
/** Alias (User Manual Name) for CPU4_STMHV_VM6_STM_ICR */
#define CPU4_STMHV_VM6_ICR (CPU4_STMHV_VM6_STM_ICR)

/** \brief 1D0, CPU4 VM6 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM6_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF89001D0u)

/** \brief 1D4, CPU4 VM6 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM6_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF89001D4u)

/** \brief 1D8, CPU4 VM6 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM6_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF89001D8u)

/** \brief 1E0, CPU4 VM7 system timer compare register 0", hypervisor view" */
#define CPU4_STMHV_VM7_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89001E0u)

/** \brief 1E4, CPU4 VM7 system timer compare register 1", hypervisor view" */
#define CPU4_STMHV_VM7_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89001E4u)

/** \brief 1E8, CPU4 VM7 system timer compare match control register", hypervisor view" */
#define CPU4_STMHV_VM7_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF89001E8u)

/** \brief 1EC, CPU4 VM7 system timer interrupt control register", hypervisor view" */
#define CPU4_STMHV_VM7_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF89001ECu)
/** Alias (User Manual Name) for CPU4_STMHV_VM7_STM_ICR */
#define CPU4_STMHV_VM7_ICR (CPU4_STMHV_VM7_STM_ICR)

/** \brief 1F0, CPU4 VM7 system timer interrupt set/clear register", hypervisor view" */
#define CPU4_STMHV_VM7_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF89001F0u)

/** \brief 1F4, CPU4 VM7 system timer interrupt status register", hypervisor view" */
#define CPU4_STMHV_VM7_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF89001F4u)

/** \brief 1F8, CPU4 VM7 system timer relative timer", hypervisor view" */
#define CPU4_STMHV_VM7_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF89001F8u)

/** \brief D000, CPU4 reset register 0 */
#define CPU4_KRST0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST0*)0xF890D000u)

/** \brief D004, CPU4 reset register 1 */
#define CPU4_KRST1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST1*)0xF890D004u)

/** \brief D008, CPU4 reset clear register */
#define CPU4_KRSTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRSTCLR*)0xF890D008u)

/** \brief 8, CPU4 PROTSPR register safe endinit */
#define CPU4_PROTSPRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF890E008u)

/** \brief 20, CPU4 shadow SPR, write access enable register A */
#define CPU4_ACCENSPRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF890E020u)

/** \brief 24, CPU4 shadow SPR, write access enable register B */
#define CPU4_ACCENSPRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF890E024u)

/** \brief 28, CPU4 shadow SPR, read access enable register A */
#define CPU4_ACCENSPRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF890E028u)

/** \brief 2C, CPU4 shadow SPR, read access enable register B */
#define CPU4_ACCENSPRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF890E02Cu)

/** \brief 30, CPU4 shadow SPR, VM access enable register */
#define CPU4_ACCENSPRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF890E030u)

/** \brief 34, CPU4 shadow SPR, PRS access enable register */
#define CPU4_ACCENSPRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF890E034u)

/** \brief 38, CPU4 shadow SPR, region lower address register */
#define CPU4_ACCENSPRCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA*)0xF890E038u)

/** \brief 3C, CPU4 shadow SPR, region upper address register */
#define CPU4_ACCENSPRCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA*)0xF890E03Cu)

/** \brief 48, CPU4 PROTDLMU register safe endinit */
#define CPU4_PROTDLMUSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF890E048u)

/** \brief 60, CPU4 shadow DLMU, write access enable register A */
#define CPU4_ACCENDLMUCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF890E060u)

/** \brief 64, CPU4 shadow DLMU, write access enable register B */
#define CPU4_ACCENDLMUCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF890E064u)

/** \brief 68, CPU4 shadow DLMU, read access enable register A */
#define CPU4_ACCENDLMUCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF890E068u)

/** \brief 6C, CPU4 shadow DLMU, read access enable register B */
#define CPU4_ACCENDLMUCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF890E06Cu)

/** \brief 70, CPU4 shadow DLMU, VM access enable register */
#define CPU4_ACCENDLMUCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF890E070u)

/** \brief 74, CPU4 shadow DLMU, PRS access enable register */
#define CPU4_ACCENDLMUCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF890E074u)

/** \brief 78, CPU4 shadow DLMU, region lower address register */
#define CPU4_ACCENDLMUCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA_89*)0xF890E078u)

/** \brief 7C, CPU4 shadow DLMU, region upper address register */
#define CPU4_ACCENDLMUCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA_89*)0xF890E07Cu)

/** \brief 80, CPU4 PROTSFR register endinit */
#define CPU4_PROTSFRE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF890E080u)

/** \brief 88, CPU4 PROTSFR register safe endinit */
#define CPU4_PROTSFRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF890E088u)

/** \brief A0, CPU4 shadow SFR, write access enable register A */
#define CPU4_ACCENSFRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF890E0A0u)

/** \brief A4, CPU4 shadow SFR, write access enable register B */
#define CPU4_ACCENSFRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF890E0A4u)

/** \brief A8, CPU4 shadow SFR, read access enable register A */
#define CPU4_ACCENSFRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF890E0A8u)

/** \brief AC, CPU4 shadow SFR, read access enable register B */
#define CPU4_ACCENSFRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF890E0ACu)

/** \brief B0, CPU4 shadow SFR, VM access enable register */
#define CPU4_ACCENSFRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF890E0B0u)

/** \brief B4, CPU4 shadow SFR, PRS access enable register */
#define CPU4_ACCENSFRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF890E0B4u)

/** \brief C0, CPU4 PROTRST register endinit */
#define CPU4_PROTRSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF890E0C0u)

/** \brief D8, CPU4 PROTSTM Register Safe Endinit */
#define CPU4_PROTSTMSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROTSTMSE*)0xF890E0D8u)

/** \brief E0, CPU4 shadow STM, write access enable register A */
#define CPU4_ACCENSTMCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF890E0E0u)

/** \brief E4, CPU4 shadow STM, write access enable register B */
#define CPU4_ACCENSTMCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF890E0E4u)

/** \brief E8, CPU4 shadow STM, read access enable register A */
#define CPU4_ACCENSTMCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF890E0E8u)

/** \brief EC, CPU4 shadow STM, read access enable register B */
#define CPU4_ACCENSTMCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF890E0ECu)

/** \brief F0, CPU4 shadow STM, VM access enable register */
#define CPU4_ACCENSTMCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF890E0F0u)

/** \brief F4, CPU4 shadow STM, PRS access enable register */
#define CPU4_ACCENSTMCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF890E0F4u)

/** \brief 200, CPU4 SPR range 0, write access enable register A */
#define CPU4_ACCENSPR0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E200u)

/** \brief 204, CPU4 SPR range 0, write access enable register B */
#define CPU4_ACCENSPR0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E204u)

/** \brief 208, CPU4 SPR range 0, read access enable register A */
#define CPU4_ACCENSPR0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E208u)

/** \brief 20C, CPU4 SPR range 0, read access enable register B */
#define CPU4_ACCENSPR0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E20Cu)

/** \brief 210, CPU4 SPR range 0, VM access enable register */
#define CPU4_ACCENSPR0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E210u)

/** \brief 214, CPU4 SPR range 0, PRS access enable register */
#define CPU4_ACCENSPR0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E214u)

/** \brief 218, CPU4 SPR range 0, region lower address register */
#define CPU4_ACCENSPR0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E218u)

/** \brief 21C, CPU4 SPR range 0, region upper address register */
#define CPU4_ACCENSPR0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E21Cu)

/** \brief 220, CPU4 SPR range 1, write access enable register A */
#define CPU4_ACCENSPR1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E220u)

/** \brief 224, CPU4 SPR range 1, write access enable register B */
#define CPU4_ACCENSPR1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E224u)

/** \brief 228, CPU4 SPR range 1, read access enable register A */
#define CPU4_ACCENSPR1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E228u)

/** \brief 22C, CPU4 SPR range 1, read access enable register B */
#define CPU4_ACCENSPR1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E22Cu)

/** \brief 230, CPU4 SPR range 1, VM access enable register */
#define CPU4_ACCENSPR1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E230u)

/** \brief 234, CPU4 SPR range 1, PRS access enable register */
#define CPU4_ACCENSPR1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E234u)

/** \brief 238, CPU4 SPR range 1, region lower address register */
#define CPU4_ACCENSPR1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E238u)

/** \brief 23C, CPU4 SPR range 1, region upper address register */
#define CPU4_ACCENSPR1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E23Cu)

/** \brief 240, CPU4 SPR range 2, write access enable register A */
#define CPU4_ACCENSPR2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E240u)

/** \brief 244, CPU4 SPR range 2, write access enable register B */
#define CPU4_ACCENSPR2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E244u)

/** \brief 248, CPU4 SPR range 2, read access enable register A */
#define CPU4_ACCENSPR2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E248u)

/** \brief 24C, CPU4 SPR range 2, read access enable register B */
#define CPU4_ACCENSPR2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E24Cu)

/** \brief 250, CPU4 SPR range 2, VM access enable register */
#define CPU4_ACCENSPR2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E250u)

/** \brief 254, CPU4 SPR range 2, PRS access enable register */
#define CPU4_ACCENSPR2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E254u)

/** \brief 258, CPU4 SPR range 2, region lower address register */
#define CPU4_ACCENSPR2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E258u)

/** \brief 25C, CPU4 SPR range 2, region upper address register */
#define CPU4_ACCENSPR2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E25Cu)

/** \brief 260, CPU4 SPR range 3, write access enable register A */
#define CPU4_ACCENSPR3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E260u)

/** \brief 264, CPU4 SPR range 3, write access enable register B */
#define CPU4_ACCENSPR3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E264u)

/** \brief 268, CPU4 SPR range 3, read access enable register A */
#define CPU4_ACCENSPR3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E268u)

/** \brief 26C, CPU4 SPR range 3, read access enable register B */
#define CPU4_ACCENSPR3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E26Cu)

/** \brief 270, CPU4 SPR range 3, VM access enable register */
#define CPU4_ACCENSPR3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E270u)

/** \brief 274, CPU4 SPR range 3, PRS access enable register */
#define CPU4_ACCENSPR3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E274u)

/** \brief 278, CPU4 SPR range 3, region lower address register */
#define CPU4_ACCENSPR3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E278u)

/** \brief 27C, CPU4 SPR range 3, region upper address register */
#define CPU4_ACCENSPR3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E27Cu)

/** \brief 280, CPU4 SPR range 4, write access enable register A */
#define CPU4_ACCENSPR4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E280u)

/** \brief 284, CPU4 SPR range 4, write access enable register B */
#define CPU4_ACCENSPR4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E284u)

/** \brief 288, CPU4 SPR range 4, read access enable register A */
#define CPU4_ACCENSPR4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E288u)

/** \brief 28C, CPU4 SPR range 4, read access enable register B */
#define CPU4_ACCENSPR4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E28Cu)

/** \brief 290, CPU4 SPR range 4, VM access enable register */
#define CPU4_ACCENSPR4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E290u)

/** \brief 294, CPU4 SPR range 4, PRS access enable register */
#define CPU4_ACCENSPR4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E294u)

/** \brief 298, CPU4 SPR range 4, region lower address register */
#define CPU4_ACCENSPR4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E298u)

/** \brief 29C, CPU4 SPR range 4, region upper address register */
#define CPU4_ACCENSPR4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E29Cu)

/** \brief 2A0, CPU4 SPR range 5, write access enable register A */
#define CPU4_ACCENSPR5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E2A0u)

/** \brief 2A4, CPU4 SPR range 5, write access enable register B */
#define CPU4_ACCENSPR5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E2A4u)

/** \brief 2A8, CPU4 SPR range 5, read access enable register A */
#define CPU4_ACCENSPR5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E2A8u)

/** \brief 2AC, CPU4 SPR range 5, read access enable register B */
#define CPU4_ACCENSPR5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E2ACu)

/** \brief 2B0, CPU4 SPR range 5, VM access enable register */
#define CPU4_ACCENSPR5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E2B0u)

/** \brief 2B4, CPU4 SPR range 5, PRS access enable register */
#define CPU4_ACCENSPR5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E2B4u)

/** \brief 2B8, CPU4 SPR range 5, region lower address register */
#define CPU4_ACCENSPR5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E2B8u)

/** \brief 2BC, CPU4 SPR range 5, region upper address register */
#define CPU4_ACCENSPR5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E2BCu)

/** \brief 2C0, CPU4 SPR range 6, write access enable register A */
#define CPU4_ACCENSPR6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E2C0u)

/** \brief 2C4, CPU4 SPR range 6, write access enable register B */
#define CPU4_ACCENSPR6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E2C4u)

/** \brief 2C8, CPU4 SPR range 6, read access enable register A */
#define CPU4_ACCENSPR6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E2C8u)

/** \brief 2CC, CPU4 SPR range 6, read access enable register B */
#define CPU4_ACCENSPR6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E2CCu)

/** \brief 2D0, CPU4 SPR range 6, VM access enable register */
#define CPU4_ACCENSPR6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E2D0u)

/** \brief 2D4, CPU4 SPR range 6, PRS access enable register */
#define CPU4_ACCENSPR6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E2D4u)

/** \brief 2D8, CPU4 SPR range 6, region lower address register */
#define CPU4_ACCENSPR6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E2D8u)

/** \brief 2DC, CPU4 SPR range 6, region upper address register */
#define CPU4_ACCENSPR6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E2DCu)

/** \brief 2E0, CPU4 SPR range 7, write access enable register A */
#define CPU4_ACCENSPR7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E2E0u)

/** \brief 2E4, CPU4 SPR range 7, write access enable register B */
#define CPU4_ACCENSPR7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E2E4u)

/** \brief 2E8, CPU4 SPR range 7, read access enable register A */
#define CPU4_ACCENSPR7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E2E8u)

/** \brief 2EC, CPU4 SPR range 7, read access enable register B */
#define CPU4_ACCENSPR7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E2ECu)

/** \brief 2F0, CPU4 SPR range 7, VM access enable register */
#define CPU4_ACCENSPR7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E2F0u)

/** \brief 2F4, CPU4 SPR range 7, PRS access enable register */
#define CPU4_ACCENSPR7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E2F4u)

/** \brief 2F8, CPU4 SPR range 7, region lower address register */
#define CPU4_ACCENSPR7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E2F8u)

/** \brief 2FC, CPU4 SPR range 7, region upper address register */
#define CPU4_ACCENSPR7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E2FCu)

/** \brief 300, CPU4 SPR range 8, write access enable register A */
#define CPU4_ACCENSPR8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E300u)

/** \brief 304, CPU4 SPR range 8, write access enable register B */
#define CPU4_ACCENSPR8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E304u)

/** \brief 308, CPU4 SPR range 8, read access enable register A */
#define CPU4_ACCENSPR8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E308u)

/** \brief 30C, CPU4 SPR range 8, read access enable register B */
#define CPU4_ACCENSPR8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E30Cu)

/** \brief 310, CPU4 SPR range 8, VM access enable register */
#define CPU4_ACCENSPR8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E310u)

/** \brief 314, CPU4 SPR range 8, PRS access enable register */
#define CPU4_ACCENSPR8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E314u)

/** \brief 318, CPU4 SPR range 8, region lower address register */
#define CPU4_ACCENSPR8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E318u)

/** \brief 31C, CPU4 SPR range 8, region upper address register */
#define CPU4_ACCENSPR8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E31Cu)

/** \brief 320, CPU4 SPR range 9, write access enable register A */
#define CPU4_ACCENSPR9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E320u)

/** \brief 324, CPU4 SPR range 9, write access enable register B */
#define CPU4_ACCENSPR9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E324u)

/** \brief 328, CPU4 SPR range 9, read access enable register A */
#define CPU4_ACCENSPR9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E328u)

/** \brief 32C, CPU4 SPR range 9, read access enable register B */
#define CPU4_ACCENSPR9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E32Cu)

/** \brief 330, CPU4 SPR range 9, VM access enable register */
#define CPU4_ACCENSPR9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E330u)

/** \brief 334, CPU4 SPR range 9, PRS access enable register */
#define CPU4_ACCENSPR9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E334u)

/** \brief 338, CPU4 SPR range 9, region lower address register */
#define CPU4_ACCENSPR9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E338u)

/** \brief 33C, CPU4 SPR range 9, region upper address register */
#define CPU4_ACCENSPR9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E33Cu)

/** \brief 340, CPU4 SPR range 10, write access enable register A */
#define CPU4_ACCENSPR10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E340u)

/** \brief 344, CPU4 SPR range 10, write access enable register B */
#define CPU4_ACCENSPR10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E344u)

/** \brief 348, CPU4 SPR range 10, read access enable register A */
#define CPU4_ACCENSPR10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E348u)

/** \brief 34C, CPU4 SPR range 10, read access enable register B */
#define CPU4_ACCENSPR10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E34Cu)

/** \brief 350, CPU4 SPR range 10, VM access enable register */
#define CPU4_ACCENSPR10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E350u)

/** \brief 354, CPU4 SPR range 10, PRS access enable register */
#define CPU4_ACCENSPR10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E354u)

/** \brief 358, CPU4 SPR range 10, region lower address register */
#define CPU4_ACCENSPR10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E358u)

/** \brief 35C, CPU4 SPR range 10, region upper address register */
#define CPU4_ACCENSPR10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E35Cu)

/** \brief 360, CPU4 SPR range 11, write access enable register A */
#define CPU4_ACCENSPR11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E360u)

/** \brief 364, CPU4 SPR range 11, write access enable register B */
#define CPU4_ACCENSPR11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E364u)

/** \brief 368, CPU4 SPR range 11, read access enable register A */
#define CPU4_ACCENSPR11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E368u)

/** \brief 36C, CPU4 SPR range 11, read access enable register B */
#define CPU4_ACCENSPR11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E36Cu)

/** \brief 370, CPU4 SPR range 11, VM access enable register */
#define CPU4_ACCENSPR11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E370u)

/** \brief 374, CPU4 SPR range 11, PRS access enable register */
#define CPU4_ACCENSPR11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E374u)

/** \brief 378, CPU4 SPR range 11, region lower address register */
#define CPU4_ACCENSPR11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E378u)

/** \brief 37C, CPU4 SPR range 11, region upper address register */
#define CPU4_ACCENSPR11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E37Cu)

/** \brief 380, CPU4 SPR range 12, write access enable register A */
#define CPU4_ACCENSPR12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E380u)

/** \brief 384, CPU4 SPR range 12, write access enable register B */
#define CPU4_ACCENSPR12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E384u)

/** \brief 388, CPU4 SPR range 12, read access enable register A */
#define CPU4_ACCENSPR12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E388u)

/** \brief 38C, CPU4 SPR range 12, read access enable register B */
#define CPU4_ACCENSPR12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E38Cu)

/** \brief 390, CPU4 SPR range 12, VM access enable register */
#define CPU4_ACCENSPR12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E390u)

/** \brief 394, CPU4 SPR range 12, PRS access enable register */
#define CPU4_ACCENSPR12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E394u)

/** \brief 398, CPU4 SPR range 12, region lower address register */
#define CPU4_ACCENSPR12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E398u)

/** \brief 39C, CPU4 SPR range 12, region upper address register */
#define CPU4_ACCENSPR12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E39Cu)

/** \brief 3A0, CPU4 SPR range 13, write access enable register A */
#define CPU4_ACCENSPR13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E3A0u)

/** \brief 3A4, CPU4 SPR range 13, write access enable register B */
#define CPU4_ACCENSPR13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E3A4u)

/** \brief 3A8, CPU4 SPR range 13, read access enable register A */
#define CPU4_ACCENSPR13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E3A8u)

/** \brief 3AC, CPU4 SPR range 13, read access enable register B */
#define CPU4_ACCENSPR13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E3ACu)

/** \brief 3B0, CPU4 SPR range 13, VM access enable register */
#define CPU4_ACCENSPR13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E3B0u)

/** \brief 3B4, CPU4 SPR range 13, PRS access enable register */
#define CPU4_ACCENSPR13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E3B4u)

/** \brief 3B8, CPU4 SPR range 13, region lower address register */
#define CPU4_ACCENSPR13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E3B8u)

/** \brief 3BC, CPU4 SPR range 13, region upper address register */
#define CPU4_ACCENSPR13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E3BCu)

/** \brief 3C0, CPU4 SPR range 14, write access enable register A */
#define CPU4_ACCENSPR14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E3C0u)

/** \brief 3C4, CPU4 SPR range 14, write access enable register B */
#define CPU4_ACCENSPR14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E3C4u)

/** \brief 3C8, CPU4 SPR range 14, read access enable register A */
#define CPU4_ACCENSPR14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E3C8u)

/** \brief 3CC, CPU4 SPR range 14, read access enable register B */
#define CPU4_ACCENSPR14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E3CCu)

/** \brief 3D0, CPU4 SPR range 14, VM access enable register */
#define CPU4_ACCENSPR14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E3D0u)

/** \brief 3D4, CPU4 SPR range 14, PRS access enable register */
#define CPU4_ACCENSPR14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E3D4u)

/** \brief 3D8, CPU4 SPR range 14, region lower address register */
#define CPU4_ACCENSPR14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E3D8u)

/** \brief 3DC, CPU4 SPR range 14, region upper address register */
#define CPU4_ACCENSPR14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E3DCu)

/** \brief 3E0, CPU4 SPR range 15, write access enable register A */
#define CPU4_ACCENSPR15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E3E0u)

/** \brief 3E4, CPU4 SPR range 15, write access enable register B */
#define CPU4_ACCENSPR15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E3E4u)

/** \brief 3E8, CPU4 SPR range 15, read access enable register A */
#define CPU4_ACCENSPR15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E3E8u)

/** \brief 3EC, CPU4 SPR range 15, read access enable register B */
#define CPU4_ACCENSPR15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E3ECu)

/** \brief 3F0, CPU4 SPR range 15, VM access enable register */
#define CPU4_ACCENSPR15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E3F0u)

/** \brief 3F4, CPU4 SPR range 15, PRS access enable register */
#define CPU4_ACCENSPR15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E3F4u)

/** \brief 3F8, CPU4 SPR range 15, region lower address register */
#define CPU4_ACCENSPR15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF890E3F8u)

/** \brief 3FC, CPU4 SPR range 15, region upper address register */
#define CPU4_ACCENSPR15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF890E3FCu)

/** \brief 400, CPU4 DLMU range 0, write access enable register A */
#define CPU4_ACCENDLMU0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E400u)

/** \brief 404, CPU4 DLMU range 0, write access enable register B */
#define CPU4_ACCENDLMU0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E404u)

/** \brief 408, CPU4 DLMU range 0, read access enable register A */
#define CPU4_ACCENDLMU0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E408u)

/** \brief 40C, CPU4 DLMU range 0, read access enable register B */
#define CPU4_ACCENDLMU0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E40Cu)

/** \brief 410, CPU4 DLMU range 0, VM access enable register */
#define CPU4_ACCENDLMU0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E410u)

/** \brief 414, CPU4 DLMU range 0, PRS access enable register */
#define CPU4_ACCENDLMU0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E414u)

/** \brief 418, CPU4 DLMU range 0, region lower address register */
#define CPU4_ACCENDLMU0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E418u)

/** \brief 41C, CPU4 DLMU range 0, region upper address register */
#define CPU4_ACCENDLMU0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E41Cu)

/** \brief 420, CPU4 DLMU range 1, write access enable register A */
#define CPU4_ACCENDLMU1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E420u)

/** \brief 424, CPU4 DLMU range 1, write access enable register B */
#define CPU4_ACCENDLMU1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E424u)

/** \brief 428, CPU4 DLMU range 1, read access enable register A */
#define CPU4_ACCENDLMU1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E428u)

/** \brief 42C, CPU4 DLMU range 1, read access enable register B */
#define CPU4_ACCENDLMU1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E42Cu)

/** \brief 430, CPU4 DLMU range 1, VM access enable register */
#define CPU4_ACCENDLMU1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E430u)

/** \brief 434, CPU4 DLMU range 1, PRS access enable register */
#define CPU4_ACCENDLMU1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E434u)

/** \brief 438, CPU4 DLMU range 1, region lower address register */
#define CPU4_ACCENDLMU1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E438u)

/** \brief 43C, CPU4 DLMU range 1, region upper address register */
#define CPU4_ACCENDLMU1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E43Cu)

/** \brief 440, CPU4 DLMU range 2, write access enable register A */
#define CPU4_ACCENDLMU2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E440u)

/** \brief 444, CPU4 DLMU range 2, write access enable register B */
#define CPU4_ACCENDLMU2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E444u)

/** \brief 448, CPU4 DLMU range 2, read access enable register A */
#define CPU4_ACCENDLMU2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E448u)

/** \brief 44C, CPU4 DLMU range 2, read access enable register B */
#define CPU4_ACCENDLMU2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E44Cu)

/** \brief 450, CPU4 DLMU range 2, VM access enable register */
#define CPU4_ACCENDLMU2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E450u)

/** \brief 454, CPU4 DLMU range 2, PRS access enable register */
#define CPU4_ACCENDLMU2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E454u)

/** \brief 458, CPU4 DLMU range 2, region lower address register */
#define CPU4_ACCENDLMU2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E458u)

/** \brief 45C, CPU4 DLMU range 2, region upper address register */
#define CPU4_ACCENDLMU2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E45Cu)

/** \brief 460, CPU4 DLMU range 3, write access enable register A */
#define CPU4_ACCENDLMU3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E460u)

/** \brief 464, CPU4 DLMU range 3, write access enable register B */
#define CPU4_ACCENDLMU3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E464u)

/** \brief 468, CPU4 DLMU range 3, read access enable register A */
#define CPU4_ACCENDLMU3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E468u)

/** \brief 46C, CPU4 DLMU range 3, read access enable register B */
#define CPU4_ACCENDLMU3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E46Cu)

/** \brief 470, CPU4 DLMU range 3, VM access enable register */
#define CPU4_ACCENDLMU3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E470u)

/** \brief 474, CPU4 DLMU range 3, PRS access enable register */
#define CPU4_ACCENDLMU3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E474u)

/** \brief 478, CPU4 DLMU range 3, region lower address register */
#define CPU4_ACCENDLMU3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E478u)

/** \brief 47C, CPU4 DLMU range 3, region upper address register */
#define CPU4_ACCENDLMU3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E47Cu)

/** \brief 480, CPU4 DLMU range 4, write access enable register A */
#define CPU4_ACCENDLMU4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E480u)

/** \brief 484, CPU4 DLMU range 4, write access enable register B */
#define CPU4_ACCENDLMU4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E484u)

/** \brief 488, CPU4 DLMU range 4, read access enable register A */
#define CPU4_ACCENDLMU4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E488u)

/** \brief 48C, CPU4 DLMU range 4, read access enable register B */
#define CPU4_ACCENDLMU4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E48Cu)

/** \brief 490, CPU4 DLMU range 4, VM access enable register */
#define CPU4_ACCENDLMU4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E490u)

/** \brief 494, CPU4 DLMU range 4, PRS access enable register */
#define CPU4_ACCENDLMU4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E494u)

/** \brief 498, CPU4 DLMU range 4, region lower address register */
#define CPU4_ACCENDLMU4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E498u)

/** \brief 49C, CPU4 DLMU range 4, region upper address register */
#define CPU4_ACCENDLMU4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E49Cu)

/** \brief 4A0, CPU4 DLMU range 5, write access enable register A */
#define CPU4_ACCENDLMU5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E4A0u)

/** \brief 4A4, CPU4 DLMU range 5, write access enable register B */
#define CPU4_ACCENDLMU5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E4A4u)

/** \brief 4A8, CPU4 DLMU range 5, read access enable register A */
#define CPU4_ACCENDLMU5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E4A8u)

/** \brief 4AC, CPU4 DLMU range 5, read access enable register B */
#define CPU4_ACCENDLMU5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E4ACu)

/** \brief 4B0, CPU4 DLMU range 5, VM access enable register */
#define CPU4_ACCENDLMU5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E4B0u)

/** \brief 4B4, CPU4 DLMU range 5, PRS access enable register */
#define CPU4_ACCENDLMU5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E4B4u)

/** \brief 4B8, CPU4 DLMU range 5, region lower address register */
#define CPU4_ACCENDLMU5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E4B8u)

/** \brief 4BC, CPU4 DLMU range 5, region upper address register */
#define CPU4_ACCENDLMU5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E4BCu)

/** \brief 4C0, CPU4 DLMU range 6, write access enable register A */
#define CPU4_ACCENDLMU6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E4C0u)

/** \brief 4C4, CPU4 DLMU range 6, write access enable register B */
#define CPU4_ACCENDLMU6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E4C4u)

/** \brief 4C8, CPU4 DLMU range 6, read access enable register A */
#define CPU4_ACCENDLMU6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E4C8u)

/** \brief 4CC, CPU4 DLMU range 6, read access enable register B */
#define CPU4_ACCENDLMU6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E4CCu)

/** \brief 4D0, CPU4 DLMU range 6, VM access enable register */
#define CPU4_ACCENDLMU6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E4D0u)

/** \brief 4D4, CPU4 DLMU range 6, PRS access enable register */
#define CPU4_ACCENDLMU6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E4D4u)

/** \brief 4D8, CPU4 DLMU range 6, region lower address register */
#define CPU4_ACCENDLMU6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E4D8u)

/** \brief 4DC, CPU4 DLMU range 6, region upper address register */
#define CPU4_ACCENDLMU6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E4DCu)

/** \brief 4E0, CPU4 DLMU range 7, write access enable register A */
#define CPU4_ACCENDLMU7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E4E0u)

/** \brief 4E4, CPU4 DLMU range 7, write access enable register B */
#define CPU4_ACCENDLMU7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E4E4u)

/** \brief 4E8, CPU4 DLMU range 7, read access enable register A */
#define CPU4_ACCENDLMU7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E4E8u)

/** \brief 4EC, CPU4 DLMU range 7, read access enable register B */
#define CPU4_ACCENDLMU7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E4ECu)

/** \brief 4F0, CPU4 DLMU range 7, VM access enable register */
#define CPU4_ACCENDLMU7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E4F0u)

/** \brief 4F4, CPU4 DLMU range 7, PRS access enable register */
#define CPU4_ACCENDLMU7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E4F4u)

/** \brief 4F8, CPU4 DLMU range 7, region lower address register */
#define CPU4_ACCENDLMU7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E4F8u)

/** \brief 4FC, CPU4 DLMU range 7, region upper address register */
#define CPU4_ACCENDLMU7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E4FCu)

/** \brief 500, CPU4 DLMU range 8, write access enable register A */
#define CPU4_ACCENDLMU8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E500u)

/** \brief 504, CPU4 DLMU range 8, write access enable register B */
#define CPU4_ACCENDLMU8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E504u)

/** \brief 508, CPU4 DLMU range 8, read access enable register A */
#define CPU4_ACCENDLMU8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E508u)

/** \brief 50C, CPU4 DLMU range 8, read access enable register B */
#define CPU4_ACCENDLMU8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E50Cu)

/** \brief 510, CPU4 DLMU range 8, VM access enable register */
#define CPU4_ACCENDLMU8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E510u)

/** \brief 514, CPU4 DLMU range 8, PRS access enable register */
#define CPU4_ACCENDLMU8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E514u)

/** \brief 518, CPU4 DLMU range 8, region lower address register */
#define CPU4_ACCENDLMU8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E518u)

/** \brief 51C, CPU4 DLMU range 8, region upper address register */
#define CPU4_ACCENDLMU8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E51Cu)

/** \brief 520, CPU4 DLMU range 9, write access enable register A */
#define CPU4_ACCENDLMU9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E520u)

/** \brief 524, CPU4 DLMU range 9, write access enable register B */
#define CPU4_ACCENDLMU9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E524u)

/** \brief 528, CPU4 DLMU range 9, read access enable register A */
#define CPU4_ACCENDLMU9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E528u)

/** \brief 52C, CPU4 DLMU range 9, read access enable register B */
#define CPU4_ACCENDLMU9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E52Cu)

/** \brief 530, CPU4 DLMU range 9, VM access enable register */
#define CPU4_ACCENDLMU9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E530u)

/** \brief 534, CPU4 DLMU range 9, PRS access enable register */
#define CPU4_ACCENDLMU9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E534u)

/** \brief 538, CPU4 DLMU range 9, region lower address register */
#define CPU4_ACCENDLMU9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E538u)

/** \brief 53C, CPU4 DLMU range 9, region upper address register */
#define CPU4_ACCENDLMU9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E53Cu)

/** \brief 540, CPU4 DLMU range 10, write access enable register A */
#define CPU4_ACCENDLMU10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E540u)

/** \brief 544, CPU4 DLMU range 10, write access enable register B */
#define CPU4_ACCENDLMU10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E544u)

/** \brief 548, CPU4 DLMU range 10, read access enable register A */
#define CPU4_ACCENDLMU10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E548u)

/** \brief 54C, CPU4 DLMU range 10, read access enable register B */
#define CPU4_ACCENDLMU10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E54Cu)

/** \brief 550, CPU4 DLMU range 10, VM access enable register */
#define CPU4_ACCENDLMU10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E550u)

/** \brief 554, CPU4 DLMU range 10, PRS access enable register */
#define CPU4_ACCENDLMU10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E554u)

/** \brief 558, CPU4 DLMU range 10, region lower address register */
#define CPU4_ACCENDLMU10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E558u)

/** \brief 55C, CPU4 DLMU range 10, region upper address register */
#define CPU4_ACCENDLMU10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E55Cu)

/** \brief 560, CPU4 DLMU range 11, write access enable register A */
#define CPU4_ACCENDLMU11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E560u)

/** \brief 564, CPU4 DLMU range 11, write access enable register B */
#define CPU4_ACCENDLMU11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E564u)

/** \brief 568, CPU4 DLMU range 11, read access enable register A */
#define CPU4_ACCENDLMU11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E568u)

/** \brief 56C, CPU4 DLMU range 11, read access enable register B */
#define CPU4_ACCENDLMU11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E56Cu)

/** \brief 570, CPU4 DLMU range 11, VM access enable register */
#define CPU4_ACCENDLMU11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E570u)

/** \brief 574, CPU4 DLMU range 11, PRS access enable register */
#define CPU4_ACCENDLMU11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E574u)

/** \brief 578, CPU4 DLMU range 11, region lower address register */
#define CPU4_ACCENDLMU11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E578u)

/** \brief 57C, CPU4 DLMU range 11, region upper address register */
#define CPU4_ACCENDLMU11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E57Cu)

/** \brief 580, CPU4 DLMU range 12, write access enable register A */
#define CPU4_ACCENDLMU12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E580u)

/** \brief 584, CPU4 DLMU range 12, write access enable register B */
#define CPU4_ACCENDLMU12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E584u)

/** \brief 588, CPU4 DLMU range 12, read access enable register A */
#define CPU4_ACCENDLMU12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E588u)

/** \brief 58C, CPU4 DLMU range 12, read access enable register B */
#define CPU4_ACCENDLMU12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E58Cu)

/** \brief 590, CPU4 DLMU range 12, VM access enable register */
#define CPU4_ACCENDLMU12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E590u)

/** \brief 594, CPU4 DLMU range 12, PRS access enable register */
#define CPU4_ACCENDLMU12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E594u)

/** \brief 598, CPU4 DLMU range 12, region lower address register */
#define CPU4_ACCENDLMU12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E598u)

/** \brief 59C, CPU4 DLMU range 12, region upper address register */
#define CPU4_ACCENDLMU12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E59Cu)

/** \brief 5A0, CPU4 DLMU range 13, write access enable register A */
#define CPU4_ACCENDLMU13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E5A0u)

/** \brief 5A4, CPU4 DLMU range 13, write access enable register B */
#define CPU4_ACCENDLMU13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E5A4u)

/** \brief 5A8, CPU4 DLMU range 13, read access enable register A */
#define CPU4_ACCENDLMU13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E5A8u)

/** \brief 5AC, CPU4 DLMU range 13, read access enable register B */
#define CPU4_ACCENDLMU13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E5ACu)

/** \brief 5B0, CPU4 DLMU range 13, VM access enable register */
#define CPU4_ACCENDLMU13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E5B0u)

/** \brief 5B4, CPU4 DLMU range 13, PRS access enable register */
#define CPU4_ACCENDLMU13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E5B4u)

/** \brief 5B8, CPU4 DLMU range 13, region lower address register */
#define CPU4_ACCENDLMU13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E5B8u)

/** \brief 5BC, CPU4 DLMU range 13, region upper address register */
#define CPU4_ACCENDLMU13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E5BCu)

/** \brief 5C0, CPU4 DLMU range 14, write access enable register A */
#define CPU4_ACCENDLMU14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E5C0u)

/** \brief 5C4, CPU4 DLMU range 14, write access enable register B */
#define CPU4_ACCENDLMU14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E5C4u)

/** \brief 5C8, CPU4 DLMU range 14, read access enable register A */
#define CPU4_ACCENDLMU14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E5C8u)

/** \brief 5CC, CPU4 DLMU range 14, read access enable register B */
#define CPU4_ACCENDLMU14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E5CCu)

/** \brief 5D0, CPU4 DLMU range 14, VM access enable register */
#define CPU4_ACCENDLMU14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E5D0u)

/** \brief 5D4, CPU4 DLMU range 14, PRS access enable register */
#define CPU4_ACCENDLMU14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E5D4u)

/** \brief 5D8, CPU4 DLMU range 14, region lower address register */
#define CPU4_ACCENDLMU14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E5D8u)

/** \brief 5DC, CPU4 DLMU range 14, region upper address register */
#define CPU4_ACCENDLMU14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E5DCu)

/** \brief 5E0, CPU4 DLMU range 15, write access enable register A */
#define CPU4_ACCENDLMU15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E5E0u)

/** \brief 5E4, CPU4 DLMU range 15, write access enable register B */
#define CPU4_ACCENDLMU15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E5E4u)

/** \brief 5E8, CPU4 DLMU range 15, read access enable register A */
#define CPU4_ACCENDLMU15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E5E8u)

/** \brief 5EC, CPU4 DLMU range 15, read access enable register B */
#define CPU4_ACCENDLMU15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E5ECu)

/** \brief 5F0, CPU4 DLMU range 15, VM access enable register */
#define CPU4_ACCENDLMU15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E5F0u)

/** \brief 5F4, CPU4 DLMU range 15, PRS access enable register */
#define CPU4_ACCENDLMU15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E5F4u)

/** \brief 5F8, CPU4 DLMU range 15, region lower address register */
#define CPU4_ACCENDLMU15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF890E5F8u)

/** \brief 5FC, CPU4 DLMU range 15, region upper address register */
#define CPU4_ACCENDLMU15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF890E5FCu)

/** \brief 600, CPU4 SFR, write access enable register A */
#define CPU4_ACCENSFR_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E600u)

/** \brief 604, CPU4 SFR, write access enable register B */
#define CPU4_ACCENSFR_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E604u)

/** \brief 608, CPU4 SFR, read access enable register A */
#define CPU4_ACCENSFR_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E608u)

/** \brief 60C, CPU4 SFR, read access enable register B */
#define CPU4_ACCENSFR_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E60Cu)

/** \brief 610, CPU4 SFR, VM access enable register */
#define CPU4_ACCENSFR_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E610u)

/** \brief 614, CPU4 SFR, PRS access enable register */
#define CPU4_ACCENSFR_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E614u)

/** \brief 700, CPU4 VM0 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E700u)

/** \brief 704, CPU4 VM0 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E704u)

/** \brief 708, CPU4 VM0 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E708u)

/** \brief 70C, CPU4 VM0 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E70Cu)

/** \brief 710, CPU4 VM0 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E710u)

/** \brief 714, CPU4 VM0 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E714u)

/** \brief 720, CPU4 VM1 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E720u)

/** \brief 724, CPU4 VM1 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E724u)

/** \brief 728, CPU4 VM1 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E728u)

/** \brief 72C, CPU4 VM1 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E72Cu)

/** \brief 730, CPU4 VM1 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E730u)

/** \brief 734, CPU4 VM1 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E734u)

/** \brief 740, CPU4 VM2 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E740u)

/** \brief 744, CPU4 VM2 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E744u)

/** \brief 748, CPU4 VM2 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E748u)

/** \brief 74C, CPU4 VM2 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E74Cu)

/** \brief 750, CPU4 VM2 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E750u)

/** \brief 754, CPU4 VM2 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E754u)

/** \brief 760, CPU4 VM3 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E760u)

/** \brief 764, CPU4 VM3 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E764u)

/** \brief 768, CPU4 VM3 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E768u)

/** \brief 76C, CPU4 VM3 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E76Cu)

/** \brief 770, CPU4 VM3 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E770u)

/** \brief 774, CPU4 VM3 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E774u)

/** \brief 780, CPU4 VM4 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E780u)

/** \brief 784, CPU4 VM4 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E784u)

/** \brief 788, CPU4 VM4 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E788u)

/** \brief 78C, CPU4 VM4 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E78Cu)

/** \brief 790, CPU4 VM4 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E790u)

/** \brief 794, CPU4 VM4 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E794u)

/** \brief 7A0, CPU4 VM5 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E7A0u)

/** \brief 7A4, CPU4 VM5 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E7A4u)

/** \brief 7A8, CPU4 VM5 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E7A8u)

/** \brief 7AC, CPU4 VM5 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E7ACu)

/** \brief 7B0, CPU4 VM5 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E7B0u)

/** \brief 7B4, CPU4 VM5 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E7B4u)

/** \brief 7C0, CPU4 VM6 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E7C0u)

/** \brief 7C4, CPU4 VM6 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E7C4u)

/** \brief 7C8, CPU4 VM6 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E7C8u)

/** \brief 7CC, CPU4 VM6 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E7CCu)

/** \brief 7D0, CPU4 VM6 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E7D0u)

/** \brief 7D4, CPU4 VM6 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E7D4u)

/** \brief 7E0, CPU4 VM7 STM, write access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF890E7E0u)

/** \brief 7E4, CPU4 VM7 STM, write access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF890E7E4u)

/** \brief 7E8, CPU4 VM7 STM, read access enable register A", virtualization view" */
#define CPU4_ACCENSTMVM7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF890E7E8u)

/** \brief 7EC, CPU4 VM7 STM, read access enable register B", virtualization view" */
#define CPU4_ACCENSTMVM7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF890E7ECu)

/** \brief 7F0, CPU4 VM7 STM, VM access enable register", virtualization view" */
#define CPU4_ACCENSTMVM7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF890E7F0u)

/** \brief 7F4, CPU4 VM7 STM, PRS access enable register", virtualization view" */
#define CPU4_ACCENSTMVM7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF890E7F4u)

/** \brief FB00, CPU4 overlay range select register */
#define CPU4_OSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OSEL*)0xF890FB00u)

/** \brief FB10, CPU4 redirected address base register 0 */
#define CPU4_BLK0_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB10u)
/** Alias (User Manual Name) for CPU4_BLK0_RABR */
#define CPU4_RABR0 (CPU4_BLK0_RABR)

/** \brief FB14, CPU4 overlay target address register 0 (Low priority) */
#define CPU4_BLK0_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB14u)
/** Alias (User Manual Name) for CPU4_BLK0_OTAR */
#define CPU4_OTAR0 (CPU4_BLK0_OTAR)

/** \brief FB18, CPU4 overlay mask register 0 */
#define CPU4_BLK0_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB18u)
/** Alias (User Manual Name) for CPU4_BLK0_OMASK */
#define CPU4_OMASK0 (CPU4_BLK0_OMASK)

/** \brief FB1C, CPU4 redirected address base register 1 */
#define CPU4_BLK1_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB1Cu)
/** Alias (User Manual Name) for CPU4_BLK1_RABR */
#define CPU4_RABR1 (CPU4_BLK1_RABR)

/** \brief FB20, CPU4 overlay target address register 1 (Low priority) */
#define CPU4_BLK1_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB20u)
/** Alias (User Manual Name) for CPU4_BLK1_OTAR */
#define CPU4_OTAR1 (CPU4_BLK1_OTAR)

/** \brief FB24, CPU4 overlay mask register 1 */
#define CPU4_BLK1_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB24u)
/** Alias (User Manual Name) for CPU4_BLK1_OMASK */
#define CPU4_OMASK1 (CPU4_BLK1_OMASK)

/** \brief FB28, CPU4 redirected address base register 2 */
#define CPU4_BLK2_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB28u)
/** Alias (User Manual Name) for CPU4_BLK2_RABR */
#define CPU4_RABR2 (CPU4_BLK2_RABR)

/** \brief FB2C, CPU4 overlay target address register 2 (Low priority) */
#define CPU4_BLK2_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB2Cu)
/** Alias (User Manual Name) for CPU4_BLK2_OTAR */
#define CPU4_OTAR2 (CPU4_BLK2_OTAR)

/** \brief FB30, CPU4 overlay mask register 2 */
#define CPU4_BLK2_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB30u)
/** Alias (User Manual Name) for CPU4_BLK2_OMASK */
#define CPU4_OMASK2 (CPU4_BLK2_OMASK)

/** \brief FB34, CPU4 redirected address base register 3 */
#define CPU4_BLK3_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB34u)
/** Alias (User Manual Name) for CPU4_BLK3_RABR */
#define CPU4_RABR3 (CPU4_BLK3_RABR)

/** \brief FB38, CPU4 overlay target address register 3 (Low priority) */
#define CPU4_BLK3_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB38u)
/** Alias (User Manual Name) for CPU4_BLK3_OTAR */
#define CPU4_OTAR3 (CPU4_BLK3_OTAR)

/** \brief FB3C, CPU4 overlay mask register 3 */
#define CPU4_BLK3_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB3Cu)
/** Alias (User Manual Name) for CPU4_BLK3_OMASK */
#define CPU4_OMASK3 (CPU4_BLK3_OMASK)

/** \brief FB40, CPU4 redirected address base register 4 */
#define CPU4_BLK4_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB40u)
/** Alias (User Manual Name) for CPU4_BLK4_RABR */
#define CPU4_RABR4 (CPU4_BLK4_RABR)

/** \brief FB44, CPU4 overlay target address register 4 (Low priority) */
#define CPU4_BLK4_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB44u)
/** Alias (User Manual Name) for CPU4_BLK4_OTAR */
#define CPU4_OTAR4 (CPU4_BLK4_OTAR)

/** \brief FB48, CPU4 overlay mask register 4 */
#define CPU4_BLK4_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB48u)
/** Alias (User Manual Name) for CPU4_BLK4_OMASK */
#define CPU4_OMASK4 (CPU4_BLK4_OMASK)

/** \brief FB4C, CPU4 redirected address base register 5 */
#define CPU4_BLK5_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB4Cu)
/** Alias (User Manual Name) for CPU4_BLK5_RABR */
#define CPU4_RABR5 (CPU4_BLK5_RABR)

/** \brief FB50, CPU4 overlay target address register 5 (Low priority) */
#define CPU4_BLK5_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB50u)
/** Alias (User Manual Name) for CPU4_BLK5_OTAR */
#define CPU4_OTAR5 (CPU4_BLK5_OTAR)

/** \brief FB54, CPU4 overlay mask register 5 */
#define CPU4_BLK5_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB54u)
/** Alias (User Manual Name) for CPU4_BLK5_OMASK */
#define CPU4_OMASK5 (CPU4_BLK5_OMASK)

/** \brief FB58, CPU4 redirected address base register 6 */
#define CPU4_BLK6_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB58u)
/** Alias (User Manual Name) for CPU4_BLK6_RABR */
#define CPU4_RABR6 (CPU4_BLK6_RABR)

/** \brief FB5C, CPU4 overlay target address register 6 (Low priority) */
#define CPU4_BLK6_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB5Cu)
/** Alias (User Manual Name) for CPU4_BLK6_OTAR */
#define CPU4_OTAR6 (CPU4_BLK6_OTAR)

/** \brief FB60, CPU4 overlay mask register 6 */
#define CPU4_BLK6_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB60u)
/** Alias (User Manual Name) for CPU4_BLK6_OMASK */
#define CPU4_OMASK6 (CPU4_BLK6_OMASK)

/** \brief FB64, CPU4 redirected address base register 7 */
#define CPU4_BLK7_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB64u)
/** Alias (User Manual Name) for CPU4_BLK7_RABR */
#define CPU4_RABR7 (CPU4_BLK7_RABR)

/** \brief FB68, CPU4 overlay target address register 7 (Low priority) */
#define CPU4_BLK7_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB68u)
/** Alias (User Manual Name) for CPU4_BLK7_OTAR */
#define CPU4_OTAR7 (CPU4_BLK7_OTAR)

/** \brief FB6C, CPU4 overlay mask register 7 */
#define CPU4_BLK7_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB6Cu)
/** Alias (User Manual Name) for CPU4_BLK7_OMASK */
#define CPU4_OMASK7 (CPU4_BLK7_OMASK)

/** \brief FB70, CPU4 redirected address base register 8 */
#define CPU4_BLK8_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB70u)
/** Alias (User Manual Name) for CPU4_BLK8_RABR */
#define CPU4_RABR8 (CPU4_BLK8_RABR)

/** \brief FB74, CPU4 overlay target address register 8 (Low priority) */
#define CPU4_BLK8_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB74u)
/** Alias (User Manual Name) for CPU4_BLK8_OTAR */
#define CPU4_OTAR8 (CPU4_BLK8_OTAR)

/** \brief FB78, CPU4 overlay mask register 8 */
#define CPU4_BLK8_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB78u)
/** Alias (User Manual Name) for CPU4_BLK8_OMASK */
#define CPU4_OMASK8 (CPU4_BLK8_OMASK)

/** \brief FB7C, CPU4 redirected address base register 9 */
#define CPU4_BLK9_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB7Cu)
/** Alias (User Manual Name) for CPU4_BLK9_RABR */
#define CPU4_RABR9 (CPU4_BLK9_RABR)

/** \brief FB80, CPU4 overlay target address register 9 (Low priority) */
#define CPU4_BLK9_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB80u)
/** Alias (User Manual Name) for CPU4_BLK9_OTAR */
#define CPU4_OTAR9 (CPU4_BLK9_OTAR)

/** \brief FB84, CPU4 overlay mask register 9 */
#define CPU4_BLK9_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB84u)
/** Alias (User Manual Name) for CPU4_BLK9_OMASK */
#define CPU4_OMASK9 (CPU4_BLK9_OMASK)

/** \brief FB88, CPU4 redirected address base register 10 */
#define CPU4_BLK10_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB88u)
/** Alias (User Manual Name) for CPU4_BLK10_RABR */
#define CPU4_RABR10 (CPU4_BLK10_RABR)

/** \brief FB8C, CPU4 overlay target address register 10 (Low priority) */
#define CPU4_BLK10_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB8Cu)
/** Alias (User Manual Name) for CPU4_BLK10_OTAR */
#define CPU4_OTAR10 (CPU4_BLK10_OTAR)

/** \brief FB90, CPU4 overlay mask register 10 */
#define CPU4_BLK10_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB90u)
/** Alias (User Manual Name) for CPU4_BLK10_OMASK */
#define CPU4_OMASK10 (CPU4_BLK10_OMASK)

/** \brief FB94, CPU4 redirected address base register 11 */
#define CPU4_BLK11_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FB94u)
/** Alias (User Manual Name) for CPU4_BLK11_RABR */
#define CPU4_RABR11 (CPU4_BLK11_RABR)

/** \brief FB98, CPU4 overlay target address register 11 (Low priority) */
#define CPU4_BLK11_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FB98u)
/** Alias (User Manual Name) for CPU4_BLK11_OTAR */
#define CPU4_OTAR11 (CPU4_BLK11_OTAR)

/** \brief FB9C, CPU4 overlay mask register 11 */
#define CPU4_BLK11_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FB9Cu)
/** Alias (User Manual Name) for CPU4_BLK11_OMASK */
#define CPU4_OMASK11 (CPU4_BLK11_OMASK)

/** \brief FBA0, CPU4 redirected address base register 12 */
#define CPU4_BLK12_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBA0u)
/** Alias (User Manual Name) for CPU4_BLK12_RABR */
#define CPU4_RABR12 (CPU4_BLK12_RABR)

/** \brief FBA4, CPU4 overlay target address register 12 (Low priority) */
#define CPU4_BLK12_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBA4u)
/** Alias (User Manual Name) for CPU4_BLK12_OTAR */
#define CPU4_OTAR12 (CPU4_BLK12_OTAR)

/** \brief FBA8, CPU4 overlay mask register 12 */
#define CPU4_BLK12_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBA8u)
/** Alias (User Manual Name) for CPU4_BLK12_OMASK */
#define CPU4_OMASK12 (CPU4_BLK12_OMASK)

/** \brief FBAC, CPU4 redirected address base register 13 */
#define CPU4_BLK13_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBACu)
/** Alias (User Manual Name) for CPU4_BLK13_RABR */
#define CPU4_RABR13 (CPU4_BLK13_RABR)

/** \brief FBB0, CPU4 overlay target address register 13 (Low priority) */
#define CPU4_BLK13_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBB0u)
/** Alias (User Manual Name) for CPU4_BLK13_OTAR */
#define CPU4_OTAR13 (CPU4_BLK13_OTAR)

/** \brief FBB4, CPU4 overlay mask register 13 */
#define CPU4_BLK13_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBB4u)
/** Alias (User Manual Name) for CPU4_BLK13_OMASK */
#define CPU4_OMASK13 (CPU4_BLK13_OMASK)

/** \brief FBB8, CPU4 redirected address base register 14 */
#define CPU4_BLK14_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBB8u)
/** Alias (User Manual Name) for CPU4_BLK14_RABR */
#define CPU4_RABR14 (CPU4_BLK14_RABR)

/** \brief FBBC, CPU4 overlay target address register 14 (Low priority) */
#define CPU4_BLK14_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBBCu)
/** Alias (User Manual Name) for CPU4_BLK14_OTAR */
#define CPU4_OTAR14 (CPU4_BLK14_OTAR)

/** \brief FBC0, CPU4 overlay mask register 14 */
#define CPU4_BLK14_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBC0u)
/** Alias (User Manual Name) for CPU4_BLK14_OMASK */
#define CPU4_OMASK14 (CPU4_BLK14_OMASK)

/** \brief FBC4, CPU4 redirected address base register 15 */
#define CPU4_BLK15_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBC4u)
/** Alias (User Manual Name) for CPU4_BLK15_RABR */
#define CPU4_RABR15 (CPU4_BLK15_RABR)

/** \brief FBC8, CPU4 overlay target address register 15 (Low priority) */
#define CPU4_BLK15_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBC8u)
/** Alias (User Manual Name) for CPU4_BLK15_OTAR */
#define CPU4_OTAR15 (CPU4_BLK15_OTAR)

/** \brief FBCC, CPU4 overlay mask register 15 */
#define CPU4_BLK15_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBCCu)
/** Alias (User Manual Name) for CPU4_BLK15_OMASK */
#define CPU4_OMASK15 (CPU4_BLK15_OMASK)

/** \brief FBD0, CPU4 redirected address base register 16 */
#define CPU4_BLK16_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBD0u)
/** Alias (User Manual Name) for CPU4_BLK16_RABR */
#define CPU4_RABR16 (CPU4_BLK16_RABR)

/** \brief FBD4, CPU4 overlay target address register 16 (Low priority) */
#define CPU4_BLK16_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBD4u)
/** Alias (User Manual Name) for CPU4_BLK16_OTAR */
#define CPU4_OTAR16 (CPU4_BLK16_OTAR)

/** \brief FBD8, CPU4 overlay mask register 16 */
#define CPU4_BLK16_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBD8u)
/** Alias (User Manual Name) for CPU4_BLK16_OMASK */
#define CPU4_OMASK16 (CPU4_BLK16_OMASK)

/** \brief FBDC, CPU4 redirected address base register 17 */
#define CPU4_BLK17_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBDCu)
/** Alias (User Manual Name) for CPU4_BLK17_RABR */
#define CPU4_RABR17 (CPU4_BLK17_RABR)

/** \brief FBE0, CPU4 overlay target address register 17 (Low priority) */
#define CPU4_BLK17_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBE0u)
/** Alias (User Manual Name) for CPU4_BLK17_OTAR */
#define CPU4_OTAR17 (CPU4_BLK17_OTAR)

/** \brief FBE4, CPU4 overlay mask register 17 */
#define CPU4_BLK17_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBE4u)
/** Alias (User Manual Name) for CPU4_BLK17_OMASK */
#define CPU4_OMASK17 (CPU4_BLK17_OMASK)

/** \brief FBE8, CPU4 redirected address base register 18 */
#define CPU4_BLK18_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBE8u)
/** Alias (User Manual Name) for CPU4_BLK18_RABR */
#define CPU4_RABR18 (CPU4_BLK18_RABR)

/** \brief FBEC, CPU4 overlay target address register 18 (Low priority) */
#define CPU4_BLK18_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBECu)
/** Alias (User Manual Name) for CPU4_BLK18_OTAR */
#define CPU4_OTAR18 (CPU4_BLK18_OTAR)

/** \brief FBF0, CPU4 overlay mask register 18 */
#define CPU4_BLK18_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBF0u)
/** Alias (User Manual Name) for CPU4_BLK18_OMASK */
#define CPU4_OMASK18 (CPU4_BLK18_OMASK)

/** \brief FBF4, CPU4 redirected address base register 19 */
#define CPU4_BLK19_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FBF4u)
/** Alias (User Manual Name) for CPU4_BLK19_RABR */
#define CPU4_RABR19 (CPU4_BLK19_RABR)

/** \brief FBF8, CPU4 overlay target address register 19 (Low priority) */
#define CPU4_BLK19_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FBF8u)
/** Alias (User Manual Name) for CPU4_BLK19_OTAR */
#define CPU4_OTAR19 (CPU4_BLK19_OTAR)

/** \brief FBFC, CPU4 overlay mask register 19 */
#define CPU4_BLK19_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FBFCu)
/** Alias (User Manual Name) for CPU4_BLK19_OMASK */
#define CPU4_OMASK19 (CPU4_BLK19_OMASK)

/** \brief FC00, CPU4 redirected address base register 20 */
#define CPU4_BLK20_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC00u)
/** Alias (User Manual Name) for CPU4_BLK20_RABR */
#define CPU4_RABR20 (CPU4_BLK20_RABR)

/** \brief FC04, CPU4 overlay target address register 20 (Low priority) */
#define CPU4_BLK20_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC04u)
/** Alias (User Manual Name) for CPU4_BLK20_OTAR */
#define CPU4_OTAR20 (CPU4_BLK20_OTAR)

/** \brief FC08, CPU4 overlay mask register 20 */
#define CPU4_BLK20_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC08u)
/** Alias (User Manual Name) for CPU4_BLK20_OMASK */
#define CPU4_OMASK20 (CPU4_BLK20_OMASK)

/** \brief FC0C, CPU4 redirected address base register 21 */
#define CPU4_BLK21_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC0Cu)
/** Alias (User Manual Name) for CPU4_BLK21_RABR */
#define CPU4_RABR21 (CPU4_BLK21_RABR)

/** \brief FC10, CPU4 overlay target address register 21 (Low priority) */
#define CPU4_BLK21_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC10u)
/** Alias (User Manual Name) for CPU4_BLK21_OTAR */
#define CPU4_OTAR21 (CPU4_BLK21_OTAR)

/** \brief FC14, CPU4 overlay mask register 21 */
#define CPU4_BLK21_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC14u)
/** Alias (User Manual Name) for CPU4_BLK21_OMASK */
#define CPU4_OMASK21 (CPU4_BLK21_OMASK)

/** \brief FC18, CPU4 redirected address base register 22 */
#define CPU4_BLK22_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC18u)
/** Alias (User Manual Name) for CPU4_BLK22_RABR */
#define CPU4_RABR22 (CPU4_BLK22_RABR)

/** \brief FC1C, CPU4 overlay target address register 22 (Low priority) */
#define CPU4_BLK22_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC1Cu)
/** Alias (User Manual Name) for CPU4_BLK22_OTAR */
#define CPU4_OTAR22 (CPU4_BLK22_OTAR)

/** \brief FC20, CPU4 overlay mask register 22 */
#define CPU4_BLK22_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC20u)
/** Alias (User Manual Name) for CPU4_BLK22_OMASK */
#define CPU4_OMASK22 (CPU4_BLK22_OMASK)

/** \brief FC24, CPU4 redirected address base register 23 */
#define CPU4_BLK23_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC24u)
/** Alias (User Manual Name) for CPU4_BLK23_RABR */
#define CPU4_RABR23 (CPU4_BLK23_RABR)

/** \brief FC28, CPU4 overlay target address register 23 (Low priority) */
#define CPU4_BLK23_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC28u)
/** Alias (User Manual Name) for CPU4_BLK23_OTAR */
#define CPU4_OTAR23 (CPU4_BLK23_OTAR)

/** \brief FC2C, CPU4 overlay mask register 23 */
#define CPU4_BLK23_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC2Cu)
/** Alias (User Manual Name) for CPU4_BLK23_OMASK */
#define CPU4_OMASK23 (CPU4_BLK23_OMASK)

/** \brief FC30, CPU4 redirected address base register 24 */
#define CPU4_BLK24_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC30u)
/** Alias (User Manual Name) for CPU4_BLK24_RABR */
#define CPU4_RABR24 (CPU4_BLK24_RABR)

/** \brief FC34, CPU4 overlay target address register 24 (Low priority) */
#define CPU4_BLK24_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC34u)
/** Alias (User Manual Name) for CPU4_BLK24_OTAR */
#define CPU4_OTAR24 (CPU4_BLK24_OTAR)

/** \brief FC38, CPU4 overlay mask register 24 */
#define CPU4_BLK24_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC38u)
/** Alias (User Manual Name) for CPU4_BLK24_OMASK */
#define CPU4_OMASK24 (CPU4_BLK24_OMASK)

/** \brief FC3C, CPU4 redirected address base register 25 */
#define CPU4_BLK25_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC3Cu)
/** Alias (User Manual Name) for CPU4_BLK25_RABR */
#define CPU4_RABR25 (CPU4_BLK25_RABR)

/** \brief FC40, CPU4 overlay target address register 25 (Low priority) */
#define CPU4_BLK25_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC40u)
/** Alias (User Manual Name) for CPU4_BLK25_OTAR */
#define CPU4_OTAR25 (CPU4_BLK25_OTAR)

/** \brief FC44, CPU4 overlay mask register 25 */
#define CPU4_BLK25_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC44u)
/** Alias (User Manual Name) for CPU4_BLK25_OMASK */
#define CPU4_OMASK25 (CPU4_BLK25_OMASK)

/** \brief FC48, CPU4 redirected address base register 26 */
#define CPU4_BLK26_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC48u)
/** Alias (User Manual Name) for CPU4_BLK26_RABR */
#define CPU4_RABR26 (CPU4_BLK26_RABR)

/** \brief FC4C, CPU4 overlay target address register 26 (Low priority) */
#define CPU4_BLK26_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC4Cu)
/** Alias (User Manual Name) for CPU4_BLK26_OTAR */
#define CPU4_OTAR26 (CPU4_BLK26_OTAR)

/** \brief FC50, CPU4 overlay mask register 26 */
#define CPU4_BLK26_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC50u)
/** Alias (User Manual Name) for CPU4_BLK26_OMASK */
#define CPU4_OMASK26 (CPU4_BLK26_OMASK)

/** \brief FC54, CPU4 redirected address base register 27 */
#define CPU4_BLK27_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC54u)
/** Alias (User Manual Name) for CPU4_BLK27_RABR */
#define CPU4_RABR27 (CPU4_BLK27_RABR)

/** \brief FC58, CPU4 overlay target address register 27 (Low priority) */
#define CPU4_BLK27_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC58u)
/** Alias (User Manual Name) for CPU4_BLK27_OTAR */
#define CPU4_OTAR27 (CPU4_BLK27_OTAR)

/** \brief FC5C, CPU4 overlay mask register 27 */
#define CPU4_BLK27_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC5Cu)
/** Alias (User Manual Name) for CPU4_BLK27_OMASK */
#define CPU4_OMASK27 (CPU4_BLK27_OMASK)

/** \brief FC60, CPU4 redirected address base register 28 */
#define CPU4_BLK28_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC60u)
/** Alias (User Manual Name) for CPU4_BLK28_RABR */
#define CPU4_RABR28 (CPU4_BLK28_RABR)

/** \brief FC64, CPU4 overlay target address register 28 (Low priority) */
#define CPU4_BLK28_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC64u)
/** Alias (User Manual Name) for CPU4_BLK28_OTAR */
#define CPU4_OTAR28 (CPU4_BLK28_OTAR)

/** \brief FC68, CPU4 overlay mask register 28 */
#define CPU4_BLK28_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC68u)
/** Alias (User Manual Name) for CPU4_BLK28_OMASK */
#define CPU4_OMASK28 (CPU4_BLK28_OMASK)

/** \brief FC6C, CPU4 redirected address base register 29 */
#define CPU4_BLK29_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC6Cu)
/** Alias (User Manual Name) for CPU4_BLK29_RABR */
#define CPU4_RABR29 (CPU4_BLK29_RABR)

/** \brief FC70, CPU4 overlay target address register 29 (Low priority) */
#define CPU4_BLK29_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC70u)
/** Alias (User Manual Name) for CPU4_BLK29_OTAR */
#define CPU4_OTAR29 (CPU4_BLK29_OTAR)

/** \brief FC74, CPU4 overlay mask register 29 */
#define CPU4_BLK29_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC74u)
/** Alias (User Manual Name) for CPU4_BLK29_OMASK */
#define CPU4_OMASK29 (CPU4_BLK29_OMASK)

/** \brief FC78, CPU4 redirected address base register 30 */
#define CPU4_BLK30_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC78u)
/** Alias (User Manual Name) for CPU4_BLK30_RABR */
#define CPU4_RABR30 (CPU4_BLK30_RABR)

/** \brief FC7C, CPU4 overlay target address register 30 (Low priority) */
#define CPU4_BLK30_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC7Cu)
/** Alias (User Manual Name) for CPU4_BLK30_OTAR */
#define CPU4_OTAR30 (CPU4_BLK30_OTAR)

/** \brief FC80, CPU4 overlay mask register 30 */
#define CPU4_BLK30_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC80u)
/** Alias (User Manual Name) for CPU4_BLK30_OMASK */
#define CPU4_OMASK30 (CPU4_BLK30_OMASK)

/** \brief FC84, CPU4 redirected address base register 31 */
#define CPU4_BLK31_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF890FC84u)
/** Alias (User Manual Name) for CPU4_BLK31_RABR */
#define CPU4_RABR31 (CPU4_BLK31_RABR)

/** \brief FC88, CPU4 overlay target address register 31 (Low priority) */
#define CPU4_BLK31_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF890FC88u)
/** Alias (User Manual Name) for CPU4_BLK31_OTAR */
#define CPU4_OTAR31 (CPU4_BLK31_OTAR)

/** \brief FC8C, CPU4 overlay mask register 31 */
#define CPU4_BLK31_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF890FC8Cu)
/** Alias (User Manual Name) for CPU4_BLK31_OMASK */
#define CPU4_OMASK31 (CPU4_BLK31_OMASK)

/** \brief 1030, CPU4 SRI error generation register */
#define CPU4_HRA_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8911030u)

/** \brief 1040, CPU4 lockstep test register */
#define CPU4_HRA_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8911040u)

/** \brief 8100, CPU4 data access cacheability register */
#define CPU4_HRA_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8918100u)

/** \brief 8104, CPU4 code access cacheability register */
#define CPU4_HRA_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8918104u)

/** \brief 8108, CPU4 peripheral space identifier register */
#define CPU4_HRA_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8918108u)

/** \brief 9000, CPU4 data control register 2 */
#define CPU4_HRA_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8919000u)

/** \brief 9008, CPU4 data control register 1 */
#define CPU4_HRA_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8919008u)

/** \brief 900C, CPU4 SIST mode access control register */
#define CPU4_HRA_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF891900Cu)

/** \brief 9010, CPU4 HR specific data synchronous trap register */
#define CPU4_HRA_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8919010u)

/** \brief 9018, CPU4 HR specific data asynchronous trap register */
#define CPU4_HRA_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8919018u)

/** \brief 901C, CPU4 HR specific data error address register */
#define CPU4_HRA_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF891901Cu)

/** \brief 9020, CPU4 data integrity error address register */
#define CPU4_HRA_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8919020u)

/** \brief 9024, CPU4 data integrity error trap register */
#define CPU4_HRA_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8919024u)

/** \brief 9040, CPU4 data memory control register */
#define CPU4_HRA_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8919040u)

/** \brief 9200, CPU4 HR specific program synchronous trap register */
#define CPU4_HRA_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8919200u)

/** \brief 9204, CPU4 program control 1 */
#define CPU4_HRA_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8919204u)

/** \brief 9208, CPU4 program control 2 */
#define CPU4_HRA_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8919208u)

/** \brief 920C, CPU4 program control 0 */
#define CPU4_HRA_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF891920Cu)

/** \brief 9210, CPU4 HR specific program integrity error address register */
#define CPU4_HRA_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8919210u)

/** \brief 9214, CPU4 HR specific program integrity error trap register */
#define CPU4_HRA_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8919214u)

/** \brief 9400, CPU4 compatibility control register */
#define CPU4_HRA_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8919400u)

/** \brief A000, CPU4 HR specific trap control register */
#define CPU4_HRA_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF891A000u)

/** \brief A004, CPU4 HR specific trapping instruction program counter register */
#define CPU4_HRA_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF891A004u)

/** \brief A008, CPU4 HR specific trapping instruction opcode register */
#define CPU4_HRA_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF891A008u)

/** \brief A010, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRA_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF891A010u)

/** \brief A014, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRA_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF891A014u)

/** \brief A018, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRA_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF891A018u)

/** \brief A01C, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRA_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF891A01Cu)

/** \brief A020, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRA_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF891A020u)

/** \brief A024, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRA_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF891A024u)

/** \brief A030, CPU4 HR specific synchronous trap control register */
#define CPU4_HRA_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF891A030u)

/** \brief A034, CPU4 HR specific trapping instruction opcode register */
#define CPU4_HRA_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF891A034u)

/** \brief C000, CPU4 HR specific data protection range 0, lower bound register */
#define CPU4_HRA_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C000u)

/** \brief C004, CPU4 HR specific data protection range 0, upper bound register */
#define CPU4_HRA_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C004u)

/** \brief C008, CPU4 HR specific data protection range 1, lower bound register */
#define CPU4_HRA_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C008u)

/** \brief C00C, CPU4 HR specific data protection range 1, upper bound register */
#define CPU4_HRA_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C00Cu)

/** \brief C010, CPU4 HR specific data protection range 2, lower bound register */
#define CPU4_HRA_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C010u)

/** \brief C014, CPU4 HR specific data protection range 2, upper bound register */
#define CPU4_HRA_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C014u)

/** \brief C018, CPU4 HR specific data protection range 3, lower bound register */
#define CPU4_HRA_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C018u)

/** \brief C01C, CPU4 HR specific data protection range 3, upper bound register */
#define CPU4_HRA_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C01Cu)

/** \brief C020, CPU4 HR specific data protection range 4, lower bound register */
#define CPU4_HRA_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C020u)

/** \brief C024, CPU4 HR specific data protection range 4, upper bound register */
#define CPU4_HRA_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C024u)

/** \brief C028, CPU4 HR specific data protection range 5, lower bound register */
#define CPU4_HRA_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C028u)

/** \brief C02C, CPU4 HR specific data protection range 5, upper bound register */
#define CPU4_HRA_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C02Cu)

/** \brief C030, CPU4 HR specific data protection range 6, lower bound register */
#define CPU4_HRA_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C030u)

/** \brief C034, CPU4 HR specific data protection range 6, upper bound register */
#define CPU4_HRA_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C034u)

/** \brief C038, CPU4 HR specific data protection range 7, lower bound register */
#define CPU4_HRA_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C038u)

/** \brief C03C, CPU4 HR specific data protection range 7, upper bound register */
#define CPU4_HRA_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C03Cu)

/** \brief C040, CPU4 HR specific data protection range 8, lower bound register */
#define CPU4_HRA_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C040u)

/** \brief C044, CPU4 HR specific data protection range 8, upper bound register */
#define CPU4_HRA_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C044u)

/** \brief C048, CPU4 HR specific data protection range 9, lower bound register */
#define CPU4_HRA_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C048u)

/** \brief C04C, CPU4 HR specific data protection range 9, upper bound register */
#define CPU4_HRA_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C04Cu)

/** \brief C050, CPU4 HR specific data protection range 10, lower bound register */
#define CPU4_HRA_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C050u)

/** \brief C054, CPU4 HR specific data protection range 10, upper bound register */
#define CPU4_HRA_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C054u)

/** \brief C058, CPU4 HR specific data protection range 11, lower bound register */
#define CPU4_HRA_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C058u)

/** \brief C05C, CPU4 HR specific data protection range 11, upper bound register */
#define CPU4_HRA_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C05Cu)

/** \brief C060, CPU4 HR specific data protection range 12, lower bound register */
#define CPU4_HRA_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C060u)

/** \brief C064, CPU4 HR specific data protection range 12, upper bound register */
#define CPU4_HRA_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C064u)

/** \brief C068, CPU4 HR specific data protection range 13, lower bound register */
#define CPU4_HRA_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C068u)

/** \brief C06C, CPU4 HR specific data protection range 13, upper bound register */
#define CPU4_HRA_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C06Cu)

/** \brief C070, CPU4 HR specific data protection range 14, lower bound register */
#define CPU4_HRA_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C070u)

/** \brief C074, CPU4 HR specific data protection range 14, upper bound register */
#define CPU4_HRA_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C074u)

/** \brief C078, CPU4 HR specific data protection range 15, lower bound register */
#define CPU4_HRA_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C078u)

/** \brief C07C, CPU4 HR specific data protection range 15, upper bound register */
#define CPU4_HRA_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C07Cu)

/** \brief C080, CPU4 HR specific data protection range 16, lower bound register */
#define CPU4_HRA_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C080u)

/** \brief C084, CPU4 HR specific data protection range 16, upper bound register */
#define CPU4_HRA_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C084u)

/** \brief C088, CPU4 HR specific data protection range 17, lower bound register */
#define CPU4_HRA_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C088u)

/** \brief C08C, CPU4 HR specific data protection range 17, upper bound register */
#define CPU4_HRA_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C08Cu)

/** \brief C090, CPU4 HR specific data protection range 18, lower bound register */
#define CPU4_HRA_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C090u)

/** \brief C094, CPU4 HR specific data protection range 18, upper bound register */
#define CPU4_HRA_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C094u)

/** \brief C098, CPU4 HR specific data protection range 19, lower bound register */
#define CPU4_HRA_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C098u)

/** \brief C09C, CPU4 HR specific data protection range 19, upper bound register */
#define CPU4_HRA_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C09Cu)

/** \brief C0A0, CPU4 HR specific data protection range 20, lower bound register */
#define CPU4_HRA_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C0A0u)

/** \brief C0A4, CPU4 HR specific data protection range 20, upper bound register */
#define CPU4_HRA_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C0A4u)

/** \brief C0A8, CPU4 HR specific data protection range 21, lower bound register */
#define CPU4_HRA_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C0A8u)

/** \brief C0AC, CPU4 HR specific data protection range 21, upper bound register */
#define CPU4_HRA_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C0ACu)

/** \brief C0B0, CPU4 HR specific data protection range 22, lower bound register */
#define CPU4_HRA_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C0B0u)

/** \brief C0B4, CPU4 HR specific data protection range 22, upper bound register */
#define CPU4_HRA_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C0B4u)

/** \brief C0B8, CPU4 HR specific data protection range 23, lower bound register */
#define CPU4_HRA_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF891C0B8u)

/** \brief C0BC, CPU4 HR specific data protection range 23, upper bound register */
#define CPU4_HRA_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF891C0BCu)

/** \brief D000, CPU4 HR specific code protection range 0, lower bound register */
#define CPU4_HRA_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D000u)

/** \brief D004, CPU4 HR specific code protection range 0, upper bound register */
#define CPU4_HRA_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D004u)

/** \brief D008, CPU4 HR specific code protection range 1, lower bound register */
#define CPU4_HRA_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D008u)

/** \brief D00C, CPU4 HR specific code protection range 1, upper bound register */
#define CPU4_HRA_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D00Cu)

/** \brief D010, CPU4 HR specific code protection range 2, lower bound register */
#define CPU4_HRA_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D010u)

/** \brief D014, CPU4 HR specific code protection range 2, upper bound register */
#define CPU4_HRA_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D014u)

/** \brief D018, CPU4 HR specific code protection range 3, lower bound register */
#define CPU4_HRA_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D018u)

/** \brief D01C, CPU4 HR specific code protection range 3, upper bound register */
#define CPU4_HRA_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D01Cu)

/** \brief D020, CPU4 HR specific code protection range 4, lower bound register */
#define CPU4_HRA_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D020u)

/** \brief D024, CPU4 HR specific code protection range 4, upper bound register */
#define CPU4_HRA_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D024u)

/** \brief D028, CPU4 HR specific code protection range 5, lower bound register */
#define CPU4_HRA_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D028u)

/** \brief D02C, CPU4 HR specific code protection range 5, upper bound register */
#define CPU4_HRA_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D02Cu)

/** \brief D030, CPU4 HR specific code protection range 6, lower bound register */
#define CPU4_HRA_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D030u)

/** \brief D034, CPU4 HR specific code protection range 6, upper bound register */
#define CPU4_HRA_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D034u)

/** \brief D038, CPU4 HR specific code protection range 7, lower bound register */
#define CPU4_HRA_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D038u)

/** \brief D03C, CPU4 HR specific code protection range 7, upper bound register */
#define CPU4_HRA_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D03Cu)

/** \brief D040, CPU4 HR specific code protection range 8, lower bound register */
#define CPU4_HRA_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D040u)

/** \brief D044, CPU4 HR specific code protection range 8, upper bound register */
#define CPU4_HRA_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D044u)

/** \brief D048, CPU4 HR specific code protection range 9, lower bound register */
#define CPU4_HRA_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D048u)

/** \brief D04C, CPU4 HR specific code protection range 9, upper bound register */
#define CPU4_HRA_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D04Cu)

/** \brief D050, CPU4 HR specific code protection range 10, lower bound register */
#define CPU4_HRA_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D050u)

/** \brief D054, CPU4 HR specific code protection range 10, upper bound register */
#define CPU4_HRA_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D054u)

/** \brief D058, CPU4 HR specific code protection range 11, lower bound register */
#define CPU4_HRA_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D058u)

/** \brief D05C, CPU4 HR specific code protection range 11, upper bound register */
#define CPU4_HRA_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D05Cu)

/** \brief D060, CPU4 HR specific code protection range 12, lower bound register */
#define CPU4_HRA_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D060u)

/** \brief D064, CPU4 HR specific code protection range 12, upper bound register */
#define CPU4_HRA_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D064u)

/** \brief D068, CPU4 HR specific code protection range 13, lower bound register */
#define CPU4_HRA_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D068u)

/** \brief D06C, CPU4 HR specific code protection range 13, upper bound register */
#define CPU4_HRA_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D06Cu)

/** \brief D070, CPU4 HR specific code protection range 14, lower bound register */
#define CPU4_HRA_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D070u)

/** \brief D074, CPU4 HR specific code protection range 14, upper bound register */
#define CPU4_HRA_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D074u)

/** \brief D078, CPU4 HR specific code protection range 15, lower bound register */
#define CPU4_HRA_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF891D078u)

/** \brief D07C, CPU4 HR specific code protection range 15, upper bound register */
#define CPU4_HRA_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF891D07Cu)

/** \brief E000, CPU4 HR specific code protection execute enable register set 0 */
#define CPU4_HRA_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E000u)

/** \brief E004, CPU4 HR specific code protection execute enable register set 1 */
#define CPU4_HRA_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E004u)

/** \brief E008, CPU4 HR specific code protection execute enable register set 2 */
#define CPU4_HRA_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E008u)

/** \brief E00C, CPU4 HR specific code protection execute enable register set 3 */
#define CPU4_HRA_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E00Cu)

/** \brief E010, CPU4 HR specific data protection read enable register set 0 */
#define CPU4_HRA_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E010u)

/** \brief E014, CPU4 HR specific data protection read enable register set 1 */
#define CPU4_HRA_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E014u)

/** \brief E018, CPU4 HR specific data protection read enable register set 2 */
#define CPU4_HRA_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E018u)

/** \brief E01C, CPU4 HR specific data protection read enable register set 3 */
#define CPU4_HRA_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E01Cu)

/** \brief E020, CPU4 HR specific data protection write enable register set 0 */
#define CPU4_HRA_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E020u)

/** \brief E024, CPU4 HR specific data protection write enable register set 1 */
#define CPU4_HRA_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E024u)

/** \brief E028, CPU4 HR specific data protection write enable register set 2 */
#define CPU4_HRA_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E028u)

/** \brief E02C, CPU4 HR specific data protection write enable register set 3 */
#define CPU4_HRA_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E02Cu)

/** \brief E040, CPU4 HR specific code protection execute enable register set 4 */
#define CPU4_HRA_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E040u)

/** \brief E044, CPU4 HR specific code protection execute enable register set 5 */
#define CPU4_HRA_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E044u)

/** \brief E048, CPU4 HR specific code protection execute enable register set 6 */
#define CPU4_HRA_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E048u)

/** \brief E04C, CPU4 HR specific code protection execute enable register set 7 */
#define CPU4_HRA_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF891E04Cu)

/** \brief E050, CPU4 HR specific data protection read enable register set 4 */
#define CPU4_HRA_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E050u)

/** \brief E054, CPU4 HR specific data protection read enable register set 5 */
#define CPU4_HRA_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E054u)

/** \brief E058, CPU4 HR specific data protection read enable register set 6 */
#define CPU4_HRA_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E058u)

/** \brief E05C, CPU4 HR specific data protection read enable register set 7 */
#define CPU4_HRA_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF891E05Cu)

/** \brief E060, CPU4 HR specific data protection write enable register set 4 */
#define CPU4_HRA_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E060u)

/** \brief E064, CPU4 HR specific data protection write enable register set 5 */
#define CPU4_HRA_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E064u)

/** \brief E068, CPU4 HR specific data protection write enable register set 6 */
#define CPU4_HRA_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E068u)

/** \brief E06C, CPU4 HR specific data protection write enable register set 7 */
#define CPU4_HRA_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF891E06Cu)

/** \brief E400, CPU4 HR specific temporal protection system control register */
#define CPU4_HRA_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF891E400u)

/** \brief E404, CPU4 HR specific temporal protection system timer register 0 */
#define CPU4_HRA_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF891E404u)

/** \brief E408, CPU4 HR specific temporal protection system timer register 1 */
#define CPU4_HRA_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF891E408u)

/** \brief E40C, CPU4 HR specific temporal protection system timer register 2 */
#define CPU4_HRA_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF891E40Cu)

/** \brief F000, CPU4 trigger event 0 */
#define CPU4_HRA_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F000u)
/** Alias (User Manual Name) for CPU4_HRA_TR0_EVT */
#define CPU4_HRA_TR0EVT (CPU4_HRA_TR0_EVT)

/** \brief F004, CPU4 trigger address 0 */
#define CPU4_HRA_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F004u)
/** Alias (User Manual Name) for CPU4_HRA_TR0_ADR */
#define CPU4_HRA_TR0ADR (CPU4_HRA_TR0_ADR)

/** \brief F008, CPU4 trigger event 1 */
#define CPU4_HRA_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F008u)
/** Alias (User Manual Name) for CPU4_HRA_TR1_EVT */
#define CPU4_HRA_TR1EVT (CPU4_HRA_TR1_EVT)

/** \brief F00C, CPU4 trigger address 1 */
#define CPU4_HRA_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F00Cu)
/** Alias (User Manual Name) for CPU4_HRA_TR1_ADR */
#define CPU4_HRA_TR1ADR (CPU4_HRA_TR1_ADR)

/** \brief F010, CPU4 trigger event 2 */
#define CPU4_HRA_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F010u)
/** Alias (User Manual Name) for CPU4_HRA_TR2_EVT */
#define CPU4_HRA_TR2EVT (CPU4_HRA_TR2_EVT)

/** \brief F014, CPU4 trigger address 2 */
#define CPU4_HRA_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F014u)
/** Alias (User Manual Name) for CPU4_HRA_TR2_ADR */
#define CPU4_HRA_TR2ADR (CPU4_HRA_TR2_ADR)

/** \brief F018, CPU4 trigger event 3 */
#define CPU4_HRA_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F018u)
/** Alias (User Manual Name) for CPU4_HRA_TR3_EVT */
#define CPU4_HRA_TR3EVT (CPU4_HRA_TR3_EVT)

/** \brief F01C, CPU4 trigger address 3 */
#define CPU4_HRA_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F01Cu)
/** Alias (User Manual Name) for CPU4_HRA_TR3_ADR */
#define CPU4_HRA_TR3ADR (CPU4_HRA_TR3_ADR)

/** \brief F020, CPU4 trigger event 4 */
#define CPU4_HRA_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F020u)
/** Alias (User Manual Name) for CPU4_HRA_TR4_EVT */
#define CPU4_HRA_TR4EVT (CPU4_HRA_TR4_EVT)

/** \brief F024, CPU4 trigger address 4 */
#define CPU4_HRA_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F024u)
/** Alias (User Manual Name) for CPU4_HRA_TR4_ADR */
#define CPU4_HRA_TR4ADR (CPU4_HRA_TR4_ADR)

/** \brief F028, CPU4 trigger event 5 */
#define CPU4_HRA_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F028u)
/** Alias (User Manual Name) for CPU4_HRA_TR5_EVT */
#define CPU4_HRA_TR5EVT (CPU4_HRA_TR5_EVT)

/** \brief F02C, CPU4 trigger address 5 */
#define CPU4_HRA_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F02Cu)
/** Alias (User Manual Name) for CPU4_HRA_TR5_ADR */
#define CPU4_HRA_TR5ADR (CPU4_HRA_TR5_ADR)

/** \brief F030, CPU4 trigger event 6 */
#define CPU4_HRA_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F030u)
/** Alias (User Manual Name) for CPU4_HRA_TR6_EVT */
#define CPU4_HRA_TR6EVT (CPU4_HRA_TR6_EVT)

/** \brief F034, CPU4 trigger address 6 */
#define CPU4_HRA_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F034u)
/** Alias (User Manual Name) for CPU4_HRA_TR6_ADR */
#define CPU4_HRA_TR6ADR (CPU4_HRA_TR6_ADR)

/** \brief F038, CPU4 trigger event 7 */
#define CPU4_HRA_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF891F038u)
/** Alias (User Manual Name) for CPU4_HRA_TR7_EVT */
#define CPU4_HRA_TR7EVT (CPU4_HRA_TR7_EVT)

/** \brief F03C, CPU4 trigger address 7 */
#define CPU4_HRA_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF891F03Cu)
/** Alias (User Manual Name) for CPU4_HRA_TR7_ADR */
#define CPU4_HRA_TR7ADR (CPU4_HRA_TR7_ADR)

/** \brief FC00, CPU4 HR specific counter control */
#define CPU4_HRA_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF891FC00u)

/** \brief FC04, CPU4 HR specific CPU clock cycle count */
#define CPU4_HRA_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF891FC04u)

/** \brief FC08, CPU4 HR specific instruction count */
#define CPU4_HRA_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF891FC08u)

/** \brief FC0C, CPU4 HR specific multi-count register 1 */
#define CPU4_HRA_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF891FC0Cu)

/** \brief FC10, CPU4 HR specific multi-count register 2 */
#define CPU4_HRA_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF891FC10u)

/** \brief FC14, CPU4 HR specific multi-count register 3 */
#define CPU4_HRA_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF891FC14u)

/** \brief FD00, CPU4 debug status register */
#define CPU4_HRA_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF891FD00u)

/** \brief FD08, CPU4 external event register */
#define CPU4_HRA_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF891FD08u)

/** \brief FD0C, CPU4 core register access event */
#define CPU4_HRA_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF891FD0Cu)

/** \brief FD10, CPU4 software debug event */
#define CPU4_HRA_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF891FD10u)

/** \brief FD14, CPU4 debug action configuration */
#define CPU4_HRA_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF891FD14u)

/** \brief FD30, CPU4 trigger accumulator */
#define CPU4_HRA_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF891FD30u)

/** \brief FD40, CPU4 debug monitor start address */
#define CPU4_HRA_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF891FD40u)

/** \brief FD44, CPU4 debug context save area pointer */
#define CPU4_HRA_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF891FD44u)

/** \brief FD48, CPU4 debug trap control */
#define CPU4_HRA_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF891FD48u)

/** \brief FD4C, CPU4 debug configuration */
#define CPU4_HRA_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF891FD4Cu)

/** \brief FD50, CPU4 trace configuration */
#define CPU4_HRA_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF891FD50u)

/** \brief FD54, CPU4 trace filter */
#define CPU4_HRA_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF891FD54u)

/** \brief FD58, CPU4 trace bandwidth limiter */
#define CPU4_HRA_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF891FD58u)

/** \brief FD60, CPU4 MCDS performance counter control register */
#define CPU4_HRA_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF891FD60u)

/** \brief FE00, CPU4 previous context information register */
#define CPU4_HRA_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF891FE00u)

/** \brief FE04, CPU4 HR specific program status word */
#define CPU4_HRA_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF891FE04u)

/** \brief FE08, CPU4 program counter */
#define CPU4_HRA_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF891FE08u)

/** \brief FE14, CPU4 HR specific core configuration register */
#define CPU4_HRA_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF891FE14u)

/** \brief FE18, CPU4 identification register */
#define CPU4_HRA_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF891FE18u)

/** \brief FE1C, CPU4 core identification register */
#define CPU4_HRA_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF891FE1Cu)

/** \brief FE20, CPU4 HR specific base interrupt vector table pointer */
#define CPU4_HRA_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF891FE20u)

/** \brief FE24, CPU4 HR specific base trap vector table pointer */
#define CPU4_HRA_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF891FE24u)

/** \brief FE28, CPU4 HR specific interrupt stack pointer */
#define CPU4_HRA_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF891FE28u)

/** \brief FE2C, CPU4 interrupt control register */
#define CPU4_HRA_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF891FE2Cu)

/** \brief FE34, CPU4 previous PRS */
#define CPU4_HRA_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF891FE34u)

/** \brief FE38, CPU4 HR specific free CSA list head pointer */
#define CPU4_HRA_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF891FE38u)

/** \brief FE3C, CPU4 HR specific free CSA list limit pointer */
#define CPU4_HRA_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF891FE3Cu)

/** \brief FE40, CPU4 software identification */
#define CPU4_HRA_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF891FE40u)

/** \brief FE50, CPU4 customer ID register */
#define CPU4_HRA_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF891FE50u)

/** \brief FE60, CPU4 core boot configuration register */
#define CPU4_HRA_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF891FE60u)

/** \brief FE64, CPU4 lockstep control register */
#define CPU4_HRA_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF891FE64u)

/** \brief FE68, CPU4 clock control register */
#define CPU4_HRA_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF891FE68u)

/** \brief FE6C, CPU4 hardware configuration  */
#define CPU4_HRA_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF891FE6Cu)

/** \brief FF00, CPU4 data general purpose register 0 */
#define CPU4_D0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF00u)

/** \brief FF04, CPU4 data general purpose register 1 */
#define CPU4_D1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF04u)

/** \brief FF08, CPU4 data general purpose register 2 */
#define CPU4_D2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF08u)

/** \brief FF0C, CPU4 data general purpose register 3 */
#define CPU4_D3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF0Cu)

/** \brief FF10, CPU4 data general purpose register 4 */
#define CPU4_D4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF10u)

/** \brief FF14, CPU4 data general purpose register 5 */
#define CPU4_D5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF14u)

/** \brief FF18, CPU4 data general purpose register 6 */
#define CPU4_D6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF18u)

/** \brief FF1C, CPU4 data general purpose register 7 */
#define CPU4_D7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF1Cu)

/** \brief FF20, CPU4 data general purpose register 8 */
#define CPU4_D8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF20u)

/** \brief FF24, CPU4 data general purpose register 9 */
#define CPU4_D9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF24u)

/** \brief FF28, CPU4 data general purpose register 10 */
#define CPU4_D10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF28u)

/** \brief FF2C, CPU4 data general purpose register 11 */
#define CPU4_D11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF2Cu)

/** \brief FF30, CPU4 data general purpose register 12 */
#define CPU4_D12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF30u)

/** \brief FF34, CPU4 data general purpose register 13 */
#define CPU4_D13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF34u)

/** \brief FF38, CPU4 data general purpose register 14 */
#define CPU4_D14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF38u)

/** \brief FF3C, CPU4 data general purpose register 15 */
#define CPU4_D15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF891FF3Cu)

/** \brief FF80, CPU4 address general purpose register 0 */
#define CPU4_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF80u)

/** \brief FF84, CPU4 address general purpose register 1 */
#define CPU4_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF84u)

/** \brief FF88, CPU4 address general purpose register 2 */
#define CPU4_A2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF88u)

/** \brief FF8C, CPU4 address general purpose register 3 */
#define CPU4_A3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF8Cu)

/** \brief FF90, CPU4 address general purpose register 4 */
#define CPU4_A4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF90u)

/** \brief FF94, CPU4 address general purpose register 5 */
#define CPU4_A5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF94u)

/** \brief FF98, CPU4 address general purpose register 6 */
#define CPU4_A6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF98u)

/** \brief FF9C, CPU4 address general purpose register 7 */
#define CPU4_A7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FF9Cu)

/** \brief FFA0, CPU4 address general purpose register 8 */
#define CPU4_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFA0u)

/** \brief FFA4, CPU4 address general purpose register 9 */
#define CPU4_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFA4u)

/** \brief FFA8, CPU4 address general purpose register 10 */
#define CPU4_A10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFA8u)

/** \brief FFAC, CPU4 address general purpose register 11 */
#define CPU4_A11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFACu)

/** \brief FFB0, CPU4 address general purpose register 12 */
#define CPU4_A12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFB0u)

/** \brief FFB4, CPU4 address general purpose register 13 */
#define CPU4_A13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFB4u)

/** \brief FFB8, CPU4 address general purpose register 14 */
#define CPU4_A14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFB8u)

/** \brief FFBC, CPU4 address general purpose register 15 */
#define CPU4_A15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF891FFBCu)

/** \brief 1030, CPU4 SRI error generation register */
#define CPU4_HRB_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8921030u)

/** \brief 1040, CPU4 lockstep test register */
#define CPU4_HRB_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8921040u)

/** \brief 8100, CPU4 data access cacheability register */
#define CPU4_HRB_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8928100u)

/** \brief 8104, CPU4 code access cacheability register */
#define CPU4_HRB_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8928104u)

/** \brief 8108, CPU4 peripheral space identifier register */
#define CPU4_HRB_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8928108u)

/** \brief 9000, CPU4 data control register 2 */
#define CPU4_HRB_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8929000u)

/** \brief 9008, CPU4 data control register 1 */
#define CPU4_HRB_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8929008u)

/** \brief 900C, CPU4 SIST mode access control register */
#define CPU4_HRB_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF892900Cu)

/** \brief 9010, CPU4 HR specific data synchronous trap register */
#define CPU4_HRB_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8929010u)

/** \brief 9018, CPU4 HR specific data asynchronous trap register */
#define CPU4_HRB_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8929018u)

/** \brief 901C, CPU4 HR specific data error address register */
#define CPU4_HRB_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF892901Cu)

/** \brief 9020, CPU4 data integrity error address register */
#define CPU4_HRB_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8929020u)

/** \brief 9024, CPU4 data integrity error trap register */
#define CPU4_HRB_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8929024u)

/** \brief 9040, CPU4 data memory control register */
#define CPU4_HRB_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8929040u)

/** \brief 9200, CPU4 HR specific program synchronous trap register */
#define CPU4_HRB_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8929200u)

/** \brief 9204, CPU4 program control 1 */
#define CPU4_HRB_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8929204u)

/** \brief 9208, CPU4 program control 2 */
#define CPU4_HRB_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8929208u)

/** \brief 920C, CPU4 program control 0 */
#define CPU4_HRB_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF892920Cu)

/** \brief 9210, CPU4 HR specific program integrity error address register */
#define CPU4_HRB_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8929210u)

/** \brief 9214, CPU4 HR specific program integrity error trap register */
#define CPU4_HRB_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8929214u)

/** \brief 9400, CPU4 compatibility control register */
#define CPU4_HRB_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8929400u)

/** \brief A000, CPU4 HR specific trap control register */
#define CPU4_HRB_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF892A000u)

/** \brief A004, CPU4 HR specific trapping instruction program counter register */
#define CPU4_HRB_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF892A004u)

/** \brief A008, CPU4 HR specific trapping instruction opcode register */
#define CPU4_HRB_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF892A008u)

/** \brief A010, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRB_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF892A010u)

/** \brief A014, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRB_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF892A014u)

/** \brief A018, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRB_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF892A018u)

/** \brief A01C, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRB_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF892A01Cu)

/** \brief A020, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRB_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF892A020u)

/** \brief A024, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRB_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF892A024u)

/** \brief A030, CPU4 HR specific synchronous trap control register */
#define CPU4_HRB_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF892A030u)

/** \brief A034, CPU4 HR specific trapping instruction opcode register */
#define CPU4_HRB_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF892A034u)

/** \brief C000, CPU4 HR specific data protection range 0, lower bound register */
#define CPU4_HRB_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C000u)

/** \brief C004, CPU4 HR specific data protection range 0, upper bound register */
#define CPU4_HRB_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C004u)

/** \brief C008, CPU4 HR specific data protection range 1, lower bound register */
#define CPU4_HRB_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C008u)

/** \brief C00C, CPU4 HR specific data protection range 1, upper bound register */
#define CPU4_HRB_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C00Cu)

/** \brief C010, CPU4 HR specific data protection range 2, lower bound register */
#define CPU4_HRB_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C010u)

/** \brief C014, CPU4 HR specific data protection range 2, upper bound register */
#define CPU4_HRB_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C014u)

/** \brief C018, CPU4 HR specific data protection range 3, lower bound register */
#define CPU4_HRB_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C018u)

/** \brief C01C, CPU4 HR specific data protection range 3, upper bound register */
#define CPU4_HRB_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C01Cu)

/** \brief C020, CPU4 HR specific data protection range 4, lower bound register */
#define CPU4_HRB_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C020u)

/** \brief C024, CPU4 HR specific data protection range 4, upper bound register */
#define CPU4_HRB_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C024u)

/** \brief C028, CPU4 HR specific data protection range 5, lower bound register */
#define CPU4_HRB_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C028u)

/** \brief C02C, CPU4 HR specific data protection range 5, upper bound register */
#define CPU4_HRB_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C02Cu)

/** \brief C030, CPU4 HR specific data protection range 6, lower bound register */
#define CPU4_HRB_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C030u)

/** \brief C034, CPU4 HR specific data protection range 6, upper bound register */
#define CPU4_HRB_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C034u)

/** \brief C038, CPU4 HR specific data protection range 7, lower bound register */
#define CPU4_HRB_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C038u)

/** \brief C03C, CPU4 HR specific data protection range 7, upper bound register */
#define CPU4_HRB_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C03Cu)

/** \brief C040, CPU4 HR specific data protection range 8, lower bound register */
#define CPU4_HRB_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C040u)

/** \brief C044, CPU4 HR specific data protection range 8, upper bound register */
#define CPU4_HRB_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C044u)

/** \brief C048, CPU4 HR specific data protection range 9, lower bound register */
#define CPU4_HRB_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C048u)

/** \brief C04C, CPU4 HR specific data protection range 9, upper bound register */
#define CPU4_HRB_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C04Cu)

/** \brief C050, CPU4 HR specific data protection range 10, lower bound register */
#define CPU4_HRB_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C050u)

/** \brief C054, CPU4 HR specific data protection range 10, upper bound register */
#define CPU4_HRB_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C054u)

/** \brief C058, CPU4 HR specific data protection range 11, lower bound register */
#define CPU4_HRB_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C058u)

/** \brief C05C, CPU4 HR specific data protection range 11, upper bound register */
#define CPU4_HRB_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C05Cu)

/** \brief C060, CPU4 HR specific data protection range 12, lower bound register */
#define CPU4_HRB_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C060u)

/** \brief C064, CPU4 HR specific data protection range 12, upper bound register */
#define CPU4_HRB_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C064u)

/** \brief C068, CPU4 HR specific data protection range 13, lower bound register */
#define CPU4_HRB_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C068u)

/** \brief C06C, CPU4 HR specific data protection range 13, upper bound register */
#define CPU4_HRB_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C06Cu)

/** \brief C070, CPU4 HR specific data protection range 14, lower bound register */
#define CPU4_HRB_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C070u)

/** \brief C074, CPU4 HR specific data protection range 14, upper bound register */
#define CPU4_HRB_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C074u)

/** \brief C078, CPU4 HR specific data protection range 15, lower bound register */
#define CPU4_HRB_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C078u)

/** \brief C07C, CPU4 HR specific data protection range 15, upper bound register */
#define CPU4_HRB_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C07Cu)

/** \brief C080, CPU4 HR specific data protection range 16, lower bound register */
#define CPU4_HRB_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C080u)

/** \brief C084, CPU4 HR specific data protection range 16, upper bound register */
#define CPU4_HRB_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C084u)

/** \brief C088, CPU4 HR specific data protection range 17, lower bound register */
#define CPU4_HRB_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C088u)

/** \brief C08C, CPU4 HR specific data protection range 17, upper bound register */
#define CPU4_HRB_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C08Cu)

/** \brief C090, CPU4 HR specific data protection range 18, lower bound register */
#define CPU4_HRB_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C090u)

/** \brief C094, CPU4 HR specific data protection range 18, upper bound register */
#define CPU4_HRB_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C094u)

/** \brief C098, CPU4 HR specific data protection range 19, lower bound register */
#define CPU4_HRB_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C098u)

/** \brief C09C, CPU4 HR specific data protection range 19, upper bound register */
#define CPU4_HRB_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C09Cu)

/** \brief C0A0, CPU4 HR specific data protection range 20, lower bound register */
#define CPU4_HRB_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C0A0u)

/** \brief C0A4, CPU4 HR specific data protection range 20, upper bound register */
#define CPU4_HRB_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C0A4u)

/** \brief C0A8, CPU4 HR specific data protection range 21, lower bound register */
#define CPU4_HRB_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C0A8u)

/** \brief C0AC, CPU4 HR specific data protection range 21, upper bound register */
#define CPU4_HRB_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C0ACu)

/** \brief C0B0, CPU4 HR specific data protection range 22, lower bound register */
#define CPU4_HRB_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C0B0u)

/** \brief C0B4, CPU4 HR specific data protection range 22, upper bound register */
#define CPU4_HRB_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C0B4u)

/** \brief C0B8, CPU4 HR specific data protection range 23, lower bound register */
#define CPU4_HRB_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF892C0B8u)

/** \brief C0BC, CPU4 HR specific data protection range 23, upper bound register */
#define CPU4_HRB_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF892C0BCu)

/** \brief D000, CPU4 HR specific code protection range 0, lower bound register */
#define CPU4_HRB_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D000u)

/** \brief D004, CPU4 HR specific code protection range 0, upper bound register */
#define CPU4_HRB_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D004u)

/** \brief D008, CPU4 HR specific code protection range 1, lower bound register */
#define CPU4_HRB_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D008u)

/** \brief D00C, CPU4 HR specific code protection range 1, upper bound register */
#define CPU4_HRB_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D00Cu)

/** \brief D010, CPU4 HR specific code protection range 2, lower bound register */
#define CPU4_HRB_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D010u)

/** \brief D014, CPU4 HR specific code protection range 2, upper bound register */
#define CPU4_HRB_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D014u)

/** \brief D018, CPU4 HR specific code protection range 3, lower bound register */
#define CPU4_HRB_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D018u)

/** \brief D01C, CPU4 HR specific code protection range 3, upper bound register */
#define CPU4_HRB_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D01Cu)

/** \brief D020, CPU4 HR specific code protection range 4, lower bound register */
#define CPU4_HRB_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D020u)

/** \brief D024, CPU4 HR specific code protection range 4, upper bound register */
#define CPU4_HRB_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D024u)

/** \brief D028, CPU4 HR specific code protection range 5, lower bound register */
#define CPU4_HRB_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D028u)

/** \brief D02C, CPU4 HR specific code protection range 5, upper bound register */
#define CPU4_HRB_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D02Cu)

/** \brief D030, CPU4 HR specific code protection range 6, lower bound register */
#define CPU4_HRB_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D030u)

/** \brief D034, CPU4 HR specific code protection range 6, upper bound register */
#define CPU4_HRB_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D034u)

/** \brief D038, CPU4 HR specific code protection range 7, lower bound register */
#define CPU4_HRB_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D038u)

/** \brief D03C, CPU4 HR specific code protection range 7, upper bound register */
#define CPU4_HRB_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D03Cu)

/** \brief D040, CPU4 HR specific code protection range 8, lower bound register */
#define CPU4_HRB_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D040u)

/** \brief D044, CPU4 HR specific code protection range 8, upper bound register */
#define CPU4_HRB_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D044u)

/** \brief D048, CPU4 HR specific code protection range 9, lower bound register */
#define CPU4_HRB_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D048u)

/** \brief D04C, CPU4 HR specific code protection range 9, upper bound register */
#define CPU4_HRB_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D04Cu)

/** \brief D050, CPU4 HR specific code protection range 10, lower bound register */
#define CPU4_HRB_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D050u)

/** \brief D054, CPU4 HR specific code protection range 10, upper bound register */
#define CPU4_HRB_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D054u)

/** \brief D058, CPU4 HR specific code protection range 11, lower bound register */
#define CPU4_HRB_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D058u)

/** \brief D05C, CPU4 HR specific code protection range 11, upper bound register */
#define CPU4_HRB_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D05Cu)

/** \brief D060, CPU4 HR specific code protection range 12, lower bound register */
#define CPU4_HRB_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D060u)

/** \brief D064, CPU4 HR specific code protection range 12, upper bound register */
#define CPU4_HRB_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D064u)

/** \brief D068, CPU4 HR specific code protection range 13, lower bound register */
#define CPU4_HRB_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D068u)

/** \brief D06C, CPU4 HR specific code protection range 13, upper bound register */
#define CPU4_HRB_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D06Cu)

/** \brief D070, CPU4 HR specific code protection range 14, lower bound register */
#define CPU4_HRB_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D070u)

/** \brief D074, CPU4 HR specific code protection range 14, upper bound register */
#define CPU4_HRB_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D074u)

/** \brief D078, CPU4 HR specific code protection range 15, lower bound register */
#define CPU4_HRB_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF892D078u)

/** \brief D07C, CPU4 HR specific code protection range 15, upper bound register */
#define CPU4_HRB_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF892D07Cu)

/** \brief E000, CPU4 HR specific code protection execute enable register set 0 */
#define CPU4_HRB_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E000u)

/** \brief E004, CPU4 HR specific code protection execute enable register set 1 */
#define CPU4_HRB_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E004u)

/** \brief E008, CPU4 HR specific code protection execute enable register set 2 */
#define CPU4_HRB_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E008u)

/** \brief E00C, CPU4 HR specific code protection execute enable register set 3 */
#define CPU4_HRB_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E00Cu)

/** \brief E010, CPU4 HR specific data protection read enable register set 0 */
#define CPU4_HRB_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E010u)

/** \brief E014, CPU4 HR specific data protection read enable register set 1 */
#define CPU4_HRB_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E014u)

/** \brief E018, CPU4 HR specific data protection read enable register set 2 */
#define CPU4_HRB_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E018u)

/** \brief E01C, CPU4 HR specific data protection read enable register set 3 */
#define CPU4_HRB_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E01Cu)

/** \brief E020, CPU4 HR specific data protection write enable register set 0 */
#define CPU4_HRB_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E020u)

/** \brief E024, CPU4 HR specific data protection write enable register set 1 */
#define CPU4_HRB_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E024u)

/** \brief E028, CPU4 HR specific data protection write enable register set 2 */
#define CPU4_HRB_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E028u)

/** \brief E02C, CPU4 HR specific data protection write enable register set 3 */
#define CPU4_HRB_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E02Cu)

/** \brief E040, CPU4 HR specific code protection execute enable register set 4 */
#define CPU4_HRB_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E040u)

/** \brief E044, CPU4 HR specific code protection execute enable register set 5 */
#define CPU4_HRB_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E044u)

/** \brief E048, CPU4 HR specific code protection execute enable register set 6 */
#define CPU4_HRB_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E048u)

/** \brief E04C, CPU4 HR specific code protection execute enable register set 7 */
#define CPU4_HRB_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF892E04Cu)

/** \brief E050, CPU4 HR specific data protection read enable register set 4 */
#define CPU4_HRB_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E050u)

/** \brief E054, CPU4 HR specific data protection read enable register set 5 */
#define CPU4_HRB_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E054u)

/** \brief E058, CPU4 HR specific data protection read enable register set 6 */
#define CPU4_HRB_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E058u)

/** \brief E05C, CPU4 HR specific data protection read enable register set 7 */
#define CPU4_HRB_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF892E05Cu)

/** \brief E060, CPU4 HR specific data protection write enable register set 4 */
#define CPU4_HRB_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E060u)

/** \brief E064, CPU4 HR specific data protection write enable register set 5 */
#define CPU4_HRB_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E064u)

/** \brief E068, CPU4 HR specific data protection write enable register set 6 */
#define CPU4_HRB_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E068u)

/** \brief E06C, CPU4 HR specific data protection write enable register set 7 */
#define CPU4_HRB_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF892E06Cu)

/** \brief E400, CPU4 HR specific temporal protection system control register */
#define CPU4_HRB_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF892E400u)

/** \brief E404, CPU4 HR specific temporal protection system timer register 0 */
#define CPU4_HRB_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF892E404u)

/** \brief E408, CPU4 HR specific temporal protection system timer register 1 */
#define CPU4_HRB_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF892E408u)

/** \brief E40C, CPU4 HR specific temporal protection system timer register 2 */
#define CPU4_HRB_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF892E40Cu)

/** \brief F000, CPU4 trigger event 0 */
#define CPU4_HRB_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F000u)
/** Alias (User Manual Name) for CPU4_HRB_TR0_EVT */
#define CPU4_HRB_TR0EVT (CPU4_HRB_TR0_EVT)

/** \brief F004, CPU4 trigger address 0 */
#define CPU4_HRB_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F004u)
/** Alias (User Manual Name) for CPU4_HRB_TR0_ADR */
#define CPU4_HRB_TR0ADR (CPU4_HRB_TR0_ADR)

/** \brief F008, CPU4 trigger event 1 */
#define CPU4_HRB_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F008u)
/** Alias (User Manual Name) for CPU4_HRB_TR1_EVT */
#define CPU4_HRB_TR1EVT (CPU4_HRB_TR1_EVT)

/** \brief F00C, CPU4 trigger address 1 */
#define CPU4_HRB_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F00Cu)
/** Alias (User Manual Name) for CPU4_HRB_TR1_ADR */
#define CPU4_HRB_TR1ADR (CPU4_HRB_TR1_ADR)

/** \brief F010, CPU4 trigger event 2 */
#define CPU4_HRB_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F010u)
/** Alias (User Manual Name) for CPU4_HRB_TR2_EVT */
#define CPU4_HRB_TR2EVT (CPU4_HRB_TR2_EVT)

/** \brief F014, CPU4 trigger address 2 */
#define CPU4_HRB_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F014u)
/** Alias (User Manual Name) for CPU4_HRB_TR2_ADR */
#define CPU4_HRB_TR2ADR (CPU4_HRB_TR2_ADR)

/** \brief F018, CPU4 trigger event 3 */
#define CPU4_HRB_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F018u)
/** Alias (User Manual Name) for CPU4_HRB_TR3_EVT */
#define CPU4_HRB_TR3EVT (CPU4_HRB_TR3_EVT)

/** \brief F01C, CPU4 trigger address 3 */
#define CPU4_HRB_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F01Cu)
/** Alias (User Manual Name) for CPU4_HRB_TR3_ADR */
#define CPU4_HRB_TR3ADR (CPU4_HRB_TR3_ADR)

/** \brief F020, CPU4 trigger event 4 */
#define CPU4_HRB_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F020u)
/** Alias (User Manual Name) for CPU4_HRB_TR4_EVT */
#define CPU4_HRB_TR4EVT (CPU4_HRB_TR4_EVT)

/** \brief F024, CPU4 trigger address 4 */
#define CPU4_HRB_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F024u)
/** Alias (User Manual Name) for CPU4_HRB_TR4_ADR */
#define CPU4_HRB_TR4ADR (CPU4_HRB_TR4_ADR)

/** \brief F028, CPU4 trigger event 5 */
#define CPU4_HRB_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F028u)
/** Alias (User Manual Name) for CPU4_HRB_TR5_EVT */
#define CPU4_HRB_TR5EVT (CPU4_HRB_TR5_EVT)

/** \brief F02C, CPU4 trigger address 5 */
#define CPU4_HRB_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F02Cu)
/** Alias (User Manual Name) for CPU4_HRB_TR5_ADR */
#define CPU4_HRB_TR5ADR (CPU4_HRB_TR5_ADR)

/** \brief F030, CPU4 trigger event 6 */
#define CPU4_HRB_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F030u)
/** Alias (User Manual Name) for CPU4_HRB_TR6_EVT */
#define CPU4_HRB_TR6EVT (CPU4_HRB_TR6_EVT)

/** \brief F034, CPU4 trigger address 6 */
#define CPU4_HRB_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F034u)
/** Alias (User Manual Name) for CPU4_HRB_TR6_ADR */
#define CPU4_HRB_TR6ADR (CPU4_HRB_TR6_ADR)

/** \brief F038, CPU4 trigger event 7 */
#define CPU4_HRB_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF892F038u)
/** Alias (User Manual Name) for CPU4_HRB_TR7_EVT */
#define CPU4_HRB_TR7EVT (CPU4_HRB_TR7_EVT)

/** \brief F03C, CPU4 trigger address 7 */
#define CPU4_HRB_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF892F03Cu)
/** Alias (User Manual Name) for CPU4_HRB_TR7_ADR */
#define CPU4_HRB_TR7ADR (CPU4_HRB_TR7_ADR)

/** \brief FC00, CPU4 HR specific counter control */
#define CPU4_HRB_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF892FC00u)

/** \brief FC04, CPU4 HR specific CPU clock cycle count */
#define CPU4_HRB_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF892FC04u)

/** \brief FC08, CPU4 HR specific instruction count */
#define CPU4_HRB_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF892FC08u)

/** \brief FC0C, CPU4 HR specific multi-count register 1 */
#define CPU4_HRB_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF892FC0Cu)

/** \brief FC10, CPU4 HR specific multi-count register 2 */
#define CPU4_HRB_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF892FC10u)

/** \brief FC14, CPU4 HR specific multi-count register 3 */
#define CPU4_HRB_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF892FC14u)

/** \brief FD00, CPU4 debug status register */
#define CPU4_HRB_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF892FD00u)

/** \brief FD08, CPU4 external event register */
#define CPU4_HRB_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF892FD08u)

/** \brief FD0C, CPU4 core register access event */
#define CPU4_HRB_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF892FD0Cu)

/** \brief FD10, CPU4 software debug event */
#define CPU4_HRB_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF892FD10u)

/** \brief FD14, CPU4 debug action configuration */
#define CPU4_HRB_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF892FD14u)

/** \brief FD30, CPU4 trigger accumulator */
#define CPU4_HRB_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF892FD30u)

/** \brief FD40, CPU4 debug monitor start address */
#define CPU4_HRB_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF892FD40u)

/** \brief FD44, CPU4 debug context save area pointer */
#define CPU4_HRB_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF892FD44u)

/** \brief FD48, CPU4 debug trap control */
#define CPU4_HRB_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF892FD48u)

/** \brief FD4C, CPU4 debug configuration */
#define CPU4_HRB_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF892FD4Cu)

/** \brief FD50, CPU4 trace configuration */
#define CPU4_HRB_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF892FD50u)

/** \brief FD54, CPU4 trace filter */
#define CPU4_HRB_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF892FD54u)

/** \brief FD58, CPU4 trace bandwidth limiter */
#define CPU4_HRB_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF892FD58u)

/** \brief FD60, CPU4 MCDS performance counter control register */
#define CPU4_HRB_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF892FD60u)

/** \brief FE00, CPU4 previous context information register */
#define CPU4_HRB_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF892FE00u)

/** \brief FE04, CPU4 HR specific program status word */
#define CPU4_HRB_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF892FE04u)

/** \brief FE08, CPU4 program counter */
#define CPU4_HRB_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF892FE08u)

/** \brief FE14, CPU4 HR specific core configuration register */
#define CPU4_HRB_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF892FE14u)

/** \brief FE18, CPU4 identification register */
#define CPU4_HRB_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF892FE18u)

/** \brief FE1C, CPU4 core identification register */
#define CPU4_HRB_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF892FE1Cu)

/** \brief FE20, CPU4 HR specific base interrupt vector table pointer */
#define CPU4_HRB_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF892FE20u)

/** \brief FE24, CPU4 HR specific base trap vector table pointer */
#define CPU4_HRB_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF892FE24u)

/** \brief FE28, CPU4 HR specific interrupt stack pointer */
#define CPU4_HRB_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF892FE28u)

/** \brief FE2C, CPU4 interrupt control register */
#define CPU4_HRB_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF892FE2Cu)

/** \brief FE34, CPU4 previous PRS */
#define CPU4_HRB_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF892FE34u)

/** \brief FE38, CPU4 HR specific free CSA list head pointer */
#define CPU4_HRB_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF892FE38u)

/** \brief FE3C, CPU4 HR specific free CSA list limit pointer */
#define CPU4_HRB_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF892FE3Cu)

/** \brief FE40, CPU4 software identification */
#define CPU4_HRB_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF892FE40u)

/** \brief FE50, CPU4 customer ID register */
#define CPU4_HRB_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF892FE50u)

/** \brief FE60, CPU4 core boot configuration register */
#define CPU4_HRB_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF892FE60u)

/** \brief FE64, CPU4 lockstep control register */
#define CPU4_HRB_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF892FE64u)

/** \brief FE68, CPU4 clock control register */
#define CPU4_HRB_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF892FE68u)

/** \brief FE6C, CPU4 hardware configuration  */
#define CPU4_HRB_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF892FE6Cu)

/** \brief FF80, CPU4 HR specific address general purpose register 0 */
#define CPU4_HRB_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF892FF80u)

/** \brief FF84, CPU4 HR specific address general purpose register 1 */
#define CPU4_HRB_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF892FF84u)

/** \brief FFA0, CPU4 HR specific address general purpose register 8 */
#define CPU4_HRB_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF892FFA0u)

/** \brief FFA4, CPU4 HR specific address general purpose register 9 */
#define CPU4_HRB_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF892FFA4u)

/** \brief 1030, CPU4 SRI error generation register */
#define CPU4_HRHV_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8931030u)

/** \brief 1040, CPU4 lockstep test register */
#define CPU4_HRHV_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8931040u)

/** \brief 8100, CPU4 data access cacheability register */
#define CPU4_HRHV_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8938100u)

/** \brief 8104, CPU4 code access cacheability register */
#define CPU4_HRHV_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8938104u)

/** \brief 8108, CPU4 peripheral space identifier register */
#define CPU4_HRHV_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8938108u)

/** \brief 9000, CPU4 data control register 2 */
#define CPU4_HRHV_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8939000u)

/** \brief 9008, CPU4 data control register 1 */
#define CPU4_HRHV_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8939008u)

/** \brief 900C, CPU4 SIST mode access control register */
#define CPU4_HRHV_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF893900Cu)

/** \brief 9010, CPU4 HR specific data synchronous trap register */
#define CPU4_HRHV_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8939010u)

/** \brief 9018, CPU4 HR specific data asynchronous trap register */
#define CPU4_HRHV_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8939018u)

/** \brief 901C, CPU4 HR specific data error address register */
#define CPU4_HRHV_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF893901Cu)

/** \brief 9020, CPU4 data integrity error address register */
#define CPU4_HRHV_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8939020u)

/** \brief 9024, CPU4 data integrity error trap register */
#define CPU4_HRHV_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8939024u)

/** \brief 9040, CPU4 data memory control register */
#define CPU4_HRHV_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8939040u)

/** \brief 9200, CPU4 HR specific program synchronous trap register */
#define CPU4_HRHV_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8939200u)

/** \brief 9204, CPU4 program control 1 */
#define CPU4_HRHV_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8939204u)

/** \brief 9208, CPU4 program control 2 */
#define CPU4_HRHV_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8939208u)

/** \brief 920C, CPU4 program control 0 */
#define CPU4_HRHV_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF893920Cu)

/** \brief 9210, CPU4 HR specific program integrity error address register */
#define CPU4_HRHV_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8939210u)

/** \brief 9214, CPU4 HR specific program integrity error trap register */
#define CPU4_HRHV_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8939214u)

/** \brief 9400, CPU4 compatibility control register */
#define CPU4_HRHV_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8939400u)

/** \brief A000, CPU4 HR specific trap control register */
#define CPU4_HRHV_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF893A000u)

/** \brief A004, CPU4 HR specific trapping instruction program counter register */
#define CPU4_HRHV_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF893A004u)

/** \brief A008, CPU4 HR specific trapping instruction opcode register */
#define CPU4_HRHV_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF893A008u)

/** \brief A010, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRHV_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF893A010u)

/** \brief A014, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRHV_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF893A014u)

/** \brief A018, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRHV_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF893A018u)

/** \brief A01C, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRHV_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF893A01Cu)

/** \brief A020, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRHV_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF893A020u)

/** \brief A024, CPU4 HR specific trapping instruction operand register */
#define CPU4_HRHV_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF893A024u)

/** \brief A030, CPU4 HR specific synchronous trap control register */
#define CPU4_HRHV_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF893A030u)

/** \brief A034, CPU4 HR specific trapping instruction opcode register */
#define CPU4_HRHV_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF893A034u)

/** \brief B000, CPU4 virtualization control register 0 */
#define CPU4_HRHV_VCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON0*)0xF893B000u)

/** \brief B004, CPU4 virtualization control register 1 */
#define CPU4_HRHV_VCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON1*)0xF893B004u)

/** \brief B008, CPU4 virtualization control register 2 */
#define CPU4_HRHV_VCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON2*)0xF893B008u)

/** \brief B010, CPU4 base hypervisor vector table pointer */
#define CPU4_HRHV_BHV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BHV*)0xF893B010u)

/** \brief B100, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B100u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR0 */
#define CPU4_HRHV_VM0_ICR (CPU4_HRHV_VM_ICR0)

/** \brief B104, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B104u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR1 */
#define CPU4_HRHV_VM1_ICR (CPU4_HRHV_VM_ICR1)

/** \brief B108, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B108u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR2 */
#define CPU4_HRHV_VM2_ICR (CPU4_HRHV_VM_ICR2)

/** \brief B10C, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B10Cu)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR3 */
#define CPU4_HRHV_VM3_ICR (CPU4_HRHV_VM_ICR3)

/** \brief B110, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B110u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR4 */
#define CPU4_HRHV_VM4_ICR (CPU4_HRHV_VM_ICR4)

/** \brief B114, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B114u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR5 */
#define CPU4_HRHV_VM5_ICR (CPU4_HRHV_VM_ICR5)

/** \brief B118, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B118u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR6 */
#define CPU4_HRHV_VM6_ICR (CPU4_HRHV_VM_ICR6)

/** \brief B11C, CPU4 Virtual machine n interrupt state */
#define CPU4_HRHV_VM_ICR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF893B11Cu)
/** Alias (User Manual Name) for CPU4_HRHV_VM_ICR7 */
#define CPU4_HRHV_VM7_ICR (CPU4_HRHV_VM_ICR7)

/** \brief B200, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B200u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH0 */
#define CPU4_HRHV_VM0_PETHRESH (CPU4_HRHV_VM_PETHRESH0)

/** \brief B204, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B204u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH1 */
#define CPU4_HRHV_VM1_PETHRESH (CPU4_HRHV_VM_PETHRESH1)

/** \brief B208, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B208u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH2 */
#define CPU4_HRHV_VM2_PETHRESH (CPU4_HRHV_VM_PETHRESH2)

/** \brief B20C, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B20Cu)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH3 */
#define CPU4_HRHV_VM3_PETHRESH (CPU4_HRHV_VM_PETHRESH3)

/** \brief B210, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B210u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH4 */
#define CPU4_HRHV_VM4_PETHRESH (CPU4_HRHV_VM_PETHRESH4)

/** \brief B214, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B214u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH5 */
#define CPU4_HRHV_VM5_PETHRESH (CPU4_HRHV_VM_PETHRESH5)

/** \brief B218, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B218u)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH6 */
#define CPU4_HRHV_VM6_PETHRESH (CPU4_HRHV_VM_PETHRESH6)

/** \brief B21C, CPU4 Virtual machine n pre-emption threshold */
#define CPU4_HRHV_VM_PETHRESH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF893B21Cu)
/** Alias (User Manual Name) for CPU4_HRHV_VM_PETHRESH7 */
#define CPU4_HRHV_VM7_PETHRESH (CPU4_HRHV_VM_PETHRESH7)

/** \brief C000, CPU4 HR specific data protection range 0, lower bound register */
#define CPU4_HRHV_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C000u)

/** \brief C004, CPU4 HR specific data protection range 0, upper bound register */
#define CPU4_HRHV_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C004u)

/** \brief C008, CPU4 HR specific data protection range 1, lower bound register */
#define CPU4_HRHV_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C008u)

/** \brief C00C, CPU4 HR specific data protection range 1, upper bound register */
#define CPU4_HRHV_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C00Cu)

/** \brief C010, CPU4 HR specific data protection range 2, lower bound register */
#define CPU4_HRHV_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C010u)

/** \brief C014, CPU4 HR specific data protection range 2, upper bound register */
#define CPU4_HRHV_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C014u)

/** \brief C018, CPU4 HR specific data protection range 3, lower bound register */
#define CPU4_HRHV_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C018u)

/** \brief C01C, CPU4 HR specific data protection range 3, upper bound register */
#define CPU4_HRHV_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C01Cu)

/** \brief C020, CPU4 HR specific data protection range 4, lower bound register */
#define CPU4_HRHV_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C020u)

/** \brief C024, CPU4 HR specific data protection range 4, upper bound register */
#define CPU4_HRHV_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C024u)

/** \brief C028, CPU4 HR specific data protection range 5, lower bound register */
#define CPU4_HRHV_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C028u)

/** \brief C02C, CPU4 HR specific data protection range 5, upper bound register */
#define CPU4_HRHV_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C02Cu)

/** \brief C030, CPU4 HR specific data protection range 6, lower bound register */
#define CPU4_HRHV_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C030u)

/** \brief C034, CPU4 HR specific data protection range 6, upper bound register */
#define CPU4_HRHV_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C034u)

/** \brief C038, CPU4 HR specific data protection range 7, lower bound register */
#define CPU4_HRHV_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C038u)

/** \brief C03C, CPU4 HR specific data protection range 7, upper bound register */
#define CPU4_HRHV_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C03Cu)

/** \brief C040, CPU4 HR specific data protection range 8, lower bound register */
#define CPU4_HRHV_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C040u)

/** \brief C044, CPU4 HR specific data protection range 8, upper bound register */
#define CPU4_HRHV_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C044u)

/** \brief C048, CPU4 HR specific data protection range 9, lower bound register */
#define CPU4_HRHV_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C048u)

/** \brief C04C, CPU4 HR specific data protection range 9, upper bound register */
#define CPU4_HRHV_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C04Cu)

/** \brief C050, CPU4 HR specific data protection range 10, lower bound register */
#define CPU4_HRHV_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C050u)

/** \brief C054, CPU4 HR specific data protection range 10, upper bound register */
#define CPU4_HRHV_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C054u)

/** \brief C058, CPU4 HR specific data protection range 11, lower bound register */
#define CPU4_HRHV_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C058u)

/** \brief C05C, CPU4 HR specific data protection range 11, upper bound register */
#define CPU4_HRHV_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C05Cu)

/** \brief C060, CPU4 HR specific data protection range 12, lower bound register */
#define CPU4_HRHV_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C060u)

/** \brief C064, CPU4 HR specific data protection range 12, upper bound register */
#define CPU4_HRHV_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C064u)

/** \brief C068, CPU4 HR specific data protection range 13, lower bound register */
#define CPU4_HRHV_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C068u)

/** \brief C06C, CPU4 HR specific data protection range 13, upper bound register */
#define CPU4_HRHV_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C06Cu)

/** \brief C070, CPU4 HR specific data protection range 14, lower bound register */
#define CPU4_HRHV_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C070u)

/** \brief C074, CPU4 HR specific data protection range 14, upper bound register */
#define CPU4_HRHV_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C074u)

/** \brief C078, CPU4 HR specific data protection range 15, lower bound register */
#define CPU4_HRHV_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C078u)

/** \brief C07C, CPU4 HR specific data protection range 15, upper bound register */
#define CPU4_HRHV_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C07Cu)

/** \brief C080, CPU4 HR specific data protection range 16, lower bound register */
#define CPU4_HRHV_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C080u)

/** \brief C084, CPU4 HR specific data protection range 16, upper bound register */
#define CPU4_HRHV_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C084u)

/** \brief C088, CPU4 HR specific data protection range 17, lower bound register */
#define CPU4_HRHV_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C088u)

/** \brief C08C, CPU4 HR specific data protection range 17, upper bound register */
#define CPU4_HRHV_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C08Cu)

/** \brief C090, CPU4 HR specific data protection range 18, lower bound register */
#define CPU4_HRHV_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C090u)

/** \brief C094, CPU4 HR specific data protection range 18, upper bound register */
#define CPU4_HRHV_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C094u)

/** \brief C098, CPU4 HR specific data protection range 19, lower bound register */
#define CPU4_HRHV_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C098u)

/** \brief C09C, CPU4 HR specific data protection range 19, upper bound register */
#define CPU4_HRHV_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C09Cu)

/** \brief C0A0, CPU4 HR specific data protection range 20, lower bound register */
#define CPU4_HRHV_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C0A0u)

/** \brief C0A4, CPU4 HR specific data protection range 20, upper bound register */
#define CPU4_HRHV_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C0A4u)

/** \brief C0A8, CPU4 HR specific data protection range 21, lower bound register */
#define CPU4_HRHV_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C0A8u)

/** \brief C0AC, CPU4 HR specific data protection range 21, upper bound register */
#define CPU4_HRHV_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C0ACu)

/** \brief C0B0, CPU4 HR specific data protection range 22, lower bound register */
#define CPU4_HRHV_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C0B0u)

/** \brief C0B4, CPU4 HR specific data protection range 22, upper bound register */
#define CPU4_HRHV_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C0B4u)

/** \brief C0B8, CPU4 HR specific data protection range 23, lower bound register */
#define CPU4_HRHV_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF893C0B8u)

/** \brief C0BC, CPU4 HR specific data protection range 23, upper bound register */
#define CPU4_HRHV_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF893C0BCu)

/** \brief D000, CPU4 HR specific code protection range 0, lower bound register */
#define CPU4_HRHV_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D000u)

/** \brief D004, CPU4 HR specific code protection range 0, upper bound register */
#define CPU4_HRHV_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D004u)

/** \brief D008, CPU4 HR specific code protection range 1, lower bound register */
#define CPU4_HRHV_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D008u)

/** \brief D00C, CPU4 HR specific code protection range 1, upper bound register */
#define CPU4_HRHV_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D00Cu)

/** \brief D010, CPU4 HR specific code protection range 2, lower bound register */
#define CPU4_HRHV_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D010u)

/** \brief D014, CPU4 HR specific code protection range 2, upper bound register */
#define CPU4_HRHV_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D014u)

/** \brief D018, CPU4 HR specific code protection range 3, lower bound register */
#define CPU4_HRHV_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D018u)

/** \brief D01C, CPU4 HR specific code protection range 3, upper bound register */
#define CPU4_HRHV_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D01Cu)

/** \brief D020, CPU4 HR specific code protection range 4, lower bound register */
#define CPU4_HRHV_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D020u)

/** \brief D024, CPU4 HR specific code protection range 4, upper bound register */
#define CPU4_HRHV_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D024u)

/** \brief D028, CPU4 HR specific code protection range 5, lower bound register */
#define CPU4_HRHV_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D028u)

/** \brief D02C, CPU4 HR specific code protection range 5, upper bound register */
#define CPU4_HRHV_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D02Cu)

/** \brief D030, CPU4 HR specific code protection range 6, lower bound register */
#define CPU4_HRHV_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D030u)

/** \brief D034, CPU4 HR specific code protection range 6, upper bound register */
#define CPU4_HRHV_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D034u)

/** \brief D038, CPU4 HR specific code protection range 7, lower bound register */
#define CPU4_HRHV_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D038u)

/** \brief D03C, CPU4 HR specific code protection range 7, upper bound register */
#define CPU4_HRHV_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D03Cu)

/** \brief D040, CPU4 HR specific code protection range 8, lower bound register */
#define CPU4_HRHV_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D040u)

/** \brief D044, CPU4 HR specific code protection range 8, upper bound register */
#define CPU4_HRHV_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D044u)

/** \brief D048, CPU4 HR specific code protection range 9, lower bound register */
#define CPU4_HRHV_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D048u)

/** \brief D04C, CPU4 HR specific code protection range 9, upper bound register */
#define CPU4_HRHV_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D04Cu)

/** \brief D050, CPU4 HR specific code protection range 10, lower bound register */
#define CPU4_HRHV_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D050u)

/** \brief D054, CPU4 HR specific code protection range 10, upper bound register */
#define CPU4_HRHV_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D054u)

/** \brief D058, CPU4 HR specific code protection range 11, lower bound register */
#define CPU4_HRHV_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D058u)

/** \brief D05C, CPU4 HR specific code protection range 11, upper bound register */
#define CPU4_HRHV_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D05Cu)

/** \brief D060, CPU4 HR specific code protection range 12, lower bound register */
#define CPU4_HRHV_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D060u)

/** \brief D064, CPU4 HR specific code protection range 12, upper bound register */
#define CPU4_HRHV_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D064u)

/** \brief D068, CPU4 HR specific code protection range 13, lower bound register */
#define CPU4_HRHV_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D068u)

/** \brief D06C, CPU4 HR specific code protection range 13, upper bound register */
#define CPU4_HRHV_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D06Cu)

/** \brief D070, CPU4 HR specific code protection range 14, lower bound register */
#define CPU4_HRHV_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D070u)

/** \brief D074, CPU4 HR specific code protection range 14, upper bound register */
#define CPU4_HRHV_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D074u)

/** \brief D078, CPU4 HR specific code protection range 15, lower bound register */
#define CPU4_HRHV_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF893D078u)

/** \brief D07C, CPU4 HR specific code protection range 15, upper bound register */
#define CPU4_HRHV_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF893D07Cu)

/** \brief E000, CPU4 HR specific code protection execute enable register set 0 */
#define CPU4_HRHV_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E000u)

/** \brief E004, CPU4 HR specific code protection execute enable register set 1 */
#define CPU4_HRHV_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E004u)

/** \brief E008, CPU4 HR specific code protection execute enable register set 2 */
#define CPU4_HRHV_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E008u)

/** \brief E00C, CPU4 HR specific code protection execute enable register set 3 */
#define CPU4_HRHV_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E00Cu)

/** \brief E010, CPU4 HR specific data protection read enable register set 0 */
#define CPU4_HRHV_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E010u)

/** \brief E014, CPU4 HR specific data protection read enable register set 1 */
#define CPU4_HRHV_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E014u)

/** \brief E018, CPU4 HR specific data protection read enable register set 2 */
#define CPU4_HRHV_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E018u)

/** \brief E01C, CPU4 HR specific data protection read enable register set 3 */
#define CPU4_HRHV_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E01Cu)

/** \brief E020, CPU4 HR specific data protection write enable register set 0 */
#define CPU4_HRHV_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E020u)

/** \brief E024, CPU4 HR specific data protection write enable register set 1 */
#define CPU4_HRHV_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E024u)

/** \brief E028, CPU4 HR specific data protection write enable register set 2 */
#define CPU4_HRHV_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E028u)

/** \brief E02C, CPU4 HR specific data protection write enable register set 3 */
#define CPU4_HRHV_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E02Cu)

/** \brief E040, CPU4 HR specific code protection execute enable register set 4 */
#define CPU4_HRHV_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E040u)

/** \brief E044, CPU4 HR specific code protection execute enable register set 5 */
#define CPU4_HRHV_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E044u)

/** \brief E048, CPU4 HR specific code protection execute enable register set 6 */
#define CPU4_HRHV_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E048u)

/** \brief E04C, CPU4 HR specific code protection execute enable register set 7 */
#define CPU4_HRHV_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF893E04Cu)

/** \brief E050, CPU4 HR specific data protection read enable register set 4 */
#define CPU4_HRHV_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E050u)

/** \brief E054, CPU4 HR specific data protection read enable register set 5 */
#define CPU4_HRHV_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E054u)

/** \brief E058, CPU4 HR specific data protection read enable register set 6 */
#define CPU4_HRHV_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E058u)

/** \brief E05C, CPU4 HR specific data protection read enable register set 7 */
#define CPU4_HRHV_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF893E05Cu)

/** \brief E060, CPU4 HR specific data protection write enable register set 4 */
#define CPU4_HRHV_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E060u)

/** \brief E064, CPU4 HR specific data protection write enable register set 5 */
#define CPU4_HRHV_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E064u)

/** \brief E068, CPU4 HR specific data protection write enable register set 6 */
#define CPU4_HRHV_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E068u)

/** \brief E06C, CPU4 HR specific data protection write enable register set 7 */
#define CPU4_HRHV_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF893E06Cu)

/** \brief E400, CPU4 HR specific temporal protection system control register */
#define CPU4_HRHV_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF893E400u)

/** \brief E404, CPU4 HR specific temporal protection system timer register 0 */
#define CPU4_HRHV_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF893E404u)

/** \brief E408, CPU4 HR specific temporal protection system timer register 1 */
#define CPU4_HRHV_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF893E408u)

/** \brief E40C, CPU4 HR specific temporal protection system timer register 2 */
#define CPU4_HRHV_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF893E40Cu)

/** \brief F000, CPU4 trigger event 0 */
#define CPU4_HRHV_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F000u)
/** Alias (User Manual Name) for CPU4_HRHV_TR0_EVT */
#define CPU4_HRHV_TR0EVT (CPU4_HRHV_TR0_EVT)

/** \brief F004, CPU4 trigger address 0 */
#define CPU4_HRHV_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F004u)
/** Alias (User Manual Name) for CPU4_HRHV_TR0_ADR */
#define CPU4_HRHV_TR0ADR (CPU4_HRHV_TR0_ADR)

/** \brief F008, CPU4 trigger event 1 */
#define CPU4_HRHV_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F008u)
/** Alias (User Manual Name) for CPU4_HRHV_TR1_EVT */
#define CPU4_HRHV_TR1EVT (CPU4_HRHV_TR1_EVT)

/** \brief F00C, CPU4 trigger address 1 */
#define CPU4_HRHV_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F00Cu)
/** Alias (User Manual Name) for CPU4_HRHV_TR1_ADR */
#define CPU4_HRHV_TR1ADR (CPU4_HRHV_TR1_ADR)

/** \brief F010, CPU4 trigger event 2 */
#define CPU4_HRHV_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F010u)
/** Alias (User Manual Name) for CPU4_HRHV_TR2_EVT */
#define CPU4_HRHV_TR2EVT (CPU4_HRHV_TR2_EVT)

/** \brief F014, CPU4 trigger address 2 */
#define CPU4_HRHV_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F014u)
/** Alias (User Manual Name) for CPU4_HRHV_TR2_ADR */
#define CPU4_HRHV_TR2ADR (CPU4_HRHV_TR2_ADR)

/** \brief F018, CPU4 trigger event 3 */
#define CPU4_HRHV_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F018u)
/** Alias (User Manual Name) for CPU4_HRHV_TR3_EVT */
#define CPU4_HRHV_TR3EVT (CPU4_HRHV_TR3_EVT)

/** \brief F01C, CPU4 trigger address 3 */
#define CPU4_HRHV_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F01Cu)
/** Alias (User Manual Name) for CPU4_HRHV_TR3_ADR */
#define CPU4_HRHV_TR3ADR (CPU4_HRHV_TR3_ADR)

/** \brief F020, CPU4 trigger event 4 */
#define CPU4_HRHV_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F020u)
/** Alias (User Manual Name) for CPU4_HRHV_TR4_EVT */
#define CPU4_HRHV_TR4EVT (CPU4_HRHV_TR4_EVT)

/** \brief F024, CPU4 trigger address 4 */
#define CPU4_HRHV_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F024u)
/** Alias (User Manual Name) for CPU4_HRHV_TR4_ADR */
#define CPU4_HRHV_TR4ADR (CPU4_HRHV_TR4_ADR)

/** \brief F028, CPU4 trigger event 5 */
#define CPU4_HRHV_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F028u)
/** Alias (User Manual Name) for CPU4_HRHV_TR5_EVT */
#define CPU4_HRHV_TR5EVT (CPU4_HRHV_TR5_EVT)

/** \brief F02C, CPU4 trigger address 5 */
#define CPU4_HRHV_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F02Cu)
/** Alias (User Manual Name) for CPU4_HRHV_TR5_ADR */
#define CPU4_HRHV_TR5ADR (CPU4_HRHV_TR5_ADR)

/** \brief F030, CPU4 trigger event 6 */
#define CPU4_HRHV_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F030u)
/** Alias (User Manual Name) for CPU4_HRHV_TR6_EVT */
#define CPU4_HRHV_TR6EVT (CPU4_HRHV_TR6_EVT)

/** \brief F034, CPU4 trigger address 6 */
#define CPU4_HRHV_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F034u)
/** Alias (User Manual Name) for CPU4_HRHV_TR6_ADR */
#define CPU4_HRHV_TR6ADR (CPU4_HRHV_TR6_ADR)

/** \brief F038, CPU4 trigger event 7 */
#define CPU4_HRHV_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF893F038u)
/** Alias (User Manual Name) for CPU4_HRHV_TR7_EVT */
#define CPU4_HRHV_TR7EVT (CPU4_HRHV_TR7_EVT)

/** \brief F03C, CPU4 trigger address 7 */
#define CPU4_HRHV_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF893F03Cu)
/** Alias (User Manual Name) for CPU4_HRHV_TR7_ADR */
#define CPU4_HRHV_TR7ADR (CPU4_HRHV_TR7_ADR)

/** \brief FC00, CPU4 HR specific counter control */
#define CPU4_HRHV_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF893FC00u)

/** \brief FC04, CPU4 HR specific CPU clock cycle count */
#define CPU4_HRHV_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF893FC04u)

/** \brief FC08, CPU4 HR specific instruction count */
#define CPU4_HRHV_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF893FC08u)

/** \brief FC0C, CPU4 HR specific multi-count register 1 */
#define CPU4_HRHV_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF893FC0Cu)

/** \brief FC10, CPU4 HR specific multi-count register 2 */
#define CPU4_HRHV_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF893FC10u)

/** \brief FC14, CPU4 HR specific multi-count register 3 */
#define CPU4_HRHV_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF893FC14u)

/** \brief FD00, CPU4 debug status register */
#define CPU4_HRHV_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF893FD00u)

/** \brief FD08, CPU4 external event register */
#define CPU4_HRHV_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF893FD08u)

/** \brief FD0C, CPU4 core register access event */
#define CPU4_HRHV_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF893FD0Cu)

/** \brief FD10, CPU4 software debug event */
#define CPU4_HRHV_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF893FD10u)

/** \brief FD14, CPU4 debug action configuration */
#define CPU4_HRHV_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF893FD14u)

/** \brief FD30, CPU4 trigger accumulator */
#define CPU4_HRHV_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF893FD30u)

/** \brief FD40, CPU4 debug monitor start address */
#define CPU4_HRHV_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF893FD40u)

/** \brief FD44, CPU4 debug context save area pointer */
#define CPU4_HRHV_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF893FD44u)

/** \brief FD48, CPU4 debug trap control */
#define CPU4_HRHV_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF893FD48u)

/** \brief FD4C, CPU4 debug configuration */
#define CPU4_HRHV_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF893FD4Cu)

/** \brief FD50, CPU4 trace configuration */
#define CPU4_HRHV_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF893FD50u)

/** \brief FD54, CPU4 trace filter */
#define CPU4_HRHV_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF893FD54u)

/** \brief FD58, CPU4 trace bandwidth limiter */
#define CPU4_HRHV_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF893FD58u)

/** \brief FD60, CPU4 MCDS performance counter control register */
#define CPU4_HRHV_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF893FD60u)

/** \brief FE00, CPU4 previous context information register */
#define CPU4_HRHV_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF893FE00u)

/** \brief FE04, CPU4 HR specific program status word */
#define CPU4_HRHV_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF893FE04u)

/** \brief FE08, CPU4 program counter */
#define CPU4_HRHV_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF893FE08u)

/** \brief FE14, CPU4 HR specific core configuration register */
#define CPU4_HRHV_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF893FE14u)

/** \brief FE18, CPU4 identification register */
#define CPU4_HRHV_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF893FE18u)

/** \brief FE1C, CPU4 core identification register */
#define CPU4_HRHV_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF893FE1Cu)

/** \brief FE20, CPU4 HR specific base interrupt vector table pointer */
#define CPU4_HRHV_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF893FE20u)

/** \brief FE24, CPU4 HR specific base trap vector table pointer */
#define CPU4_HRHV_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF893FE24u)

/** \brief FE28, CPU4 HR specific interrupt stack pointer */
#define CPU4_HRHV_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF893FE28u)

/** \brief FE2C, CPU4 interrupt control register */
#define CPU4_HRHV_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF893FE2Cu)

/** \brief FE34, CPU4 previous PRS */
#define CPU4_HRHV_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF893FE34u)

/** \brief FE38, CPU4 HR specific free CSA list head pointer */
#define CPU4_HRHV_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF893FE38u)

/** \brief FE3C, CPU4 HR specific free CSA list limit pointer */
#define CPU4_HRHV_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF893FE3Cu)

/** \brief FE40, CPU4 software identification */
#define CPU4_HRHV_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF893FE40u)

/** \brief FE50, CPU4 customer ID register */
#define CPU4_HRHV_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF893FE50u)

/** \brief FE60, CPU4 core boot configuration register */
#define CPU4_HRHV_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF893FE60u)

/** \brief FE64, CPU4 lockstep control register */
#define CPU4_HRHV_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF893FE64u)

/** \brief FE68, CPU4 clock control register */
#define CPU4_HRHV_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF893FE68u)

/** \brief FE6C, CPU4 hardware configuration  */
#define CPU4_HRHV_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF893FE6Cu)

/** \brief FF80, CPU4 HR specific address general purpose register 0 */
#define CPU4_HRHV_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF893FF80u)

/** \brief FF84, CPU4 HR specific address general purpose register 1 */
#define CPU4_HRHV_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF893FF84u)

/** \brief FFA0, CPU4 HR specific address general purpose register 8 */
#define CPU4_HRHV_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF893FFA0u)

/** \brief FFA4, CPU4 HR specific address general purpose register 9 */
#define CPU4_HRHV_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF893FFA4u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpu_Registers_Cfg_Cpu5
 * \{  */
/** \brief 0, CPU5 system timer clock control register */
#define CPU5_STM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8940000u)

/** \brief 0, CPU5 system timer clock control register", hypervisor view" */
#define CPU5_STMHV_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8940000u)

/** \brief 4, CPU5 OCDS control and status register */
#define CPU5_STM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8940004u)

/** \brief 4, CPU5 OCDS control and status register", hypervisor view" */
#define CPU5_STMHV_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8940004u)

/** \brief 20, CPU5 system timer absolute timer */
#define CPU5_STM_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8940020u)

/** \brief 20, CPU5 system timer absolute timer", hypervisor view" */
#define CPU5_STMHV_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8940020u)

/** \brief 100, CPU5 VM0 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM0_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940100u)

/** \brief 104, CPU5 VM0 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM0_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940104u)

/** \brief 108, CPU5 VM0 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM0_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8940108u)

/** \brief 10C, CPU5 VM0 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM0_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF894010Cu)
/** Alias (User Manual Name) for CPU5_STMHV_VM0_STM_ICR */
#define CPU5_STMHV_VM0_ICR (CPU5_STMHV_VM0_STM_ICR)

/** \brief 110, CPU5 VM0 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM0_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8940110u)

/** \brief 114, CPU5 VM0 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM0_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8940114u)

/** \brief 118, CPU5 VM0 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM0_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8940118u)

/** \brief 120, CPU5 system timer compare register 0 */
#define CPU5_STM_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940120u)

/** \brief 120, CPU5 VM1 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM1_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940120u)

/** \brief 124, CPU5 system timer compare register 1 */
#define CPU5_STM_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940124u)

/** \brief 124, CPU5 VM1 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM1_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940124u)

/** \brief 128, CPU5 system timer compare match control register */
#define CPU5_STM_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8940128u)

/** \brief 128, CPU5 VM1 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM1_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8940128u)

/** \brief 12C, CPU5 system timer interrupt control register */
#define CPU5_STM_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF894012Cu)
/** Alias (User Manual Name) for CPU5_STM_STM_ICR */
#define CPU5_STM_ICR (CPU5_STM_STM_ICR)

/** \brief 12C, CPU5 VM1 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM1_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF894012Cu)
/** Alias (User Manual Name) for CPU5_STMHV_VM1_STM_ICR */
#define CPU5_STMHV_VM1_ICR (CPU5_STMHV_VM1_STM_ICR)

/** \brief 130, CPU5 system timer interrupt set/clear register */
#define CPU5_STM_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8940130u)

/** \brief 130, CPU5 VM1 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM1_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8940130u)

/** \brief 134, CPU5 system timer interrupt status register */
#define CPU5_STM_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8940134u)

/** \brief 134, CPU5 VM1 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM1_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8940134u)

/** \brief 138, CPU5 system timer relative timer */
#define CPU5_STM_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8940138u)

/** \brief 138, CPU5 VM1 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM1_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8940138u)

/** \brief 140, CPU5 VM2 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM2_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940140u)

/** \brief 144, CPU5 VM2 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM2_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940144u)

/** \brief 148, CPU5 VM2 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM2_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8940148u)

/** \brief 14C, CPU5 VM2 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM2_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF894014Cu)
/** Alias (User Manual Name) for CPU5_STMHV_VM2_STM_ICR */
#define CPU5_STMHV_VM2_ICR (CPU5_STMHV_VM2_STM_ICR)

/** \brief 150, CPU5 VM2 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM2_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8940150u)

/** \brief 154, CPU5 VM2 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM2_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8940154u)

/** \brief 158, CPU5 VM2 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM2_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8940158u)

/** \brief 160, CPU5 VM3 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM3_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940160u)

/** \brief 164, CPU5 VM3 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM3_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940164u)

/** \brief 168, CPU5 VM3 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM3_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8940168u)

/** \brief 16C, CPU5 VM3 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM3_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF894016Cu)
/** Alias (User Manual Name) for CPU5_STMHV_VM3_STM_ICR */
#define CPU5_STMHV_VM3_ICR (CPU5_STMHV_VM3_STM_ICR)

/** \brief 170, CPU5 VM3 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM3_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8940170u)

/** \brief 174, CPU5 VM3 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM3_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8940174u)

/** \brief 178, CPU5 VM3 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM3_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8940178u)

/** \brief 180, CPU5 VM4 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM4_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940180u)

/** \brief 184, CPU5 VM4 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM4_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8940184u)

/** \brief 188, CPU5 VM4 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM4_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8940188u)

/** \brief 18C, CPU5 VM4 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM4_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF894018Cu)
/** Alias (User Manual Name) for CPU5_STMHV_VM4_STM_ICR */
#define CPU5_STMHV_VM4_ICR (CPU5_STMHV_VM4_STM_ICR)

/** \brief 190, CPU5 VM4 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM4_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8940190u)

/** \brief 194, CPU5 VM4 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM4_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8940194u)

/** \brief 198, CPU5 VM4 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM4_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8940198u)

/** \brief 1A0, CPU5 VM5 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM5_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89401A0u)

/** \brief 1A4, CPU5 VM5 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM5_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89401A4u)

/** \brief 1A8, CPU5 VM5 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM5_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF89401A8u)

/** \brief 1AC, CPU5 VM5 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM5_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF89401ACu)
/** Alias (User Manual Name) for CPU5_STMHV_VM5_STM_ICR */
#define CPU5_STMHV_VM5_ICR (CPU5_STMHV_VM5_STM_ICR)

/** \brief 1B0, CPU5 VM5 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM5_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF89401B0u)

/** \brief 1B4, CPU5 VM5 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM5_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF89401B4u)

/** \brief 1B8, CPU5 VM5 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM5_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF89401B8u)

/** \brief 1C0, CPU5 VM6 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM6_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89401C0u)

/** \brief 1C4, CPU5 VM6 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM6_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89401C4u)

/** \brief 1C8, CPU5 VM6 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM6_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF89401C8u)

/** \brief 1CC, CPU5 VM6 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM6_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF89401CCu)
/** Alias (User Manual Name) for CPU5_STMHV_VM6_STM_ICR */
#define CPU5_STMHV_VM6_ICR (CPU5_STMHV_VM6_STM_ICR)

/** \brief 1D0, CPU5 VM6 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM6_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF89401D0u)

/** \brief 1D4, CPU5 VM6 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM6_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF89401D4u)

/** \brief 1D8, CPU5 VM6 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM6_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF89401D8u)

/** \brief 1E0, CPU5 VM7 system timer compare register 0", hypervisor view" */
#define CPU5_STMHV_VM7_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89401E0u)

/** \brief 1E4, CPU5 VM7 system timer compare register 1", hypervisor view" */
#define CPU5_STMHV_VM7_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF89401E4u)

/** \brief 1E8, CPU5 VM7 system timer compare match control register", hypervisor view" */
#define CPU5_STMHV_VM7_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF89401E8u)

/** \brief 1EC, CPU5 VM7 system timer interrupt control register", hypervisor view" */
#define CPU5_STMHV_VM7_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF89401ECu)
/** Alias (User Manual Name) for CPU5_STMHV_VM7_STM_ICR */
#define CPU5_STMHV_VM7_ICR (CPU5_STMHV_VM7_STM_ICR)

/** \brief 1F0, CPU5 VM7 system timer interrupt set/clear register", hypervisor view" */
#define CPU5_STMHV_VM7_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF89401F0u)

/** \brief 1F4, CPU5 VM7 system timer interrupt status register", hypervisor view" */
#define CPU5_STMHV_VM7_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF89401F4u)

/** \brief 1F8, CPU5 VM7 system timer relative timer", hypervisor view" */
#define CPU5_STMHV_VM7_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF89401F8u)

/** \brief D000, CPU5 reset register 0 */
#define CPU5_KRST0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST0*)0xF894D000u)

/** \brief D004, CPU5 reset register 1 */
#define CPU5_KRST1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST1*)0xF894D004u)

/** \brief D008, CPU5 reset clear register */
#define CPU5_KRSTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRSTCLR*)0xF894D008u)

/** \brief 8, CPU5 PROTSPR register safe endinit */
#define CPU5_PROTSPRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF894E008u)

/** \brief 20, CPU5 shadow SPR, write access enable register A */
#define CPU5_ACCENSPRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF894E020u)

/** \brief 24, CPU5 shadow SPR, write access enable register B */
#define CPU5_ACCENSPRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF894E024u)

/** \brief 28, CPU5 shadow SPR, read access enable register A */
#define CPU5_ACCENSPRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF894E028u)

/** \brief 2C, CPU5 shadow SPR, read access enable register B */
#define CPU5_ACCENSPRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF894E02Cu)

/** \brief 30, CPU5 shadow SPR, VM access enable register */
#define CPU5_ACCENSPRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF894E030u)

/** \brief 34, CPU5 shadow SPR, PRS access enable register */
#define CPU5_ACCENSPRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF894E034u)

/** \brief 38, CPU5 shadow SPR, region lower address register */
#define CPU5_ACCENSPRCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA*)0xF894E038u)

/** \brief 3C, CPU5 shadow SPR, region upper address register */
#define CPU5_ACCENSPRCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA*)0xF894E03Cu)

/** \brief 48, CPU5 PROTDLMU register safe endinit */
#define CPU5_PROTDLMUSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF894E048u)

/** \brief 60, CPU5 shadow DLMU, write access enable register A */
#define CPU5_ACCENDLMUCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF894E060u)

/** \brief 64, CPU5 shadow DLMU, write access enable register B */
#define CPU5_ACCENDLMUCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF894E064u)

/** \brief 68, CPU5 shadow DLMU, read access enable register A */
#define CPU5_ACCENDLMUCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF894E068u)

/** \brief 6C, CPU5 shadow DLMU, read access enable register B */
#define CPU5_ACCENDLMUCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF894E06Cu)

/** \brief 70, CPU5 shadow DLMU, VM access enable register */
#define CPU5_ACCENDLMUCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF894E070u)

/** \brief 74, CPU5 shadow DLMU, PRS access enable register */
#define CPU5_ACCENDLMUCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF894E074u)

/** \brief 78, CPU5 shadow DLMU, region lower address register */
#define CPU5_ACCENDLMUCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA_89*)0xF894E078u)

/** \brief 7C, CPU5 shadow DLMU, region upper address register */
#define CPU5_ACCENDLMUCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA_89*)0xF894E07Cu)

/** \brief 80, CPU5 PROTSFR register endinit */
#define CPU5_PROTSFRE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF894E080u)

/** \brief 88, CPU5 PROTSFR register safe endinit */
#define CPU5_PROTSFRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF894E088u)

/** \brief A0, CPU5 shadow SFR, write access enable register A */
#define CPU5_ACCENSFRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF894E0A0u)

/** \brief A4, CPU5 shadow SFR, write access enable register B */
#define CPU5_ACCENSFRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF894E0A4u)

/** \brief A8, CPU5 shadow SFR, read access enable register A */
#define CPU5_ACCENSFRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF894E0A8u)

/** \brief AC, CPU5 shadow SFR, read access enable register B */
#define CPU5_ACCENSFRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF894E0ACu)

/** \brief B0, CPU5 shadow SFR, VM access enable register */
#define CPU5_ACCENSFRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF894E0B0u)

/** \brief B4, CPU5 shadow SFR, PRS access enable register */
#define CPU5_ACCENSFRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF894E0B4u)

/** \brief C0, CPU5 PROTRST register endinit */
#define CPU5_PROTRSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF894E0C0u)

/** \brief D8, CPU5 PROTSTM Register Safe Endinit */
#define CPU5_PROTSTMSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROTSTMSE*)0xF894E0D8u)

/** \brief E0, CPU5 shadow STM, write access enable register A */
#define CPU5_ACCENSTMCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF894E0E0u)

/** \brief E4, CPU5 shadow STM, write access enable register B */
#define CPU5_ACCENSTMCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF894E0E4u)

/** \brief E8, CPU5 shadow STM, read access enable register A */
#define CPU5_ACCENSTMCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF894E0E8u)

/** \brief EC, CPU5 shadow STM, read access enable register B */
#define CPU5_ACCENSTMCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF894E0ECu)

/** \brief F0, CPU5 shadow STM, VM access enable register */
#define CPU5_ACCENSTMCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF894E0F0u)

/** \brief F4, CPU5 shadow STM, PRS access enable register */
#define CPU5_ACCENSTMCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF894E0F4u)

/** \brief 200, CPU5 SPR range 0, write access enable register A */
#define CPU5_ACCENSPR0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E200u)

/** \brief 204, CPU5 SPR range 0, write access enable register B */
#define CPU5_ACCENSPR0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E204u)

/** \brief 208, CPU5 SPR range 0, read access enable register A */
#define CPU5_ACCENSPR0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E208u)

/** \brief 20C, CPU5 SPR range 0, read access enable register B */
#define CPU5_ACCENSPR0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E20Cu)

/** \brief 210, CPU5 SPR range 0, VM access enable register */
#define CPU5_ACCENSPR0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E210u)

/** \brief 214, CPU5 SPR range 0, PRS access enable register */
#define CPU5_ACCENSPR0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E214u)

/** \brief 218, CPU5 SPR range 0, region lower address register */
#define CPU5_ACCENSPR0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E218u)

/** \brief 21C, CPU5 SPR range 0, region upper address register */
#define CPU5_ACCENSPR0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E21Cu)

/** \brief 220, CPU5 SPR range 1, write access enable register A */
#define CPU5_ACCENSPR1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E220u)

/** \brief 224, CPU5 SPR range 1, write access enable register B */
#define CPU5_ACCENSPR1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E224u)

/** \brief 228, CPU5 SPR range 1, read access enable register A */
#define CPU5_ACCENSPR1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E228u)

/** \brief 22C, CPU5 SPR range 1, read access enable register B */
#define CPU5_ACCENSPR1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E22Cu)

/** \brief 230, CPU5 SPR range 1, VM access enable register */
#define CPU5_ACCENSPR1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E230u)

/** \brief 234, CPU5 SPR range 1, PRS access enable register */
#define CPU5_ACCENSPR1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E234u)

/** \brief 238, CPU5 SPR range 1, region lower address register */
#define CPU5_ACCENSPR1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E238u)

/** \brief 23C, CPU5 SPR range 1, region upper address register */
#define CPU5_ACCENSPR1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E23Cu)

/** \brief 240, CPU5 SPR range 2, write access enable register A */
#define CPU5_ACCENSPR2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E240u)

/** \brief 244, CPU5 SPR range 2, write access enable register B */
#define CPU5_ACCENSPR2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E244u)

/** \brief 248, CPU5 SPR range 2, read access enable register A */
#define CPU5_ACCENSPR2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E248u)

/** \brief 24C, CPU5 SPR range 2, read access enable register B */
#define CPU5_ACCENSPR2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E24Cu)

/** \brief 250, CPU5 SPR range 2, VM access enable register */
#define CPU5_ACCENSPR2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E250u)

/** \brief 254, CPU5 SPR range 2, PRS access enable register */
#define CPU5_ACCENSPR2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E254u)

/** \brief 258, CPU5 SPR range 2, region lower address register */
#define CPU5_ACCENSPR2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E258u)

/** \brief 25C, CPU5 SPR range 2, region upper address register */
#define CPU5_ACCENSPR2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E25Cu)

/** \brief 260, CPU5 SPR range 3, write access enable register A */
#define CPU5_ACCENSPR3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E260u)

/** \brief 264, CPU5 SPR range 3, write access enable register B */
#define CPU5_ACCENSPR3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E264u)

/** \brief 268, CPU5 SPR range 3, read access enable register A */
#define CPU5_ACCENSPR3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E268u)

/** \brief 26C, CPU5 SPR range 3, read access enable register B */
#define CPU5_ACCENSPR3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E26Cu)

/** \brief 270, CPU5 SPR range 3, VM access enable register */
#define CPU5_ACCENSPR3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E270u)

/** \brief 274, CPU5 SPR range 3, PRS access enable register */
#define CPU5_ACCENSPR3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E274u)

/** \brief 278, CPU5 SPR range 3, region lower address register */
#define CPU5_ACCENSPR3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E278u)

/** \brief 27C, CPU5 SPR range 3, region upper address register */
#define CPU5_ACCENSPR3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E27Cu)

/** \brief 280, CPU5 SPR range 4, write access enable register A */
#define CPU5_ACCENSPR4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E280u)

/** \brief 284, CPU5 SPR range 4, write access enable register B */
#define CPU5_ACCENSPR4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E284u)

/** \brief 288, CPU5 SPR range 4, read access enable register A */
#define CPU5_ACCENSPR4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E288u)

/** \brief 28C, CPU5 SPR range 4, read access enable register B */
#define CPU5_ACCENSPR4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E28Cu)

/** \brief 290, CPU5 SPR range 4, VM access enable register */
#define CPU5_ACCENSPR4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E290u)

/** \brief 294, CPU5 SPR range 4, PRS access enable register */
#define CPU5_ACCENSPR4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E294u)

/** \brief 298, CPU5 SPR range 4, region lower address register */
#define CPU5_ACCENSPR4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E298u)

/** \brief 29C, CPU5 SPR range 4, region upper address register */
#define CPU5_ACCENSPR4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E29Cu)

/** \brief 2A0, CPU5 SPR range 5, write access enable register A */
#define CPU5_ACCENSPR5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E2A0u)

/** \brief 2A4, CPU5 SPR range 5, write access enable register B */
#define CPU5_ACCENSPR5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E2A4u)

/** \brief 2A8, CPU5 SPR range 5, read access enable register A */
#define CPU5_ACCENSPR5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E2A8u)

/** \brief 2AC, CPU5 SPR range 5, read access enable register B */
#define CPU5_ACCENSPR5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E2ACu)

/** \brief 2B0, CPU5 SPR range 5, VM access enable register */
#define CPU5_ACCENSPR5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E2B0u)

/** \brief 2B4, CPU5 SPR range 5, PRS access enable register */
#define CPU5_ACCENSPR5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E2B4u)

/** \brief 2B8, CPU5 SPR range 5, region lower address register */
#define CPU5_ACCENSPR5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E2B8u)

/** \brief 2BC, CPU5 SPR range 5, region upper address register */
#define CPU5_ACCENSPR5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E2BCu)

/** \brief 2C0, CPU5 SPR range 6, write access enable register A */
#define CPU5_ACCENSPR6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E2C0u)

/** \brief 2C4, CPU5 SPR range 6, write access enable register B */
#define CPU5_ACCENSPR6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E2C4u)

/** \brief 2C8, CPU5 SPR range 6, read access enable register A */
#define CPU5_ACCENSPR6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E2C8u)

/** \brief 2CC, CPU5 SPR range 6, read access enable register B */
#define CPU5_ACCENSPR6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E2CCu)

/** \brief 2D0, CPU5 SPR range 6, VM access enable register */
#define CPU5_ACCENSPR6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E2D0u)

/** \brief 2D4, CPU5 SPR range 6, PRS access enable register */
#define CPU5_ACCENSPR6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E2D4u)

/** \brief 2D8, CPU5 SPR range 6, region lower address register */
#define CPU5_ACCENSPR6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E2D8u)

/** \brief 2DC, CPU5 SPR range 6, region upper address register */
#define CPU5_ACCENSPR6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E2DCu)

/** \brief 2E0, CPU5 SPR range 7, write access enable register A */
#define CPU5_ACCENSPR7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E2E0u)

/** \brief 2E4, CPU5 SPR range 7, write access enable register B */
#define CPU5_ACCENSPR7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E2E4u)

/** \brief 2E8, CPU5 SPR range 7, read access enable register A */
#define CPU5_ACCENSPR7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E2E8u)

/** \brief 2EC, CPU5 SPR range 7, read access enable register B */
#define CPU5_ACCENSPR7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E2ECu)

/** \brief 2F0, CPU5 SPR range 7, VM access enable register */
#define CPU5_ACCENSPR7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E2F0u)

/** \brief 2F4, CPU5 SPR range 7, PRS access enable register */
#define CPU5_ACCENSPR7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E2F4u)

/** \brief 2F8, CPU5 SPR range 7, region lower address register */
#define CPU5_ACCENSPR7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E2F8u)

/** \brief 2FC, CPU5 SPR range 7, region upper address register */
#define CPU5_ACCENSPR7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E2FCu)

/** \brief 300, CPU5 SPR range 8, write access enable register A */
#define CPU5_ACCENSPR8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E300u)

/** \brief 304, CPU5 SPR range 8, write access enable register B */
#define CPU5_ACCENSPR8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E304u)

/** \brief 308, CPU5 SPR range 8, read access enable register A */
#define CPU5_ACCENSPR8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E308u)

/** \brief 30C, CPU5 SPR range 8, read access enable register B */
#define CPU5_ACCENSPR8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E30Cu)

/** \brief 310, CPU5 SPR range 8, VM access enable register */
#define CPU5_ACCENSPR8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E310u)

/** \brief 314, CPU5 SPR range 8, PRS access enable register */
#define CPU5_ACCENSPR8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E314u)

/** \brief 318, CPU5 SPR range 8, region lower address register */
#define CPU5_ACCENSPR8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E318u)

/** \brief 31C, CPU5 SPR range 8, region upper address register */
#define CPU5_ACCENSPR8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E31Cu)

/** \brief 320, CPU5 SPR range 9, write access enable register A */
#define CPU5_ACCENSPR9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E320u)

/** \brief 324, CPU5 SPR range 9, write access enable register B */
#define CPU5_ACCENSPR9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E324u)

/** \brief 328, CPU5 SPR range 9, read access enable register A */
#define CPU5_ACCENSPR9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E328u)

/** \brief 32C, CPU5 SPR range 9, read access enable register B */
#define CPU5_ACCENSPR9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E32Cu)

/** \brief 330, CPU5 SPR range 9, VM access enable register */
#define CPU5_ACCENSPR9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E330u)

/** \brief 334, CPU5 SPR range 9, PRS access enable register */
#define CPU5_ACCENSPR9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E334u)

/** \brief 338, CPU5 SPR range 9, region lower address register */
#define CPU5_ACCENSPR9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E338u)

/** \brief 33C, CPU5 SPR range 9, region upper address register */
#define CPU5_ACCENSPR9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E33Cu)

/** \brief 340, CPU5 SPR range 10, write access enable register A */
#define CPU5_ACCENSPR10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E340u)

/** \brief 344, CPU5 SPR range 10, write access enable register B */
#define CPU5_ACCENSPR10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E344u)

/** \brief 348, CPU5 SPR range 10, read access enable register A */
#define CPU5_ACCENSPR10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E348u)

/** \brief 34C, CPU5 SPR range 10, read access enable register B */
#define CPU5_ACCENSPR10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E34Cu)

/** \brief 350, CPU5 SPR range 10, VM access enable register */
#define CPU5_ACCENSPR10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E350u)

/** \brief 354, CPU5 SPR range 10, PRS access enable register */
#define CPU5_ACCENSPR10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E354u)

/** \brief 358, CPU5 SPR range 10, region lower address register */
#define CPU5_ACCENSPR10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E358u)

/** \brief 35C, CPU5 SPR range 10, region upper address register */
#define CPU5_ACCENSPR10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E35Cu)

/** \brief 360, CPU5 SPR range 11, write access enable register A */
#define CPU5_ACCENSPR11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E360u)

/** \brief 364, CPU5 SPR range 11, write access enable register B */
#define CPU5_ACCENSPR11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E364u)

/** \brief 368, CPU5 SPR range 11, read access enable register A */
#define CPU5_ACCENSPR11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E368u)

/** \brief 36C, CPU5 SPR range 11, read access enable register B */
#define CPU5_ACCENSPR11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E36Cu)

/** \brief 370, CPU5 SPR range 11, VM access enable register */
#define CPU5_ACCENSPR11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E370u)

/** \brief 374, CPU5 SPR range 11, PRS access enable register */
#define CPU5_ACCENSPR11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E374u)

/** \brief 378, CPU5 SPR range 11, region lower address register */
#define CPU5_ACCENSPR11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E378u)

/** \brief 37C, CPU5 SPR range 11, region upper address register */
#define CPU5_ACCENSPR11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E37Cu)

/** \brief 380, CPU5 SPR range 12, write access enable register A */
#define CPU5_ACCENSPR12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E380u)

/** \brief 384, CPU5 SPR range 12, write access enable register B */
#define CPU5_ACCENSPR12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E384u)

/** \brief 388, CPU5 SPR range 12, read access enable register A */
#define CPU5_ACCENSPR12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E388u)

/** \brief 38C, CPU5 SPR range 12, read access enable register B */
#define CPU5_ACCENSPR12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E38Cu)

/** \brief 390, CPU5 SPR range 12, VM access enable register */
#define CPU5_ACCENSPR12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E390u)

/** \brief 394, CPU5 SPR range 12, PRS access enable register */
#define CPU5_ACCENSPR12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E394u)

/** \brief 398, CPU5 SPR range 12, region lower address register */
#define CPU5_ACCENSPR12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E398u)

/** \brief 39C, CPU5 SPR range 12, region upper address register */
#define CPU5_ACCENSPR12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E39Cu)

/** \brief 3A0, CPU5 SPR range 13, write access enable register A */
#define CPU5_ACCENSPR13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E3A0u)

/** \brief 3A4, CPU5 SPR range 13, write access enable register B */
#define CPU5_ACCENSPR13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E3A4u)

/** \brief 3A8, CPU5 SPR range 13, read access enable register A */
#define CPU5_ACCENSPR13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E3A8u)

/** \brief 3AC, CPU5 SPR range 13, read access enable register B */
#define CPU5_ACCENSPR13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E3ACu)

/** \brief 3B0, CPU5 SPR range 13, VM access enable register */
#define CPU5_ACCENSPR13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E3B0u)

/** \brief 3B4, CPU5 SPR range 13, PRS access enable register */
#define CPU5_ACCENSPR13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E3B4u)

/** \brief 3B8, CPU5 SPR range 13, region lower address register */
#define CPU5_ACCENSPR13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E3B8u)

/** \brief 3BC, CPU5 SPR range 13, region upper address register */
#define CPU5_ACCENSPR13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E3BCu)

/** \brief 3C0, CPU5 SPR range 14, write access enable register A */
#define CPU5_ACCENSPR14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E3C0u)

/** \brief 3C4, CPU5 SPR range 14, write access enable register B */
#define CPU5_ACCENSPR14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E3C4u)

/** \brief 3C8, CPU5 SPR range 14, read access enable register A */
#define CPU5_ACCENSPR14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E3C8u)

/** \brief 3CC, CPU5 SPR range 14, read access enable register B */
#define CPU5_ACCENSPR14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E3CCu)

/** \brief 3D0, CPU5 SPR range 14, VM access enable register */
#define CPU5_ACCENSPR14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E3D0u)

/** \brief 3D4, CPU5 SPR range 14, PRS access enable register */
#define CPU5_ACCENSPR14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E3D4u)

/** \brief 3D8, CPU5 SPR range 14, region lower address register */
#define CPU5_ACCENSPR14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E3D8u)

/** \brief 3DC, CPU5 SPR range 14, region upper address register */
#define CPU5_ACCENSPR14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E3DCu)

/** \brief 3E0, CPU5 SPR range 15, write access enable register A */
#define CPU5_ACCENSPR15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E3E0u)

/** \brief 3E4, CPU5 SPR range 15, write access enable register B */
#define CPU5_ACCENSPR15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E3E4u)

/** \brief 3E8, CPU5 SPR range 15, read access enable register A */
#define CPU5_ACCENSPR15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E3E8u)

/** \brief 3EC, CPU5 SPR range 15, read access enable register B */
#define CPU5_ACCENSPR15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E3ECu)

/** \brief 3F0, CPU5 SPR range 15, VM access enable register */
#define CPU5_ACCENSPR15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E3F0u)

/** \brief 3F4, CPU5 SPR range 15, PRS access enable register */
#define CPU5_ACCENSPR15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E3F4u)

/** \brief 3F8, CPU5 SPR range 15, region lower address register */
#define CPU5_ACCENSPR15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF894E3F8u)

/** \brief 3FC, CPU5 SPR range 15, region upper address register */
#define CPU5_ACCENSPR15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF894E3FCu)

/** \brief 400, CPU5 DLMU range 0, write access enable register A */
#define CPU5_ACCENDLMU0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E400u)

/** \brief 404, CPU5 DLMU range 0, write access enable register B */
#define CPU5_ACCENDLMU0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E404u)

/** \brief 408, CPU5 DLMU range 0, read access enable register A */
#define CPU5_ACCENDLMU0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E408u)

/** \brief 40C, CPU5 DLMU range 0, read access enable register B */
#define CPU5_ACCENDLMU0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E40Cu)

/** \brief 410, CPU5 DLMU range 0, VM access enable register */
#define CPU5_ACCENDLMU0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E410u)

/** \brief 414, CPU5 DLMU range 0, PRS access enable register */
#define CPU5_ACCENDLMU0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E414u)

/** \brief 418, CPU5 DLMU range 0, region lower address register */
#define CPU5_ACCENDLMU0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E418u)

/** \brief 41C, CPU5 DLMU range 0, region upper address register */
#define CPU5_ACCENDLMU0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E41Cu)

/** \brief 420, CPU5 DLMU range 1, write access enable register A */
#define CPU5_ACCENDLMU1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E420u)

/** \brief 424, CPU5 DLMU range 1, write access enable register B */
#define CPU5_ACCENDLMU1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E424u)

/** \brief 428, CPU5 DLMU range 1, read access enable register A */
#define CPU5_ACCENDLMU1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E428u)

/** \brief 42C, CPU5 DLMU range 1, read access enable register B */
#define CPU5_ACCENDLMU1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E42Cu)

/** \brief 430, CPU5 DLMU range 1, VM access enable register */
#define CPU5_ACCENDLMU1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E430u)

/** \brief 434, CPU5 DLMU range 1, PRS access enable register */
#define CPU5_ACCENDLMU1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E434u)

/** \brief 438, CPU5 DLMU range 1, region lower address register */
#define CPU5_ACCENDLMU1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E438u)

/** \brief 43C, CPU5 DLMU range 1, region upper address register */
#define CPU5_ACCENDLMU1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E43Cu)

/** \brief 440, CPU5 DLMU range 2, write access enable register A */
#define CPU5_ACCENDLMU2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E440u)

/** \brief 444, CPU5 DLMU range 2, write access enable register B */
#define CPU5_ACCENDLMU2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E444u)

/** \brief 448, CPU5 DLMU range 2, read access enable register A */
#define CPU5_ACCENDLMU2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E448u)

/** \brief 44C, CPU5 DLMU range 2, read access enable register B */
#define CPU5_ACCENDLMU2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E44Cu)

/** \brief 450, CPU5 DLMU range 2, VM access enable register */
#define CPU5_ACCENDLMU2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E450u)

/** \brief 454, CPU5 DLMU range 2, PRS access enable register */
#define CPU5_ACCENDLMU2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E454u)

/** \brief 458, CPU5 DLMU range 2, region lower address register */
#define CPU5_ACCENDLMU2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E458u)

/** \brief 45C, CPU5 DLMU range 2, region upper address register */
#define CPU5_ACCENDLMU2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E45Cu)

/** \brief 460, CPU5 DLMU range 3, write access enable register A */
#define CPU5_ACCENDLMU3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E460u)

/** \brief 464, CPU5 DLMU range 3, write access enable register B */
#define CPU5_ACCENDLMU3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E464u)

/** \brief 468, CPU5 DLMU range 3, read access enable register A */
#define CPU5_ACCENDLMU3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E468u)

/** \brief 46C, CPU5 DLMU range 3, read access enable register B */
#define CPU5_ACCENDLMU3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E46Cu)

/** \brief 470, CPU5 DLMU range 3, VM access enable register */
#define CPU5_ACCENDLMU3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E470u)

/** \brief 474, CPU5 DLMU range 3, PRS access enable register */
#define CPU5_ACCENDLMU3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E474u)

/** \brief 478, CPU5 DLMU range 3, region lower address register */
#define CPU5_ACCENDLMU3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E478u)

/** \brief 47C, CPU5 DLMU range 3, region upper address register */
#define CPU5_ACCENDLMU3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E47Cu)

/** \brief 480, CPU5 DLMU range 4, write access enable register A */
#define CPU5_ACCENDLMU4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E480u)

/** \brief 484, CPU5 DLMU range 4, write access enable register B */
#define CPU5_ACCENDLMU4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E484u)

/** \brief 488, CPU5 DLMU range 4, read access enable register A */
#define CPU5_ACCENDLMU4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E488u)

/** \brief 48C, CPU5 DLMU range 4, read access enable register B */
#define CPU5_ACCENDLMU4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E48Cu)

/** \brief 490, CPU5 DLMU range 4, VM access enable register */
#define CPU5_ACCENDLMU4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E490u)

/** \brief 494, CPU5 DLMU range 4, PRS access enable register */
#define CPU5_ACCENDLMU4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E494u)

/** \brief 498, CPU5 DLMU range 4, region lower address register */
#define CPU5_ACCENDLMU4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E498u)

/** \brief 49C, CPU5 DLMU range 4, region upper address register */
#define CPU5_ACCENDLMU4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E49Cu)

/** \brief 4A0, CPU5 DLMU range 5, write access enable register A */
#define CPU5_ACCENDLMU5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E4A0u)

/** \brief 4A4, CPU5 DLMU range 5, write access enable register B */
#define CPU5_ACCENDLMU5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E4A4u)

/** \brief 4A8, CPU5 DLMU range 5, read access enable register A */
#define CPU5_ACCENDLMU5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E4A8u)

/** \brief 4AC, CPU5 DLMU range 5, read access enable register B */
#define CPU5_ACCENDLMU5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E4ACu)

/** \brief 4B0, CPU5 DLMU range 5, VM access enable register */
#define CPU5_ACCENDLMU5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E4B0u)

/** \brief 4B4, CPU5 DLMU range 5, PRS access enable register */
#define CPU5_ACCENDLMU5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E4B4u)

/** \brief 4B8, CPU5 DLMU range 5, region lower address register */
#define CPU5_ACCENDLMU5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E4B8u)

/** \brief 4BC, CPU5 DLMU range 5, region upper address register */
#define CPU5_ACCENDLMU5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E4BCu)

/** \brief 4C0, CPU5 DLMU range 6, write access enable register A */
#define CPU5_ACCENDLMU6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E4C0u)

/** \brief 4C4, CPU5 DLMU range 6, write access enable register B */
#define CPU5_ACCENDLMU6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E4C4u)

/** \brief 4C8, CPU5 DLMU range 6, read access enable register A */
#define CPU5_ACCENDLMU6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E4C8u)

/** \brief 4CC, CPU5 DLMU range 6, read access enable register B */
#define CPU5_ACCENDLMU6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E4CCu)

/** \brief 4D0, CPU5 DLMU range 6, VM access enable register */
#define CPU5_ACCENDLMU6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E4D0u)

/** \brief 4D4, CPU5 DLMU range 6, PRS access enable register */
#define CPU5_ACCENDLMU6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E4D4u)

/** \brief 4D8, CPU5 DLMU range 6, region lower address register */
#define CPU5_ACCENDLMU6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E4D8u)

/** \brief 4DC, CPU5 DLMU range 6, region upper address register */
#define CPU5_ACCENDLMU6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E4DCu)

/** \brief 4E0, CPU5 DLMU range 7, write access enable register A */
#define CPU5_ACCENDLMU7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E4E0u)

/** \brief 4E4, CPU5 DLMU range 7, write access enable register B */
#define CPU5_ACCENDLMU7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E4E4u)

/** \brief 4E8, CPU5 DLMU range 7, read access enable register A */
#define CPU5_ACCENDLMU7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E4E8u)

/** \brief 4EC, CPU5 DLMU range 7, read access enable register B */
#define CPU5_ACCENDLMU7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E4ECu)

/** \brief 4F0, CPU5 DLMU range 7, VM access enable register */
#define CPU5_ACCENDLMU7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E4F0u)

/** \brief 4F4, CPU5 DLMU range 7, PRS access enable register */
#define CPU5_ACCENDLMU7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E4F4u)

/** \brief 4F8, CPU5 DLMU range 7, region lower address register */
#define CPU5_ACCENDLMU7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E4F8u)

/** \brief 4FC, CPU5 DLMU range 7, region upper address register */
#define CPU5_ACCENDLMU7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E4FCu)

/** \brief 500, CPU5 DLMU range 8, write access enable register A */
#define CPU5_ACCENDLMU8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E500u)

/** \brief 504, CPU5 DLMU range 8, write access enable register B */
#define CPU5_ACCENDLMU8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E504u)

/** \brief 508, CPU5 DLMU range 8, read access enable register A */
#define CPU5_ACCENDLMU8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E508u)

/** \brief 50C, CPU5 DLMU range 8, read access enable register B */
#define CPU5_ACCENDLMU8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E50Cu)

/** \brief 510, CPU5 DLMU range 8, VM access enable register */
#define CPU5_ACCENDLMU8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E510u)

/** \brief 514, CPU5 DLMU range 8, PRS access enable register */
#define CPU5_ACCENDLMU8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E514u)

/** \brief 518, CPU5 DLMU range 8, region lower address register */
#define CPU5_ACCENDLMU8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E518u)

/** \brief 51C, CPU5 DLMU range 8, region upper address register */
#define CPU5_ACCENDLMU8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E51Cu)

/** \brief 520, CPU5 DLMU range 9, write access enable register A */
#define CPU5_ACCENDLMU9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E520u)

/** \brief 524, CPU5 DLMU range 9, write access enable register B */
#define CPU5_ACCENDLMU9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E524u)

/** \brief 528, CPU5 DLMU range 9, read access enable register A */
#define CPU5_ACCENDLMU9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E528u)

/** \brief 52C, CPU5 DLMU range 9, read access enable register B */
#define CPU5_ACCENDLMU9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E52Cu)

/** \brief 530, CPU5 DLMU range 9, VM access enable register */
#define CPU5_ACCENDLMU9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E530u)

/** \brief 534, CPU5 DLMU range 9, PRS access enable register */
#define CPU5_ACCENDLMU9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E534u)

/** \brief 538, CPU5 DLMU range 9, region lower address register */
#define CPU5_ACCENDLMU9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E538u)

/** \brief 53C, CPU5 DLMU range 9, region upper address register */
#define CPU5_ACCENDLMU9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E53Cu)

/** \brief 540, CPU5 DLMU range 10, write access enable register A */
#define CPU5_ACCENDLMU10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E540u)

/** \brief 544, CPU5 DLMU range 10, write access enable register B */
#define CPU5_ACCENDLMU10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E544u)

/** \brief 548, CPU5 DLMU range 10, read access enable register A */
#define CPU5_ACCENDLMU10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E548u)

/** \brief 54C, CPU5 DLMU range 10, read access enable register B */
#define CPU5_ACCENDLMU10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E54Cu)

/** \brief 550, CPU5 DLMU range 10, VM access enable register */
#define CPU5_ACCENDLMU10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E550u)

/** \brief 554, CPU5 DLMU range 10, PRS access enable register */
#define CPU5_ACCENDLMU10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E554u)

/** \brief 558, CPU5 DLMU range 10, region lower address register */
#define CPU5_ACCENDLMU10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E558u)

/** \brief 55C, CPU5 DLMU range 10, region upper address register */
#define CPU5_ACCENDLMU10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E55Cu)

/** \brief 560, CPU5 DLMU range 11, write access enable register A */
#define CPU5_ACCENDLMU11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E560u)

/** \brief 564, CPU5 DLMU range 11, write access enable register B */
#define CPU5_ACCENDLMU11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E564u)

/** \brief 568, CPU5 DLMU range 11, read access enable register A */
#define CPU5_ACCENDLMU11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E568u)

/** \brief 56C, CPU5 DLMU range 11, read access enable register B */
#define CPU5_ACCENDLMU11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E56Cu)

/** \brief 570, CPU5 DLMU range 11, VM access enable register */
#define CPU5_ACCENDLMU11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E570u)

/** \brief 574, CPU5 DLMU range 11, PRS access enable register */
#define CPU5_ACCENDLMU11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E574u)

/** \brief 578, CPU5 DLMU range 11, region lower address register */
#define CPU5_ACCENDLMU11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E578u)

/** \brief 57C, CPU5 DLMU range 11, region upper address register */
#define CPU5_ACCENDLMU11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E57Cu)

/** \brief 580, CPU5 DLMU range 12, write access enable register A */
#define CPU5_ACCENDLMU12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E580u)

/** \brief 584, CPU5 DLMU range 12, write access enable register B */
#define CPU5_ACCENDLMU12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E584u)

/** \brief 588, CPU5 DLMU range 12, read access enable register A */
#define CPU5_ACCENDLMU12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E588u)

/** \brief 58C, CPU5 DLMU range 12, read access enable register B */
#define CPU5_ACCENDLMU12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E58Cu)

/** \brief 590, CPU5 DLMU range 12, VM access enable register */
#define CPU5_ACCENDLMU12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E590u)

/** \brief 594, CPU5 DLMU range 12, PRS access enable register */
#define CPU5_ACCENDLMU12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E594u)

/** \brief 598, CPU5 DLMU range 12, region lower address register */
#define CPU5_ACCENDLMU12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E598u)

/** \brief 59C, CPU5 DLMU range 12, region upper address register */
#define CPU5_ACCENDLMU12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E59Cu)

/** \brief 5A0, CPU5 DLMU range 13, write access enable register A */
#define CPU5_ACCENDLMU13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E5A0u)

/** \brief 5A4, CPU5 DLMU range 13, write access enable register B */
#define CPU5_ACCENDLMU13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E5A4u)

/** \brief 5A8, CPU5 DLMU range 13, read access enable register A */
#define CPU5_ACCENDLMU13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E5A8u)

/** \brief 5AC, CPU5 DLMU range 13, read access enable register B */
#define CPU5_ACCENDLMU13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E5ACu)

/** \brief 5B0, CPU5 DLMU range 13, VM access enable register */
#define CPU5_ACCENDLMU13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E5B0u)

/** \brief 5B4, CPU5 DLMU range 13, PRS access enable register */
#define CPU5_ACCENDLMU13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E5B4u)

/** \brief 5B8, CPU5 DLMU range 13, region lower address register */
#define CPU5_ACCENDLMU13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E5B8u)

/** \brief 5BC, CPU5 DLMU range 13, region upper address register */
#define CPU5_ACCENDLMU13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E5BCu)

/** \brief 5C0, CPU5 DLMU range 14, write access enable register A */
#define CPU5_ACCENDLMU14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E5C0u)

/** \brief 5C4, CPU5 DLMU range 14, write access enable register B */
#define CPU5_ACCENDLMU14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E5C4u)

/** \brief 5C8, CPU5 DLMU range 14, read access enable register A */
#define CPU5_ACCENDLMU14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E5C8u)

/** \brief 5CC, CPU5 DLMU range 14, read access enable register B */
#define CPU5_ACCENDLMU14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E5CCu)

/** \brief 5D0, CPU5 DLMU range 14, VM access enable register */
#define CPU5_ACCENDLMU14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E5D0u)

/** \brief 5D4, CPU5 DLMU range 14, PRS access enable register */
#define CPU5_ACCENDLMU14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E5D4u)

/** \brief 5D8, CPU5 DLMU range 14, region lower address register */
#define CPU5_ACCENDLMU14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E5D8u)

/** \brief 5DC, CPU5 DLMU range 14, region upper address register */
#define CPU5_ACCENDLMU14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E5DCu)

/** \brief 5E0, CPU5 DLMU range 15, write access enable register A */
#define CPU5_ACCENDLMU15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E5E0u)

/** \brief 5E4, CPU5 DLMU range 15, write access enable register B */
#define CPU5_ACCENDLMU15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E5E4u)

/** \brief 5E8, CPU5 DLMU range 15, read access enable register A */
#define CPU5_ACCENDLMU15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E5E8u)

/** \brief 5EC, CPU5 DLMU range 15, read access enable register B */
#define CPU5_ACCENDLMU15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E5ECu)

/** \brief 5F0, CPU5 DLMU range 15, VM access enable register */
#define CPU5_ACCENDLMU15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E5F0u)

/** \brief 5F4, CPU5 DLMU range 15, PRS access enable register */
#define CPU5_ACCENDLMU15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E5F4u)

/** \brief 5F8, CPU5 DLMU range 15, region lower address register */
#define CPU5_ACCENDLMU15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA_89*)0xF894E5F8u)

/** \brief 5FC, CPU5 DLMU range 15, region upper address register */
#define CPU5_ACCENDLMU15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA_89*)0xF894E5FCu)

/** \brief 600, CPU5 SFR, write access enable register A */
#define CPU5_ACCENSFR_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E600u)

/** \brief 604, CPU5 SFR, write access enable register B */
#define CPU5_ACCENSFR_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E604u)

/** \brief 608, CPU5 SFR, read access enable register A */
#define CPU5_ACCENSFR_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E608u)

/** \brief 60C, CPU5 SFR, read access enable register B */
#define CPU5_ACCENSFR_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E60Cu)

/** \brief 610, CPU5 SFR, VM access enable register */
#define CPU5_ACCENSFR_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E610u)

/** \brief 614, CPU5 SFR, PRS access enable register */
#define CPU5_ACCENSFR_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E614u)

/** \brief 700, CPU5 VM0 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E700u)

/** \brief 704, CPU5 VM0 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E704u)

/** \brief 708, CPU5 VM0 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E708u)

/** \brief 70C, CPU5 VM0 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E70Cu)

/** \brief 710, CPU5 VM0 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E710u)

/** \brief 714, CPU5 VM0 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E714u)

/** \brief 720, CPU5 VM1 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E720u)

/** \brief 724, CPU5 VM1 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E724u)

/** \brief 728, CPU5 VM1 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E728u)

/** \brief 72C, CPU5 VM1 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E72Cu)

/** \brief 730, CPU5 VM1 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E730u)

/** \brief 734, CPU5 VM1 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E734u)

/** \brief 740, CPU5 VM2 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E740u)

/** \brief 744, CPU5 VM2 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E744u)

/** \brief 748, CPU5 VM2 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E748u)

/** \brief 74C, CPU5 VM2 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E74Cu)

/** \brief 750, CPU5 VM2 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E750u)

/** \brief 754, CPU5 VM2 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E754u)

/** \brief 760, CPU5 VM3 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E760u)

/** \brief 764, CPU5 VM3 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E764u)

/** \brief 768, CPU5 VM3 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E768u)

/** \brief 76C, CPU5 VM3 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E76Cu)

/** \brief 770, CPU5 VM3 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E770u)

/** \brief 774, CPU5 VM3 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E774u)

/** \brief 780, CPU5 VM4 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E780u)

/** \brief 784, CPU5 VM4 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E784u)

/** \brief 788, CPU5 VM4 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E788u)

/** \brief 78C, CPU5 VM4 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E78Cu)

/** \brief 790, CPU5 VM4 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E790u)

/** \brief 794, CPU5 VM4 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E794u)

/** \brief 7A0, CPU5 VM5 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E7A0u)

/** \brief 7A4, CPU5 VM5 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E7A4u)

/** \brief 7A8, CPU5 VM5 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E7A8u)

/** \brief 7AC, CPU5 VM5 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E7ACu)

/** \brief 7B0, CPU5 VM5 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E7B0u)

/** \brief 7B4, CPU5 VM5 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E7B4u)

/** \brief 7C0, CPU5 VM6 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E7C0u)

/** \brief 7C4, CPU5 VM6 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E7C4u)

/** \brief 7C8, CPU5 VM6 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E7C8u)

/** \brief 7CC, CPU5 VM6 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E7CCu)

/** \brief 7D0, CPU5 VM6 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E7D0u)

/** \brief 7D4, CPU5 VM6 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E7D4u)

/** \brief 7E0, CPU5 VM7 STM, write access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF894E7E0u)

/** \brief 7E4, CPU5 VM7 STM, write access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF894E7E4u)

/** \brief 7E8, CPU5 VM7 STM, read access enable register A", virtualization view" */
#define CPU5_ACCENSTMVM7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF894E7E8u)

/** \brief 7EC, CPU5 VM7 STM, read access enable register B", virtualization view" */
#define CPU5_ACCENSTMVM7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF894E7ECu)

/** \brief 7F0, CPU5 VM7 STM, VM access enable register", virtualization view" */
#define CPU5_ACCENSTMVM7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF894E7F0u)

/** \brief 7F4, CPU5 VM7 STM, PRS access enable register", virtualization view" */
#define CPU5_ACCENSTMVM7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF894E7F4u)

/** \brief FB00, CPU5 overlay range select register */
#define CPU5_OSEL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OSEL*)0xF894FB00u)

/** \brief FB10, CPU5 redirected address base register 0 */
#define CPU5_BLK0_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB10u)
/** Alias (User Manual Name) for CPU5_BLK0_RABR */
#define CPU5_RABR0 (CPU5_BLK0_RABR)

/** \brief FB14, CPU5 overlay target address register 0 (Low priority) */
#define CPU5_BLK0_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB14u)
/** Alias (User Manual Name) for CPU5_BLK0_OTAR */
#define CPU5_OTAR0 (CPU5_BLK0_OTAR)

/** \brief FB18, CPU5 overlay mask register 0 */
#define CPU5_BLK0_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB18u)
/** Alias (User Manual Name) for CPU5_BLK0_OMASK */
#define CPU5_OMASK0 (CPU5_BLK0_OMASK)

/** \brief FB1C, CPU5 redirected address base register 1 */
#define CPU5_BLK1_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB1Cu)
/** Alias (User Manual Name) for CPU5_BLK1_RABR */
#define CPU5_RABR1 (CPU5_BLK1_RABR)

/** \brief FB20, CPU5 overlay target address register 1 (Low priority) */
#define CPU5_BLK1_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB20u)
/** Alias (User Manual Name) for CPU5_BLK1_OTAR */
#define CPU5_OTAR1 (CPU5_BLK1_OTAR)

/** \brief FB24, CPU5 overlay mask register 1 */
#define CPU5_BLK1_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB24u)
/** Alias (User Manual Name) for CPU5_BLK1_OMASK */
#define CPU5_OMASK1 (CPU5_BLK1_OMASK)

/** \brief FB28, CPU5 redirected address base register 2 */
#define CPU5_BLK2_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB28u)
/** Alias (User Manual Name) for CPU5_BLK2_RABR */
#define CPU5_RABR2 (CPU5_BLK2_RABR)

/** \brief FB2C, CPU5 overlay target address register 2 (Low priority) */
#define CPU5_BLK2_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB2Cu)
/** Alias (User Manual Name) for CPU5_BLK2_OTAR */
#define CPU5_OTAR2 (CPU5_BLK2_OTAR)

/** \brief FB30, CPU5 overlay mask register 2 */
#define CPU5_BLK2_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB30u)
/** Alias (User Manual Name) for CPU5_BLK2_OMASK */
#define CPU5_OMASK2 (CPU5_BLK2_OMASK)

/** \brief FB34, CPU5 redirected address base register 3 */
#define CPU5_BLK3_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB34u)
/** Alias (User Manual Name) for CPU5_BLK3_RABR */
#define CPU5_RABR3 (CPU5_BLK3_RABR)

/** \brief FB38, CPU5 overlay target address register 3 (Low priority) */
#define CPU5_BLK3_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB38u)
/** Alias (User Manual Name) for CPU5_BLK3_OTAR */
#define CPU5_OTAR3 (CPU5_BLK3_OTAR)

/** \brief FB3C, CPU5 overlay mask register 3 */
#define CPU5_BLK3_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB3Cu)
/** Alias (User Manual Name) for CPU5_BLK3_OMASK */
#define CPU5_OMASK3 (CPU5_BLK3_OMASK)

/** \brief FB40, CPU5 redirected address base register 4 */
#define CPU5_BLK4_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB40u)
/** Alias (User Manual Name) for CPU5_BLK4_RABR */
#define CPU5_RABR4 (CPU5_BLK4_RABR)

/** \brief FB44, CPU5 overlay target address register 4 (Low priority) */
#define CPU5_BLK4_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB44u)
/** Alias (User Manual Name) for CPU5_BLK4_OTAR */
#define CPU5_OTAR4 (CPU5_BLK4_OTAR)

/** \brief FB48, CPU5 overlay mask register 4 */
#define CPU5_BLK4_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB48u)
/** Alias (User Manual Name) for CPU5_BLK4_OMASK */
#define CPU5_OMASK4 (CPU5_BLK4_OMASK)

/** \brief FB4C, CPU5 redirected address base register 5 */
#define CPU5_BLK5_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB4Cu)
/** Alias (User Manual Name) for CPU5_BLK5_RABR */
#define CPU5_RABR5 (CPU5_BLK5_RABR)

/** \brief FB50, CPU5 overlay target address register 5 (Low priority) */
#define CPU5_BLK5_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB50u)
/** Alias (User Manual Name) for CPU5_BLK5_OTAR */
#define CPU5_OTAR5 (CPU5_BLK5_OTAR)

/** \brief FB54, CPU5 overlay mask register 5 */
#define CPU5_BLK5_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB54u)
/** Alias (User Manual Name) for CPU5_BLK5_OMASK */
#define CPU5_OMASK5 (CPU5_BLK5_OMASK)

/** \brief FB58, CPU5 redirected address base register 6 */
#define CPU5_BLK6_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB58u)
/** Alias (User Manual Name) for CPU5_BLK6_RABR */
#define CPU5_RABR6 (CPU5_BLK6_RABR)

/** \brief FB5C, CPU5 overlay target address register 6 (Low priority) */
#define CPU5_BLK6_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB5Cu)
/** Alias (User Manual Name) for CPU5_BLK6_OTAR */
#define CPU5_OTAR6 (CPU5_BLK6_OTAR)

/** \brief FB60, CPU5 overlay mask register 6 */
#define CPU5_BLK6_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB60u)
/** Alias (User Manual Name) for CPU5_BLK6_OMASK */
#define CPU5_OMASK6 (CPU5_BLK6_OMASK)

/** \brief FB64, CPU5 redirected address base register 7 */
#define CPU5_BLK7_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB64u)
/** Alias (User Manual Name) for CPU5_BLK7_RABR */
#define CPU5_RABR7 (CPU5_BLK7_RABR)

/** \brief FB68, CPU5 overlay target address register 7 (Low priority) */
#define CPU5_BLK7_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB68u)
/** Alias (User Manual Name) for CPU5_BLK7_OTAR */
#define CPU5_OTAR7 (CPU5_BLK7_OTAR)

/** \brief FB6C, CPU5 overlay mask register 7 */
#define CPU5_BLK7_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB6Cu)
/** Alias (User Manual Name) for CPU5_BLK7_OMASK */
#define CPU5_OMASK7 (CPU5_BLK7_OMASK)

/** \brief FB70, CPU5 redirected address base register 8 */
#define CPU5_BLK8_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB70u)
/** Alias (User Manual Name) for CPU5_BLK8_RABR */
#define CPU5_RABR8 (CPU5_BLK8_RABR)

/** \brief FB74, CPU5 overlay target address register 8 (Low priority) */
#define CPU5_BLK8_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB74u)
/** Alias (User Manual Name) for CPU5_BLK8_OTAR */
#define CPU5_OTAR8 (CPU5_BLK8_OTAR)

/** \brief FB78, CPU5 overlay mask register 8 */
#define CPU5_BLK8_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB78u)
/** Alias (User Manual Name) for CPU5_BLK8_OMASK */
#define CPU5_OMASK8 (CPU5_BLK8_OMASK)

/** \brief FB7C, CPU5 redirected address base register 9 */
#define CPU5_BLK9_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB7Cu)
/** Alias (User Manual Name) for CPU5_BLK9_RABR */
#define CPU5_RABR9 (CPU5_BLK9_RABR)

/** \brief FB80, CPU5 overlay target address register 9 (Low priority) */
#define CPU5_BLK9_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB80u)
/** Alias (User Manual Name) for CPU5_BLK9_OTAR */
#define CPU5_OTAR9 (CPU5_BLK9_OTAR)

/** \brief FB84, CPU5 overlay mask register 9 */
#define CPU5_BLK9_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB84u)
/** Alias (User Manual Name) for CPU5_BLK9_OMASK */
#define CPU5_OMASK9 (CPU5_BLK9_OMASK)

/** \brief FB88, CPU5 redirected address base register 10 */
#define CPU5_BLK10_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB88u)
/** Alias (User Manual Name) for CPU5_BLK10_RABR */
#define CPU5_RABR10 (CPU5_BLK10_RABR)

/** \brief FB8C, CPU5 overlay target address register 10 (Low priority) */
#define CPU5_BLK10_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB8Cu)
/** Alias (User Manual Name) for CPU5_BLK10_OTAR */
#define CPU5_OTAR10 (CPU5_BLK10_OTAR)

/** \brief FB90, CPU5 overlay mask register 10 */
#define CPU5_BLK10_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB90u)
/** Alias (User Manual Name) for CPU5_BLK10_OMASK */
#define CPU5_OMASK10 (CPU5_BLK10_OMASK)

/** \brief FB94, CPU5 redirected address base register 11 */
#define CPU5_BLK11_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FB94u)
/** Alias (User Manual Name) for CPU5_BLK11_RABR */
#define CPU5_RABR11 (CPU5_BLK11_RABR)

/** \brief FB98, CPU5 overlay target address register 11 (Low priority) */
#define CPU5_BLK11_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FB98u)
/** Alias (User Manual Name) for CPU5_BLK11_OTAR */
#define CPU5_OTAR11 (CPU5_BLK11_OTAR)

/** \brief FB9C, CPU5 overlay mask register 11 */
#define CPU5_BLK11_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FB9Cu)
/** Alias (User Manual Name) for CPU5_BLK11_OMASK */
#define CPU5_OMASK11 (CPU5_BLK11_OMASK)

/** \brief FBA0, CPU5 redirected address base register 12 */
#define CPU5_BLK12_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBA0u)
/** Alias (User Manual Name) for CPU5_BLK12_RABR */
#define CPU5_RABR12 (CPU5_BLK12_RABR)

/** \brief FBA4, CPU5 overlay target address register 12 (Low priority) */
#define CPU5_BLK12_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBA4u)
/** Alias (User Manual Name) for CPU5_BLK12_OTAR */
#define CPU5_OTAR12 (CPU5_BLK12_OTAR)

/** \brief FBA8, CPU5 overlay mask register 12 */
#define CPU5_BLK12_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBA8u)
/** Alias (User Manual Name) for CPU5_BLK12_OMASK */
#define CPU5_OMASK12 (CPU5_BLK12_OMASK)

/** \brief FBAC, CPU5 redirected address base register 13 */
#define CPU5_BLK13_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBACu)
/** Alias (User Manual Name) for CPU5_BLK13_RABR */
#define CPU5_RABR13 (CPU5_BLK13_RABR)

/** \brief FBB0, CPU5 overlay target address register 13 (Low priority) */
#define CPU5_BLK13_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBB0u)
/** Alias (User Manual Name) for CPU5_BLK13_OTAR */
#define CPU5_OTAR13 (CPU5_BLK13_OTAR)

/** \brief FBB4, CPU5 overlay mask register 13 */
#define CPU5_BLK13_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBB4u)
/** Alias (User Manual Name) for CPU5_BLK13_OMASK */
#define CPU5_OMASK13 (CPU5_BLK13_OMASK)

/** \brief FBB8, CPU5 redirected address base register 14 */
#define CPU5_BLK14_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBB8u)
/** Alias (User Manual Name) for CPU5_BLK14_RABR */
#define CPU5_RABR14 (CPU5_BLK14_RABR)

/** \brief FBBC, CPU5 overlay target address register 14 (Low priority) */
#define CPU5_BLK14_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBBCu)
/** Alias (User Manual Name) for CPU5_BLK14_OTAR */
#define CPU5_OTAR14 (CPU5_BLK14_OTAR)

/** \brief FBC0, CPU5 overlay mask register 14 */
#define CPU5_BLK14_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBC0u)
/** Alias (User Manual Name) for CPU5_BLK14_OMASK */
#define CPU5_OMASK14 (CPU5_BLK14_OMASK)

/** \brief FBC4, CPU5 redirected address base register 15 */
#define CPU5_BLK15_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBC4u)
/** Alias (User Manual Name) for CPU5_BLK15_RABR */
#define CPU5_RABR15 (CPU5_BLK15_RABR)

/** \brief FBC8, CPU5 overlay target address register 15 (Low priority) */
#define CPU5_BLK15_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBC8u)
/** Alias (User Manual Name) for CPU5_BLK15_OTAR */
#define CPU5_OTAR15 (CPU5_BLK15_OTAR)

/** \brief FBCC, CPU5 overlay mask register 15 */
#define CPU5_BLK15_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBCCu)
/** Alias (User Manual Name) for CPU5_BLK15_OMASK */
#define CPU5_OMASK15 (CPU5_BLK15_OMASK)

/** \brief FBD0, CPU5 redirected address base register 16 */
#define CPU5_BLK16_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBD0u)
/** Alias (User Manual Name) for CPU5_BLK16_RABR */
#define CPU5_RABR16 (CPU5_BLK16_RABR)

/** \brief FBD4, CPU5 overlay target address register 16 (Low priority) */
#define CPU5_BLK16_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBD4u)
/** Alias (User Manual Name) for CPU5_BLK16_OTAR */
#define CPU5_OTAR16 (CPU5_BLK16_OTAR)

/** \brief FBD8, CPU5 overlay mask register 16 */
#define CPU5_BLK16_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBD8u)
/** Alias (User Manual Name) for CPU5_BLK16_OMASK */
#define CPU5_OMASK16 (CPU5_BLK16_OMASK)

/** \brief FBDC, CPU5 redirected address base register 17 */
#define CPU5_BLK17_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBDCu)
/** Alias (User Manual Name) for CPU5_BLK17_RABR */
#define CPU5_RABR17 (CPU5_BLK17_RABR)

/** \brief FBE0, CPU5 overlay target address register 17 (Low priority) */
#define CPU5_BLK17_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBE0u)
/** Alias (User Manual Name) for CPU5_BLK17_OTAR */
#define CPU5_OTAR17 (CPU5_BLK17_OTAR)

/** \brief FBE4, CPU5 overlay mask register 17 */
#define CPU5_BLK17_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBE4u)
/** Alias (User Manual Name) for CPU5_BLK17_OMASK */
#define CPU5_OMASK17 (CPU5_BLK17_OMASK)

/** \brief FBE8, CPU5 redirected address base register 18 */
#define CPU5_BLK18_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBE8u)
/** Alias (User Manual Name) for CPU5_BLK18_RABR */
#define CPU5_RABR18 (CPU5_BLK18_RABR)

/** \brief FBEC, CPU5 overlay target address register 18 (Low priority) */
#define CPU5_BLK18_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBECu)
/** Alias (User Manual Name) for CPU5_BLK18_OTAR */
#define CPU5_OTAR18 (CPU5_BLK18_OTAR)

/** \brief FBF0, CPU5 overlay mask register 18 */
#define CPU5_BLK18_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBF0u)
/** Alias (User Manual Name) for CPU5_BLK18_OMASK */
#define CPU5_OMASK18 (CPU5_BLK18_OMASK)

/** \brief FBF4, CPU5 redirected address base register 19 */
#define CPU5_BLK19_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FBF4u)
/** Alias (User Manual Name) for CPU5_BLK19_RABR */
#define CPU5_RABR19 (CPU5_BLK19_RABR)

/** \brief FBF8, CPU5 overlay target address register 19 (Low priority) */
#define CPU5_BLK19_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FBF8u)
/** Alias (User Manual Name) for CPU5_BLK19_OTAR */
#define CPU5_OTAR19 (CPU5_BLK19_OTAR)

/** \brief FBFC, CPU5 overlay mask register 19 */
#define CPU5_BLK19_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FBFCu)
/** Alias (User Manual Name) for CPU5_BLK19_OMASK */
#define CPU5_OMASK19 (CPU5_BLK19_OMASK)

/** \brief FC00, CPU5 redirected address base register 20 */
#define CPU5_BLK20_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC00u)
/** Alias (User Manual Name) for CPU5_BLK20_RABR */
#define CPU5_RABR20 (CPU5_BLK20_RABR)

/** \brief FC04, CPU5 overlay target address register 20 (Low priority) */
#define CPU5_BLK20_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC04u)
/** Alias (User Manual Name) for CPU5_BLK20_OTAR */
#define CPU5_OTAR20 (CPU5_BLK20_OTAR)

/** \brief FC08, CPU5 overlay mask register 20 */
#define CPU5_BLK20_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC08u)
/** Alias (User Manual Name) for CPU5_BLK20_OMASK */
#define CPU5_OMASK20 (CPU5_BLK20_OMASK)

/** \brief FC0C, CPU5 redirected address base register 21 */
#define CPU5_BLK21_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC0Cu)
/** Alias (User Manual Name) for CPU5_BLK21_RABR */
#define CPU5_RABR21 (CPU5_BLK21_RABR)

/** \brief FC10, CPU5 overlay target address register 21 (Low priority) */
#define CPU5_BLK21_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC10u)
/** Alias (User Manual Name) for CPU5_BLK21_OTAR */
#define CPU5_OTAR21 (CPU5_BLK21_OTAR)

/** \brief FC14, CPU5 overlay mask register 21 */
#define CPU5_BLK21_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC14u)
/** Alias (User Manual Name) for CPU5_BLK21_OMASK */
#define CPU5_OMASK21 (CPU5_BLK21_OMASK)

/** \brief FC18, CPU5 redirected address base register 22 */
#define CPU5_BLK22_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC18u)
/** Alias (User Manual Name) for CPU5_BLK22_RABR */
#define CPU5_RABR22 (CPU5_BLK22_RABR)

/** \brief FC1C, CPU5 overlay target address register 22 (Low priority) */
#define CPU5_BLK22_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC1Cu)
/** Alias (User Manual Name) for CPU5_BLK22_OTAR */
#define CPU5_OTAR22 (CPU5_BLK22_OTAR)

/** \brief FC20, CPU5 overlay mask register 22 */
#define CPU5_BLK22_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC20u)
/** Alias (User Manual Name) for CPU5_BLK22_OMASK */
#define CPU5_OMASK22 (CPU5_BLK22_OMASK)

/** \brief FC24, CPU5 redirected address base register 23 */
#define CPU5_BLK23_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC24u)
/** Alias (User Manual Name) for CPU5_BLK23_RABR */
#define CPU5_RABR23 (CPU5_BLK23_RABR)

/** \brief FC28, CPU5 overlay target address register 23 (Low priority) */
#define CPU5_BLK23_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC28u)
/** Alias (User Manual Name) for CPU5_BLK23_OTAR */
#define CPU5_OTAR23 (CPU5_BLK23_OTAR)

/** \brief FC2C, CPU5 overlay mask register 23 */
#define CPU5_BLK23_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC2Cu)
/** Alias (User Manual Name) for CPU5_BLK23_OMASK */
#define CPU5_OMASK23 (CPU5_BLK23_OMASK)

/** \brief FC30, CPU5 redirected address base register 24 */
#define CPU5_BLK24_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC30u)
/** Alias (User Manual Name) for CPU5_BLK24_RABR */
#define CPU5_RABR24 (CPU5_BLK24_RABR)

/** \brief FC34, CPU5 overlay target address register 24 (Low priority) */
#define CPU5_BLK24_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC34u)
/** Alias (User Manual Name) for CPU5_BLK24_OTAR */
#define CPU5_OTAR24 (CPU5_BLK24_OTAR)

/** \brief FC38, CPU5 overlay mask register 24 */
#define CPU5_BLK24_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC38u)
/** Alias (User Manual Name) for CPU5_BLK24_OMASK */
#define CPU5_OMASK24 (CPU5_BLK24_OMASK)

/** \brief FC3C, CPU5 redirected address base register 25 */
#define CPU5_BLK25_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC3Cu)
/** Alias (User Manual Name) for CPU5_BLK25_RABR */
#define CPU5_RABR25 (CPU5_BLK25_RABR)

/** \brief FC40, CPU5 overlay target address register 25 (Low priority) */
#define CPU5_BLK25_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC40u)
/** Alias (User Manual Name) for CPU5_BLK25_OTAR */
#define CPU5_OTAR25 (CPU5_BLK25_OTAR)

/** \brief FC44, CPU5 overlay mask register 25 */
#define CPU5_BLK25_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC44u)
/** Alias (User Manual Name) for CPU5_BLK25_OMASK */
#define CPU5_OMASK25 (CPU5_BLK25_OMASK)

/** \brief FC48, CPU5 redirected address base register 26 */
#define CPU5_BLK26_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC48u)
/** Alias (User Manual Name) for CPU5_BLK26_RABR */
#define CPU5_RABR26 (CPU5_BLK26_RABR)

/** \brief FC4C, CPU5 overlay target address register 26 (Low priority) */
#define CPU5_BLK26_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC4Cu)
/** Alias (User Manual Name) for CPU5_BLK26_OTAR */
#define CPU5_OTAR26 (CPU5_BLK26_OTAR)

/** \brief FC50, CPU5 overlay mask register 26 */
#define CPU5_BLK26_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC50u)
/** Alias (User Manual Name) for CPU5_BLK26_OMASK */
#define CPU5_OMASK26 (CPU5_BLK26_OMASK)

/** \brief FC54, CPU5 redirected address base register 27 */
#define CPU5_BLK27_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC54u)
/** Alias (User Manual Name) for CPU5_BLK27_RABR */
#define CPU5_RABR27 (CPU5_BLK27_RABR)

/** \brief FC58, CPU5 overlay target address register 27 (Low priority) */
#define CPU5_BLK27_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC58u)
/** Alias (User Manual Name) for CPU5_BLK27_OTAR */
#define CPU5_OTAR27 (CPU5_BLK27_OTAR)

/** \brief FC5C, CPU5 overlay mask register 27 */
#define CPU5_BLK27_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC5Cu)
/** Alias (User Manual Name) for CPU5_BLK27_OMASK */
#define CPU5_OMASK27 (CPU5_BLK27_OMASK)

/** \brief FC60, CPU5 redirected address base register 28 */
#define CPU5_BLK28_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC60u)
/** Alias (User Manual Name) for CPU5_BLK28_RABR */
#define CPU5_RABR28 (CPU5_BLK28_RABR)

/** \brief FC64, CPU5 overlay target address register 28 (Low priority) */
#define CPU5_BLK28_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC64u)
/** Alias (User Manual Name) for CPU5_BLK28_OTAR */
#define CPU5_OTAR28 (CPU5_BLK28_OTAR)

/** \brief FC68, CPU5 overlay mask register 28 */
#define CPU5_BLK28_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC68u)
/** Alias (User Manual Name) for CPU5_BLK28_OMASK */
#define CPU5_OMASK28 (CPU5_BLK28_OMASK)

/** \brief FC6C, CPU5 redirected address base register 29 */
#define CPU5_BLK29_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC6Cu)
/** Alias (User Manual Name) for CPU5_BLK29_RABR */
#define CPU5_RABR29 (CPU5_BLK29_RABR)

/** \brief FC70, CPU5 overlay target address register 29 (Low priority) */
#define CPU5_BLK29_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC70u)
/** Alias (User Manual Name) for CPU5_BLK29_OTAR */
#define CPU5_OTAR29 (CPU5_BLK29_OTAR)

/** \brief FC74, CPU5 overlay mask register 29 */
#define CPU5_BLK29_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC74u)
/** Alias (User Manual Name) for CPU5_BLK29_OMASK */
#define CPU5_OMASK29 (CPU5_BLK29_OMASK)

/** \brief FC78, CPU5 redirected address base register 30 */
#define CPU5_BLK30_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC78u)
/** Alias (User Manual Name) for CPU5_BLK30_RABR */
#define CPU5_RABR30 (CPU5_BLK30_RABR)

/** \brief FC7C, CPU5 overlay target address register 30 (Low priority) */
#define CPU5_BLK30_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC7Cu)
/** Alias (User Manual Name) for CPU5_BLK30_OTAR */
#define CPU5_OTAR30 (CPU5_BLK30_OTAR)

/** \brief FC80, CPU5 overlay mask register 30 */
#define CPU5_BLK30_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC80u)
/** Alias (User Manual Name) for CPU5_BLK30_OMASK */
#define CPU5_OMASK30 (CPU5_BLK30_OMASK)

/** \brief FC84, CPU5 redirected address base register 31 */
#define CPU5_BLK31_RABR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_RABR*)0xF894FC84u)
/** Alias (User Manual Name) for CPU5_BLK31_RABR */
#define CPU5_RABR31 (CPU5_BLK31_RABR)

/** \brief FC88, CPU5 overlay target address register 31 (Low priority) */
#define CPU5_BLK31_OTAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OTAR*)0xF894FC88u)
/** Alias (User Manual Name) for CPU5_BLK31_OTAR */
#define CPU5_OTAR31 (CPU5_BLK31_OTAR)

/** \brief FC8C, CPU5 overlay mask register 31 */
#define CPU5_BLK31_OMASK /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BLK_OMASK*)0xF894FC8Cu)
/** Alias (User Manual Name) for CPU5_BLK31_OMASK */
#define CPU5_OMASK31 (CPU5_BLK31_OMASK)

/** \brief 1030, CPU5 SRI error generation register */
#define CPU5_HRA_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8951030u)

/** \brief 1040, CPU5 lockstep test register */
#define CPU5_HRA_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8951040u)

/** \brief 8100, CPU5 data access cacheability register */
#define CPU5_HRA_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8958100u)

/** \brief 8104, CPU5 code access cacheability register */
#define CPU5_HRA_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8958104u)

/** \brief 8108, CPU5 peripheral space identifier register */
#define CPU5_HRA_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8958108u)

/** \brief 9000, CPU5 data control register 2 */
#define CPU5_HRA_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8959000u)

/** \brief 9008, CPU5 data control register 1 */
#define CPU5_HRA_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8959008u)

/** \brief 900C, CPU5 SIST mode access control register */
#define CPU5_HRA_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF895900Cu)

/** \brief 9010, CPU5 HR specific data synchronous trap register */
#define CPU5_HRA_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8959010u)

/** \brief 9018, CPU5 HR specific data asynchronous trap register */
#define CPU5_HRA_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8959018u)

/** \brief 901C, CPU5 HR specific data error address register */
#define CPU5_HRA_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF895901Cu)

/** \brief 9020, CPU5 data integrity error address register */
#define CPU5_HRA_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8959020u)

/** \brief 9024, CPU5 data integrity error trap register */
#define CPU5_HRA_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8959024u)

/** \brief 9040, CPU5 data memory control register */
#define CPU5_HRA_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8959040u)

/** \brief 9200, CPU5 HR specific program synchronous trap register */
#define CPU5_HRA_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8959200u)

/** \brief 9204, CPU5 program control 1 */
#define CPU5_HRA_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8959204u)

/** \brief 9208, CPU5 program control 2 */
#define CPU5_HRA_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8959208u)

/** \brief 920C, CPU5 program control 0 */
#define CPU5_HRA_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF895920Cu)

/** \brief 9210, CPU5 HR specific program integrity error address register */
#define CPU5_HRA_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8959210u)

/** \brief 9214, CPU5 HR specific program integrity error trap register */
#define CPU5_HRA_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8959214u)

/** \brief 9400, CPU5 compatibility control register */
#define CPU5_HRA_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8959400u)

/** \brief A000, CPU5 HR specific trap control register */
#define CPU5_HRA_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF895A000u)

/** \brief A004, CPU5 HR specific trapping instruction program counter register */
#define CPU5_HRA_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF895A004u)

/** \brief A008, CPU5 HR specific trapping instruction opcode register */
#define CPU5_HRA_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF895A008u)

/** \brief A010, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRA_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF895A010u)

/** \brief A014, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRA_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF895A014u)

/** \brief A018, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRA_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF895A018u)

/** \brief A01C, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRA_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF895A01Cu)

/** \brief A020, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRA_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF895A020u)

/** \brief A024, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRA_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF895A024u)

/** \brief A030, CPU5 HR specific synchronous trap control register */
#define CPU5_HRA_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF895A030u)

/** \brief A034, CPU5 HR specific trapping instruction opcode register */
#define CPU5_HRA_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF895A034u)

/** \brief C000, CPU5 HR specific data protection range 0, lower bound register */
#define CPU5_HRA_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C000u)

/** \brief C004, CPU5 HR specific data protection range 0, upper bound register */
#define CPU5_HRA_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C004u)

/** \brief C008, CPU5 HR specific data protection range 1, lower bound register */
#define CPU5_HRA_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C008u)

/** \brief C00C, CPU5 HR specific data protection range 1, upper bound register */
#define CPU5_HRA_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C00Cu)

/** \brief C010, CPU5 HR specific data protection range 2, lower bound register */
#define CPU5_HRA_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C010u)

/** \brief C014, CPU5 HR specific data protection range 2, upper bound register */
#define CPU5_HRA_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C014u)

/** \brief C018, CPU5 HR specific data protection range 3, lower bound register */
#define CPU5_HRA_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C018u)

/** \brief C01C, CPU5 HR specific data protection range 3, upper bound register */
#define CPU5_HRA_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C01Cu)

/** \brief C020, CPU5 HR specific data protection range 4, lower bound register */
#define CPU5_HRA_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C020u)

/** \brief C024, CPU5 HR specific data protection range 4, upper bound register */
#define CPU5_HRA_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C024u)

/** \brief C028, CPU5 HR specific data protection range 5, lower bound register */
#define CPU5_HRA_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C028u)

/** \brief C02C, CPU5 HR specific data protection range 5, upper bound register */
#define CPU5_HRA_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C02Cu)

/** \brief C030, CPU5 HR specific data protection range 6, lower bound register */
#define CPU5_HRA_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C030u)

/** \brief C034, CPU5 HR specific data protection range 6, upper bound register */
#define CPU5_HRA_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C034u)

/** \brief C038, CPU5 HR specific data protection range 7, lower bound register */
#define CPU5_HRA_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C038u)

/** \brief C03C, CPU5 HR specific data protection range 7, upper bound register */
#define CPU5_HRA_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C03Cu)

/** \brief C040, CPU5 HR specific data protection range 8, lower bound register */
#define CPU5_HRA_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C040u)

/** \brief C044, CPU5 HR specific data protection range 8, upper bound register */
#define CPU5_HRA_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C044u)

/** \brief C048, CPU5 HR specific data protection range 9, lower bound register */
#define CPU5_HRA_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C048u)

/** \brief C04C, CPU5 HR specific data protection range 9, upper bound register */
#define CPU5_HRA_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C04Cu)

/** \brief C050, CPU5 HR specific data protection range 10, lower bound register */
#define CPU5_HRA_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C050u)

/** \brief C054, CPU5 HR specific data protection range 10, upper bound register */
#define CPU5_HRA_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C054u)

/** \brief C058, CPU5 HR specific data protection range 11, lower bound register */
#define CPU5_HRA_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C058u)

/** \brief C05C, CPU5 HR specific data protection range 11, upper bound register */
#define CPU5_HRA_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C05Cu)

/** \brief C060, CPU5 HR specific data protection range 12, lower bound register */
#define CPU5_HRA_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C060u)

/** \brief C064, CPU5 HR specific data protection range 12, upper bound register */
#define CPU5_HRA_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C064u)

/** \brief C068, CPU5 HR specific data protection range 13, lower bound register */
#define CPU5_HRA_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C068u)

/** \brief C06C, CPU5 HR specific data protection range 13, upper bound register */
#define CPU5_HRA_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C06Cu)

/** \brief C070, CPU5 HR specific data protection range 14, lower bound register */
#define CPU5_HRA_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C070u)

/** \brief C074, CPU5 HR specific data protection range 14, upper bound register */
#define CPU5_HRA_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C074u)

/** \brief C078, CPU5 HR specific data protection range 15, lower bound register */
#define CPU5_HRA_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C078u)

/** \brief C07C, CPU5 HR specific data protection range 15, upper bound register */
#define CPU5_HRA_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C07Cu)

/** \brief C080, CPU5 HR specific data protection range 16, lower bound register */
#define CPU5_HRA_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C080u)

/** \brief C084, CPU5 HR specific data protection range 16, upper bound register */
#define CPU5_HRA_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C084u)

/** \brief C088, CPU5 HR specific data protection range 17, lower bound register */
#define CPU5_HRA_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C088u)

/** \brief C08C, CPU5 HR specific data protection range 17, upper bound register */
#define CPU5_HRA_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C08Cu)

/** \brief C090, CPU5 HR specific data protection range 18, lower bound register */
#define CPU5_HRA_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C090u)

/** \brief C094, CPU5 HR specific data protection range 18, upper bound register */
#define CPU5_HRA_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C094u)

/** \brief C098, CPU5 HR specific data protection range 19, lower bound register */
#define CPU5_HRA_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C098u)

/** \brief C09C, CPU5 HR specific data protection range 19, upper bound register */
#define CPU5_HRA_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C09Cu)

/** \brief C0A0, CPU5 HR specific data protection range 20, lower bound register */
#define CPU5_HRA_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C0A0u)

/** \brief C0A4, CPU5 HR specific data protection range 20, upper bound register */
#define CPU5_HRA_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C0A4u)

/** \brief C0A8, CPU5 HR specific data protection range 21, lower bound register */
#define CPU5_HRA_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C0A8u)

/** \brief C0AC, CPU5 HR specific data protection range 21, upper bound register */
#define CPU5_HRA_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C0ACu)

/** \brief C0B0, CPU5 HR specific data protection range 22, lower bound register */
#define CPU5_HRA_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C0B0u)

/** \brief C0B4, CPU5 HR specific data protection range 22, upper bound register */
#define CPU5_HRA_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C0B4u)

/** \brief C0B8, CPU5 HR specific data protection range 23, lower bound register */
#define CPU5_HRA_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF895C0B8u)

/** \brief C0BC, CPU5 HR specific data protection range 23, upper bound register */
#define CPU5_HRA_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF895C0BCu)

/** \brief D000, CPU5 HR specific code protection range 0, lower bound register */
#define CPU5_HRA_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D000u)

/** \brief D004, CPU5 HR specific code protection range 0, upper bound register */
#define CPU5_HRA_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D004u)

/** \brief D008, CPU5 HR specific code protection range 1, lower bound register */
#define CPU5_HRA_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D008u)

/** \brief D00C, CPU5 HR specific code protection range 1, upper bound register */
#define CPU5_HRA_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D00Cu)

/** \brief D010, CPU5 HR specific code protection range 2, lower bound register */
#define CPU5_HRA_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D010u)

/** \brief D014, CPU5 HR specific code protection range 2, upper bound register */
#define CPU5_HRA_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D014u)

/** \brief D018, CPU5 HR specific code protection range 3, lower bound register */
#define CPU5_HRA_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D018u)

/** \brief D01C, CPU5 HR specific code protection range 3, upper bound register */
#define CPU5_HRA_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D01Cu)

/** \brief D020, CPU5 HR specific code protection range 4, lower bound register */
#define CPU5_HRA_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D020u)

/** \brief D024, CPU5 HR specific code protection range 4, upper bound register */
#define CPU5_HRA_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D024u)

/** \brief D028, CPU5 HR specific code protection range 5, lower bound register */
#define CPU5_HRA_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D028u)

/** \brief D02C, CPU5 HR specific code protection range 5, upper bound register */
#define CPU5_HRA_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D02Cu)

/** \brief D030, CPU5 HR specific code protection range 6, lower bound register */
#define CPU5_HRA_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D030u)

/** \brief D034, CPU5 HR specific code protection range 6, upper bound register */
#define CPU5_HRA_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D034u)

/** \brief D038, CPU5 HR specific code protection range 7, lower bound register */
#define CPU5_HRA_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D038u)

/** \brief D03C, CPU5 HR specific code protection range 7, upper bound register */
#define CPU5_HRA_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D03Cu)

/** \brief D040, CPU5 HR specific code protection range 8, lower bound register */
#define CPU5_HRA_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D040u)

/** \brief D044, CPU5 HR specific code protection range 8, upper bound register */
#define CPU5_HRA_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D044u)

/** \brief D048, CPU5 HR specific code protection range 9, lower bound register */
#define CPU5_HRA_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D048u)

/** \brief D04C, CPU5 HR specific code protection range 9, upper bound register */
#define CPU5_HRA_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D04Cu)

/** \brief D050, CPU5 HR specific code protection range 10, lower bound register */
#define CPU5_HRA_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D050u)

/** \brief D054, CPU5 HR specific code protection range 10, upper bound register */
#define CPU5_HRA_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D054u)

/** \brief D058, CPU5 HR specific code protection range 11, lower bound register */
#define CPU5_HRA_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D058u)

/** \brief D05C, CPU5 HR specific code protection range 11, upper bound register */
#define CPU5_HRA_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D05Cu)

/** \brief D060, CPU5 HR specific code protection range 12, lower bound register */
#define CPU5_HRA_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D060u)

/** \brief D064, CPU5 HR specific code protection range 12, upper bound register */
#define CPU5_HRA_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D064u)

/** \brief D068, CPU5 HR specific code protection range 13, lower bound register */
#define CPU5_HRA_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D068u)

/** \brief D06C, CPU5 HR specific code protection range 13, upper bound register */
#define CPU5_HRA_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D06Cu)

/** \brief D070, CPU5 HR specific code protection range 14, lower bound register */
#define CPU5_HRA_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D070u)

/** \brief D074, CPU5 HR specific code protection range 14, upper bound register */
#define CPU5_HRA_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D074u)

/** \brief D078, CPU5 HR specific code protection range 15, lower bound register */
#define CPU5_HRA_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF895D078u)

/** \brief D07C, CPU5 HR specific code protection range 15, upper bound register */
#define CPU5_HRA_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF895D07Cu)

/** \brief E000, CPU5 HR specific code protection execute enable register set 0 */
#define CPU5_HRA_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E000u)

/** \brief E004, CPU5 HR specific code protection execute enable register set 1 */
#define CPU5_HRA_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E004u)

/** \brief E008, CPU5 HR specific code protection execute enable register set 2 */
#define CPU5_HRA_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E008u)

/** \brief E00C, CPU5 HR specific code protection execute enable register set 3 */
#define CPU5_HRA_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E00Cu)

/** \brief E010, CPU5 HR specific data protection read enable register set 0 */
#define CPU5_HRA_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E010u)

/** \brief E014, CPU5 HR specific data protection read enable register set 1 */
#define CPU5_HRA_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E014u)

/** \brief E018, CPU5 HR specific data protection read enable register set 2 */
#define CPU5_HRA_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E018u)

/** \brief E01C, CPU5 HR specific data protection read enable register set 3 */
#define CPU5_HRA_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E01Cu)

/** \brief E020, CPU5 HR specific data protection write enable register set 0 */
#define CPU5_HRA_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E020u)

/** \brief E024, CPU5 HR specific data protection write enable register set 1 */
#define CPU5_HRA_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E024u)

/** \brief E028, CPU5 HR specific data protection write enable register set 2 */
#define CPU5_HRA_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E028u)

/** \brief E02C, CPU5 HR specific data protection write enable register set 3 */
#define CPU5_HRA_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E02Cu)

/** \brief E040, CPU5 HR specific code protection execute enable register set 4 */
#define CPU5_HRA_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E040u)

/** \brief E044, CPU5 HR specific code protection execute enable register set 5 */
#define CPU5_HRA_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E044u)

/** \brief E048, CPU5 HR specific code protection execute enable register set 6 */
#define CPU5_HRA_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E048u)

/** \brief E04C, CPU5 HR specific code protection execute enable register set 7 */
#define CPU5_HRA_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF895E04Cu)

/** \brief E050, CPU5 HR specific data protection read enable register set 4 */
#define CPU5_HRA_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E050u)

/** \brief E054, CPU5 HR specific data protection read enable register set 5 */
#define CPU5_HRA_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E054u)

/** \brief E058, CPU5 HR specific data protection read enable register set 6 */
#define CPU5_HRA_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E058u)

/** \brief E05C, CPU5 HR specific data protection read enable register set 7 */
#define CPU5_HRA_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF895E05Cu)

/** \brief E060, CPU5 HR specific data protection write enable register set 4 */
#define CPU5_HRA_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E060u)

/** \brief E064, CPU5 HR specific data protection write enable register set 5 */
#define CPU5_HRA_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E064u)

/** \brief E068, CPU5 HR specific data protection write enable register set 6 */
#define CPU5_HRA_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E068u)

/** \brief E06C, CPU5 HR specific data protection write enable register set 7 */
#define CPU5_HRA_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF895E06Cu)

/** \brief E400, CPU5 HR specific temporal protection system control register */
#define CPU5_HRA_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF895E400u)

/** \brief E404, CPU5 HR specific temporal protection system timer register 0 */
#define CPU5_HRA_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF895E404u)

/** \brief E408, CPU5 HR specific temporal protection system timer register 1 */
#define CPU5_HRA_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF895E408u)

/** \brief E40C, CPU5 HR specific temporal protection system timer register 2 */
#define CPU5_HRA_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF895E40Cu)

/** \brief F000, CPU5 trigger event 0 */
#define CPU5_HRA_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F000u)
/** Alias (User Manual Name) for CPU5_HRA_TR0_EVT */
#define CPU5_HRA_TR0EVT (CPU5_HRA_TR0_EVT)

/** \brief F004, CPU5 trigger address 0 */
#define CPU5_HRA_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F004u)
/** Alias (User Manual Name) for CPU5_HRA_TR0_ADR */
#define CPU5_HRA_TR0ADR (CPU5_HRA_TR0_ADR)

/** \brief F008, CPU5 trigger event 1 */
#define CPU5_HRA_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F008u)
/** Alias (User Manual Name) for CPU5_HRA_TR1_EVT */
#define CPU5_HRA_TR1EVT (CPU5_HRA_TR1_EVT)

/** \brief F00C, CPU5 trigger address 1 */
#define CPU5_HRA_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F00Cu)
/** Alias (User Manual Name) for CPU5_HRA_TR1_ADR */
#define CPU5_HRA_TR1ADR (CPU5_HRA_TR1_ADR)

/** \brief F010, CPU5 trigger event 2 */
#define CPU5_HRA_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F010u)
/** Alias (User Manual Name) for CPU5_HRA_TR2_EVT */
#define CPU5_HRA_TR2EVT (CPU5_HRA_TR2_EVT)

/** \brief F014, CPU5 trigger address 2 */
#define CPU5_HRA_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F014u)
/** Alias (User Manual Name) for CPU5_HRA_TR2_ADR */
#define CPU5_HRA_TR2ADR (CPU5_HRA_TR2_ADR)

/** \brief F018, CPU5 trigger event 3 */
#define CPU5_HRA_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F018u)
/** Alias (User Manual Name) for CPU5_HRA_TR3_EVT */
#define CPU5_HRA_TR3EVT (CPU5_HRA_TR3_EVT)

/** \brief F01C, CPU5 trigger address 3 */
#define CPU5_HRA_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F01Cu)
/** Alias (User Manual Name) for CPU5_HRA_TR3_ADR */
#define CPU5_HRA_TR3ADR (CPU5_HRA_TR3_ADR)

/** \brief F020, CPU5 trigger event 4 */
#define CPU5_HRA_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F020u)
/** Alias (User Manual Name) for CPU5_HRA_TR4_EVT */
#define CPU5_HRA_TR4EVT (CPU5_HRA_TR4_EVT)

/** \brief F024, CPU5 trigger address 4 */
#define CPU5_HRA_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F024u)
/** Alias (User Manual Name) for CPU5_HRA_TR4_ADR */
#define CPU5_HRA_TR4ADR (CPU5_HRA_TR4_ADR)

/** \brief F028, CPU5 trigger event 5 */
#define CPU5_HRA_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F028u)
/** Alias (User Manual Name) for CPU5_HRA_TR5_EVT */
#define CPU5_HRA_TR5EVT (CPU5_HRA_TR5_EVT)

/** \brief F02C, CPU5 trigger address 5 */
#define CPU5_HRA_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F02Cu)
/** Alias (User Manual Name) for CPU5_HRA_TR5_ADR */
#define CPU5_HRA_TR5ADR (CPU5_HRA_TR5_ADR)

/** \brief F030, CPU5 trigger event 6 */
#define CPU5_HRA_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F030u)
/** Alias (User Manual Name) for CPU5_HRA_TR6_EVT */
#define CPU5_HRA_TR6EVT (CPU5_HRA_TR6_EVT)

/** \brief F034, CPU5 trigger address 6 */
#define CPU5_HRA_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F034u)
/** Alias (User Manual Name) for CPU5_HRA_TR6_ADR */
#define CPU5_HRA_TR6ADR (CPU5_HRA_TR6_ADR)

/** \brief F038, CPU5 trigger event 7 */
#define CPU5_HRA_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF895F038u)
/** Alias (User Manual Name) for CPU5_HRA_TR7_EVT */
#define CPU5_HRA_TR7EVT (CPU5_HRA_TR7_EVT)

/** \brief F03C, CPU5 trigger address 7 */
#define CPU5_HRA_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF895F03Cu)
/** Alias (User Manual Name) for CPU5_HRA_TR7_ADR */
#define CPU5_HRA_TR7ADR (CPU5_HRA_TR7_ADR)

/** \brief FC00, CPU5 HR specific counter control */
#define CPU5_HRA_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF895FC00u)

/** \brief FC04, CPU5 HR specific CPU clock cycle count */
#define CPU5_HRA_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF895FC04u)

/** \brief FC08, CPU5 HR specific instruction count */
#define CPU5_HRA_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF895FC08u)

/** \brief FC0C, CPU5 HR specific multi-count register 1 */
#define CPU5_HRA_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF895FC0Cu)

/** \brief FC10, CPU5 HR specific multi-count register 2 */
#define CPU5_HRA_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF895FC10u)

/** \brief FC14, CPU5 HR specific multi-count register 3 */
#define CPU5_HRA_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF895FC14u)

/** \brief FD00, CPU5 debug status register */
#define CPU5_HRA_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF895FD00u)

/** \brief FD08, CPU5 external event register */
#define CPU5_HRA_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF895FD08u)

/** \brief FD0C, CPU5 core register access event */
#define CPU5_HRA_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF895FD0Cu)

/** \brief FD10, CPU5 software debug event */
#define CPU5_HRA_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF895FD10u)

/** \brief FD14, CPU5 debug action configuration */
#define CPU5_HRA_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF895FD14u)

/** \brief FD30, CPU5 trigger accumulator */
#define CPU5_HRA_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF895FD30u)

/** \brief FD40, CPU5 debug monitor start address */
#define CPU5_HRA_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF895FD40u)

/** \brief FD44, CPU5 debug context save area pointer */
#define CPU5_HRA_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF895FD44u)

/** \brief FD48, CPU5 debug trap control */
#define CPU5_HRA_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF895FD48u)

/** \brief FD4C, CPU5 debug configuration */
#define CPU5_HRA_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF895FD4Cu)

/** \brief FD50, CPU5 trace configuration */
#define CPU5_HRA_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF895FD50u)

/** \brief FD54, CPU5 trace filter */
#define CPU5_HRA_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF895FD54u)

/** \brief FD58, CPU5 trace bandwidth limiter */
#define CPU5_HRA_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF895FD58u)

/** \brief FD60, CPU5 MCDS performance counter control register */
#define CPU5_HRA_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF895FD60u)

/** \brief FE00, CPU5 previous context information register */
#define CPU5_HRA_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF895FE00u)

/** \brief FE04, CPU5 HR specific program status word */
#define CPU5_HRA_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF895FE04u)

/** \brief FE08, CPU5 program counter */
#define CPU5_HRA_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF895FE08u)

/** \brief FE14, CPU5 HR specific core configuration register */
#define CPU5_HRA_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF895FE14u)

/** \brief FE18, CPU5 identification register */
#define CPU5_HRA_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF895FE18u)

/** \brief FE1C, CPU5 core identification register */
#define CPU5_HRA_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF895FE1Cu)

/** \brief FE20, CPU5 HR specific base interrupt vector table pointer */
#define CPU5_HRA_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF895FE20u)

/** \brief FE24, CPU5 HR specific base trap vector table pointer */
#define CPU5_HRA_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF895FE24u)

/** \brief FE28, CPU5 HR specific interrupt stack pointer */
#define CPU5_HRA_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF895FE28u)

/** \brief FE2C, CPU5 interrupt control register */
#define CPU5_HRA_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF895FE2Cu)

/** \brief FE34, CPU5 previous PRS */
#define CPU5_HRA_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF895FE34u)

/** \brief FE38, CPU5 HR specific free CSA list head pointer */
#define CPU5_HRA_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF895FE38u)

/** \brief FE3C, CPU5 HR specific free CSA list limit pointer */
#define CPU5_HRA_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF895FE3Cu)

/** \brief FE40, CPU5 software identification */
#define CPU5_HRA_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF895FE40u)

/** \brief FE50, CPU5 customer ID register */
#define CPU5_HRA_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF895FE50u)

/** \brief FE60, CPU5 core boot configuration register */
#define CPU5_HRA_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF895FE60u)

/** \brief FE64, CPU5 lockstep control register */
#define CPU5_HRA_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF895FE64u)

/** \brief FE68, CPU5 clock control register */
#define CPU5_HRA_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF895FE68u)

/** \brief FE6C, CPU5 hardware configuration  */
#define CPU5_HRA_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF895FE6Cu)

/** \brief FF00, CPU5 data general purpose register 0 */
#define CPU5_D0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF00u)

/** \brief FF04, CPU5 data general purpose register 1 */
#define CPU5_D1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF04u)

/** \brief FF08, CPU5 data general purpose register 2 */
#define CPU5_D2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF08u)

/** \brief FF0C, CPU5 data general purpose register 3 */
#define CPU5_D3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF0Cu)

/** \brief FF10, CPU5 data general purpose register 4 */
#define CPU5_D4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF10u)

/** \brief FF14, CPU5 data general purpose register 5 */
#define CPU5_D5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF14u)

/** \brief FF18, CPU5 data general purpose register 6 */
#define CPU5_D6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF18u)

/** \brief FF1C, CPU5 data general purpose register 7 */
#define CPU5_D7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF1Cu)

/** \brief FF20, CPU5 data general purpose register 8 */
#define CPU5_D8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF20u)

/** \brief FF24, CPU5 data general purpose register 9 */
#define CPU5_D9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF24u)

/** \brief FF28, CPU5 data general purpose register 10 */
#define CPU5_D10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF28u)

/** \brief FF2C, CPU5 data general purpose register 11 */
#define CPU5_D11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF2Cu)

/** \brief FF30, CPU5 data general purpose register 12 */
#define CPU5_D12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF30u)

/** \brief FF34, CPU5 data general purpose register 13 */
#define CPU5_D13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF34u)

/** \brief FF38, CPU5 data general purpose register 14 */
#define CPU5_D14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF38u)

/** \brief FF3C, CPU5 data general purpose register 15 */
#define CPU5_D15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF895FF3Cu)

/** \brief FF80, CPU5 address general purpose register 0 */
#define CPU5_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF80u)

/** \brief FF84, CPU5 address general purpose register 1 */
#define CPU5_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF84u)

/** \brief FF88, CPU5 address general purpose register 2 */
#define CPU5_A2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF88u)

/** \brief FF8C, CPU5 address general purpose register 3 */
#define CPU5_A3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF8Cu)

/** \brief FF90, CPU5 address general purpose register 4 */
#define CPU5_A4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF90u)

/** \brief FF94, CPU5 address general purpose register 5 */
#define CPU5_A5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF94u)

/** \brief FF98, CPU5 address general purpose register 6 */
#define CPU5_A6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF98u)

/** \brief FF9C, CPU5 address general purpose register 7 */
#define CPU5_A7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FF9Cu)

/** \brief FFA0, CPU5 address general purpose register 8 */
#define CPU5_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFA0u)

/** \brief FFA4, CPU5 address general purpose register 9 */
#define CPU5_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFA4u)

/** \brief FFA8, CPU5 address general purpose register 10 */
#define CPU5_A10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFA8u)

/** \brief FFAC, CPU5 address general purpose register 11 */
#define CPU5_A11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFACu)

/** \brief FFB0, CPU5 address general purpose register 12 */
#define CPU5_A12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFB0u)

/** \brief FFB4, CPU5 address general purpose register 13 */
#define CPU5_A13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFB4u)

/** \brief FFB8, CPU5 address general purpose register 14 */
#define CPU5_A14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFB8u)

/** \brief FFBC, CPU5 address general purpose register 15 */
#define CPU5_A15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF895FFBCu)

/** \brief 1030, CPU5 SRI error generation register */
#define CPU5_HRB_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8961030u)

/** \brief 1040, CPU5 lockstep test register */
#define CPU5_HRB_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8961040u)

/** \brief 8100, CPU5 data access cacheability register */
#define CPU5_HRB_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8968100u)

/** \brief 8104, CPU5 code access cacheability register */
#define CPU5_HRB_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8968104u)

/** \brief 8108, CPU5 peripheral space identifier register */
#define CPU5_HRB_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8968108u)

/** \brief 9000, CPU5 data control register 2 */
#define CPU5_HRB_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8969000u)

/** \brief 9008, CPU5 data control register 1 */
#define CPU5_HRB_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8969008u)

/** \brief 900C, CPU5 SIST mode access control register */
#define CPU5_HRB_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF896900Cu)

/** \brief 9010, CPU5 HR specific data synchronous trap register */
#define CPU5_HRB_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8969010u)

/** \brief 9018, CPU5 HR specific data asynchronous trap register */
#define CPU5_HRB_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8969018u)

/** \brief 901C, CPU5 HR specific data error address register */
#define CPU5_HRB_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF896901Cu)

/** \brief 9020, CPU5 data integrity error address register */
#define CPU5_HRB_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8969020u)

/** \brief 9024, CPU5 data integrity error trap register */
#define CPU5_HRB_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8969024u)

/** \brief 9040, CPU5 data memory control register */
#define CPU5_HRB_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8969040u)

/** \brief 9200, CPU5 HR specific program synchronous trap register */
#define CPU5_HRB_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8969200u)

/** \brief 9204, CPU5 program control 1 */
#define CPU5_HRB_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8969204u)

/** \brief 9208, CPU5 program control 2 */
#define CPU5_HRB_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8969208u)

/** \brief 920C, CPU5 program control 0 */
#define CPU5_HRB_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF896920Cu)

/** \brief 9210, CPU5 HR specific program integrity error address register */
#define CPU5_HRB_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8969210u)

/** \brief 9214, CPU5 HR specific program integrity error trap register */
#define CPU5_HRB_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8969214u)

/** \brief 9400, CPU5 compatibility control register */
#define CPU5_HRB_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8969400u)

/** \brief A000, CPU5 HR specific trap control register */
#define CPU5_HRB_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF896A000u)

/** \brief A004, CPU5 HR specific trapping instruction program counter register */
#define CPU5_HRB_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF896A004u)

/** \brief A008, CPU5 HR specific trapping instruction opcode register */
#define CPU5_HRB_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF896A008u)

/** \brief A010, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRB_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF896A010u)

/** \brief A014, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRB_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF896A014u)

/** \brief A018, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRB_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF896A018u)

/** \brief A01C, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRB_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF896A01Cu)

/** \brief A020, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRB_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF896A020u)

/** \brief A024, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRB_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF896A024u)

/** \brief A030, CPU5 HR specific synchronous trap control register */
#define CPU5_HRB_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF896A030u)

/** \brief A034, CPU5 HR specific trapping instruction opcode register */
#define CPU5_HRB_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF896A034u)

/** \brief C000, CPU5 HR specific data protection range 0, lower bound register */
#define CPU5_HRB_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C000u)

/** \brief C004, CPU5 HR specific data protection range 0, upper bound register */
#define CPU5_HRB_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C004u)

/** \brief C008, CPU5 HR specific data protection range 1, lower bound register */
#define CPU5_HRB_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C008u)

/** \brief C00C, CPU5 HR specific data protection range 1, upper bound register */
#define CPU5_HRB_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C00Cu)

/** \brief C010, CPU5 HR specific data protection range 2, lower bound register */
#define CPU5_HRB_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C010u)

/** \brief C014, CPU5 HR specific data protection range 2, upper bound register */
#define CPU5_HRB_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C014u)

/** \brief C018, CPU5 HR specific data protection range 3, lower bound register */
#define CPU5_HRB_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C018u)

/** \brief C01C, CPU5 HR specific data protection range 3, upper bound register */
#define CPU5_HRB_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C01Cu)

/** \brief C020, CPU5 HR specific data protection range 4, lower bound register */
#define CPU5_HRB_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C020u)

/** \brief C024, CPU5 HR specific data protection range 4, upper bound register */
#define CPU5_HRB_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C024u)

/** \brief C028, CPU5 HR specific data protection range 5, lower bound register */
#define CPU5_HRB_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C028u)

/** \brief C02C, CPU5 HR specific data protection range 5, upper bound register */
#define CPU5_HRB_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C02Cu)

/** \brief C030, CPU5 HR specific data protection range 6, lower bound register */
#define CPU5_HRB_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C030u)

/** \brief C034, CPU5 HR specific data protection range 6, upper bound register */
#define CPU5_HRB_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C034u)

/** \brief C038, CPU5 HR specific data protection range 7, lower bound register */
#define CPU5_HRB_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C038u)

/** \brief C03C, CPU5 HR specific data protection range 7, upper bound register */
#define CPU5_HRB_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C03Cu)

/** \brief C040, CPU5 HR specific data protection range 8, lower bound register */
#define CPU5_HRB_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C040u)

/** \brief C044, CPU5 HR specific data protection range 8, upper bound register */
#define CPU5_HRB_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C044u)

/** \brief C048, CPU5 HR specific data protection range 9, lower bound register */
#define CPU5_HRB_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C048u)

/** \brief C04C, CPU5 HR specific data protection range 9, upper bound register */
#define CPU5_HRB_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C04Cu)

/** \brief C050, CPU5 HR specific data protection range 10, lower bound register */
#define CPU5_HRB_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C050u)

/** \brief C054, CPU5 HR specific data protection range 10, upper bound register */
#define CPU5_HRB_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C054u)

/** \brief C058, CPU5 HR specific data protection range 11, lower bound register */
#define CPU5_HRB_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C058u)

/** \brief C05C, CPU5 HR specific data protection range 11, upper bound register */
#define CPU5_HRB_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C05Cu)

/** \brief C060, CPU5 HR specific data protection range 12, lower bound register */
#define CPU5_HRB_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C060u)

/** \brief C064, CPU5 HR specific data protection range 12, upper bound register */
#define CPU5_HRB_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C064u)

/** \brief C068, CPU5 HR specific data protection range 13, lower bound register */
#define CPU5_HRB_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C068u)

/** \brief C06C, CPU5 HR specific data protection range 13, upper bound register */
#define CPU5_HRB_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C06Cu)

/** \brief C070, CPU5 HR specific data protection range 14, lower bound register */
#define CPU5_HRB_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C070u)

/** \brief C074, CPU5 HR specific data protection range 14, upper bound register */
#define CPU5_HRB_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C074u)

/** \brief C078, CPU5 HR specific data protection range 15, lower bound register */
#define CPU5_HRB_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C078u)

/** \brief C07C, CPU5 HR specific data protection range 15, upper bound register */
#define CPU5_HRB_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C07Cu)

/** \brief C080, CPU5 HR specific data protection range 16, lower bound register */
#define CPU5_HRB_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C080u)

/** \brief C084, CPU5 HR specific data protection range 16, upper bound register */
#define CPU5_HRB_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C084u)

/** \brief C088, CPU5 HR specific data protection range 17, lower bound register */
#define CPU5_HRB_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C088u)

/** \brief C08C, CPU5 HR specific data protection range 17, upper bound register */
#define CPU5_HRB_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C08Cu)

/** \brief C090, CPU5 HR specific data protection range 18, lower bound register */
#define CPU5_HRB_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C090u)

/** \brief C094, CPU5 HR specific data protection range 18, upper bound register */
#define CPU5_HRB_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C094u)

/** \brief C098, CPU5 HR specific data protection range 19, lower bound register */
#define CPU5_HRB_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C098u)

/** \brief C09C, CPU5 HR specific data protection range 19, upper bound register */
#define CPU5_HRB_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C09Cu)

/** \brief C0A0, CPU5 HR specific data protection range 20, lower bound register */
#define CPU5_HRB_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C0A0u)

/** \brief C0A4, CPU5 HR specific data protection range 20, upper bound register */
#define CPU5_HRB_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C0A4u)

/** \brief C0A8, CPU5 HR specific data protection range 21, lower bound register */
#define CPU5_HRB_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C0A8u)

/** \brief C0AC, CPU5 HR specific data protection range 21, upper bound register */
#define CPU5_HRB_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C0ACu)

/** \brief C0B0, CPU5 HR specific data protection range 22, lower bound register */
#define CPU5_HRB_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C0B0u)

/** \brief C0B4, CPU5 HR specific data protection range 22, upper bound register */
#define CPU5_HRB_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C0B4u)

/** \brief C0B8, CPU5 HR specific data protection range 23, lower bound register */
#define CPU5_HRB_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF896C0B8u)

/** \brief C0BC, CPU5 HR specific data protection range 23, upper bound register */
#define CPU5_HRB_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF896C0BCu)

/** \brief D000, CPU5 HR specific code protection range 0, lower bound register */
#define CPU5_HRB_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D000u)

/** \brief D004, CPU5 HR specific code protection range 0, upper bound register */
#define CPU5_HRB_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D004u)

/** \brief D008, CPU5 HR specific code protection range 1, lower bound register */
#define CPU5_HRB_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D008u)

/** \brief D00C, CPU5 HR specific code protection range 1, upper bound register */
#define CPU5_HRB_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D00Cu)

/** \brief D010, CPU5 HR specific code protection range 2, lower bound register */
#define CPU5_HRB_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D010u)

/** \brief D014, CPU5 HR specific code protection range 2, upper bound register */
#define CPU5_HRB_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D014u)

/** \brief D018, CPU5 HR specific code protection range 3, lower bound register */
#define CPU5_HRB_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D018u)

/** \brief D01C, CPU5 HR specific code protection range 3, upper bound register */
#define CPU5_HRB_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D01Cu)

/** \brief D020, CPU5 HR specific code protection range 4, lower bound register */
#define CPU5_HRB_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D020u)

/** \brief D024, CPU5 HR specific code protection range 4, upper bound register */
#define CPU5_HRB_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D024u)

/** \brief D028, CPU5 HR specific code protection range 5, lower bound register */
#define CPU5_HRB_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D028u)

/** \brief D02C, CPU5 HR specific code protection range 5, upper bound register */
#define CPU5_HRB_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D02Cu)

/** \brief D030, CPU5 HR specific code protection range 6, lower bound register */
#define CPU5_HRB_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D030u)

/** \brief D034, CPU5 HR specific code protection range 6, upper bound register */
#define CPU5_HRB_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D034u)

/** \brief D038, CPU5 HR specific code protection range 7, lower bound register */
#define CPU5_HRB_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D038u)

/** \brief D03C, CPU5 HR specific code protection range 7, upper bound register */
#define CPU5_HRB_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D03Cu)

/** \brief D040, CPU5 HR specific code protection range 8, lower bound register */
#define CPU5_HRB_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D040u)

/** \brief D044, CPU5 HR specific code protection range 8, upper bound register */
#define CPU5_HRB_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D044u)

/** \brief D048, CPU5 HR specific code protection range 9, lower bound register */
#define CPU5_HRB_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D048u)

/** \brief D04C, CPU5 HR specific code protection range 9, upper bound register */
#define CPU5_HRB_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D04Cu)

/** \brief D050, CPU5 HR specific code protection range 10, lower bound register */
#define CPU5_HRB_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D050u)

/** \brief D054, CPU5 HR specific code protection range 10, upper bound register */
#define CPU5_HRB_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D054u)

/** \brief D058, CPU5 HR specific code protection range 11, lower bound register */
#define CPU5_HRB_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D058u)

/** \brief D05C, CPU5 HR specific code protection range 11, upper bound register */
#define CPU5_HRB_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D05Cu)

/** \brief D060, CPU5 HR specific code protection range 12, lower bound register */
#define CPU5_HRB_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D060u)

/** \brief D064, CPU5 HR specific code protection range 12, upper bound register */
#define CPU5_HRB_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D064u)

/** \brief D068, CPU5 HR specific code protection range 13, lower bound register */
#define CPU5_HRB_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D068u)

/** \brief D06C, CPU5 HR specific code protection range 13, upper bound register */
#define CPU5_HRB_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D06Cu)

/** \brief D070, CPU5 HR specific code protection range 14, lower bound register */
#define CPU5_HRB_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D070u)

/** \brief D074, CPU5 HR specific code protection range 14, upper bound register */
#define CPU5_HRB_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D074u)

/** \brief D078, CPU5 HR specific code protection range 15, lower bound register */
#define CPU5_HRB_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF896D078u)

/** \brief D07C, CPU5 HR specific code protection range 15, upper bound register */
#define CPU5_HRB_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF896D07Cu)

/** \brief E000, CPU5 HR specific code protection execute enable register set 0 */
#define CPU5_HRB_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E000u)

/** \brief E004, CPU5 HR specific code protection execute enable register set 1 */
#define CPU5_HRB_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E004u)

/** \brief E008, CPU5 HR specific code protection execute enable register set 2 */
#define CPU5_HRB_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E008u)

/** \brief E00C, CPU5 HR specific code protection execute enable register set 3 */
#define CPU5_HRB_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E00Cu)

/** \brief E010, CPU5 HR specific data protection read enable register set 0 */
#define CPU5_HRB_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E010u)

/** \brief E014, CPU5 HR specific data protection read enable register set 1 */
#define CPU5_HRB_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E014u)

/** \brief E018, CPU5 HR specific data protection read enable register set 2 */
#define CPU5_HRB_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E018u)

/** \brief E01C, CPU5 HR specific data protection read enable register set 3 */
#define CPU5_HRB_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E01Cu)

/** \brief E020, CPU5 HR specific data protection write enable register set 0 */
#define CPU5_HRB_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E020u)

/** \brief E024, CPU5 HR specific data protection write enable register set 1 */
#define CPU5_HRB_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E024u)

/** \brief E028, CPU5 HR specific data protection write enable register set 2 */
#define CPU5_HRB_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E028u)

/** \brief E02C, CPU5 HR specific data protection write enable register set 3 */
#define CPU5_HRB_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E02Cu)

/** \brief E040, CPU5 HR specific code protection execute enable register set 4 */
#define CPU5_HRB_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E040u)

/** \brief E044, CPU5 HR specific code protection execute enable register set 5 */
#define CPU5_HRB_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E044u)

/** \brief E048, CPU5 HR specific code protection execute enable register set 6 */
#define CPU5_HRB_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E048u)

/** \brief E04C, CPU5 HR specific code protection execute enable register set 7 */
#define CPU5_HRB_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF896E04Cu)

/** \brief E050, CPU5 HR specific data protection read enable register set 4 */
#define CPU5_HRB_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E050u)

/** \brief E054, CPU5 HR specific data protection read enable register set 5 */
#define CPU5_HRB_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E054u)

/** \brief E058, CPU5 HR specific data protection read enable register set 6 */
#define CPU5_HRB_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E058u)

/** \brief E05C, CPU5 HR specific data protection read enable register set 7 */
#define CPU5_HRB_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF896E05Cu)

/** \brief E060, CPU5 HR specific data protection write enable register set 4 */
#define CPU5_HRB_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E060u)

/** \brief E064, CPU5 HR specific data protection write enable register set 5 */
#define CPU5_HRB_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E064u)

/** \brief E068, CPU5 HR specific data protection write enable register set 6 */
#define CPU5_HRB_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E068u)

/** \brief E06C, CPU5 HR specific data protection write enable register set 7 */
#define CPU5_HRB_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF896E06Cu)

/** \brief E400, CPU5 HR specific temporal protection system control register */
#define CPU5_HRB_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF896E400u)

/** \brief E404, CPU5 HR specific temporal protection system timer register 0 */
#define CPU5_HRB_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF896E404u)

/** \brief E408, CPU5 HR specific temporal protection system timer register 1 */
#define CPU5_HRB_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF896E408u)

/** \brief E40C, CPU5 HR specific temporal protection system timer register 2 */
#define CPU5_HRB_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF896E40Cu)

/** \brief F000, CPU5 trigger event 0 */
#define CPU5_HRB_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F000u)
/** Alias (User Manual Name) for CPU5_HRB_TR0_EVT */
#define CPU5_HRB_TR0EVT (CPU5_HRB_TR0_EVT)

/** \brief F004, CPU5 trigger address 0 */
#define CPU5_HRB_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F004u)
/** Alias (User Manual Name) for CPU5_HRB_TR0_ADR */
#define CPU5_HRB_TR0ADR (CPU5_HRB_TR0_ADR)

/** \brief F008, CPU5 trigger event 1 */
#define CPU5_HRB_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F008u)
/** Alias (User Manual Name) for CPU5_HRB_TR1_EVT */
#define CPU5_HRB_TR1EVT (CPU5_HRB_TR1_EVT)

/** \brief F00C, CPU5 trigger address 1 */
#define CPU5_HRB_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F00Cu)
/** Alias (User Manual Name) for CPU5_HRB_TR1_ADR */
#define CPU5_HRB_TR1ADR (CPU5_HRB_TR1_ADR)

/** \brief F010, CPU5 trigger event 2 */
#define CPU5_HRB_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F010u)
/** Alias (User Manual Name) for CPU5_HRB_TR2_EVT */
#define CPU5_HRB_TR2EVT (CPU5_HRB_TR2_EVT)

/** \brief F014, CPU5 trigger address 2 */
#define CPU5_HRB_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F014u)
/** Alias (User Manual Name) for CPU5_HRB_TR2_ADR */
#define CPU5_HRB_TR2ADR (CPU5_HRB_TR2_ADR)

/** \brief F018, CPU5 trigger event 3 */
#define CPU5_HRB_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F018u)
/** Alias (User Manual Name) for CPU5_HRB_TR3_EVT */
#define CPU5_HRB_TR3EVT (CPU5_HRB_TR3_EVT)

/** \brief F01C, CPU5 trigger address 3 */
#define CPU5_HRB_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F01Cu)
/** Alias (User Manual Name) for CPU5_HRB_TR3_ADR */
#define CPU5_HRB_TR3ADR (CPU5_HRB_TR3_ADR)

/** \brief F020, CPU5 trigger event 4 */
#define CPU5_HRB_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F020u)
/** Alias (User Manual Name) for CPU5_HRB_TR4_EVT */
#define CPU5_HRB_TR4EVT (CPU5_HRB_TR4_EVT)

/** \brief F024, CPU5 trigger address 4 */
#define CPU5_HRB_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F024u)
/** Alias (User Manual Name) for CPU5_HRB_TR4_ADR */
#define CPU5_HRB_TR4ADR (CPU5_HRB_TR4_ADR)

/** \brief F028, CPU5 trigger event 5 */
#define CPU5_HRB_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F028u)
/** Alias (User Manual Name) for CPU5_HRB_TR5_EVT */
#define CPU5_HRB_TR5EVT (CPU5_HRB_TR5_EVT)

/** \brief F02C, CPU5 trigger address 5 */
#define CPU5_HRB_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F02Cu)
/** Alias (User Manual Name) for CPU5_HRB_TR5_ADR */
#define CPU5_HRB_TR5ADR (CPU5_HRB_TR5_ADR)

/** \brief F030, CPU5 trigger event 6 */
#define CPU5_HRB_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F030u)
/** Alias (User Manual Name) for CPU5_HRB_TR6_EVT */
#define CPU5_HRB_TR6EVT (CPU5_HRB_TR6_EVT)

/** \brief F034, CPU5 trigger address 6 */
#define CPU5_HRB_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F034u)
/** Alias (User Manual Name) for CPU5_HRB_TR6_ADR */
#define CPU5_HRB_TR6ADR (CPU5_HRB_TR6_ADR)

/** \brief F038, CPU5 trigger event 7 */
#define CPU5_HRB_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF896F038u)
/** Alias (User Manual Name) for CPU5_HRB_TR7_EVT */
#define CPU5_HRB_TR7EVT (CPU5_HRB_TR7_EVT)

/** \brief F03C, CPU5 trigger address 7 */
#define CPU5_HRB_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF896F03Cu)
/** Alias (User Manual Name) for CPU5_HRB_TR7_ADR */
#define CPU5_HRB_TR7ADR (CPU5_HRB_TR7_ADR)

/** \brief FC00, CPU5 HR specific counter control */
#define CPU5_HRB_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF896FC00u)

/** \brief FC04, CPU5 HR specific CPU clock cycle count */
#define CPU5_HRB_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF896FC04u)

/** \brief FC08, CPU5 HR specific instruction count */
#define CPU5_HRB_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF896FC08u)

/** \brief FC0C, CPU5 HR specific multi-count register 1 */
#define CPU5_HRB_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF896FC0Cu)

/** \brief FC10, CPU5 HR specific multi-count register 2 */
#define CPU5_HRB_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF896FC10u)

/** \brief FC14, CPU5 HR specific multi-count register 3 */
#define CPU5_HRB_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF896FC14u)

/** \brief FD00, CPU5 debug status register */
#define CPU5_HRB_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF896FD00u)

/** \brief FD08, CPU5 external event register */
#define CPU5_HRB_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF896FD08u)

/** \brief FD0C, CPU5 core register access event */
#define CPU5_HRB_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF896FD0Cu)

/** \brief FD10, CPU5 software debug event */
#define CPU5_HRB_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF896FD10u)

/** \brief FD14, CPU5 debug action configuration */
#define CPU5_HRB_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF896FD14u)

/** \brief FD30, CPU5 trigger accumulator */
#define CPU5_HRB_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF896FD30u)

/** \brief FD40, CPU5 debug monitor start address */
#define CPU5_HRB_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF896FD40u)

/** \brief FD44, CPU5 debug context save area pointer */
#define CPU5_HRB_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF896FD44u)

/** \brief FD48, CPU5 debug trap control */
#define CPU5_HRB_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF896FD48u)

/** \brief FD4C, CPU5 debug configuration */
#define CPU5_HRB_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF896FD4Cu)

/** \brief FD50, CPU5 trace configuration */
#define CPU5_HRB_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF896FD50u)

/** \brief FD54, CPU5 trace filter */
#define CPU5_HRB_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF896FD54u)

/** \brief FD58, CPU5 trace bandwidth limiter */
#define CPU5_HRB_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF896FD58u)

/** \brief FD60, CPU5 MCDS performance counter control register */
#define CPU5_HRB_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF896FD60u)

/** \brief FE00, CPU5 previous context information register */
#define CPU5_HRB_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF896FE00u)

/** \brief FE04, CPU5 HR specific program status word */
#define CPU5_HRB_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF896FE04u)

/** \brief FE08, CPU5 program counter */
#define CPU5_HRB_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF896FE08u)

/** \brief FE14, CPU5 HR specific core configuration register */
#define CPU5_HRB_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF896FE14u)

/** \brief FE18, CPU5 identification register */
#define CPU5_HRB_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF896FE18u)

/** \brief FE1C, CPU5 core identification register */
#define CPU5_HRB_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF896FE1Cu)

/** \brief FE20, CPU5 HR specific base interrupt vector table pointer */
#define CPU5_HRB_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF896FE20u)

/** \brief FE24, CPU5 HR specific base trap vector table pointer */
#define CPU5_HRB_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF896FE24u)

/** \brief FE28, CPU5 HR specific interrupt stack pointer */
#define CPU5_HRB_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF896FE28u)

/** \brief FE2C, CPU5 interrupt control register */
#define CPU5_HRB_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF896FE2Cu)

/** \brief FE34, CPU5 previous PRS */
#define CPU5_HRB_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF896FE34u)

/** \brief FE38, CPU5 HR specific free CSA list head pointer */
#define CPU5_HRB_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF896FE38u)

/** \brief FE3C, CPU5 HR specific free CSA list limit pointer */
#define CPU5_HRB_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF896FE3Cu)

/** \brief FE40, CPU5 software identification */
#define CPU5_HRB_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF896FE40u)

/** \brief FE50, CPU5 customer ID register */
#define CPU5_HRB_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF896FE50u)

/** \brief FE60, CPU5 core boot configuration register */
#define CPU5_HRB_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF896FE60u)

/** \brief FE64, CPU5 lockstep control register */
#define CPU5_HRB_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF896FE64u)

/** \brief FE68, CPU5 clock control register */
#define CPU5_HRB_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF896FE68u)

/** \brief FE6C, CPU5 hardware configuration  */
#define CPU5_HRB_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF896FE6Cu)

/** \brief FF80, CPU5 HR specific address general purpose register 0 */
#define CPU5_HRB_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF896FF80u)

/** \brief FF84, CPU5 HR specific address general purpose register 1 */
#define CPU5_HRB_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF896FF84u)

/** \brief FFA0, CPU5 HR specific address general purpose register 8 */
#define CPU5_HRB_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF896FFA0u)

/** \brief FFA4, CPU5 HR specific address general purpose register 9 */
#define CPU5_HRB_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF896FFA4u)

/** \brief 1030, CPU5 SRI error generation register */
#define CPU5_HRHV_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8971030u)

/** \brief 1040, CPU5 lockstep test register */
#define CPU5_HRHV_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8971040u)

/** \brief 8100, CPU5 data access cacheability register */
#define CPU5_HRHV_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8978100u)

/** \brief 8104, CPU5 code access cacheability register */
#define CPU5_HRHV_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8978104u)

/** \brief 8108, CPU5 peripheral space identifier register */
#define CPU5_HRHV_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8978108u)

/** \brief 9000, CPU5 data control register 2 */
#define CPU5_HRHV_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8979000u)

/** \brief 9008, CPU5 data control register 1 */
#define CPU5_HRHV_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8979008u)

/** \brief 900C, CPU5 SIST mode access control register */
#define CPU5_HRHV_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF897900Cu)

/** \brief 9010, CPU5 HR specific data synchronous trap register */
#define CPU5_HRHV_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8979010u)

/** \brief 9018, CPU5 HR specific data asynchronous trap register */
#define CPU5_HRHV_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8979018u)

/** \brief 901C, CPU5 HR specific data error address register */
#define CPU5_HRHV_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF897901Cu)

/** \brief 9020, CPU5 data integrity error address register */
#define CPU5_HRHV_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8979020u)

/** \brief 9024, CPU5 data integrity error trap register */
#define CPU5_HRHV_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8979024u)

/** \brief 9040, CPU5 data memory control register */
#define CPU5_HRHV_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8979040u)

/** \brief 9200, CPU5 HR specific program synchronous trap register */
#define CPU5_HRHV_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8979200u)

/** \brief 9204, CPU5 program control 1 */
#define CPU5_HRHV_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8979204u)

/** \brief 9208, CPU5 program control 2 */
#define CPU5_HRHV_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8979208u)

/** \brief 920C, CPU5 program control 0 */
#define CPU5_HRHV_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF897920Cu)

/** \brief 9210, CPU5 HR specific program integrity error address register */
#define CPU5_HRHV_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8979210u)

/** \brief 9214, CPU5 HR specific program integrity error trap register */
#define CPU5_HRHV_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8979214u)

/** \brief 9400, CPU5 compatibility control register */
#define CPU5_HRHV_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8979400u)

/** \brief A000, CPU5 HR specific trap control register */
#define CPU5_HRHV_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF897A000u)

/** \brief A004, CPU5 HR specific trapping instruction program counter register */
#define CPU5_HRHV_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF897A004u)

/** \brief A008, CPU5 HR specific trapping instruction opcode register */
#define CPU5_HRHV_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF897A008u)

/** \brief A010, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRHV_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF897A010u)

/** \brief A014, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRHV_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF897A014u)

/** \brief A018, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRHV_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF897A018u)

/** \brief A01C, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRHV_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF897A01Cu)

/** \brief A020, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRHV_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF897A020u)

/** \brief A024, CPU5 HR specific trapping instruction operand register */
#define CPU5_HRHV_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF897A024u)

/** \brief A030, CPU5 HR specific synchronous trap control register */
#define CPU5_HRHV_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF897A030u)

/** \brief A034, CPU5 HR specific trapping instruction opcode register */
#define CPU5_HRHV_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF897A034u)

/** \brief B000, CPU5 virtualization control register 0 */
#define CPU5_HRHV_VCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON0*)0xF897B000u)

/** \brief B004, CPU5 virtualization control register 1 */
#define CPU5_HRHV_VCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON1*)0xF897B004u)

/** \brief B008, CPU5 virtualization control register 2 */
#define CPU5_HRHV_VCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VCON2*)0xF897B008u)

/** \brief B010, CPU5 base hypervisor vector table pointer */
#define CPU5_HRHV_BHV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BHV*)0xF897B010u)

/** \brief B100, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B100u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR0 */
#define CPU5_HRHV_VM0_ICR (CPU5_HRHV_VM_ICR0)

/** \brief B104, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B104u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR1 */
#define CPU5_HRHV_VM1_ICR (CPU5_HRHV_VM_ICR1)

/** \brief B108, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B108u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR2 */
#define CPU5_HRHV_VM2_ICR (CPU5_HRHV_VM_ICR2)

/** \brief B10C, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B10Cu)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR3 */
#define CPU5_HRHV_VM3_ICR (CPU5_HRHV_VM_ICR3)

/** \brief B110, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B110u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR4 */
#define CPU5_HRHV_VM4_ICR (CPU5_HRHV_VM_ICR4)

/** \brief B114, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B114u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR5 */
#define CPU5_HRHV_VM5_ICR (CPU5_HRHV_VM_ICR5)

/** \brief B118, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B118u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR6 */
#define CPU5_HRHV_VM6_ICR (CPU5_HRHV_VM_ICR6)

/** \brief B11C, CPU5 Virtual machine n interrupt state */
#define CPU5_HRHV_VM_ICR7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMICR*)0xF897B11Cu)
/** Alias (User Manual Name) for CPU5_HRHV_VM_ICR7 */
#define CPU5_HRHV_VM7_ICR (CPU5_HRHV_VM_ICR7)

/** \brief B200, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B200u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH0 */
#define CPU5_HRHV_VM0_PETHRESH (CPU5_HRHV_VM_PETHRESH0)

/** \brief B204, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B204u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH1 */
#define CPU5_HRHV_VM1_PETHRESH (CPU5_HRHV_VM_PETHRESH1)

/** \brief B208, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B208u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH2 */
#define CPU5_HRHV_VM2_PETHRESH (CPU5_HRHV_VM_PETHRESH2)

/** \brief B20C, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B20Cu)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH3 */
#define CPU5_HRHV_VM3_PETHRESH (CPU5_HRHV_VM_PETHRESH3)

/** \brief B210, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B210u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH4 */
#define CPU5_HRHV_VM4_PETHRESH (CPU5_HRHV_VM_PETHRESH4)

/** \brief B214, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B214u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH5 */
#define CPU5_HRHV_VM5_PETHRESH (CPU5_HRHV_VM_PETHRESH5)

/** \brief B218, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B218u)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH6 */
#define CPU5_HRHV_VM6_PETHRESH (CPU5_HRHV_VM_PETHRESH6)

/** \brief B21C, CPU5 Virtual machine n pre-emption threshold */
#define CPU5_HRHV_VM_PETHRESH7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_VMPETHRESH*)0xF897B21Cu)
/** Alias (User Manual Name) for CPU5_HRHV_VM_PETHRESH7 */
#define CPU5_HRHV_VM7_PETHRESH (CPU5_HRHV_VM_PETHRESH7)

/** \brief C000, CPU5 HR specific data protection range 0, lower bound register */
#define CPU5_HRHV_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C000u)

/** \brief C004, CPU5 HR specific data protection range 0, upper bound register */
#define CPU5_HRHV_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C004u)

/** \brief C008, CPU5 HR specific data protection range 1, lower bound register */
#define CPU5_HRHV_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C008u)

/** \brief C00C, CPU5 HR specific data protection range 1, upper bound register */
#define CPU5_HRHV_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C00Cu)

/** \brief C010, CPU5 HR specific data protection range 2, lower bound register */
#define CPU5_HRHV_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C010u)

/** \brief C014, CPU5 HR specific data protection range 2, upper bound register */
#define CPU5_HRHV_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C014u)

/** \brief C018, CPU5 HR specific data protection range 3, lower bound register */
#define CPU5_HRHV_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C018u)

/** \brief C01C, CPU5 HR specific data protection range 3, upper bound register */
#define CPU5_HRHV_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C01Cu)

/** \brief C020, CPU5 HR specific data protection range 4, lower bound register */
#define CPU5_HRHV_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C020u)

/** \brief C024, CPU5 HR specific data protection range 4, upper bound register */
#define CPU5_HRHV_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C024u)

/** \brief C028, CPU5 HR specific data protection range 5, lower bound register */
#define CPU5_HRHV_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C028u)

/** \brief C02C, CPU5 HR specific data protection range 5, upper bound register */
#define CPU5_HRHV_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C02Cu)

/** \brief C030, CPU5 HR specific data protection range 6, lower bound register */
#define CPU5_HRHV_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C030u)

/** \brief C034, CPU5 HR specific data protection range 6, upper bound register */
#define CPU5_HRHV_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C034u)

/** \brief C038, CPU5 HR specific data protection range 7, lower bound register */
#define CPU5_HRHV_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C038u)

/** \brief C03C, CPU5 HR specific data protection range 7, upper bound register */
#define CPU5_HRHV_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C03Cu)

/** \brief C040, CPU5 HR specific data protection range 8, lower bound register */
#define CPU5_HRHV_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C040u)

/** \brief C044, CPU5 HR specific data protection range 8, upper bound register */
#define CPU5_HRHV_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C044u)

/** \brief C048, CPU5 HR specific data protection range 9, lower bound register */
#define CPU5_HRHV_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C048u)

/** \brief C04C, CPU5 HR specific data protection range 9, upper bound register */
#define CPU5_HRHV_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C04Cu)

/** \brief C050, CPU5 HR specific data protection range 10, lower bound register */
#define CPU5_HRHV_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C050u)

/** \brief C054, CPU5 HR specific data protection range 10, upper bound register */
#define CPU5_HRHV_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C054u)

/** \brief C058, CPU5 HR specific data protection range 11, lower bound register */
#define CPU5_HRHV_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C058u)

/** \brief C05C, CPU5 HR specific data protection range 11, upper bound register */
#define CPU5_HRHV_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C05Cu)

/** \brief C060, CPU5 HR specific data protection range 12, lower bound register */
#define CPU5_HRHV_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C060u)

/** \brief C064, CPU5 HR specific data protection range 12, upper bound register */
#define CPU5_HRHV_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C064u)

/** \brief C068, CPU5 HR specific data protection range 13, lower bound register */
#define CPU5_HRHV_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C068u)

/** \brief C06C, CPU5 HR specific data protection range 13, upper bound register */
#define CPU5_HRHV_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C06Cu)

/** \brief C070, CPU5 HR specific data protection range 14, lower bound register */
#define CPU5_HRHV_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C070u)

/** \brief C074, CPU5 HR specific data protection range 14, upper bound register */
#define CPU5_HRHV_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C074u)

/** \brief C078, CPU5 HR specific data protection range 15, lower bound register */
#define CPU5_HRHV_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C078u)

/** \brief C07C, CPU5 HR specific data protection range 15, upper bound register */
#define CPU5_HRHV_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C07Cu)

/** \brief C080, CPU5 HR specific data protection range 16, lower bound register */
#define CPU5_HRHV_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C080u)

/** \brief C084, CPU5 HR specific data protection range 16, upper bound register */
#define CPU5_HRHV_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C084u)

/** \brief C088, CPU5 HR specific data protection range 17, lower bound register */
#define CPU5_HRHV_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C088u)

/** \brief C08C, CPU5 HR specific data protection range 17, upper bound register */
#define CPU5_HRHV_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C08Cu)

/** \brief C090, CPU5 HR specific data protection range 18, lower bound register */
#define CPU5_HRHV_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C090u)

/** \brief C094, CPU5 HR specific data protection range 18, upper bound register */
#define CPU5_HRHV_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C094u)

/** \brief C098, CPU5 HR specific data protection range 19, lower bound register */
#define CPU5_HRHV_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C098u)

/** \brief C09C, CPU5 HR specific data protection range 19, upper bound register */
#define CPU5_HRHV_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C09Cu)

/** \brief C0A0, CPU5 HR specific data protection range 20, lower bound register */
#define CPU5_HRHV_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C0A0u)

/** \brief C0A4, CPU5 HR specific data protection range 20, upper bound register */
#define CPU5_HRHV_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C0A4u)

/** \brief C0A8, CPU5 HR specific data protection range 21, lower bound register */
#define CPU5_HRHV_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C0A8u)

/** \brief C0AC, CPU5 HR specific data protection range 21, upper bound register */
#define CPU5_HRHV_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C0ACu)

/** \brief C0B0, CPU5 HR specific data protection range 22, lower bound register */
#define CPU5_HRHV_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C0B0u)

/** \brief C0B4, CPU5 HR specific data protection range 22, upper bound register */
#define CPU5_HRHV_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C0B4u)

/** \brief C0B8, CPU5 HR specific data protection range 23, lower bound register */
#define CPU5_HRHV_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF897C0B8u)

/** \brief C0BC, CPU5 HR specific data protection range 23, upper bound register */
#define CPU5_HRHV_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF897C0BCu)

/** \brief D000, CPU5 HR specific code protection range 0, lower bound register */
#define CPU5_HRHV_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D000u)

/** \brief D004, CPU5 HR specific code protection range 0, upper bound register */
#define CPU5_HRHV_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D004u)

/** \brief D008, CPU5 HR specific code protection range 1, lower bound register */
#define CPU5_HRHV_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D008u)

/** \brief D00C, CPU5 HR specific code protection range 1, upper bound register */
#define CPU5_HRHV_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D00Cu)

/** \brief D010, CPU5 HR specific code protection range 2, lower bound register */
#define CPU5_HRHV_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D010u)

/** \brief D014, CPU5 HR specific code protection range 2, upper bound register */
#define CPU5_HRHV_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D014u)

/** \brief D018, CPU5 HR specific code protection range 3, lower bound register */
#define CPU5_HRHV_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D018u)

/** \brief D01C, CPU5 HR specific code protection range 3, upper bound register */
#define CPU5_HRHV_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D01Cu)

/** \brief D020, CPU5 HR specific code protection range 4, lower bound register */
#define CPU5_HRHV_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D020u)

/** \brief D024, CPU5 HR specific code protection range 4, upper bound register */
#define CPU5_HRHV_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D024u)

/** \brief D028, CPU5 HR specific code protection range 5, lower bound register */
#define CPU5_HRHV_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D028u)

/** \brief D02C, CPU5 HR specific code protection range 5, upper bound register */
#define CPU5_HRHV_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D02Cu)

/** \brief D030, CPU5 HR specific code protection range 6, lower bound register */
#define CPU5_HRHV_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D030u)

/** \brief D034, CPU5 HR specific code protection range 6, upper bound register */
#define CPU5_HRHV_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D034u)

/** \brief D038, CPU5 HR specific code protection range 7, lower bound register */
#define CPU5_HRHV_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D038u)

/** \brief D03C, CPU5 HR specific code protection range 7, upper bound register */
#define CPU5_HRHV_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D03Cu)

/** \brief D040, CPU5 HR specific code protection range 8, lower bound register */
#define CPU5_HRHV_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D040u)

/** \brief D044, CPU5 HR specific code protection range 8, upper bound register */
#define CPU5_HRHV_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D044u)

/** \brief D048, CPU5 HR specific code protection range 9, lower bound register */
#define CPU5_HRHV_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D048u)

/** \brief D04C, CPU5 HR specific code protection range 9, upper bound register */
#define CPU5_HRHV_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D04Cu)

/** \brief D050, CPU5 HR specific code protection range 10, lower bound register */
#define CPU5_HRHV_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D050u)

/** \brief D054, CPU5 HR specific code protection range 10, upper bound register */
#define CPU5_HRHV_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D054u)

/** \brief D058, CPU5 HR specific code protection range 11, lower bound register */
#define CPU5_HRHV_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D058u)

/** \brief D05C, CPU5 HR specific code protection range 11, upper bound register */
#define CPU5_HRHV_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D05Cu)

/** \brief D060, CPU5 HR specific code protection range 12, lower bound register */
#define CPU5_HRHV_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D060u)

/** \brief D064, CPU5 HR specific code protection range 12, upper bound register */
#define CPU5_HRHV_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D064u)

/** \brief D068, CPU5 HR specific code protection range 13, lower bound register */
#define CPU5_HRHV_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D068u)

/** \brief D06C, CPU5 HR specific code protection range 13, upper bound register */
#define CPU5_HRHV_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D06Cu)

/** \brief D070, CPU5 HR specific code protection range 14, lower bound register */
#define CPU5_HRHV_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D070u)

/** \brief D074, CPU5 HR specific code protection range 14, upper bound register */
#define CPU5_HRHV_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D074u)

/** \brief D078, CPU5 HR specific code protection range 15, lower bound register */
#define CPU5_HRHV_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF897D078u)

/** \brief D07C, CPU5 HR specific code protection range 15, upper bound register */
#define CPU5_HRHV_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF897D07Cu)

/** \brief E000, CPU5 HR specific code protection execute enable register set 0 */
#define CPU5_HRHV_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E000u)

/** \brief E004, CPU5 HR specific code protection execute enable register set 1 */
#define CPU5_HRHV_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E004u)

/** \brief E008, CPU5 HR specific code protection execute enable register set 2 */
#define CPU5_HRHV_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E008u)

/** \brief E00C, CPU5 HR specific code protection execute enable register set 3 */
#define CPU5_HRHV_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E00Cu)

/** \brief E010, CPU5 HR specific data protection read enable register set 0 */
#define CPU5_HRHV_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E010u)

/** \brief E014, CPU5 HR specific data protection read enable register set 1 */
#define CPU5_HRHV_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E014u)

/** \brief E018, CPU5 HR specific data protection read enable register set 2 */
#define CPU5_HRHV_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E018u)

/** \brief E01C, CPU5 HR specific data protection read enable register set 3 */
#define CPU5_HRHV_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E01Cu)

/** \brief E020, CPU5 HR specific data protection write enable register set 0 */
#define CPU5_HRHV_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E020u)

/** \brief E024, CPU5 HR specific data protection write enable register set 1 */
#define CPU5_HRHV_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E024u)

/** \brief E028, CPU5 HR specific data protection write enable register set 2 */
#define CPU5_HRHV_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E028u)

/** \brief E02C, CPU5 HR specific data protection write enable register set 3 */
#define CPU5_HRHV_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E02Cu)

/** \brief E040, CPU5 HR specific code protection execute enable register set 4 */
#define CPU5_HRHV_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E040u)

/** \brief E044, CPU5 HR specific code protection execute enable register set 5 */
#define CPU5_HRHV_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E044u)

/** \brief E048, CPU5 HR specific code protection execute enable register set 6 */
#define CPU5_HRHV_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E048u)

/** \brief E04C, CPU5 HR specific code protection execute enable register set 7 */
#define CPU5_HRHV_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF897E04Cu)

/** \brief E050, CPU5 HR specific data protection read enable register set 4 */
#define CPU5_HRHV_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E050u)

/** \brief E054, CPU5 HR specific data protection read enable register set 5 */
#define CPU5_HRHV_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E054u)

/** \brief E058, CPU5 HR specific data protection read enable register set 6 */
#define CPU5_HRHV_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E058u)

/** \brief E05C, CPU5 HR specific data protection read enable register set 7 */
#define CPU5_HRHV_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF897E05Cu)

/** \brief E060, CPU5 HR specific data protection write enable register set 4 */
#define CPU5_HRHV_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E060u)

/** \brief E064, CPU5 HR specific data protection write enable register set 5 */
#define CPU5_HRHV_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E064u)

/** \brief E068, CPU5 HR specific data protection write enable register set 6 */
#define CPU5_HRHV_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E068u)

/** \brief E06C, CPU5 HR specific data protection write enable register set 7 */
#define CPU5_HRHV_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF897E06Cu)

/** \brief E400, CPU5 HR specific temporal protection system control register */
#define CPU5_HRHV_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF897E400u)

/** \brief E404, CPU5 HR specific temporal protection system timer register 0 */
#define CPU5_HRHV_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF897E404u)

/** \brief E408, CPU5 HR specific temporal protection system timer register 1 */
#define CPU5_HRHV_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF897E408u)

/** \brief E40C, CPU5 HR specific temporal protection system timer register 2 */
#define CPU5_HRHV_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF897E40Cu)

/** \brief F000, CPU5 trigger event 0 */
#define CPU5_HRHV_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F000u)
/** Alias (User Manual Name) for CPU5_HRHV_TR0_EVT */
#define CPU5_HRHV_TR0EVT (CPU5_HRHV_TR0_EVT)

/** \brief F004, CPU5 trigger address 0 */
#define CPU5_HRHV_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F004u)
/** Alias (User Manual Name) for CPU5_HRHV_TR0_ADR */
#define CPU5_HRHV_TR0ADR (CPU5_HRHV_TR0_ADR)

/** \brief F008, CPU5 trigger event 1 */
#define CPU5_HRHV_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F008u)
/** Alias (User Manual Name) for CPU5_HRHV_TR1_EVT */
#define CPU5_HRHV_TR1EVT (CPU5_HRHV_TR1_EVT)

/** \brief F00C, CPU5 trigger address 1 */
#define CPU5_HRHV_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F00Cu)
/** Alias (User Manual Name) for CPU5_HRHV_TR1_ADR */
#define CPU5_HRHV_TR1ADR (CPU5_HRHV_TR1_ADR)

/** \brief F010, CPU5 trigger event 2 */
#define CPU5_HRHV_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F010u)
/** Alias (User Manual Name) for CPU5_HRHV_TR2_EVT */
#define CPU5_HRHV_TR2EVT (CPU5_HRHV_TR2_EVT)

/** \brief F014, CPU5 trigger address 2 */
#define CPU5_HRHV_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F014u)
/** Alias (User Manual Name) for CPU5_HRHV_TR2_ADR */
#define CPU5_HRHV_TR2ADR (CPU5_HRHV_TR2_ADR)

/** \brief F018, CPU5 trigger event 3 */
#define CPU5_HRHV_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F018u)
/** Alias (User Manual Name) for CPU5_HRHV_TR3_EVT */
#define CPU5_HRHV_TR3EVT (CPU5_HRHV_TR3_EVT)

/** \brief F01C, CPU5 trigger address 3 */
#define CPU5_HRHV_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F01Cu)
/** Alias (User Manual Name) for CPU5_HRHV_TR3_ADR */
#define CPU5_HRHV_TR3ADR (CPU5_HRHV_TR3_ADR)

/** \brief F020, CPU5 trigger event 4 */
#define CPU5_HRHV_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F020u)
/** Alias (User Manual Name) for CPU5_HRHV_TR4_EVT */
#define CPU5_HRHV_TR4EVT (CPU5_HRHV_TR4_EVT)

/** \brief F024, CPU5 trigger address 4 */
#define CPU5_HRHV_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F024u)
/** Alias (User Manual Name) for CPU5_HRHV_TR4_ADR */
#define CPU5_HRHV_TR4ADR (CPU5_HRHV_TR4_ADR)

/** \brief F028, CPU5 trigger event 5 */
#define CPU5_HRHV_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F028u)
/** Alias (User Manual Name) for CPU5_HRHV_TR5_EVT */
#define CPU5_HRHV_TR5EVT (CPU5_HRHV_TR5_EVT)

/** \brief F02C, CPU5 trigger address 5 */
#define CPU5_HRHV_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F02Cu)
/** Alias (User Manual Name) for CPU5_HRHV_TR5_ADR */
#define CPU5_HRHV_TR5ADR (CPU5_HRHV_TR5_ADR)

/** \brief F030, CPU5 trigger event 6 */
#define CPU5_HRHV_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F030u)
/** Alias (User Manual Name) for CPU5_HRHV_TR6_EVT */
#define CPU5_HRHV_TR6EVT (CPU5_HRHV_TR6_EVT)

/** \brief F034, CPU5 trigger address 6 */
#define CPU5_HRHV_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F034u)
/** Alias (User Manual Name) for CPU5_HRHV_TR6_ADR */
#define CPU5_HRHV_TR6ADR (CPU5_HRHV_TR6_ADR)

/** \brief F038, CPU5 trigger event 7 */
#define CPU5_HRHV_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF897F038u)
/** Alias (User Manual Name) for CPU5_HRHV_TR7_EVT */
#define CPU5_HRHV_TR7EVT (CPU5_HRHV_TR7_EVT)

/** \brief F03C, CPU5 trigger address 7 */
#define CPU5_HRHV_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF897F03Cu)
/** Alias (User Manual Name) for CPU5_HRHV_TR7_ADR */
#define CPU5_HRHV_TR7ADR (CPU5_HRHV_TR7_ADR)

/** \brief FC00, CPU5 HR specific counter control */
#define CPU5_HRHV_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF897FC00u)

/** \brief FC04, CPU5 HR specific CPU clock cycle count */
#define CPU5_HRHV_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF897FC04u)

/** \brief FC08, CPU5 HR specific instruction count */
#define CPU5_HRHV_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF897FC08u)

/** \brief FC0C, CPU5 HR specific multi-count register 1 */
#define CPU5_HRHV_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF897FC0Cu)

/** \brief FC10, CPU5 HR specific multi-count register 2 */
#define CPU5_HRHV_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF897FC10u)

/** \brief FC14, CPU5 HR specific multi-count register 3 */
#define CPU5_HRHV_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF897FC14u)

/** \brief FD00, CPU5 debug status register */
#define CPU5_HRHV_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF897FD00u)

/** \brief FD08, CPU5 external event register */
#define CPU5_HRHV_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF897FD08u)

/** \brief FD0C, CPU5 core register access event */
#define CPU5_HRHV_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF897FD0Cu)

/** \brief FD10, CPU5 software debug event */
#define CPU5_HRHV_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF897FD10u)

/** \brief FD14, CPU5 debug action configuration */
#define CPU5_HRHV_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF897FD14u)

/** \brief FD30, CPU5 trigger accumulator */
#define CPU5_HRHV_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF897FD30u)

/** \brief FD40, CPU5 debug monitor start address */
#define CPU5_HRHV_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF897FD40u)

/** \brief FD44, CPU5 debug context save area pointer */
#define CPU5_HRHV_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF897FD44u)

/** \brief FD48, CPU5 debug trap control */
#define CPU5_HRHV_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF897FD48u)

/** \brief FD4C, CPU5 debug configuration */
#define CPU5_HRHV_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF897FD4Cu)

/** \brief FD50, CPU5 trace configuration */
#define CPU5_HRHV_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF897FD50u)

/** \brief FD54, CPU5 trace filter */
#define CPU5_HRHV_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF897FD54u)

/** \brief FD58, CPU5 trace bandwidth limiter */
#define CPU5_HRHV_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF897FD58u)

/** \brief FD60, CPU5 MCDS performance counter control register */
#define CPU5_HRHV_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF897FD60u)

/** \brief FE00, CPU5 previous context information register */
#define CPU5_HRHV_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF897FE00u)

/** \brief FE04, CPU5 HR specific program status word */
#define CPU5_HRHV_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF897FE04u)

/** \brief FE08, CPU5 program counter */
#define CPU5_HRHV_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF897FE08u)

/** \brief FE14, CPU5 HR specific core configuration register */
#define CPU5_HRHV_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF897FE14u)

/** \brief FE18, CPU5 identification register */
#define CPU5_HRHV_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF897FE18u)

/** \brief FE1C, CPU5 core identification register */
#define CPU5_HRHV_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF897FE1Cu)

/** \brief FE20, CPU5 HR specific base interrupt vector table pointer */
#define CPU5_HRHV_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF897FE20u)

/** \brief FE24, CPU5 HR specific base trap vector table pointer */
#define CPU5_HRHV_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF897FE24u)

/** \brief FE28, CPU5 HR specific interrupt stack pointer */
#define CPU5_HRHV_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF897FE28u)

/** \brief FE2C, CPU5 interrupt control register */
#define CPU5_HRHV_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF897FE2Cu)

/** \brief FE34, CPU5 previous PRS */
#define CPU5_HRHV_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF897FE34u)

/** \brief FE38, CPU5 HR specific free CSA list head pointer */
#define CPU5_HRHV_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF897FE38u)

/** \brief FE3C, CPU5 HR specific free CSA list limit pointer */
#define CPU5_HRHV_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF897FE3Cu)

/** \brief FE40, CPU5 software identification */
#define CPU5_HRHV_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF897FE40u)

/** \brief FE50, CPU5 customer ID register */
#define CPU5_HRHV_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF897FE50u)

/** \brief FE60, CPU5 core boot configuration register */
#define CPU5_HRHV_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF897FE60u)

/** \brief FE64, CPU5 lockstep control register */
#define CPU5_HRHV_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF897FE64u)

/** \brief FE68, CPU5 clock control register */
#define CPU5_HRHV_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF897FE68u)

/** \brief FE6C, CPU5 hardware configuration  */
#define CPU5_HRHV_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF897FE6Cu)

/** \brief FF80, CPU5 HR specific address general purpose register 0 */
#define CPU5_HRHV_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF897FF80u)

/** \brief FF84, CPU5 HR specific address general purpose register 1 */
#define CPU5_HRHV_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF897FF84u)

/** \brief FFA0, CPU5 HR specific address general purpose register 8 */
#define CPU5_HRHV_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF897FFA0u)

/** \brief FFA4, CPU5 HR specific address general purpose register 9 */
#define CPU5_HRHV_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF897FFA4u)

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpu_Registers_Cfg_Cpucs
 * \{  */
/** \brief 0, CPUcs system timer clock control register */
#define CPUCS_STM_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CLC*)0xF8980000u)

/** \brief 4, CPUcs OCDS control and status register */
#define CPUCS_STM_OCS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_OCS*)0xF8980004u)

/** \brief 20, CPUcs system timer absolute timer */
#define CPUCS_STM_ABS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ABS*)0xF8980020u)

/** \brief 120, CPUcs system timer compare register 0 */
#define CPUCS_STM_CMP0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8980120u)

/** \brief 124, CPUcs system timer compare register 1 */
#define CPUCS_STM_CMP1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMP*)0xF8980124u)

/** \brief 128, CPUcs system timer compare match control register */
#define CPUCS_STM_CMCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_CMCON*)0xF8980128u)

/** \brief 12C, CPUcs system timer interrupt control register */
#define CPUCS_STM_STM_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ICR*)0xF898012Cu)
/** Alias (User Manual Name) for CPUCS_STM_STM_ICR */
#define CPUCS_STM_ICR (CPUCS_STM_STM_ICR)

/** \brief 130, CPUcs system timer interrupt set/clear register */
#define CPUCS_STM_ISCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISCR*)0xF8980130u)

/** \brief 134, CPUcs system timer interrupt status register */
#define CPUCS_STM_ISR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_ISR*)0xF8980134u)

/** \brief 138, CPUcs system timer relative timer */
#define CPUCS_STM_RELTIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_STM_REL*)0xF8980138u)

/** \brief D000, CPUcs reset register 0 */
#define CPUCS_KRST0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST0*)0xF898D000u)

/** \brief D004, CPUcs reset register 1 */
#define CPUCS_KRST1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRST1*)0xF898D004u)

/** \brief D008, CPUcs reset clear register */
#define CPUCS_KRSTCLR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_KRSTCLR*)0xF898D008u)

/** \brief 8, CPUcs PROTSPR register safe endinit */
#define CPUCS_PROTSPRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT_SEL16*)0xF898E008u)

/** \brief 20, CPUcs shadow SPR, write access enable register A */
#define CPUCS_ACCENSPRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF898E020u)

/** \brief 24, CPUcs shadow SPR, write access enable register B */
#define CPUCS_ACCENSPRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF898E024u)

/** \brief 28, CPUcs shadow SPR, read access enable register A */
#define CPUCS_ACCENSPRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF898E028u)

/** \brief 2C, CPUcs shadow SPR, read access enable register B */
#define CPUCS_ACCENSPRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF898E02Cu)

/** \brief 30, CPUcs shadow SPR, VM access enable register */
#define CPUCS_ACCENSPRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF898E030u)

/** \brief 34, CPUcs shadow SPR, PRS access enable register */
#define CPUCS_ACCENSPRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF898E034u)

/** \brief 38, CPUcs shadow SPR, region lower address register */
#define CPUCS_ACCENSPRCFG_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNLA*)0xF898E038u)

/** \brief 3C, CPUcs shadow SPR, region upper address register */
#define CPUCS_ACCENSPRCFG_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RGNUA*)0xF898E03Cu)

/** \brief 80, CPUcs PROTSFR register endinit */
#define CPUCS_PROTSFRE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF898E080u)

/** \brief 88, CPUcs PROTSFR register safe endinit */
#define CPUCS_PROTSFRSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF898E088u)

/** \brief A0, CPUcs shadow SFR, write access enable register A */
#define CPUCS_ACCENSFRCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF898E0A0u)

/** \brief A4, CPUcs shadow SFR, write access enable register B */
#define CPUCS_ACCENSFRCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF898E0A4u)

/** \brief A8, CPUcs shadow SFR, read access enable register A */
#define CPUCS_ACCENSFRCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF898E0A8u)

/** \brief AC, CPUcs shadow SFR, read access enable register B */
#define CPUCS_ACCENSFRCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF898E0ACu)

/** \brief B0, CPUcs shadow SFR, VM access enable register */
#define CPUCS_ACCENSFRCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF898E0B0u)

/** \brief B4, CPUcs shadow SFR, PRS access enable register */
#define CPUCS_ACCENSFRCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF898E0B4u)

/** \brief C0, CPUcs PROTRST register endinit */
#define CPUCS_PROTRSTE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROT*)0xF898E0C0u)

/** \brief D8, CPUcs PROTSTM Register Safe Endinit */
#define CPUCS_PROTSTMSE /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PROTSTMSE*)0xF898E0D8u)

/** \brief E0, CPUcs shadow STM, write access enable register A */
#define CPUCS_ACCENSTMCFG_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRA*)0xF898E0E0u)

/** \brief E4, CPUcs shadow STM, write access enable register B */
#define CPUCS_ACCENSTMCFG_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_WRB_SRI*)0xF898E0E4u)

/** \brief E8, CPUcs shadow STM, read access enable register A */
#define CPUCS_ACCENSTMCFG_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDA*)0xF898E0E8u)

/** \brief EC, CPUcs shadow STM, read access enable register B */
#define CPUCS_ACCENSTMCFG_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_RDB_SRI*)0xF898E0ECu)

/** \brief F0, CPUcs shadow STM, VM access enable register */
#define CPUCS_ACCENSTMCFG_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_VM*)0xF898E0F0u)

/** \brief F4, CPUcs shadow STM, PRS access enable register */
#define CPUCS_ACCENSTMCFG_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ACCEN_PRS*)0xF898E0F4u)

/** \brief 200, CPUcs SPR range 0, write access enable register A */
#define CPUCS_ACCENSPR0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E200u)

/** \brief 204, CPUcs SPR range 0, write access enable register B */
#define CPUCS_ACCENSPR0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E204u)

/** \brief 208, CPUcs SPR range 0, read access enable register A */
#define CPUCS_ACCENSPR0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E208u)

/** \brief 20C, CPUcs SPR range 0, read access enable register B */
#define CPUCS_ACCENSPR0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E20Cu)

/** \brief 210, CPUcs SPR range 0, VM access enable register */
#define CPUCS_ACCENSPR0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E210u)

/** \brief 214, CPUcs SPR range 0, PRS access enable register */
#define CPUCS_ACCENSPR0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E214u)

/** \brief 218, CPUcs SPR range 0, region lower address register */
#define CPUCS_ACCENSPR0_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E218u)

/** \brief 21C, CPUcs SPR range 0, region upper address register */
#define CPUCS_ACCENSPR0_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E21Cu)

/** \brief 220, CPUcs SPR range 1, write access enable register A */
#define CPUCS_ACCENSPR1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E220u)

/** \brief 224, CPUcs SPR range 1, write access enable register B */
#define CPUCS_ACCENSPR1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E224u)

/** \brief 228, CPUcs SPR range 1, read access enable register A */
#define CPUCS_ACCENSPR1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E228u)

/** \brief 22C, CPUcs SPR range 1, read access enable register B */
#define CPUCS_ACCENSPR1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E22Cu)

/** \brief 230, CPUcs SPR range 1, VM access enable register */
#define CPUCS_ACCENSPR1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E230u)

/** \brief 234, CPUcs SPR range 1, PRS access enable register */
#define CPUCS_ACCENSPR1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E234u)

/** \brief 238, CPUcs SPR range 1, region lower address register */
#define CPUCS_ACCENSPR1_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E238u)

/** \brief 23C, CPUcs SPR range 1, region upper address register */
#define CPUCS_ACCENSPR1_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E23Cu)

/** \brief 240, CPUcs SPR range 2, write access enable register A */
#define CPUCS_ACCENSPR2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E240u)

/** \brief 244, CPUcs SPR range 2, write access enable register B */
#define CPUCS_ACCENSPR2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E244u)

/** \brief 248, CPUcs SPR range 2, read access enable register A */
#define CPUCS_ACCENSPR2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E248u)

/** \brief 24C, CPUcs SPR range 2, read access enable register B */
#define CPUCS_ACCENSPR2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E24Cu)

/** \brief 250, CPUcs SPR range 2, VM access enable register */
#define CPUCS_ACCENSPR2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E250u)

/** \brief 254, CPUcs SPR range 2, PRS access enable register */
#define CPUCS_ACCENSPR2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E254u)

/** \brief 258, CPUcs SPR range 2, region lower address register */
#define CPUCS_ACCENSPR2_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E258u)

/** \brief 25C, CPUcs SPR range 2, region upper address register */
#define CPUCS_ACCENSPR2_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E25Cu)

/** \brief 260, CPUcs SPR range 3, write access enable register A */
#define CPUCS_ACCENSPR3_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E260u)

/** \brief 264, CPUcs SPR range 3, write access enable register B */
#define CPUCS_ACCENSPR3_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E264u)

/** \brief 268, CPUcs SPR range 3, read access enable register A */
#define CPUCS_ACCENSPR3_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E268u)

/** \brief 26C, CPUcs SPR range 3, read access enable register B */
#define CPUCS_ACCENSPR3_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E26Cu)

/** \brief 270, CPUcs SPR range 3, VM access enable register */
#define CPUCS_ACCENSPR3_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E270u)

/** \brief 274, CPUcs SPR range 3, PRS access enable register */
#define CPUCS_ACCENSPR3_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E274u)

/** \brief 278, CPUcs SPR range 3, region lower address register */
#define CPUCS_ACCENSPR3_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E278u)

/** \brief 27C, CPUcs SPR range 3, region upper address register */
#define CPUCS_ACCENSPR3_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E27Cu)

/** \brief 280, CPUcs SPR range 4, write access enable register A */
#define CPUCS_ACCENSPR4_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E280u)

/** \brief 284, CPUcs SPR range 4, write access enable register B */
#define CPUCS_ACCENSPR4_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E284u)

/** \brief 288, CPUcs SPR range 4, read access enable register A */
#define CPUCS_ACCENSPR4_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E288u)

/** \brief 28C, CPUcs SPR range 4, read access enable register B */
#define CPUCS_ACCENSPR4_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E28Cu)

/** \brief 290, CPUcs SPR range 4, VM access enable register */
#define CPUCS_ACCENSPR4_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E290u)

/** \brief 294, CPUcs SPR range 4, PRS access enable register */
#define CPUCS_ACCENSPR4_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E294u)

/** \brief 298, CPUcs SPR range 4, region lower address register */
#define CPUCS_ACCENSPR4_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E298u)

/** \brief 29C, CPUcs SPR range 4, region upper address register */
#define CPUCS_ACCENSPR4_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E29Cu)

/** \brief 2A0, CPUcs SPR range 5, write access enable register A */
#define CPUCS_ACCENSPR5_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E2A0u)

/** \brief 2A4, CPUcs SPR range 5, write access enable register B */
#define CPUCS_ACCENSPR5_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E2A4u)

/** \brief 2A8, CPUcs SPR range 5, read access enable register A */
#define CPUCS_ACCENSPR5_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E2A8u)

/** \brief 2AC, CPUcs SPR range 5, read access enable register B */
#define CPUCS_ACCENSPR5_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E2ACu)

/** \brief 2B0, CPUcs SPR range 5, VM access enable register */
#define CPUCS_ACCENSPR5_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E2B0u)

/** \brief 2B4, CPUcs SPR range 5, PRS access enable register */
#define CPUCS_ACCENSPR5_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E2B4u)

/** \brief 2B8, CPUcs SPR range 5, region lower address register */
#define CPUCS_ACCENSPR5_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E2B8u)

/** \brief 2BC, CPUcs SPR range 5, region upper address register */
#define CPUCS_ACCENSPR5_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E2BCu)

/** \brief 2C0, CPUcs SPR range 6, write access enable register A */
#define CPUCS_ACCENSPR6_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E2C0u)

/** \brief 2C4, CPUcs SPR range 6, write access enable register B */
#define CPUCS_ACCENSPR6_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E2C4u)

/** \brief 2C8, CPUcs SPR range 6, read access enable register A */
#define CPUCS_ACCENSPR6_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E2C8u)

/** \brief 2CC, CPUcs SPR range 6, read access enable register B */
#define CPUCS_ACCENSPR6_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E2CCu)

/** \brief 2D0, CPUcs SPR range 6, VM access enable register */
#define CPUCS_ACCENSPR6_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E2D0u)

/** \brief 2D4, CPUcs SPR range 6, PRS access enable register */
#define CPUCS_ACCENSPR6_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E2D4u)

/** \brief 2D8, CPUcs SPR range 6, region lower address register */
#define CPUCS_ACCENSPR6_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E2D8u)

/** \brief 2DC, CPUcs SPR range 6, region upper address register */
#define CPUCS_ACCENSPR6_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E2DCu)

/** \brief 2E0, CPUcs SPR range 7, write access enable register A */
#define CPUCS_ACCENSPR7_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E2E0u)

/** \brief 2E4, CPUcs SPR range 7, write access enable register B */
#define CPUCS_ACCENSPR7_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E2E4u)

/** \brief 2E8, CPUcs SPR range 7, read access enable register A */
#define CPUCS_ACCENSPR7_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E2E8u)

/** \brief 2EC, CPUcs SPR range 7, read access enable register B */
#define CPUCS_ACCENSPR7_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E2ECu)

/** \brief 2F0, CPUcs SPR range 7, VM access enable register */
#define CPUCS_ACCENSPR7_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E2F0u)

/** \brief 2F4, CPUcs SPR range 7, PRS access enable register */
#define CPUCS_ACCENSPR7_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E2F4u)

/** \brief 2F8, CPUcs SPR range 7, region lower address register */
#define CPUCS_ACCENSPR7_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E2F8u)

/** \brief 2FC, CPUcs SPR range 7, region upper address register */
#define CPUCS_ACCENSPR7_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E2FCu)

/** \brief 300, CPUcs SPR range 8, write access enable register A */
#define CPUCS_ACCENSPR8_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E300u)

/** \brief 304, CPUcs SPR range 8, write access enable register B */
#define CPUCS_ACCENSPR8_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E304u)

/** \brief 308, CPUcs SPR range 8, read access enable register A */
#define CPUCS_ACCENSPR8_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E308u)

/** \brief 30C, CPUcs SPR range 8, read access enable register B */
#define CPUCS_ACCENSPR8_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E30Cu)

/** \brief 310, CPUcs SPR range 8, VM access enable register */
#define CPUCS_ACCENSPR8_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E310u)

/** \brief 314, CPUcs SPR range 8, PRS access enable register */
#define CPUCS_ACCENSPR8_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E314u)

/** \brief 318, CPUcs SPR range 8, region lower address register */
#define CPUCS_ACCENSPR8_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E318u)

/** \brief 31C, CPUcs SPR range 8, region upper address register */
#define CPUCS_ACCENSPR8_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E31Cu)

/** \brief 320, CPUcs SPR range 9, write access enable register A */
#define CPUCS_ACCENSPR9_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E320u)

/** \brief 324, CPUcs SPR range 9, write access enable register B */
#define CPUCS_ACCENSPR9_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E324u)

/** \brief 328, CPUcs SPR range 9, read access enable register A */
#define CPUCS_ACCENSPR9_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E328u)

/** \brief 32C, CPUcs SPR range 9, read access enable register B */
#define CPUCS_ACCENSPR9_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E32Cu)

/** \brief 330, CPUcs SPR range 9, VM access enable register */
#define CPUCS_ACCENSPR9_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E330u)

/** \brief 334, CPUcs SPR range 9, PRS access enable register */
#define CPUCS_ACCENSPR9_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E334u)

/** \brief 338, CPUcs SPR range 9, region lower address register */
#define CPUCS_ACCENSPR9_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E338u)

/** \brief 33C, CPUcs SPR range 9, region upper address register */
#define CPUCS_ACCENSPR9_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E33Cu)

/** \brief 340, CPUcs SPR range 10, write access enable register A */
#define CPUCS_ACCENSPR10_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E340u)

/** \brief 344, CPUcs SPR range 10, write access enable register B */
#define CPUCS_ACCENSPR10_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E344u)

/** \brief 348, CPUcs SPR range 10, read access enable register A */
#define CPUCS_ACCENSPR10_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E348u)

/** \brief 34C, CPUcs SPR range 10, read access enable register B */
#define CPUCS_ACCENSPR10_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E34Cu)

/** \brief 350, CPUcs SPR range 10, VM access enable register */
#define CPUCS_ACCENSPR10_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E350u)

/** \brief 354, CPUcs SPR range 10, PRS access enable register */
#define CPUCS_ACCENSPR10_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E354u)

/** \brief 358, CPUcs SPR range 10, region lower address register */
#define CPUCS_ACCENSPR10_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E358u)

/** \brief 35C, CPUcs SPR range 10, region upper address register */
#define CPUCS_ACCENSPR10_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E35Cu)

/** \brief 360, CPUcs SPR range 11, write access enable register A */
#define CPUCS_ACCENSPR11_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E360u)

/** \brief 364, CPUcs SPR range 11, write access enable register B */
#define CPUCS_ACCENSPR11_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E364u)

/** \brief 368, CPUcs SPR range 11, read access enable register A */
#define CPUCS_ACCENSPR11_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E368u)

/** \brief 36C, CPUcs SPR range 11, read access enable register B */
#define CPUCS_ACCENSPR11_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E36Cu)

/** \brief 370, CPUcs SPR range 11, VM access enable register */
#define CPUCS_ACCENSPR11_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E370u)

/** \brief 374, CPUcs SPR range 11, PRS access enable register */
#define CPUCS_ACCENSPR11_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E374u)

/** \brief 378, CPUcs SPR range 11, region lower address register */
#define CPUCS_ACCENSPR11_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E378u)

/** \brief 37C, CPUcs SPR range 11, region upper address register */
#define CPUCS_ACCENSPR11_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E37Cu)

/** \brief 380, CPUcs SPR range 12, write access enable register A */
#define CPUCS_ACCENSPR12_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E380u)

/** \brief 384, CPUcs SPR range 12, write access enable register B */
#define CPUCS_ACCENSPR12_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E384u)

/** \brief 388, CPUcs SPR range 12, read access enable register A */
#define CPUCS_ACCENSPR12_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E388u)

/** \brief 38C, CPUcs SPR range 12, read access enable register B */
#define CPUCS_ACCENSPR12_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E38Cu)

/** \brief 390, CPUcs SPR range 12, VM access enable register */
#define CPUCS_ACCENSPR12_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E390u)

/** \brief 394, CPUcs SPR range 12, PRS access enable register */
#define CPUCS_ACCENSPR12_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E394u)

/** \brief 398, CPUcs SPR range 12, region lower address register */
#define CPUCS_ACCENSPR12_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E398u)

/** \brief 39C, CPUcs SPR range 12, region upper address register */
#define CPUCS_ACCENSPR12_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E39Cu)

/** \brief 3A0, CPUcs SPR range 13, write access enable register A */
#define CPUCS_ACCENSPR13_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E3A0u)

/** \brief 3A4, CPUcs SPR range 13, write access enable register B */
#define CPUCS_ACCENSPR13_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E3A4u)

/** \brief 3A8, CPUcs SPR range 13, read access enable register A */
#define CPUCS_ACCENSPR13_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E3A8u)

/** \brief 3AC, CPUcs SPR range 13, read access enable register B */
#define CPUCS_ACCENSPR13_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E3ACu)

/** \brief 3B0, CPUcs SPR range 13, VM access enable register */
#define CPUCS_ACCENSPR13_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E3B0u)

/** \brief 3B4, CPUcs SPR range 13, PRS access enable register */
#define CPUCS_ACCENSPR13_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E3B4u)

/** \brief 3B8, CPUcs SPR range 13, region lower address register */
#define CPUCS_ACCENSPR13_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E3B8u)

/** \brief 3BC, CPUcs SPR range 13, region upper address register */
#define CPUCS_ACCENSPR13_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E3BCu)

/** \brief 3C0, CPUcs SPR range 14, write access enable register A */
#define CPUCS_ACCENSPR14_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E3C0u)

/** \brief 3C4, CPUcs SPR range 14, write access enable register B */
#define CPUCS_ACCENSPR14_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E3C4u)

/** \brief 3C8, CPUcs SPR range 14, read access enable register A */
#define CPUCS_ACCENSPR14_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E3C8u)

/** \brief 3CC, CPUcs SPR range 14, read access enable register B */
#define CPUCS_ACCENSPR14_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E3CCu)

/** \brief 3D0, CPUcs SPR range 14, VM access enable register */
#define CPUCS_ACCENSPR14_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E3D0u)

/** \brief 3D4, CPUcs SPR range 14, PRS access enable register */
#define CPUCS_ACCENSPR14_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E3D4u)

/** \brief 3D8, CPUcs SPR range 14, region lower address register */
#define CPUCS_ACCENSPR14_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E3D8u)

/** \brief 3DC, CPUcs SPR range 14, region upper address register */
#define CPUCS_ACCENSPR14_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E3DCu)

/** \brief 3E0, CPUcs SPR range 15, write access enable register A */
#define CPUCS_ACCENSPR15_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E3E0u)

/** \brief 3E4, CPUcs SPR range 15, write access enable register B */
#define CPUCS_ACCENSPR15_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E3E4u)

/** \brief 3E8, CPUcs SPR range 15, read access enable register A */
#define CPUCS_ACCENSPR15_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E3E8u)

/** \brief 3EC, CPUcs SPR range 15, read access enable register B */
#define CPUCS_ACCENSPR15_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E3ECu)

/** \brief 3F0, CPUcs SPR range 15, VM access enable register */
#define CPUCS_ACCENSPR15_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E3F0u)

/** \brief 3F4, CPUcs SPR range 15, PRS access enable register */
#define CPUCS_ACCENSPR15_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E3F4u)

/** \brief 3F8, CPUcs SPR range 15, region lower address register */
#define CPUCS_ACCENSPR15_RGNLA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNLA*)0xF898E3F8u)

/** \brief 3FC, CPUcs SPR range 15, region upper address register */
#define CPUCS_ACCENSPR15_RGNUA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RGNUA*)0xF898E3FCu)

/** \brief 600, CPUcs SFR, write access enable register A */
#define CPUCS_ACCENSFR_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E600u)

/** \brief 604, CPUcs SFR, write access enable register B */
#define CPUCS_ACCENSFR_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E604u)

/** \brief 608, CPUcs SFR, read access enable register A */
#define CPUCS_ACCENSFR_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E608u)

/** \brief 60C, CPUcs SFR, read access enable register B */
#define CPUCS_ACCENSFR_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E60Cu)

/** \brief 610, CPUcs SFR, VM access enable register */
#define CPUCS_ACCENSFR_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E610u)

/** \brief 614, CPUcs SFR, PRS access enable register */
#define CPUCS_ACCENSFR_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E614u)

/** \brief 720, CPUcs STM, write access enable register A */
#define CPUCS_ACCENSTM_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRA*)0xF898E720u)

/** \brief 724, CPUcs STM, write access enable register B */
#define CPUCS_ACCENSTM_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_WRB_SRI*)0xF898E724u)

/** \brief 728, CPUcs STM, read access enable register A */
#define CPUCS_ACCENSTM_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDA*)0xF898E728u)

/** \brief 72C, CPUcs STM, read access enable register B */
#define CPUCS_ACCENSTM_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_RDB_SRI*)0xF898E72Cu)

/** \brief 730, CPUcs STM, VM access enable register */
#define CPUCS_ACCENSTM_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_VM*)0xF898E730u)

/** \brief 734, CPUcs STM, PRS access enable register */
#define CPUCS_ACCENSTM_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_RO_ACCEN_PRS*)0xF898E734u)

/** \brief 1030, CPUcs SRI error generation register */
#define CPUCS_HRA_SEGEN /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SEGEN*)0xF8991030u)

/** \brief 1040, CPUcs lockstep test register */
#define CPUCS_HRA_LCLTEST /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLTEST*)0xF8991040u)

/** \brief 8100, CPUcs data access cacheability register */
#define CPUCS_HRA_PMA0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA0*)0xF8998100u)

/** \brief 8104, CPUcs code access cacheability register */
#define CPUCS_HRA_PMA1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA1*)0xF8998104u)

/** \brief 8108, CPUcs peripheral space identifier register */
#define CPUCS_HRA_PMA2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PMA2*)0xF8998108u)

/** \brief 9000, CPUcs data control register 2 */
#define CPUCS_HRA_DCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON2*)0xF8999000u)

/** \brief 9008, CPUcs data control register 1 */
#define CPUCS_HRA_DCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON1*)0xF8999008u)

/** \brief 900C, CPUcs SIST mode access control register */
#define CPUCS_HRA_SMACON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SMACON*)0xF899900Cu)

/** \brief 9010, CPUcs HR specific data synchronous trap register */
#define CPUCS_HRA_DSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DSTR*)0xF8999010u)

/** \brief 9018, CPUcs HR specific data asynchronous trap register */
#define CPUCS_HRA_DATR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DATR*)0xF8999018u)

/** \brief 901C, CPUcs HR specific data error address register */
#define CPUCS_HRA_DEADD /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DEADD*)0xF899901Cu)

/** \brief 9020, CPUcs data integrity error address register */
#define CPUCS_HRA_DIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8999020u)

/** \brief 9024, CPUcs data integrity error trap register */
#define CPUCS_HRA_DIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DIETR*)0xF8999024u)

/** \brief 9040, CPUcs data memory control register */
#define CPUCS_HRA_DCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCON0*)0xF8999040u)

/** \brief 9200, CPUcs HR specific program synchronous trap register */
#define CPUCS_HRA_PSTR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSTR*)0xF8999200u)

/** \brief 9204, CPUcs program control 1 */
#define CPUCS_HRA_PCON1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON1*)0xF8999204u)

/** \brief 9208, CPUcs program control 2 */
#define CPUCS_HRA_PCON2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON2*)0xF8999208u)

/** \brief 920C, CPUcs program control 0 */
#define CPUCS_HRA_PCON0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCON0*)0xF899920Cu)

/** \brief 9210, CPUcs HR specific program integrity error address register */
#define CPUCS_HRA_PIEAR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPIEAR*)0xF8999210u)

/** \brief 9214, CPUcs HR specific program integrity error trap register */
#define CPUCS_HRA_PIETR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PIETR*)0xF8999214u)

/** \brief 9400, CPUcs compatibility control register */
#define CPUCS_HRA_COMPAT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_COMPAT*)0xF8999400u)

/** \brief A000, CPUcs HR specific trap control register */
#define CPUCS_HRA_FPU_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CON*)0xF899A000u)

/** \brief A004, CPUcs HR specific trapping instruction program counter register */
#define CPUCS_HRA_FPU_TRAP_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FPUPC*)0xF899A004u)

/** \brief A008, CPUcs HR specific trapping instruction opcode register */
#define CPUCS_HRA_FPU_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF899A008u)

/** \brief A010, CPUcs HR specific trapping instruction operand register */
#define CPUCS_HRA_FPU_TRAP_SRC1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_L*)0xF899A010u)

/** \brief A014, CPUcs HR specific trapping instruction operand register */
#define CPUCS_HRA_FPU_TRAP_SRC1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC1_U*)0xF899A014u)

/** \brief A018, CPUcs HR specific trapping instruction operand register */
#define CPUCS_HRA_FPU_TRAP_SRC2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_L*)0xF899A018u)

/** \brief A01C, CPUcs HR specific trapping instruction operand register */
#define CPUCS_HRA_FPU_TRAP_SRC2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC2_U*)0xF899A01Cu)

/** \brief A020, CPUcs HR specific trapping instruction operand register */
#define CPUCS_HRA_FPU_TRAP_SRC3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_L*)0xF899A020u)

/** \brief A024, CPUcs HR specific trapping instruction operand register */
#define CPUCS_HRA_FPU_TRAP_SRC3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SRC3_U*)0xF899A024u)

/** \brief A030, CPUcs HR specific synchronous trap control register */
#define CPUCS_HRA_FPU_SYNC_TRAP_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SYNCCON*)0xF899A030u)

/** \brief A034, CPUcs HR specific trapping instruction opcode register */
#define CPUCS_HRA_FPU_SYNC_TRAP_OPC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_OPC*)0xF899A034u)

/** \brief C000, CPUcs HR specific data protection range 0, lower bound register */
#define CPUCS_HRA_DPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C000u)

/** \brief C004, CPUcs HR specific data protection range 0, upper bound register */
#define CPUCS_HRA_DPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C004u)

/** \brief C008, CPUcs HR specific data protection range 1, lower bound register */
#define CPUCS_HRA_DPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C008u)

/** \brief C00C, CPUcs HR specific data protection range 1, upper bound register */
#define CPUCS_HRA_DPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C00Cu)

/** \brief C010, CPUcs HR specific data protection range 2, lower bound register */
#define CPUCS_HRA_DPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C010u)

/** \brief C014, CPUcs HR specific data protection range 2, upper bound register */
#define CPUCS_HRA_DPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C014u)

/** \brief C018, CPUcs HR specific data protection range 3, lower bound register */
#define CPUCS_HRA_DPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C018u)

/** \brief C01C, CPUcs HR specific data protection range 3, upper bound register */
#define CPUCS_HRA_DPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C01Cu)

/** \brief C020, CPUcs HR specific data protection range 4, lower bound register */
#define CPUCS_HRA_DPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C020u)

/** \brief C024, CPUcs HR specific data protection range 4, upper bound register */
#define CPUCS_HRA_DPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C024u)

/** \brief C028, CPUcs HR specific data protection range 5, lower bound register */
#define CPUCS_HRA_DPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C028u)

/** \brief C02C, CPUcs HR specific data protection range 5, upper bound register */
#define CPUCS_HRA_DPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C02Cu)

/** \brief C030, CPUcs HR specific data protection range 6, lower bound register */
#define CPUCS_HRA_DPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C030u)

/** \brief C034, CPUcs HR specific data protection range 6, upper bound register */
#define CPUCS_HRA_DPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C034u)

/** \brief C038, CPUcs HR specific data protection range 7, lower bound register */
#define CPUCS_HRA_DPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C038u)

/** \brief C03C, CPUcs HR specific data protection range 7, upper bound register */
#define CPUCS_HRA_DPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C03Cu)

/** \brief C040, CPUcs HR specific data protection range 8, lower bound register */
#define CPUCS_HRA_DPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C040u)

/** \brief C044, CPUcs HR specific data protection range 8, upper bound register */
#define CPUCS_HRA_DPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C044u)

/** \brief C048, CPUcs HR specific data protection range 9, lower bound register */
#define CPUCS_HRA_DPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C048u)

/** \brief C04C, CPUcs HR specific data protection range 9, upper bound register */
#define CPUCS_HRA_DPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C04Cu)

/** \brief C050, CPUcs HR specific data protection range 10, lower bound register */
#define CPUCS_HRA_DPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C050u)

/** \brief C054, CPUcs HR specific data protection range 10, upper bound register */
#define CPUCS_HRA_DPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C054u)

/** \brief C058, CPUcs HR specific data protection range 11, lower bound register */
#define CPUCS_HRA_DPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C058u)

/** \brief C05C, CPUcs HR specific data protection range 11, upper bound register */
#define CPUCS_HRA_DPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C05Cu)

/** \brief C060, CPUcs HR specific data protection range 12, lower bound register */
#define CPUCS_HRA_DPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C060u)

/** \brief C064, CPUcs HR specific data protection range 12, upper bound register */
#define CPUCS_HRA_DPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C064u)

/** \brief C068, CPUcs HR specific data protection range 13, lower bound register */
#define CPUCS_HRA_DPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C068u)

/** \brief C06C, CPUcs HR specific data protection range 13, upper bound register */
#define CPUCS_HRA_DPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C06Cu)

/** \brief C070, CPUcs HR specific data protection range 14, lower bound register */
#define CPUCS_HRA_DPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C070u)

/** \brief C074, CPUcs HR specific data protection range 14, upper bound register */
#define CPUCS_HRA_DPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C074u)

/** \brief C078, CPUcs HR specific data protection range 15, lower bound register */
#define CPUCS_HRA_DPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C078u)

/** \brief C07C, CPUcs HR specific data protection range 15, upper bound register */
#define CPUCS_HRA_DPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C07Cu)

/** \brief C080, CPUcs HR specific data protection range 16, lower bound register */
#define CPUCS_HRA_DPR16_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C080u)

/** \brief C084, CPUcs HR specific data protection range 16, upper bound register */
#define CPUCS_HRA_DPR16_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C084u)

/** \brief C088, CPUcs HR specific data protection range 17, lower bound register */
#define CPUCS_HRA_DPR17_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C088u)

/** \brief C08C, CPUcs HR specific data protection range 17, upper bound register */
#define CPUCS_HRA_DPR17_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C08Cu)

/** \brief C090, CPUcs HR specific data protection range 18, lower bound register */
#define CPUCS_HRA_DPR18_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C090u)

/** \brief C094, CPUcs HR specific data protection range 18, upper bound register */
#define CPUCS_HRA_DPR18_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C094u)

/** \brief C098, CPUcs HR specific data protection range 19, lower bound register */
#define CPUCS_HRA_DPR19_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C098u)

/** \brief C09C, CPUcs HR specific data protection range 19, upper bound register */
#define CPUCS_HRA_DPR19_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C09Cu)

/** \brief C0A0, CPUcs HR specific data protection range 20, lower bound register */
#define CPUCS_HRA_DPR20_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C0A0u)

/** \brief C0A4, CPUcs HR specific data protection range 20, upper bound register */
#define CPUCS_HRA_DPR20_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C0A4u)

/** \brief C0A8, CPUcs HR specific data protection range 21, lower bound register */
#define CPUCS_HRA_DPR21_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C0A8u)

/** \brief C0AC, CPUcs HR specific data protection range 21, upper bound register */
#define CPUCS_HRA_DPR21_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C0ACu)

/** \brief C0B0, CPUcs HR specific data protection range 22, lower bound register */
#define CPUCS_HRA_DPR22_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C0B0u)

/** \brief C0B4, CPUcs HR specific data protection range 22, upper bound register */
#define CPUCS_HRA_DPR22_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C0B4u)

/** \brief C0B8, CPUcs HR specific data protection range 23, lower bound register */
#define CPUCS_HRA_DPR23_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_L*)0xF899C0B8u)

/** \brief C0BC, CPUcs HR specific data protection range 23, upper bound register */
#define CPUCS_HRA_DPR23_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPR_U*)0xF899C0BCu)

/** \brief D000, CPUcs HR specific code protection range 0, lower bound register */
#define CPUCS_HRA_CPR0_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D000u)

/** \brief D004, CPUcs HR specific code protection range 0, upper bound register */
#define CPUCS_HRA_CPR0_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D004u)

/** \brief D008, CPUcs HR specific code protection range 1, lower bound register */
#define CPUCS_HRA_CPR1_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D008u)

/** \brief D00C, CPUcs HR specific code protection range 1, upper bound register */
#define CPUCS_HRA_CPR1_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D00Cu)

/** \brief D010, CPUcs HR specific code protection range 2, lower bound register */
#define CPUCS_HRA_CPR2_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D010u)

/** \brief D014, CPUcs HR specific code protection range 2, upper bound register */
#define CPUCS_HRA_CPR2_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D014u)

/** \brief D018, CPUcs HR specific code protection range 3, lower bound register */
#define CPUCS_HRA_CPR3_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D018u)

/** \brief D01C, CPUcs HR specific code protection range 3, upper bound register */
#define CPUCS_HRA_CPR3_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D01Cu)

/** \brief D020, CPUcs HR specific code protection range 4, lower bound register */
#define CPUCS_HRA_CPR4_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D020u)

/** \brief D024, CPUcs HR specific code protection range 4, upper bound register */
#define CPUCS_HRA_CPR4_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D024u)

/** \brief D028, CPUcs HR specific code protection range 5, lower bound register */
#define CPUCS_HRA_CPR5_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D028u)

/** \brief D02C, CPUcs HR specific code protection range 5, upper bound register */
#define CPUCS_HRA_CPR5_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D02Cu)

/** \brief D030, CPUcs HR specific code protection range 6, lower bound register */
#define CPUCS_HRA_CPR6_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D030u)

/** \brief D034, CPUcs HR specific code protection range 6, upper bound register */
#define CPUCS_HRA_CPR6_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D034u)

/** \brief D038, CPUcs HR specific code protection range 7, lower bound register */
#define CPUCS_HRA_CPR7_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D038u)

/** \brief D03C, CPUcs HR specific code protection range 7, upper bound register */
#define CPUCS_HRA_CPR7_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D03Cu)

/** \brief D040, CPUcs HR specific code protection range 8, lower bound register */
#define CPUCS_HRA_CPR8_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D040u)

/** \brief D044, CPUcs HR specific code protection range 8, upper bound register */
#define CPUCS_HRA_CPR8_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D044u)

/** \brief D048, CPUcs HR specific code protection range 9, lower bound register */
#define CPUCS_HRA_CPR9_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D048u)

/** \brief D04C, CPUcs HR specific code protection range 9, upper bound register */
#define CPUCS_HRA_CPR9_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D04Cu)

/** \brief D050, CPUcs HR specific code protection range 10, lower bound register */
#define CPUCS_HRA_CPR10_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D050u)

/** \brief D054, CPUcs HR specific code protection range 10, upper bound register */
#define CPUCS_HRA_CPR10_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D054u)

/** \brief D058, CPUcs HR specific code protection range 11, lower bound register */
#define CPUCS_HRA_CPR11_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D058u)

/** \brief D05C, CPUcs HR specific code protection range 11, upper bound register */
#define CPUCS_HRA_CPR11_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D05Cu)

/** \brief D060, CPUcs HR specific code protection range 12, lower bound register */
#define CPUCS_HRA_CPR12_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D060u)

/** \brief D064, CPUcs HR specific code protection range 12, upper bound register */
#define CPUCS_HRA_CPR12_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D064u)

/** \brief D068, CPUcs HR specific code protection range 13, lower bound register */
#define CPUCS_HRA_CPR13_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D068u)

/** \brief D06C, CPUcs HR specific code protection range 13, upper bound register */
#define CPUCS_HRA_CPR13_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D06Cu)

/** \brief D070, CPUcs HR specific code protection range 14, lower bound register */
#define CPUCS_HRA_CPR14_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D070u)

/** \brief D074, CPUcs HR specific code protection range 14, upper bound register */
#define CPUCS_HRA_CPR14_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D074u)

/** \brief D078, CPUcs HR specific code protection range 15, lower bound register */
#define CPUCS_HRA_CPR15_L /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_L*)0xF899D078u)

/** \brief D07C, CPUcs HR specific code protection range 15, upper bound register */
#define CPUCS_HRA_CPR15_U /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPR_U*)0xF899D07Cu)

/** \brief E000, CPUcs HR specific code protection execute enable register set 0 */
#define CPUCS_HRA_CPXE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E000u)

/** \brief E004, CPUcs HR specific code protection execute enable register set 1 */
#define CPUCS_HRA_CPXE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E004u)

/** \brief E008, CPUcs HR specific code protection execute enable register set 2 */
#define CPUCS_HRA_CPXE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E008u)

/** \brief E00C, CPUcs HR specific code protection execute enable register set 3 */
#define CPUCS_HRA_CPXE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E00Cu)

/** \brief E010, CPUcs HR specific data protection read enable register set 0 */
#define CPUCS_HRA_DPRE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E010u)

/** \brief E014, CPUcs HR specific data protection read enable register set 1 */
#define CPUCS_HRA_DPRE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E014u)

/** \brief E018, CPUcs HR specific data protection read enable register set 2 */
#define CPUCS_HRA_DPRE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E018u)

/** \brief E01C, CPUcs HR specific data protection read enable register set 3 */
#define CPUCS_HRA_DPRE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E01Cu)

/** \brief E020, CPUcs HR specific data protection write enable register set 0 */
#define CPUCS_HRA_DPWE_0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E020u)

/** \brief E024, CPUcs HR specific data protection write enable register set 1 */
#define CPUCS_HRA_DPWE_1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E024u)

/** \brief E028, CPUcs HR specific data protection write enable register set 2 */
#define CPUCS_HRA_DPWE_2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E028u)

/** \brief E02C, CPUcs HR specific data protection write enable register set 3 */
#define CPUCS_HRA_DPWE_3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E02Cu)

/** \brief E040, CPUcs HR specific code protection execute enable register set 4 */
#define CPUCS_HRA_CPXE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E040u)

/** \brief E044, CPUcs HR specific code protection execute enable register set 5 */
#define CPUCS_HRA_CPXE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E044u)

/** \brief E048, CPUcs HR specific code protection execute enable register set 6 */
#define CPUCS_HRA_CPXE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E048u)

/** \brief E04C, CPUcs HR specific code protection execute enable register set 7 */
#define CPUCS_HRA_CPXE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPXE*)0xF899E04Cu)

/** \brief E050, CPUcs HR specific data protection read enable register set 4 */
#define CPUCS_HRA_DPRE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E050u)

/** \brief E054, CPUcs HR specific data protection read enable register set 5 */
#define CPUCS_HRA_DPRE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E054u)

/** \brief E058, CPUcs HR specific data protection read enable register set 6 */
#define CPUCS_HRA_DPRE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E058u)

/** \brief E05C, CPUcs HR specific data protection read enable register set 7 */
#define CPUCS_HRA_DPRE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPRE*)0xF899E05Cu)

/** \brief E060, CPUcs HR specific data protection write enable register set 4 */
#define CPUCS_HRA_DPWE_4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E060u)

/** \brief E064, CPUcs HR specific data protection write enable register set 5 */
#define CPUCS_HRA_DPWE_5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E064u)

/** \brief E068, CPUcs HR specific data protection write enable register set 6 */
#define CPUCS_HRA_DPWE_6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E068u)

/** \brief E06C, CPUcs HR specific data protection write enable register set 7 */
#define CPUCS_HRA_DPWE_7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DPWE*)0xF899E06Cu)

/** \brief E400, CPUcs HR specific temporal protection system control register */
#define CPUCS_HRA_TPS_CON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_CON*)0xF899E400u)

/** \brief E404, CPUcs HR specific temporal protection system timer register 0 */
#define CPUCS_HRA_TPS_TIMER0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF899E404u)

/** \brief E408, CPUcs HR specific temporal protection system timer register 1 */
#define CPUCS_HRA_TPS_TIMER1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF899E408u)

/** \brief E40C, CPUcs HR specific temporal protection system timer register 2 */
#define CPUCS_HRA_TPS_TIMER2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TPS_TIMER*)0xF899E40Cu)

/** \brief F000, CPUcs trigger event 0 */
#define CPUCS_HRA_TR0_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F000u)
/** Alias (User Manual Name) for CPUCS_HRA_TR0_EVT */
#define CPUCS_HRA_TR0EVT (CPUCS_HRA_TR0_EVT)

/** \brief F004, CPUcs trigger address 0 */
#define CPUCS_HRA_TR0_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F004u)
/** Alias (User Manual Name) for CPUCS_HRA_TR0_ADR */
#define CPUCS_HRA_TR0ADR (CPUCS_HRA_TR0_ADR)

/** \brief F008, CPUcs trigger event 1 */
#define CPUCS_HRA_TR1_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F008u)
/** Alias (User Manual Name) for CPUCS_HRA_TR1_EVT */
#define CPUCS_HRA_TR1EVT (CPUCS_HRA_TR1_EVT)

/** \brief F00C, CPUcs trigger address 1 */
#define CPUCS_HRA_TR1_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F00Cu)
/** Alias (User Manual Name) for CPUCS_HRA_TR1_ADR */
#define CPUCS_HRA_TR1ADR (CPUCS_HRA_TR1_ADR)

/** \brief F010, CPUcs trigger event 2 */
#define CPUCS_HRA_TR2_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F010u)
/** Alias (User Manual Name) for CPUCS_HRA_TR2_EVT */
#define CPUCS_HRA_TR2EVT (CPUCS_HRA_TR2_EVT)

/** \brief F014, CPUcs trigger address 2 */
#define CPUCS_HRA_TR2_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F014u)
/** Alias (User Manual Name) for CPUCS_HRA_TR2_ADR */
#define CPUCS_HRA_TR2ADR (CPUCS_HRA_TR2_ADR)

/** \brief F018, CPUcs trigger event 3 */
#define CPUCS_HRA_TR3_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F018u)
/** Alias (User Manual Name) for CPUCS_HRA_TR3_EVT */
#define CPUCS_HRA_TR3EVT (CPUCS_HRA_TR3_EVT)

/** \brief F01C, CPUcs trigger address 3 */
#define CPUCS_HRA_TR3_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F01Cu)
/** Alias (User Manual Name) for CPUCS_HRA_TR3_ADR */
#define CPUCS_HRA_TR3ADR (CPUCS_HRA_TR3_ADR)

/** \brief F020, CPUcs trigger event 4 */
#define CPUCS_HRA_TR4_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F020u)
/** Alias (User Manual Name) for CPUCS_HRA_TR4_EVT */
#define CPUCS_HRA_TR4EVT (CPUCS_HRA_TR4_EVT)

/** \brief F024, CPUcs trigger address 4 */
#define CPUCS_HRA_TR4_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F024u)
/** Alias (User Manual Name) for CPUCS_HRA_TR4_ADR */
#define CPUCS_HRA_TR4ADR (CPUCS_HRA_TR4_ADR)

/** \brief F028, CPUcs trigger event 5 */
#define CPUCS_HRA_TR5_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F028u)
/** Alias (User Manual Name) for CPUCS_HRA_TR5_EVT */
#define CPUCS_HRA_TR5EVT (CPUCS_HRA_TR5_EVT)

/** \brief F02C, CPUcs trigger address 5 */
#define CPUCS_HRA_TR5_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F02Cu)
/** Alias (User Manual Name) for CPUCS_HRA_TR5_ADR */
#define CPUCS_HRA_TR5ADR (CPUCS_HRA_TR5_ADR)

/** \brief F030, CPUcs trigger event 6 */
#define CPUCS_HRA_TR6_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F030u)
/** Alias (User Manual Name) for CPUCS_HRA_TR6_EVT */
#define CPUCS_HRA_TR6EVT (CPUCS_HRA_TR6_EVT)

/** \brief F034, CPUcs trigger address 6 */
#define CPUCS_HRA_TR6_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F034u)
/** Alias (User Manual Name) for CPUCS_HRA_TR6_ADR */
#define CPUCS_HRA_TR6ADR (CPUCS_HRA_TR6_ADR)

/** \brief F038, CPUcs trigger event 7 */
#define CPUCS_HRA_TR7_EVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TREVT*)0xF899F038u)
/** Alias (User Manual Name) for CPUCS_HRA_TR7_EVT */
#define CPUCS_HRA_TR7EVT (CPUCS_HRA_TR7_EVT)

/** \brief F03C, CPUcs trigger address 7 */
#define CPUCS_HRA_TR7_ADR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRADR*)0xF899F03Cu)
/** Alias (User Manual Name) for CPUCS_HRA_TR7_ADR */
#define CPUCS_HRA_TR7ADR (CPUCS_HRA_TR7_ADR)

/** \brief FC00, CPUcs HR specific counter control */
#define CPUCS_HRA_CCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCTRL*)0xF899FC00u)

/** \brief FC04, CPUcs HR specific CPU clock cycle count */
#define CPUCS_HRA_CCNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCNT*)0xF899FC04u)

/** \brief FC08, CPUcs HR specific instruction count */
#define CPUCS_HRA_ICNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICNT*)0xF899FC08u)

/** \brief FC0C, CPUcs HR specific multi-count register 1 */
#define CPUCS_HRA_M1CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M1CNT*)0xF899FC0Cu)

/** \brief FC10, CPUcs HR specific multi-count register 2 */
#define CPUCS_HRA_M2CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M2CNT*)0xF899FC10u)

/** \brief FC14, CPUcs HR specific multi-count register 3 */
#define CPUCS_HRA_M3CNT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_M3CNT*)0xF899FC14u)

/** \brief FD00, CPUcs debug status register */
#define CPUCS_HRA_DBGSR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGSR*)0xF899FD00u)

/** \brief FD08, CPUcs external event register */
#define CPUCS_HRA_EXEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF899FD08u)

/** \brief FD0C, CPUcs core register access event */
#define CPUCS_HRA_CREVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF899FD0Cu)

/** \brief FD10, CPUcs software debug event */
#define CPUCS_HRA_SWEVT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CR_SW_EX_EVT*)0xF899FD10u)

/** \brief FD14, CPUcs debug action configuration */
#define CPUCS_HRA_DBGACT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGACT*)0xF899FD14u)

/** \brief FD30, CPUcs trigger accumulator */
#define CPUCS_HRA_TRIG_ACC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRIG_ACC*)0xF899FD30u)

/** \brief FD40, CPUcs debug monitor start address */
#define CPUCS_HRA_DMS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DMS*)0xF899FD40u)

/** \brief FD44, CPUcs debug context save area pointer */
#define CPUCS_HRA_DCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DCX*)0xF899FD44u)

/** \brief FD48, CPUcs debug trap control */
#define CPUCS_HRA_DBGTCR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGTCR*)0xF899FD48u)

/** \brief FD4C, CPUcs debug configuration */
#define CPUCS_HRA_DBGCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DBGCFG*)0xF899FD4Cu)

/** \brief FD50, CPUcs trace configuration */
#define CPUCS_HRA_TRCCFG /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCCFG*)0xF899FD50u)

/** \brief FD54, CPUcs trace filter */
#define CPUCS_HRA_TRCFILT /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCFILT*)0xF899FD54u)

/** \brief FD58, CPUcs trace bandwidth limiter */
#define CPUCS_HRA_TRCLIM /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TRCLIM*)0xF899FD58u)

/** \brief FD60, CPUcs MCDS performance counter control register */
#define CPUCS_HRA_TS16PTCCTRL /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TS16P_TC_CTRL0*)0xF899FD60u)

/** \brief FE00, CPUcs previous context information register */
#define CPUCS_HRA_PCXI /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PCXI*)0xF899FE00u)

/** \brief FE04, CPUcs HR specific program status word */
#define CPUCS_HRA_PSW /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PSW*)0xF899FE04u)

/** \brief FE08, CPUcs program counter */
#define CPUCS_HRA_PC /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PC*)0xF899FE08u)

/** \brief FE14, CPUcs HR specific core configuration register */
#define CPUCS_HRA_CORECON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORECON*)0xF899FE14u)

/** \brief FE18, CPUcs identification register */
#define CPUCS_HRA_CPU_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CPU_ID*)0xF899FE18u)

/** \brief FE1C, CPUcs core identification register */
#define CPUCS_HRA_CORE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CORE_ID*)0xF899FE1Cu)

/** \brief FE20, CPUcs HR specific base interrupt vector table pointer */
#define CPUCS_HRA_BIV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BIV*)0xF899FE20u)

/** \brief FE24, CPUcs HR specific base trap vector table pointer */
#define CPUCS_HRA_BTV /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BTV*)0xF899FE24u)

/** \brief FE28, CPUcs HR specific interrupt stack pointer */
#define CPUCS_HRA_ISP /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ISP*)0xF899FE28u)

/** \brief FE2C, CPUcs interrupt control register */
#define CPUCS_HRA_ICR /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_ICR*)0xF899FE2Cu)

/** \brief FE34, CPUcs previous PRS */
#define CPUCS_HRA_PPRS /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_PPRS*)0xF899FE34u)

/** \brief FE38, CPUcs HR specific free CSA list head pointer */
#define CPUCS_HRA_FCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_FCX*)0xF899FE38u)

/** \brief FE3C, CPUcs HR specific free CSA list limit pointer */
#define CPUCS_HRA_LCX /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCX*)0xF899FE3Cu)

/** \brief FE40, CPUcs software identification */
#define CPUCS_HRA_SWID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_SWID*)0xF899FE40u)

/** \brief FE50, CPUcs customer ID register */
#define CPUCS_HRA_CUS_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CUS_ID*)0xF899FE50u)

/** \brief FE60, CPUcs core boot configuration register */
#define CPUCS_HRA_BOOTCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_BOOTCON*)0xF899FE60u)

/** \brief FE64, CPUcs lockstep control register */
#define CPUCS_HRA_LCLCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_LCLCON*)0xF899FE64u)

/** \brief FE68, CPUcs clock control register */
#define CPUCS_HRA_CCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_CCON*)0xF899FE68u)

/** \brief FE6C, CPUcs hardware configuration  */
#define CPUCS_HRA_TCCON /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_TCCON*)0xF899FE6Cu)

/** \brief FF00, CPUcs data general purpose register 0 */
#define CPUCS_D0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF00u)

/** \brief FF04, CPUcs data general purpose register 1 */
#define CPUCS_D1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF04u)

/** \brief FF08, CPUcs data general purpose register 2 */
#define CPUCS_D2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF08u)

/** \brief FF0C, CPUcs data general purpose register 3 */
#define CPUCS_D3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF0Cu)

/** \brief FF10, CPUcs data general purpose register 4 */
#define CPUCS_D4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF10u)

/** \brief FF14, CPUcs data general purpose register 5 */
#define CPUCS_D5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF14u)

/** \brief FF18, CPUcs data general purpose register 6 */
#define CPUCS_D6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF18u)

/** \brief FF1C, CPUcs data general purpose register 7 */
#define CPUCS_D7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF1Cu)

/** \brief FF20, CPUcs data general purpose register 8 */
#define CPUCS_D8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF20u)

/** \brief FF24, CPUcs data general purpose register 9 */
#define CPUCS_D9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF24u)

/** \brief FF28, CPUcs data general purpose register 10 */
#define CPUCS_D10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF28u)

/** \brief FF2C, CPUcs data general purpose register 11 */
#define CPUCS_D11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF2Cu)

/** \brief FF30, CPUcs data general purpose register 12 */
#define CPUCS_D12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF30u)

/** \brief FF34, CPUcs data general purpose register 13 */
#define CPUCS_D13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF34u)

/** \brief FF38, CPUcs data general purpose register 14 */
#define CPUCS_D14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF38u)

/** \brief FF3C, CPUcs data general purpose register 15 */
#define CPUCS_D15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_DREG*)0xF899FF3Cu)

/** \brief FF80, CPUcs address general purpose register 0 */
#define CPUCS_A0 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF80u)

/** \brief FF84, CPUcs address general purpose register 1 */
#define CPUCS_A1 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF84u)

/** \brief FF88, CPUcs address general purpose register 2 */
#define CPUCS_A2 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF88u)

/** \brief FF8C, CPUcs address general purpose register 3 */
#define CPUCS_A3 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF8Cu)

/** \brief FF90, CPUcs address general purpose register 4 */
#define CPUCS_A4 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF90u)

/** \brief FF94, CPUcs address general purpose register 5 */
#define CPUCS_A5 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF94u)

/** \brief FF98, CPUcs address general purpose register 6 */
#define CPUCS_A6 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF98u)

/** \brief FF9C, CPUcs address general purpose register 7 */
#define CPUCS_A7 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FF9Cu)

/** \brief FFA0, CPUcs address general purpose register 8 */
#define CPUCS_A8 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFA0u)

/** \brief FFA4, CPUcs address general purpose register 9 */
#define CPUCS_A9 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFA4u)

/** \brief FFA8, CPUcs address general purpose register 10 */
#define CPUCS_A10 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFA8u)

/** \brief FFAC, CPUcs address general purpose register 11 */
#define CPUCS_A11 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFACu)

/** \brief FFB0, CPUcs address general purpose register 12 */
#define CPUCS_A12 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFB0u)

/** \brief FFB4, CPUcs address general purpose register 13 */
#define CPUCS_A13 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFB4u)

/** \brief FFB8, CPUcs address general purpose register 14 */
#define CPUCS_A14 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFB8u)

/** \brief FFBC, CPUcs address general purpose register 15 */
#define CPUCS_A15 /*lint --e(923, 9078)*/ (*(volatile Ifx_CPU_AREG*)0xF899FFBCu)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXCPU_REG_H */
