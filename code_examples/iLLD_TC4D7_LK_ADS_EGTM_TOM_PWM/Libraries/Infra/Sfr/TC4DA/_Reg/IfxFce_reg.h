/**
 * \file IfxFce_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_FCE/V0.2.2.1.0
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Fce_Registers_Cfg Fce address
 * \ingroup IfxSfr_Fce_Registers
 * 
 * \defgroup IfxSfr_Fce_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Fce_Registers_Cfg
 *
 * \defgroup IfxSfr_Fce_Registers_Cfg_Fce 2-FCE
 * \ingroup IfxSfr_Fce_Registers_Cfg
 *
 *
 */
#ifndef IFXFCE_REG_H
#define IFXFCE_REG_H 1
/******************************************************************************/
#include "IfxFce_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Fce_Registers_Cfg_BaseAddress
 * \{  */

/** \brief FCE object */
#define MODULE_FCE /*lint --e(923, 9078)*/ ((*(Ifx_FCE*)0xF4402E00u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Fce_Registers_Cfg_Fce
 * \{  */
/** \brief 0, Clock control register */
#define FCE_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_CLC*)0xF4402E00u)

/** \brief 8, Module identification register */
#define FCE_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ID*)0xF4402E08u)

/** \brief C, Reset control register A */
#define FCE_RST_CTRLA /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_RST_CTRLA*)0xF4402E0Cu)

/** \brief 10, Reset control register B */
#define FCE_RST_CTRLB /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_RST_CTRLB*)0xF4402E10u)

/** \brief 14, Reset status register */
#define FCE_RST_STAT /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_RST_STAT*)0xF4402E14u)

/** \brief 20, PROT register endinit */
#define FCE_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_PROT*)0xF4402E20u)

/** \brief 24, PROT register safe endinit */
#define FCE_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_PROT*)0xF4402E24u)

/** \brief 28, Resource allocation register for FCE channels */
#define FCE_RESALLOC_CH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_RESALLOC_CH*)0xF4402E28u)

/** \brief 44, Write access enable 0 register A */
#define FCE_ACCEN0_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_WRA*)0xF4402E44u)

/** \brief 48, Write access enable 0 register B */
#define FCE_ACCEN0_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_WRB_FPI*)0xF4402E48u)

/** \brief 4C, Read access enable 0 register A */
#define FCE_ACCEN0_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_RDA*)0xF4402E4Cu)

/** \brief 50, Read access enable 0 register B */
#define FCE_ACCEN0_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_RDB_FPI*)0xF4402E50u)

/** \brief 54, VM access enable 0 register */
#define FCE_ACCEN0_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_VM*)0xF4402E54u)

/** \brief 58, PRS access enable 0 register */
#define FCE_ACCEN0_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_PRS*)0xF4402E58u)

/** \brief 64, Write access enable 1 register A */
#define FCE_ACCEN1_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_WRA*)0xF4402E64u)

/** \brief 68, Write access enable 1 register B */
#define FCE_ACCEN1_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_WRB_FPI*)0xF4402E68u)

/** \brief 6C, Read access enable 1 register A */
#define FCE_ACCEN1_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_RDA*)0xF4402E6Cu)

/** \brief 70, Read access enable 1 register B */
#define FCE_ACCEN1_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_RDB_FPI*)0xF4402E70u)

/** \brief 74, VM access enable 1 register */
#define FCE_ACCEN1_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_VM*)0xF4402E74u)

/** \brief 78, PRS access enable 1 register */
#define FCE_ACCEN1_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_PRS*)0xF4402E78u)

/** \brief 84, Write access enable 2 register A */
#define FCE_ACCEN2_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_WRA*)0xF4402E84u)

/** \brief 88, Write access enable 2 register B */
#define FCE_ACCEN2_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_WRB_FPI*)0xF4402E88u)

/** \brief 8C, Read access enable 2 register A */
#define FCE_ACCEN2_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_RDA*)0xF4402E8Cu)

/** \brief 90, Read access enable 2 register B */
#define FCE_ACCEN2_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_RDB_FPI*)0xF4402E90u)

/** \brief 94, VM access enable 2 register */
#define FCE_ACCEN2_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_VM*)0xF4402E94u)

/** \brief 98, PRS access enable 2 register */
#define FCE_ACCEN2_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_ACCEN_PRS*)0xF4402E98u)

/** \brief C0, Channels status register */
#define FCE_CHSTS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_CHSTS*)0xF4402EC0u)

/** \brief 100, Input register 0 */
#define FCE_IN0_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402F00u)
/** Alias (User Manual Name) for FCE_IN0_IR */
#define FCE_IR0 (FCE_IN0_IR)

/** \brief 104, CRC result register 0 */
#define FCE_IN0_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402F04u)
/** Alias (User Manual Name) for FCE_IN0_RES */
#define FCE_RES0 (FCE_IN0_RES)

/** \brief 108, CRC configuration register 0 */
#define FCE_IN0_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402F08u)
/** Alias (User Manual Name) for FCE_IN0_CFG */
#define FCE_CFG0 (FCE_IN0_CFG)

/** \brief 10C, CRC status register 0 */
#define FCE_IN0_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402F0Cu)
/** Alias (User Manual Name) for FCE_IN0_STS */
#define FCE_STS0 (FCE_IN0_STS)

/** \brief 110, CRC length register 0 */
#define FCE_IN0_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402F10u)
/** Alias (User Manual Name) for FCE_IN0_LENGTH */
#define FCE_LENGTH0 (FCE_IN0_LENGTH)

/** \brief 114, CRC check register 0 */
#define FCE_IN0_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402F14u)
/** Alias (User Manual Name) for FCE_IN0_CHECK */
#define FCE_CHECK0 (FCE_IN0_CHECK)

/** \brief 118, CRC register 0 */
#define FCE_IN0_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402F18u)
/** Alias (User Manual Name) for FCE_IN0_CRC */
#define FCE_CRC0 (FCE_IN0_CRC)

/** \brief 11C, CRC test register 0 */
#define FCE_IN0_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402F1Cu)
/** Alias (User Manual Name) for FCE_IN0_CTR */
#define FCE_CTR0 (FCE_IN0_CTR)

/** \brief 120, Input register 1 */
#define FCE_IN1_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402F20u)
/** Alias (User Manual Name) for FCE_IN1_IR */
#define FCE_IR1 (FCE_IN1_IR)

/** \brief 124, CRC result register 1 */
#define FCE_IN1_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402F24u)
/** Alias (User Manual Name) for FCE_IN1_RES */
#define FCE_RES1 (FCE_IN1_RES)

/** \brief 128, CRC configuration register 1 */
#define FCE_IN1_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402F28u)
/** Alias (User Manual Name) for FCE_IN1_CFG */
#define FCE_CFG1 (FCE_IN1_CFG)

/** \brief 12C, CRC status register 1 */
#define FCE_IN1_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402F2Cu)
/** Alias (User Manual Name) for FCE_IN1_STS */
#define FCE_STS1 (FCE_IN1_STS)

/** \brief 130, CRC length register 1 */
#define FCE_IN1_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402F30u)
/** Alias (User Manual Name) for FCE_IN1_LENGTH */
#define FCE_LENGTH1 (FCE_IN1_LENGTH)

/** \brief 134, CRC check register 1 */
#define FCE_IN1_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402F34u)
/** Alias (User Manual Name) for FCE_IN1_CHECK */
#define FCE_CHECK1 (FCE_IN1_CHECK)

/** \brief 138, CRC register 1 */
#define FCE_IN1_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402F38u)
/** Alias (User Manual Name) for FCE_IN1_CRC */
#define FCE_CRC1 (FCE_IN1_CRC)

/** \brief 13C, CRC test register 1 */
#define FCE_IN1_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402F3Cu)
/** Alias (User Manual Name) for FCE_IN1_CTR */
#define FCE_CTR1 (FCE_IN1_CTR)

/** \brief 140, Input register 2 */
#define FCE_IN2_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402F40u)
/** Alias (User Manual Name) for FCE_IN2_IR */
#define FCE_IR2 (FCE_IN2_IR)

/** \brief 144, CRC result register 2 */
#define FCE_IN2_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402F44u)
/** Alias (User Manual Name) for FCE_IN2_RES */
#define FCE_RES2 (FCE_IN2_RES)

/** \brief 148, CRC configuration register 2 */
#define FCE_IN2_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402F48u)
/** Alias (User Manual Name) for FCE_IN2_CFG */
#define FCE_CFG2 (FCE_IN2_CFG)

/** \brief 14C, CRC status register 2 */
#define FCE_IN2_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402F4Cu)
/** Alias (User Manual Name) for FCE_IN2_STS */
#define FCE_STS2 (FCE_IN2_STS)

/** \brief 150, CRC length register 2 */
#define FCE_IN2_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402F50u)
/** Alias (User Manual Name) for FCE_IN2_LENGTH */
#define FCE_LENGTH2 (FCE_IN2_LENGTH)

/** \brief 154, CRC check register 2 */
#define FCE_IN2_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402F54u)
/** Alias (User Manual Name) for FCE_IN2_CHECK */
#define FCE_CHECK2 (FCE_IN2_CHECK)

/** \brief 158, CRC register 2 */
#define FCE_IN2_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402F58u)
/** Alias (User Manual Name) for FCE_IN2_CRC */
#define FCE_CRC2 (FCE_IN2_CRC)

/** \brief 15C, CRC test register 2 */
#define FCE_IN2_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402F5Cu)
/** Alias (User Manual Name) for FCE_IN2_CTR */
#define FCE_CTR2 (FCE_IN2_CTR)

/** \brief 160, Input register 3 */
#define FCE_IN3_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402F60u)
/** Alias (User Manual Name) for FCE_IN3_IR */
#define FCE_IR3 (FCE_IN3_IR)

/** \brief 164, CRC result register 3 */
#define FCE_IN3_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402F64u)
/** Alias (User Manual Name) for FCE_IN3_RES */
#define FCE_RES3 (FCE_IN3_RES)

/** \brief 168, CRC configuration register 3 */
#define FCE_IN3_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402F68u)
/** Alias (User Manual Name) for FCE_IN3_CFG */
#define FCE_CFG3 (FCE_IN3_CFG)

/** \brief 16C, CRC status register 3 */
#define FCE_IN3_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402F6Cu)
/** Alias (User Manual Name) for FCE_IN3_STS */
#define FCE_STS3 (FCE_IN3_STS)

/** \brief 170, CRC length register 3 */
#define FCE_IN3_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402F70u)
/** Alias (User Manual Name) for FCE_IN3_LENGTH */
#define FCE_LENGTH3 (FCE_IN3_LENGTH)

/** \brief 174, CRC check register 3 */
#define FCE_IN3_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402F74u)
/** Alias (User Manual Name) for FCE_IN3_CHECK */
#define FCE_CHECK3 (FCE_IN3_CHECK)

/** \brief 178, CRC register 3 */
#define FCE_IN3_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402F78u)
/** Alias (User Manual Name) for FCE_IN3_CRC */
#define FCE_CRC3 (FCE_IN3_CRC)

/** \brief 17C, CRC test register 3 */
#define FCE_IN3_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402F7Cu)
/** Alias (User Manual Name) for FCE_IN3_CTR */
#define FCE_CTR3 (FCE_IN3_CTR)

/** \brief 180, Input register 4 */
#define FCE_IN4_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402F80u)
/** Alias (User Manual Name) for FCE_IN4_IR */
#define FCE_IR4 (FCE_IN4_IR)

/** \brief 184, CRC result register 4 */
#define FCE_IN4_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402F84u)
/** Alias (User Manual Name) for FCE_IN4_RES */
#define FCE_RES4 (FCE_IN4_RES)

/** \brief 188, CRC configuration register 4 */
#define FCE_IN4_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402F88u)
/** Alias (User Manual Name) for FCE_IN4_CFG */
#define FCE_CFG4 (FCE_IN4_CFG)

/** \brief 18C, CRC status register 4 */
#define FCE_IN4_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402F8Cu)
/** Alias (User Manual Name) for FCE_IN4_STS */
#define FCE_STS4 (FCE_IN4_STS)

/** \brief 190, CRC length register 4 */
#define FCE_IN4_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402F90u)
/** Alias (User Manual Name) for FCE_IN4_LENGTH */
#define FCE_LENGTH4 (FCE_IN4_LENGTH)

/** \brief 194, CRC check register 4 */
#define FCE_IN4_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402F94u)
/** Alias (User Manual Name) for FCE_IN4_CHECK */
#define FCE_CHECK4 (FCE_IN4_CHECK)

/** \brief 198, CRC register 4 */
#define FCE_IN4_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402F98u)
/** Alias (User Manual Name) for FCE_IN4_CRC */
#define FCE_CRC4 (FCE_IN4_CRC)

/** \brief 19C, CRC test register 4 */
#define FCE_IN4_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402F9Cu)
/** Alias (User Manual Name) for FCE_IN4_CTR */
#define FCE_CTR4 (FCE_IN4_CTR)

/** \brief 1A0, Input register 5 */
#define FCE_IN5_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402FA0u)
/** Alias (User Manual Name) for FCE_IN5_IR */
#define FCE_IR5 (FCE_IN5_IR)

/** \brief 1A4, CRC result register 5 */
#define FCE_IN5_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402FA4u)
/** Alias (User Manual Name) for FCE_IN5_RES */
#define FCE_RES5 (FCE_IN5_RES)

/** \brief 1A8, CRC configuration register 5 */
#define FCE_IN5_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402FA8u)
/** Alias (User Manual Name) for FCE_IN5_CFG */
#define FCE_CFG5 (FCE_IN5_CFG)

/** \brief 1AC, CRC status register 5 */
#define FCE_IN5_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402FACu)
/** Alias (User Manual Name) for FCE_IN5_STS */
#define FCE_STS5 (FCE_IN5_STS)

/** \brief 1B0, CRC length register 5 */
#define FCE_IN5_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402FB0u)
/** Alias (User Manual Name) for FCE_IN5_LENGTH */
#define FCE_LENGTH5 (FCE_IN5_LENGTH)

/** \brief 1B4, CRC check register 5 */
#define FCE_IN5_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402FB4u)
/** Alias (User Manual Name) for FCE_IN5_CHECK */
#define FCE_CHECK5 (FCE_IN5_CHECK)

/** \brief 1B8, CRC register 5 */
#define FCE_IN5_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402FB8u)
/** Alias (User Manual Name) for FCE_IN5_CRC */
#define FCE_CRC5 (FCE_IN5_CRC)

/** \brief 1BC, CRC test register 5 */
#define FCE_IN5_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402FBCu)
/** Alias (User Manual Name) for FCE_IN5_CTR */
#define FCE_CTR5 (FCE_IN5_CTR)

/** \brief 1C0, Input register 6 */
#define FCE_IN6_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402FC0u)
/** Alias (User Manual Name) for FCE_IN6_IR */
#define FCE_IR6 (FCE_IN6_IR)

/** \brief 1C4, CRC result register 6 */
#define FCE_IN6_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402FC4u)
/** Alias (User Manual Name) for FCE_IN6_RES */
#define FCE_RES6 (FCE_IN6_RES)

/** \brief 1C8, CRC configuration register 6 */
#define FCE_IN6_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402FC8u)
/** Alias (User Manual Name) for FCE_IN6_CFG */
#define FCE_CFG6 (FCE_IN6_CFG)

/** \brief 1CC, CRC status register 6 */
#define FCE_IN6_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402FCCu)
/** Alias (User Manual Name) for FCE_IN6_STS */
#define FCE_STS6 (FCE_IN6_STS)

/** \brief 1D0, CRC length register 6 */
#define FCE_IN6_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402FD0u)
/** Alias (User Manual Name) for FCE_IN6_LENGTH */
#define FCE_LENGTH6 (FCE_IN6_LENGTH)

/** \brief 1D4, CRC check register 6 */
#define FCE_IN6_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402FD4u)
/** Alias (User Manual Name) for FCE_IN6_CHECK */
#define FCE_CHECK6 (FCE_IN6_CHECK)

/** \brief 1D8, CRC register 6 */
#define FCE_IN6_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402FD8u)
/** Alias (User Manual Name) for FCE_IN6_CRC */
#define FCE_CRC6 (FCE_IN6_CRC)

/** \brief 1DC, CRC test register 6 */
#define FCE_IN6_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402FDCu)
/** Alias (User Manual Name) for FCE_IN6_CTR */
#define FCE_CTR6 (FCE_IN6_CTR)

/** \brief 1E0, Input register 7 */
#define FCE_IN7_IR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_IR*)0xF4402FE0u)
/** Alias (User Manual Name) for FCE_IN7_IR */
#define FCE_IR7 (FCE_IN7_IR)

/** \brief 1E4, CRC result register 7 */
#define FCE_IN7_RES /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_RES*)0xF4402FE4u)
/** Alias (User Manual Name) for FCE_IN7_RES */
#define FCE_RES7 (FCE_IN7_RES)

/** \brief 1E8, CRC configuration register 7 */
#define FCE_IN7_CFG /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CFG*)0xF4402FE8u)
/** Alias (User Manual Name) for FCE_IN7_CFG */
#define FCE_CFG7 (FCE_IN7_CFG)

/** \brief 1EC, CRC status register 7 */
#define FCE_IN7_STS /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_STS*)0xF4402FECu)
/** Alias (User Manual Name) for FCE_IN7_STS */
#define FCE_STS7 (FCE_IN7_STS)

/** \brief 1F0, CRC length register 7 */
#define FCE_IN7_LENGTH /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_LENGTH*)0xF4402FF0u)
/** Alias (User Manual Name) for FCE_IN7_LENGTH */
#define FCE_LENGTH7 (FCE_IN7_LENGTH)

/** \brief 1F4, CRC check register 7 */
#define FCE_IN7_CHECK /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CHECK*)0xF4402FF4u)
/** Alias (User Manual Name) for FCE_IN7_CHECK */
#define FCE_CHECK7 (FCE_IN7_CHECK)

/** \brief 1F8, CRC register 7 */
#define FCE_IN7_CRC /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CRC*)0xF4402FF8u)
/** Alias (User Manual Name) for FCE_IN7_CRC */
#define FCE_CRC7 (FCE_IN7_CRC)

/** \brief 1FC, CRC test register 7 */
#define FCE_IN7_CTR /*lint --e(923, 9078)*/ (*(volatile Ifx_FCE_IN_CTR*)0xF4402FFCu)
/** Alias (User Manual Name) for FCE_IN7_CTR */
#define FCE_CTR7 (FCE_IN7_CTR)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXFCE_REG_H */
