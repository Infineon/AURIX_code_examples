/**
 * \file IfxMailBox.h
 *
 * \version iLLD-TC4-v2.2.0
 * \copyright Copyright (c) 2020 Infineon Technologies AG. All rights reserved.
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef COMMON_MBX_H
#define COMMON_MBX_H 1

#define COMMAND_OFFSET   (0)
#define STATUS_OFFSET    (COMMAND_OFFSET + 4)
#define KERNEL_ID_OFFSET (STATUS_OFFSET + 4)
#define ARG_COUNT_OFFSET (KERNEL_ID_OFFSET + 4)
#define FIRST_ARG_OFFSET (ARG_COUNT_OFFSET + 4)

/** \brief TC0 Mailbox
 */
#define TRICORE_0_REQUEST_MAILBOX  (0xB0680200)

/** \brief TC1 Mailbox
 */
#define TRICORE_1_REQUEST_MAILBOX  (0xB0680400)

/** \brief TC2 Mailbox
 */
#define TRICORE_2_REQUEST_MAILBOX  (0xB0680600)

/** \brief TC3 Mailbox
 */
#define TRICORE_3_REQUEST_MAILBOX  (0xB0680800)

/** \brief TC4 Mailbox
 */
#define TRICORE_4_REQUEST_MAILBOX  (0xB0680A00)

/** \brief TC5 Mailbox
 */
#define TRICORE_5_REQUEST_MAILBOX  (0xB0680C00)

/** \brief PPU Mailbox
 */
#define PPU_STATUS_MAILBOX         (0xB0680E00)

/** \brief MAX Args
 */
#define MAX_ARGS (10)

/** \brief Num of Cores
 */
#define MAX_NUM_CORES 6U

/** \brief OPEN CL Mode
 */
#define OPEN_CL_MODE 1

/** \brief if defined, the interrupt from Server to Client is configured as the notifier, if not, the field NewMessageAvail in fifo struct is the notifier
 */
//#define S2C_INTERRUPT_NOTIFICATION 1

/** \brief PPUC Status
 */
typedef enum
{
	IfxMailBox_PpucStatus_busy =0U,
	IfxMailBox_PpucStatus_ready,
	IfxMailBox_PpucStatus_free
}IfxMailBox_PpucStatus;

/** \brief Status of the operation/service
 */
typedef enum
{
	IfxMailbox_Status_requestDone=0U,
	IfxMailbox_Status_requestInProgress,
	IfxMailbox_Status_successful,
	IfxMailbox_Status_notsuccessful,
	IfxMailbox_Status_tryLater
}IfxMailbox_Status;

/** \brief New command or not
 */
typedef enum
{
	IfxMailbox_Command_none=0U,
	IfxMailbox_Command_new
}IfxMailbox_Command;

/** \brief Mailbox structure
 */
typedef struct
{
	unsigned int command;
	unsigned int status;
	unsigned int id;
	unsigned int num_args;
	int *args[MAX_ARGS];
}IfxMailbox;

#endif /* COMMON_MBX_H_ */
