/**
 * \file IfxProt_regdef.h
 * \brief
 * \version iLLD-TC4-v2.1.1
 * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
 *
 *
 * MAY BE CHANGED BY USER [yes/no]: Yes
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Prot_Registers Prot Registers
 * \ingroup IfxSfr
 * 
 * \defgroup IfxSfr_Prot_Registers_Bitfields Bitfields
 * \ingroup IfxSfr_Prot_Registers
 * 
 * \defgroup IfxSfr_Prot_Registers_union Register unions
 * \ingroup IfxSfr_Prot_Registers
 * 
 * \defgroup IfxSfr_Prot_Registers_struct Memory map
 * \ingroup IfxSfr_Prot_Registers
 */
#ifndef IFXPROT_REGDEF_H
#define IFXPROT_REGDEF_H 1
/******************************************************************************/
#include "Ifx_TypesReg.h"
/******************************************************************************/

/******************************************************************************/
/******************************************************************************/


/** \addtogroup IfxSfr_Prot_Registers_Bitfields
 * \{  */
/** \brief Resource Protection Register */
typedef struct _Ifx_PROT_PROT_Bits
{
    Ifx_UReg_32Bit STATE:3;           /**< \brief [2:0] Resource protection state (rwh) */
    Ifx_UReg_32Bit SWEN:1;            /**< \brief [3:3] State write enable (w) */
    Ifx_UReg_32Bit reserved_4:4;     /**< \brief [7:4] \internal Reserved */
    Ifx_UReg_32Bit SEL:8;            /**< \brief [8:15] Protection region select */
    Ifx_UReg_32Bit VM:3;              /**< \brief [18:16] Virtual Machine definition for PROT owner (rw) */
    Ifx_UReg_32Bit VMEN:1;            /**< \brief [19:19] Virtual Machine definition Enable for PROT owner (rw) */
    Ifx_UReg_32Bit PRS:3;             /**< \brief [22:20] Protection Set definition for PROT owner (rw) */
    Ifx_UReg_32Bit PRSEN:1;           /**< \brief [23:23] Protection Set definition Enable for PROT owner (rw) */
    Ifx_UReg_32Bit TAGID:6;           /**< \brief [29:24] TAG ID definition for PROT owner (rw) */
    Ifx_UReg_32Bit ODEF:1;            /**< \brief [30:30] Enable for PROT owner definition (rw) */
    Ifx_UReg_32Bit OWEN:1;            /**< \brief [31:31] Owner write enable (w) */
} Ifx_PROT_PROT_Bits;

/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_prot_Registers_union
 * \{   */
/** \brief Resource Protection Register   */
typedef union
{
    Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_PROT_PROT_Bits B;             /**< \brief Bitfield access */
} Ifx_PROT_PROT;

/** \}  */

/******************************************************************************/
/** \addtogroup IfxSfr_Prot_Registers_struct
 * \{  */
/******************************************************************************/
/** \name Object L0
 * \{  */

/** \brief PROT object */
typedef volatile struct _Ifx_PROT
{
       Ifx_PROT_PROT                       PROT;                   /**< \brief 0, Resource Protection Register*/
       Ifx_UReg_8Bit                       reserved_4[252];        /**< \brief 4, \internal Reserved */
} Ifx_PROT;

/** \}  */
/******************************************************************************/
/** \}  */


/******************************************************************************/
/******************************************************************************/

#endif /* IFXPROT_REGDEF_H */
