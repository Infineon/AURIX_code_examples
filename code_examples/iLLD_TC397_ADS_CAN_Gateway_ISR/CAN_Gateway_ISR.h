/**********************************************************************************************************************
 * \file CAN_Gateway_ISR.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef CAN_GATEWAY_ISR_H_
#define CAN_GATEWAY_ISR_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include <stdio.h>
#include <string.h>
#include "IfxCan_Can.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define CAN0_MESSAGE_ID              (uint32)0x7B          /* RX Message ID that will be used in arbitration phase */
#define CAN0_MESSAGE_ID_MASK         (uint32)0x7FF         /* RX Message ID Mask                                   */
#define CAN1_GATEWAY_MESSAGE_ID      (uint32)0x55          /* Message ID that will be used in arbitration phase    */
#define ISR_PRIORITY_CAN0_RX         1                     /* Define the CAN RX interrupt priority                 */
#define MAXIMUM_CAN_DATA_PAYLOAD     16                    /* Define maximum CAN FD payload in 4-byte words        */

#define SOURCE_RXFIFO1_SIZE          4                     /* RxFIFO1 size on the Source CAN node                  */
#define DESTINATION_TXFIFO_SIZE      8                     /* TxFIFO size on the destination CAN node              */

#define SourceNodeBaud               500000                /* Source node baud rate                                */
#define SourceNodeFastBaud           2000000               /* Source node fast baud rate                           */
#define SourceNodeRxFIFO1AdrOffset   0x200                 /* Source node RxFIFO1 addressOffset                    */
#define SourceNodeStdIDAdrOffset     0x000                 /* Source node 11_ID filter list addressOffset          */

#define DestNodeBaud                 500000                /* destination node baud rate                           */
#define DestNodeFastBaud             1000000               /* destination node fast baud rate                      */
#define DestNodeTxBufferAdrOffset    0x440                 /* destination node TxBuffer addressOffset              */

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
typedef struct
{
    IfxCan_Can_Config canConfig;                            /* CAN module configuration structure                   */
    IfxCan_Can canModule;                                   /* CAN module handle                                    */
    IfxCan_Can_Node canSrcNode;                             /* CAN source node handle data structure                */
    IfxCan_Can_Node canDstNode;                             /* CAN destination node handle data structure           */
    IfxCan_Can_NodeConfig canNodeConfig;                    /* CAN node configuration structure                     */
    IfxCan_Filter canFilter;                                /* CAN filter configuration structure                   */
    IfxCan_Message txMsg;                                   /* Transmitted CAN message structure                    */
    IfxCan_Message rxMsg;                                   /* Received CAN message structure                       */
    uint32  txData[MAXIMUM_CAN_DATA_PAYLOAD];                /* Transmitted CAN data array                           */
    uint32  rxData[MAXIMUM_CAN_DATA_PAYLOAD];                /* Received CAN data array                              */
} McmcanType;
 
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void initMcmcan0(void);
void initMcmcan1(void);
void IfxCan_ramInit(Ifx_CAN *can);

#endif /* CAN_GATEWAY_ISR_H_ */
