/**
 * \file IfxSrc_regdef.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_IR/V13.1.1.0.7
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Src_Registers Src Registers
 * \ingroup IfxSfr
 * 
 * \defgroup IfxSfr_Src_Registers_Bitfields Bitfields
 * \ingroup IfxSfr_Src_Registers
 * 
 * \defgroup IfxSfr_Src_Registers_union Register unions
 * \ingroup IfxSfr_Src_Registers
 * 
 * \defgroup IfxSfr_Src_Registers_struct Memory map
 * \ingroup IfxSfr_Src_Registers
 */
#ifndef IFXSRC_REGDEF_H
#define IFXSRC_REGDEF_H 1
/******************************************************************************/
#include "Ifx_TypesReg.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/


/** \addtogroup IfxSfr_Src_Registers_Bitfields
 * \{  */
/** \brief  */
typedef struct _Ifx_SRC_SRCR_Bits
{
    __IO Ifx_Strict_32Bit SRPN:8;          /**< \brief [7:0] Service request priority number (rw) */
    __IO Ifx_Strict_32Bit VM:3;            /**< \brief [10:8] Virtual machine (rw) */
    __IO Ifx_Strict_32Bit CS:1;            /**< \brief [11:11] Cyber security (rw) */
    __IO Ifx_Strict_32Bit TOS:4;           /**< \brief [15:12] Type of service (rw) */
    __I  Ifx_Strict_32Bit :7;              /**< \brief [22:16] \internal Reserved */
    __IO Ifx_Strict_32Bit SRE:1;           /**< \brief [23:23] Service request enable (rw) */
    __I  Ifx_Strict_32Bit SRR:1;           /**< \brief [24:24] Service request status (rh) */
    __O  Ifx_Strict_32Bit CLRR:1;          /**< \brief [25:25] Service request clear (w) */
    __O  Ifx_Strict_32Bit SETR:1;          /**< \brief [26:26] Service Request set (w) */
    __I  Ifx_Strict_32Bit IOV:1;           /**< \brief [27:27] Interrupt overflow status (rh) */
    __O  Ifx_Strict_32Bit IOVCLR:1;        /**< \brief [28:28] Interrupt overflow clear (w) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [31:29] \internal Reserved */
} Ifx_SRC_SRCR_Bits;

/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_src_Registers_union
 * \{   */
/** \brief    */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SRC_SRCR_Bits B;                   /**< \brief Bitfield access */
} Ifx_SRC_SRCR;

/** \}  */

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_CPU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CPU object */
typedef volatile struct _Ifx_SRC_CPU
{
       __IO Ifx_SRC_SRCR                        SB;                     /**< \brief 0, CPU0 software breakpoint service request*/
} Ifx_SRC_CPU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_CPUCS_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CPUCS object */
typedef volatile struct _Ifx_SRC_CPUCS
{
       __IO Ifx_SRC_SRCR                        SB;                     /**< \brief 0, CPUCS software breakpoint service request*/
} Ifx_SRC_CPUCS;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_STMCPU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief STMCPU object */
typedef volatile struct _Ifx_SRC_STMCPU
{
       __IO Ifx_SRC_SRCR                        SR[16];                 /**< \brief 0, "CPUw system timer service requests (SRx).  Note: The SRx mapping  is described in the CPU chapter - 'CPU-STM', 'STM service request mapping'"*/
} Ifx_SRC_STMCPU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_SBCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief SBCU object */
typedef volatile struct _Ifx_SRC_SBCU
{
       __IO Ifx_SRC_SRCR                        NCS;                    /**< \brief 0, SBCU NCS service request*/
       __IO Ifx_SRC_SRCR                        CS;                     /**< \brief 4, SBCU CS service request*/
       __IO Ifx_SRC_SRCR                        QOSC;                   /**< \brief 8, SBCU QOS control service request*/
} Ifx_SRC_SBCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_COMBCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief COMBCU object */
typedef volatile struct _Ifx_SRC_COMBCU
{
       __IO Ifx_SRC_SRCR                        NCS;                    /**< \brief 0, COMBCU NCS service request*/
       __IO Ifx_SRC_SRCR                        CS;                     /**< \brief 4, COMBCU CS service request*/
       __IO Ifx_SRC_SRCR                        QOSC;                   /**< \brief 8, COMBCU QOS control service request*/
} Ifx_SRC_COMBCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_TBCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TBCU object */
typedef volatile struct _Ifx_SRC_TBCU
{
       __IO Ifx_SRC_SRCR                        NCS;                    /**< \brief 0, TBCU NCS service request*/
       __IO Ifx_SRC_SRCR                        CS;                     /**< \brief 4, TBCU CS service request*/
} Ifx_SRC_TBCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_CSBCU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CSBCU object */
typedef volatile struct _Ifx_SRC_CSBCU
{
       __IO Ifx_SRC_SRCR                        NCS;                    /**< \brief 0, CSBCU NCS service request*/
       __IO Ifx_SRC_SRCR                        CS;                     /**< \brief 4, CSBCU CS service request*/
} Ifx_SRC_CSBCU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_SRI_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief SRI object */
typedef volatile struct _Ifx_SRC_SRI
{
       __IO Ifx_SRC_SRCR                        SR;                     /**< \brief 0, SRI domain 0 service request*/
       __IO Ifx_SRC_SRCR                        SMSR;                   /**< \brief 4, SRI domain 0 special master service request*/
} Ifx_SRC_SRI;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_ASCLIN_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ASCLIN object */
typedef volatile struct _Ifx_SRC_ASCLIN
{
       __IO Ifx_SRC_SRCR                        TX;                     /**< \brief 0, ASCLIN0 transmit service request*/
       __IO Ifx_SRC_SRCR                        RX;                     /**< \brief 4, ASCLIN0 receive service request*/
       __IO Ifx_SRC_SRCR                        ERR;                    /**< \brief 8, ASCLIN0 error service request*/
} Ifx_SRC_ASCLIN;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_VMT_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief VMT object */
typedef volatile struct _Ifx_SRC_VMT
{
       __IO Ifx_SRC_SRCR                        SR;                     /**< \brief 0, VMT0 servide request*/
} Ifx_SRC_VMT;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_QSPI_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief QSPI object */
typedef volatile struct _Ifx_SRC_QSPI
{
       __IO Ifx_SRC_SRCR                        TX;                     /**< \brief 0, QSPI0 transmit service request*/
       __IO Ifx_SRC_SRCR                        RX;                     /**< \brief 4, QSPI0 receive service request*/
       __IO Ifx_SRC_SRCR                        ERR;                    /**< \brief 8, QSPI0 error service request*/
       __IO Ifx_SRC_SRCR                        PT;                     /**< \brief C, QSPI0 phase transition service request*/
       __IO Ifx_SRC_SRCR                        U;                      /**< \brief 10, QSPI0 user defined service request*/
} Ifx_SRC_QSPI;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_HSCT_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief HSCT object */
typedef volatile struct _Ifx_SRC_HSCT
{
       __IO Ifx_SRC_SRCR                        SR;                     /**< \brief 0, HSCT0 service request*/
} Ifx_SRC_HSCT;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_HSSL_CH_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief CH object */
typedef volatile struct _Ifx_SRC_HSSL_CH
{
       __IO Ifx_SRC_SRCR                        COK;                    /**< \brief 0, HSSL0 channel 0 OK service request*/
       __IO Ifx_SRC_SRCR                        RDI;                    /**< \brief 4, HSSL0 channel 0 read data service request*/
       __IO Ifx_SRC_SRCR                        ERR;                    /**< \brief 8, HSSL0 channel 0 error service request*/
       __IO Ifx_SRC_SRCR                        TRG;                    /**< \brief C, HSSL0 channel 0 trigger interrupt service request*/
} Ifx_SRC_HSSL_CH;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_HSSL_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief HSSL object */
typedef volatile struct _Ifx_SRC_HSSL
{
       __IO Ifx_SRC_HSSL_CH                     CH[4];                  /**< \brief 0, */
       __IO Ifx_SRC_SRCR                        EXI;                    /**< \brief 40, HSS0 exception service request*/
} Ifx_SRC_HSSL;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_I2C_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief I2C object */
typedef volatile struct _Ifx_SRC_I2C
{
       __IO Ifx_SRC_SRCR                        DTR;                    /**< \brief 0, I2C0 data transfer request*/
       __IO Ifx_SRC_SRCR                        ERR;                    /**< \brief 4, I2C0 error service request*/
       __IO Ifx_SRC_SRCR                        P;                      /**< \brief 8, I2C0 Protocol service request*/
       __I  Ifx_UReg_8Bit                       reserved_C[4];          /**< \brief C, \internal Reserved */
} Ifx_SRC_I2C;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_SENT_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief SENT object */
typedef volatile struct _Ifx_SRC_SENT
{
       __IO Ifx_SRC_SRCR                        SR[10];                 /**< \brief 0, SENT0 service request 0*/
} Ifx_SRC_SENT;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_MSC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief MSC object */
typedef volatile struct _Ifx_SRC_MSC
{
       __IO Ifx_SRC_SRCR                        SR[5];                  /**< \brief 0, MSC0 service request 0*/
} Ifx_SRC_MSC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_DMA0_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief DMA0 object */
typedef volatile struct _Ifx_SRC_DMA0
{
       __IO Ifx_SRC_SRCR                        ERR[16];                /**< \brief 0, DMA0 RP0 error service request*/
       __IO Ifx_SRC_SRCR                        GERR;                   /**< \brief 40, DMA0 global error service request*/
       __I  Ifx_UReg_8Bit                       reserved_44[12];        /**< \brief 44, \internal Reserved */
       __IO Ifx_SRC_SRCR                        CH[128];                /**< \brief 50, DMA0 channel  0 service request*/
} Ifx_SRC_DMA0;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_DMA1_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief DMA1 object */
typedef volatile struct _Ifx_SRC_DMA1
{
       __IO Ifx_SRC_SRCR                        ERR[8];                 /**< \brief 0, DMA1 RP0 error service request*/
       __I  Ifx_UReg_8Bit                       reserved_20[32];        /**< \brief 20, \internal Reserved */
       __IO Ifx_SRC_SRCR                        GERR;                   /**< \brief 40, DMA1 global error service request*/
       __I  Ifx_UReg_8Bit                       reserved_44[12];        /**< \brief 44, \internal Reserved */
       __IO Ifx_SRC_SRCR                        CH[64];                 /**< \brief 50, DMA1 channel 0 service request*/
} Ifx_SRC_DMA1;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_SDMMC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief SDMMC object */
typedef volatile struct _Ifx_SRC_SDMMC
{
       __IO Ifx_SRC_SRCR                        ERR;                    /**< \brief 0, SDMMC0 error service request*/
       __IO Ifx_SRC_SRCR                        DMA;                    /**< \brief 4, SDMMC0 DMA ready service request*/
} Ifx_SRC_SDMMC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_GETH_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief GETH object */
typedef volatile struct _Ifx_SRC_GETH
{
       __IO Ifx_SRC_SRCR                        DMA[16];                /**< \brief 0, GETH0 DMA0 service request*/
       __IO Ifx_SRC_SRCR                        PPS[4];                 /**< \brief 40, GETH0 PPS0 service request*/
       __IO Ifx_SRC_SRCR                        INTR;                   /**< \brief 50, GETH0 INTR service request*/
} Ifx_SRC_GETH;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_LETH_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief LETH object */
typedef volatile struct _Ifx_SRC_LETH
{
       __IO Ifx_SRC_SRCR                        DMATX[8];               /**< \brief 0, LETH0 DMA TX0 service request*/
       __IO Ifx_SRC_SRCR                        DMARX[8];               /**< \brief 20, LETH0 DMA RX0 service request*/
       __IO Ifx_SRC_SRCR                        PPS[4];                 /**< \brief 40, LETH0 P0_PPS service request*/
       __IO Ifx_SRC_SRCR                        INTR;                   /**< \brief 50, LETH0 INTR service request*/
} Ifx_SRC_LETH;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_CAN_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CAN object */
typedef volatile struct _Ifx_SRC_CAN
{
       __IO Ifx_SRC_SRCR                        INT[16];                /**< \brief 0, CAN0 service request 0*/
} Ifx_SRC_CAN;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_CANXL_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CANXL object */
typedef volatile struct _Ifx_SRC_CANXL
{
       __IO Ifx_SRC_SRCR                        FUNC;                   /**< \brief 0, CANXL0 functional service request*/
       __IO Ifx_SRC_SRCR                        ERR;                    /**< \brief 4, CANXL0 error service request*/
       __IO Ifx_SRC_SRCR                        SAFETY;                 /**< \brief 8, CANXL0 safety service request*/
} Ifx_SRC_CANXL;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_TMADC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TMADC object */
typedef volatile struct _Ifx_SRC_TMADC
{
       __IO Ifx_SRC_SRCR                        SR[6];                  /**< \brief 0, TMADC0 service request 0*/
} Ifx_SRC_TMADC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_ADC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ADC object */
typedef volatile struct _Ifx_SRC_ADC
{
       __IO Ifx_SRC_SRCR                        SR[12];                 /**< \brief 0, ADC service request 0*/
} Ifx_SRC_ADC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_CDSP_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CDSP object */
typedef volatile struct _Ifx_SRC_CDSP
{
       __IO Ifx_SRC_SRCR                        SR[3];                  /**< \brief 0, CDSP0 service request 0*/
} Ifx_SRC_CDSP;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_ERAY_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ERAY object */
typedef volatile struct _Ifx_SRC_ERAY
{
       __IO Ifx_SRC_SRCR                        INT0;                   /**< \brief 0, E-RAY0 service request 0*/
       __IO Ifx_SRC_SRCR                        INT1;                   /**< \brief 4, E-RAY0 service request 1*/
       __IO Ifx_SRC_SRCR                        TINT0;                  /**< \brief 8, E-RAY0 timer interrupt 0 service request*/
       __IO Ifx_SRC_SRCR                        TINT1;                  /**< \brief C, E-RAY0 timer interrupt 1 service request*/
       __IO Ifx_SRC_SRCR                        NDAT0;                  /**< \brief 10, E-RAY0 new data 0 service request*/
       __IO Ifx_SRC_SRCR                        NDAT1;                  /**< \brief 14, E-RAY0 new data 1 service request*/
       __IO Ifx_SRC_SRCR                        MBSC0;                  /**< \brief 18, E-RAY0 message buffer status changed 0 service request*/
       __IO Ifx_SRC_SRCR                        MBSC1;                  /**< \brief 1C, E-RAY0 message buffer status changed 1 service request*/
       __IO Ifx_SRC_SRCR                        OBUSY;                  /**< \brief 20, E-RAY0 output buffer busy*/
       __IO Ifx_SRC_SRCR                        IBUSY;                  /**< \brief 24, E-RAY0 input buffer busy*/
       __I  Ifx_UReg_8Bit                       reserved_28[8];         /**< \brief 28, \internal Reserved */
} Ifx_SRC_ERAY;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_CSS_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CSS object */
typedef volatile struct _Ifx_SRC_CSS
{
       __IO Ifx_SRC_SRCR                        SR[26];                 /**< \brief 0, CSS0 service request 0*/
} Ifx_SRC_CSS;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_SMU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief SMU object */
typedef volatile struct _Ifx_SRC_SMU
{
       __IO Ifx_SRC_SRCR                        IRQ[6];                 /**< \brief 0, SMU_Safety service request 0*/
       __IO Ifx_SRC_SRCR                        CSIRQ;                  /**< \brief 18, SMU_Security service request*/
} Ifx_SRC_SMU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_PSI5_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief PSI5 object */
typedef volatile struct _Ifx_SRC_PSI5
{
       __IO Ifx_SRC_SRCR                        SR[8];                  /**< \brief 0, PSI5 service request 0*/
} Ifx_SRC_PSI5;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_PSI5S_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief PSI5S object */
typedef volatile struct _Ifx_SRC_PSI5S
{
       __IO Ifx_SRC_SRCR                        SR[8];                  /**< \brief 0, PSI5S0 service request 0*/
} Ifx_SRC_PSI5S;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_PPU_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief PPU object */
typedef volatile struct _Ifx_SRC_PPU
{
       __IO Ifx_SRC_SRCR                        STUDONE;                /**< \brief 0, PPU STU-DMI done service request*/
       __IO Ifx_SRC_SRCR                        STUEVENT;               /**< \brief 4, PPU STU-DMI event service request*/
       __IO Ifx_SRC_SRCR                        STUERR;                 /**< \brief 8, PPU STU-DMI error service request*/
       __IO Ifx_SRC_SRCR                        ICI;                    /**< \brief C, PPU inter-core interrupt (ICI) service request*/
} Ifx_SRC_PPU;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_PCIE_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief PCIE object */
typedef volatile struct _Ifx_SRC_PCIE
{
       __IO Ifx_SRC_SRCR                        MSI[8];                 /**< \brief 0, PCIE0 MSI and MSI-X service request 0*/
       __IO Ifx_SRC_SRCR                        WC[4];                  /**< \brief 20, PCIE0 write channel 0 service request*/
       __IO Ifx_SRC_SRCR                        RC[4];                  /**< \brief 30, PCIE0 read channel 0 service request*/
       __IO Ifx_SRC_SRCR                        EERR;                   /**< \brief 40, PCIE0 general error service request*/
       __IO Ifx_SRC_SRCR                        NFAT;                   /**< \brief 44, PCIE0 non-fatal error and fatal error service request*/
       __IO Ifx_SRC_SRCR                        PM;                     /**< \brief 48, PCIE0 power management  service request*/
       __IO Ifx_SRC_SRCR                        LNK;                    /**< \brief 4C, PCIE0 link state change / link reset  service request*/
       __IO Ifx_SRC_SRCR                        MSG;                    /**< \brief 50, PCIE0 general message received  service request*/
       __IO Ifx_SRC_SRCR                        MISC;                   /**< \brief 54, PCIE0 miscellaneous service request*/
       __I  Ifx_UReg_8Bit                       reserved_58[8];         /**< \brief 58, \internal Reserved */
} Ifx_SRC_PCIE;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_XSPI_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief XSPI object */
typedef volatile struct _Ifx_SRC_XSPI
{
       __IO Ifx_SRC_SRCR                        FIFO;                   /**< \brief 0, xSPI FIFO  service request*/
       __IO Ifx_SRC_SRCR                        ERROR;                  /**< \brief 4, xSPI interface error service request*/
} Ifx_SRC_XSPI;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_GPSR_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief GPSR object */
typedef volatile struct _Ifx_SRC_GPSR
{
       __IO Ifx_SRC_SRCR                        SR0;                    /**< \brief 0, General purpose group 0 service request 0*/
       __IO Ifx_SRC_SRCR                        SR1;                    /**< \brief 4, General purpose group 0 service request 0*/
       __IO Ifx_SRC_SRCR                        SR2;                    /**< \brief 8, General purpose group 0 service request 0*/
       __IO Ifx_SRC_SRCR                        SR3;                    /**< \brief C, General purpose group 0 service request 0*/
       __IO Ifx_SRC_SRCR                        SR4;                    /**< \brief 10, General purpose group 0 service request 0*/
       __IO Ifx_SRC_SRCR                        SR5;                    /**< \brief 14, General purpose group 0 service request 0*/
       __IO Ifx_SRC_SRCR                        SR6;                    /**< \brief 18, General purpose group 0 service request 0*/
       __IO Ifx_SRC_SRCR                        SR7;                    /**< \brief 1C, General purpose group 0 service request 0*/
} Ifx_SRC_GPSR;



/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_EGTM_TIM_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief TIM object */
typedef volatile struct _Ifx_SRC_EGTM_TIM
{
       __IO Ifx_SRC_SRCR                        SR[8];                  /**< \brief 0, TIM0 service request 0*/
} Ifx_SRC_EGTM_TIM;


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_EGTM_ATOM_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief ATOM object */
typedef volatile struct _Ifx_SRC_EGTM_ATOM
{
       __IO Ifx_SRC_SRCR                        SR[4];                  /**< \brief 0, ATOM0 service request 0*/
} Ifx_SRC_EGTM_ATOM;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Src_EGTM_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief EGTM object */
typedef volatile struct _Ifx_SRC_EGTM
{
       __IO Ifx_SRC_SRCR                        AEIIRQ;                 /**< \brief 0, AEI service request*/
       __I  Ifx_UReg_8Bit                       reserved_4[8];          /**< \brief 4, \internal Reserved */
       __IO Ifx_SRC_SRCR                        CMBIRQ;                 /**< \brief C, CMP service request*/
       __IO Ifx_SRC_SRCR                        SPEIRQ[3];              /**< \brief 10, SPE0 service request*/
       __I  Ifx_UReg_8Bit                       reserved_1C[36];        /**< \brief 1C, \internal Reserved */
       __IO Ifx_SRC_SRCR                        ERR;                    /**< \brief 40, Error service request*/
       __I  Ifx_UReg_8Bit                       reserved_44[12];        /**< \brief 44, \internal Reserved */
       __IO Ifx_SRC_EGTM_TIM                    TIM[3];                 /**< \brief 50, */
       __I  Ifx_UReg_8Bit                       reserved_B0[96];        /**< \brief B0, \internal Reserved */
       __IO Ifx_SRC_EGTM_TIM                    TOM[3];                 /**< \brief 110, */
       __I  Ifx_UReg_8Bit                       reserved_170[32];       /**< \brief 170, \internal Reserved */
       __IO Ifx_SRC_EGTM_ATOM                   ATOM[3];                /**< \brief 190, */
} Ifx_SRC_EGTM;

/******************************************************************************/
/** \addtogroup IfxSfr_Src_Registers_struct
 * \{  */
/******************************************************************************/
/** \name Object L0
 * \{  */

/** \brief SRC object */
typedef volatile struct _Ifx_SRC
{
       __IO Ifx_SRC_CPU                         CPU[6];                 /**< \brief 0, CPU0 software breakpoint service request*/
       __IO Ifx_SRC_CPUCS                       CPUCS;                  /**< \brief 18, CPUCS software breakpoint service request*/
       __I  Ifx_UReg_8Bit                       reserved_1C[4];         /**< \brief 1C, \internal Reserved */
       __IO Ifx_SRC_STMCPU                      STMCPU[6];              /**< \brief 20, */
       __I  Ifx_UReg_8Bit                       reserved_1A0[8];        /**< \brief 1A0, \internal Reserved */
       __IO Ifx_SRC_SRCR                        STMCPUCSSR2;            /**< \brief 1A8, STM1 CPUCS service request 0*/
       __IO Ifx_SRC_SRCR                        STMCPUCSSR3;            /**< \brief 1AC, STM1 CPUCS service request 1*/
       __I  Ifx_UReg_8Bit                       reserved_1B0[48];       /**< \brief 1B0, \internal Reserved */
       __IO Ifx_SRC_SBCU                        SBCU;                   /**< \brief 1E0, SBCU QOS control service request*/
       __I  Ifx_UReg_8Bit                       reserved_1EC[12];       /**< \brief 1EC, \internal Reserved */
       __IO Ifx_SRC_COMBCU                      COMBCU;                 /**< \brief 1F8, COMBCU QOS control service request*/
       __I  Ifx_UReg_8Bit                       reserved_204[12];       /**< \brief 204, \internal Reserved */
       __IO Ifx_SRC_TBCU                        TBCU;                   /**< \brief 210, TBCU CS service request*/
       __I  Ifx_UReg_8Bit                       reserved_218[4];        /**< \brief 218, \internal Reserved */
       __IO Ifx_SRC_CSBCU                       CSBCU;                  /**< \brief 21C, CSBCU CS service request*/
       __I  Ifx_UReg_8Bit                       reserved_224[12];       /**< \brief 224, \internal Reserved */
       __IO Ifx_SRC_SRCR                        QOSARP[8];              /**< \brief 230, QOS ARP 0 service request*/
       __IO Ifx_SRC_SRCR                        TRIF;                   /**< \brief 250, TRIF status service request*/
       __I  Ifx_UReg_8Bit                       reserved_254[12];       /**< \brief 254, \internal Reserved */
       __IO Ifx_SRC_SRI                         SRI[8];                 /**< \brief 260, SRI domain 0 special master service request*/
       __IO Ifx_SRC_SRCR                        CERBERUS[2];            /**< \brief 2A0, Cerberus service request 0*/
       __I  Ifx_UReg_8Bit                       reserved_2A8[8];        /**< \brief 2A8, \internal Reserved */
       __IO Ifx_SRC_ASCLIN                      ASCLIN[28];             /**< \brief 2B0, ASCLIN0 error service request*/
       __I  Ifx_UReg_8Bit                       reserved_400[16];       /**< \brief 400, \internal Reserved */
       __IO Ifx_SRC_VMT                         VMT[7];                 /**< \brief 410, VMT0 servide request*/
       __I  Ifx_UReg_8Bit                       reserved_42C[52];       /**< \brief 42C, \internal Reserved */
       __IO Ifx_SRC_QSPI                        QSPI[8];                /**< \brief 460, QSPI0 user defined service request*/
       __I  Ifx_UReg_8Bit                       reserved_500[64];       /**< \brief 500, \internal Reserved */
       __IO Ifx_SRC_HSCT                        HSCT[2];                /**< \brief 540, HSCT0 service request*/
       __I  Ifx_UReg_8Bit                       reserved_548[8];        /**< \brief 548, \internal Reserved */
       __IO Ifx_SRC_HSSL                        HSSL[2];                /**< \brief 550, HSS0 exception service request*/
       __I  Ifx_UReg_8Bit                       reserved_5D8[8];        /**< \brief 5D8, \internal Reserved */
       __IO Ifx_SRC_I2C                         I2C[3];                 /**< \brief 5E0, */
       __IO Ifx_SRC_SENT                        SENT[2];                /**< \brief 610, */
       __IO Ifx_SRC_MSC                         MSC[1];                 /**< \brief 660, */
       __I  Ifx_UReg_8Bit                       reserved_674[92];       /**< \brief 674, \internal Reserved */
       __IO Ifx_SRC_SRCR                        FCE;                    /**< \brief 6D0, FCE error service request*/
       __I  Ifx_UReg_8Bit                       reserved_6D4[12];       /**< \brief 6D4, \internal Reserved */
       __IO Ifx_SRC_DMA0                        DMA0;                   /**< \brief 6E0, */
       __IO Ifx_SRC_DMA1                        DMA1;                   /**< \brief 930, */
       __I  Ifx_UReg_8Bit                       reserved_A80[256];      /**< \brief A80, \internal Reserved */
       __IO Ifx_SRC_SDMMC                       SDMMC[1];               /**< \brief B80, SDMMC0 DMA ready service request*/
       __I  Ifx_UReg_8Bit                       reserved_B88[8];        /**< \brief B88, \internal Reserved */
       __IO Ifx_SRC_GETH                        GETH[1];                /**< \brief B90, GETH0 INTR service request*/
       __I  Ifx_UReg_8Bit                       reserved_BE4[12];       /**< \brief BE4, \internal Reserved */
       __IO Ifx_SRC_LETH                        LETH[1];                /**< \brief BF0, LETH0 INTR service request*/
       __I  Ifx_UReg_8Bit                       reserved_C44[12];       /**< \brief C44, \internal Reserved */
       __IO Ifx_SRC_CAN                         CAN[5];                 /**< \brief C50, */
       __I  Ifx_UReg_8Bit                       reserved_D90[64];       /**< \brief D90, \internal Reserved */
       __IO Ifx_SRC_CANXL                       CANXL[4];               /**< \brief DD0, CANXL0 safety service request*/
       __I  Ifx_UReg_8Bit                       reserved_E00[16];       /**< \brief E00, \internal Reserved */
       __IO Ifx_SRC_TMADC                       TMADC[4];               /**< \brief E10, */
       __I  Ifx_UReg_8Bit                       reserved_E70[96];       /**< \brief E70, \internal Reserved */
       __IO Ifx_SRC_ADC                         ADC;                    /**< \brief ED0, */
       __I  Ifx_UReg_8Bit                       reserved_F00[464];      /**< \brief F00, \internal Reserved */
       __IO Ifx_SRC_CDSP                        CDSP[2];                /**< \brief 10D0, */
       __I  Ifx_UReg_8Bit                       reserved_10E8[200];     /**< \brief 10E8, \internal Reserved */
       __IO Ifx_SRC_ERAY                        ERAY[2];                /**< \brief 11B0, */
       __IO Ifx_SRC_SRCR                        NVMHOST;                /**< \brief 1210, NVM HOST service request*/
       __IO Ifx_SRC_SRCR                        NVMCSRM;                /**< \brief 1214, NVM CSRM service request*/
       __I  Ifx_UReg_8Bit                       reserved_1218[8];       /**< \brief 1218, \internal Reserved */
       __IO Ifx_SRC_CSS                         CSS[1];                 /**< \brief 1220, */
       __I  Ifx_UReg_8Bit                       reserved_1288[8];       /**< \brief 1288, \internal Reserved */
       __IO Ifx_SRC_SRCR                        RNG;                    /**< \brief 1290, RNG service request*/
       __I  Ifx_UReg_8Bit                       reserved_1294[4];       /**< \brief 1294, \internal Reserved */
       __IO Ifx_SRC_SRCR                        PKC;                    /**< \brief 1298, PKC service request*/
       __I  Ifx_UReg_8Bit                       reserved_129C[4];       /**< \brief 129C, \internal Reserved */
       __IO Ifx_SRC_SRCR                        SCUERU[8];              /**< \brief 12A0, SCU ERU service request 0*/
       __I  Ifx_UReg_8Bit                       reserved_12C0[16];      /**< \brief 12C0, \internal Reserved */
       __IO Ifx_SRC_SRCR                        PMSSR[8];               /**< \brief 12D0, Power management system service request 0*/
       __IO Ifx_SRC_SRCR                        SMM[2];                 /**< \brief 12F0, SMM system service request 0*/
       __I  Ifx_UReg_8Bit                       reserved_12F8[8];       /**< \brief 12F8, \internal Reserved */
       __IO Ifx_SRC_SMU                         SMU;                    /**< \brief 1300, SMU_Security service request*/
       __I  Ifx_UReg_8Bit                       reserved_131C[4];       /**< \brief 131C, \internal Reserved */
       __IO Ifx_SRC_PSI5                        PSI5;                   /**< \brief 1320, */
       __IO Ifx_SRC_PSI5S                       PSI5S[1];               /**< \brief 1340, */
       __I  Ifx_UReg_8Bit                       reserved_1360[32];      /**< \brief 1360, \internal Reserved */
       __IO Ifx_SRC_PPU                         PPU;                    /**< \brief 1380, PPU inter-core interrupt (ICI) service request*/
       __IO Ifx_SRC_PCIE                        PCIE[2];                /**< \brief 1390, */
       __IO Ifx_SRC_XSPI                        XSPI;                   /**< \brief 1450, xSPI interface error service request*/
       __I  Ifx_UReg_8Bit                       reserved_1458[8];       /**< \brief 1458, \internal Reserved */
       __IO Ifx_SRC_GPSR                        GPSR[6];                /**< \brief 1460, */
       __IO Ifx_SRC_GPSR                        GPSR6;                  /**< \brief 1520, */
       __IO Ifx_SRC_GPSR                        GPSR7;                  /**< \brief 1540, */
       __IO Ifx_SRC_SRCR                        DRE[16];                /**< \brief 1560, DRE service request  0*/
       __I  Ifx_UReg_8Bit                       reserved_15A0[2160];    /**< \brief 15A0, \internal Reserved */
       __IO Ifx_SRC_EGTM                        EGTM;                   /**< \brief 1E10, */
       __I  Ifx_UReg_8Bit                       reserved_1FD0[8240];    /**< \brief 1FD0, \internal Reserved */
} Ifx_SRC;

/** \}  */
/******************************************************************************/
/** \}  */


/******************************************************************************/

/******************************************************************************/

#endif /* IFXSRC_REGDEF_H */
