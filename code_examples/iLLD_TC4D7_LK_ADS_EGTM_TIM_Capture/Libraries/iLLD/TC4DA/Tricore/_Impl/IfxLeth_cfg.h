/**
 * \file IfxLeth_cfg.h
 * \brief LETH on-chip implementation data
 * \ingroup IfxLld_Leth
 *
 * \version iLLD-TC4-v2.2.0
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:
 *
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 *
 * Implementation layer
 *
 * \defgroup IfxLld_Leth LETH
 * \ingroup IfxLld
 * \defgroup IfxLld_Leth_Impl Implementation
 * \ingroup IfxLld_Leth
 * \defgroup IfxLld_Leth_Std Standard Driver
 * \ingroup IfxLld_Leth
 * \defgroup IfxLld_Leth_Impl_Enum Enumerations
 * \ingroup IfxLld_Leth_Impl
 */

#ifndef IFXLETH_CFG_H
#define IFXLETH_CFG_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "Cpu/Std/Ifx_Types.h"
#include "IfxLeth_reg.h"

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/

/** \brief Number of Tx queues in MTL block
 */
#define IFXLETH_NUM_TX_QUEUES     (5)

/** \brief Number of Rx queues in MTL block
 */
#define IFXLETH_NUM_RX_QUEUES     (2)

/** \brief Number of Leth instances
 */
#define IFXLETH_NUM_MODULES       (1)

/** \brief Number of Tx DMA channels of DMA
 */
#define IFXLETH_NUM_TX_CHANNELS   (8)

/** \brief Number of Rx Channels of DMA
 */
#define IFXLETH_NUM_RX_CHANNELS   (8)

/** \brief Maximum timeout value to wait against at
 */
#define IFXLETH_MAX_TIMEOUT_VALUE (1000)

/** \brief MAX wait time for polling the MDIO transfer to complete
 */
#define IFXLETH_MDIO_MAX_TIMEOUT (1000)

/** \brief Number of DMA channels
 */
#define IFXLETH_NUM_DMA_CHANNELS  (8)

/** \brief Number of Ports
 */
#define IFXLETH_NUM_PORTS         (4)

/** \brief Offset for bitfields in Ifx_LETH_BRIDGE_PORT_TX_WRR_WEIGHTS_Bits.TX_WRR_PORTi and Ifx_LETH_BRIDGE_PORT_RX_WRR_WEIGHTS_Bits.RX_WRR_PORTi */
#define IFXLETH_BRIDGE_WRR_WEIGHTS_PORT_OFFSET (8)

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/** \addtogroup IfxLld_Leth_Impl_Enum
 * \{ */
/** \brief List of the available Leth instances
 */
typedef enum
{
    IfxLeth_Index_none = -1,  /**< \brief Not Selected */
    IfxLeth_Index_0    = 0,   /**< \brief LETH index 0  */
} IfxLeth_Index;

/** \brief LETH PORT Index
 */
typedef enum
{
    IfxLeth_PortIndex_0 = 0,   /**< \brief Leth Port 0 */
    IfxLeth_PortIndex_1 = 1,   /**< \brief Leth Port 1 */
    IfxLeth_PortIndex_2 = 2,   /**< \brief Leth Port 2 */
    IfxLeth_PortIndex_3 = 3    /**< \brief Leth Port 3 */
} IfxLeth_PortIndex;

/** \brief MTL Rx Queue Index
 */
typedef enum
{
    IfxLeth_RxMtlQueue_0 = 0,  /**< \brief Rx Queue 0 */
    IfxLeth_RxMtlQueue_1 = 1,  /**< \brief Rx Queue 1 */
} IfxLeth_RxMtlQueue;

/** \brief MTL Tx Queue Index
 */
typedef enum
{
    IfxLeth_TxMtlQueue_0 = 0,  /**< \brief Tx Queue 0 */
    IfxLeth_TxMtlQueue_1 = 1,  /**< \brief Tx Queue 1 */
    IfxLeth_TxMtlQueue_2 = 2,  /**< \brief Tx Queue 2 */
    IfxLeth_TxMtlQueue_3 = 3,  /**< \brief Tx Queue 3 */
    IfxLeth_TxMtlQueue_4 = 4,  /**< \brief Tx Queue 4 */
} IfxLeth_TxMtlQueue;

/** \} */

/******************************************************************************/
/*-------------------Global Exported Variables/Constants----------------------*/
/******************************************************************************/

IFX_EXTERN IFX_CONST IfxModule_IndexMap IfxLeth_cfg_indexMap[IFXLETH_NUM_MODULES];

#endif /* IFXLETH_CFG_H */
