/**
 * \file IfxHsphy_Xpcs.h
 * \brief HSPHY XPCS details
 * \ingroup IfxLld_Hsphy
 *
 * \version iLLD-TC4-v2.1.1
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 *
 * \defgroup IfxLld_Hsphy_Xpcs XPCS
 * \ingroup IfxLld_Hsphy
 * \defgroup IfxLld_Hsphy_Xpcs_Enumerations Enumerations
 * \ingroup IfxLld_Hsphy_Xpcs
 * \defgroup IfxLld_Hsphy_Xpcs_Data Structures Data Structures
 * \ingroup IfxLld_Hsphy_Xpcs
 * \defgroup IfxLld_Hsphy_Xpcs_Config Variable Config Variable
 * \ingroup IfxLld_Hsphy_Xpcs
 * \defgroup IfxLld_Hsphy_Xpcs_Functions Functions
 * \ingroup IfxLld_Hsphy_Xpcs
 */

#ifndef IFXHSPHY_XPCS_H
#define IFXHSPHY_XPCS_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "Hsphy/Std/IfxHsphy.h"

/** \addtogroup IfxLld_Hsphy_Xpcs_Functions
 * \{ */

/******************************************************************************/
/*-------------------------Global Function Prototypes-------------------------*/
/******************************************************************************/

/** \brief Initialize XPCS data path
 * \param hsphyRegPtr HPSHY register pointer
 * \param xpcsIndex xpcsIndex XPCS index
 * \return returns True if time out error occurs
 */
IFX_EXTERN boolean IfxHsphy_Xpcs_sgmiiDataPathInit(Ifx_HSPHY *hsphyRegPtr, IfxHsphy_XpcsIndex xpcsIndex);

/** \} */

/******************************************************************************/
/*-------------------------Global Function Prototypes-------------------------*/
/******************************************************************************/

/** \brief Resets the xpcs
 * \param hsphyRegPtr HPSHY register pointer
 * \param xpcs Target device id
 * \return returns True if time out error occurs
 */
IFX_EXTERN boolean IfxHsphy_Xpcs_reset(Ifx_HSPHY *hsphyRegPtr, const IfxHsphy_GethXpcsParams *xpcs);

/** \brief API for configuring the speed selected
 * \param hsphyRegPtr HPSHY register pointer
 * \param trgtSpeed target device speed selected
 * \param xpcs Target device id
 * \return returns the status as success/ time out /invalid config error
 */
IFX_EXTERN IfxHsphy_Geth_SgmiiSpeedConfigStatus IfxHsphy_Xpcs_setSgmiiSpeedMode(Ifx_HSPHY *hsphyRegPtr, IfxHsphy_TrgtDeviceSpeed trgtSpeed, const IfxHsphy_GethXpcsParams *xpcs);

/** \brief API for configuring the speed selected
 * \param hsphyRegPtr hsphy register pointer
 * \param trgtSpeed target device speed selected
 * \param xpcs xpcs reference
 * \return returns True if time out error occurs
 */
IFX_EXTERN boolean IfxHsphy_Xpcs_setUsxgmiiSpeedMode(Ifx_HSPHY *hsphyRegPtr, IfxHsphy_TrgtDeviceSpeed trgtSpeed, const IfxHsphy_GethXpcsParams *xpcs);
#endif /* IFXHSPHY_XPCS_H */
