/**
 * \file IfxTri_reg.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_DFT/V0.2.1.1.13
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Tri_Registers_Cfg Tri address
 * \ingroup IfxSfr_Tri_Registers
 * 
 * \defgroup IfxSfr_Tri_Registers_Cfg_BaseAddress Base address
 * \ingroup IfxSfr_Tri_Registers_Cfg
 *
 * \defgroup IfxSfr_Tri_Registers_Cfg_Tri 2-TRI
 * \ingroup IfxSfr_Tri_Registers_Cfg
 *
 *
 */
#ifndef IFXTRI_REG_H
#define IFXTRI_REG_H 1
/******************************************************************************/
#include "IfxTri_regdef.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/

/** \addtogroup IfxSfr_Tri_Registers_Cfg_BaseAddress
 * \{  */

/** \brief TRI object */
#define MODULE_TRI /*lint --e(923, 9078)*/ ((*(Ifx_TRI*)0xF0068000u))
/** \}  */


/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Tri_Registers_Cfg_Tri
 * \{  */
/** \brief 0, Clock control register */
#define TRI_CLC /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_CLC*)0xF0068000u)

/** \brief 8, Module identification register */
#define TRI_ID /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_ID*)0xF0068008u)

/** \brief 20, PROT register endinit */
#define TRI_PROTE /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_PROT*)0xF0068020u)

/** \brief 24, PROT register safe endinit */
#define TRI_PROTSE /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_PROT*)0xF0068024u)

/** \brief 28, PROT register cyber-secure endinit */
#define TRI_PROTCSE /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_PROT*)0xF0068028u)

/** \brief 40, Write access enable register A */
#define TRI_ACCEN_WRA /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_ACCEN_WRA*)0xF0068040u)

/** \brief 44, Write access enable register B */
#define TRI_ACCEN_WRB /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_ACCEN_WRB_FPI*)0xF0068044u)

/** \brief 48, Read access enable register A */
#define TRI_ACCEN_RDA /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_ACCEN_RDA*)0xF0068048u)

/** \brief 4C, Read access enable register B */
#define TRI_ACCEN_RDB /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_ACCEN_RDB_FPI*)0xF006804Cu)

/** \brief 50, VM access enable register */
#define TRI_ACCEN_VM /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_ACCEN_VM*)0xF0068050u)

/** \brief 54, PRS access enable register */
#define TRI_ACCEN_PRS /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_ACCEN_PRS*)0xF0068054u)

/** \brief 0, Logic BIST request register */
#define TRI_LBIST_CTRL_REQ /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_REQ*)0xF0068060u)

/** \brief 4, Logic BIST configuration register A */
#define TRI_LBIST_CTRL_CFGA /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_CFGA*)0xF0068064u)

/** \brief 8, Logic BIST configuration register B */
#define TRI_LBIST_CTRL_CFGB /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_CFGB*)0xF0068068u)

/** \brief C, Logic BIST configuration register C */
#define TRI_LBIST_CTRL_CFGC /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_CFGC*)0xF006806Cu)

/** \brief 10, Logic BIST configuration register D */
#define TRI_LBIST_CTRL_CFGD /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_CFGD*)0xF0068070u)

/** \brief 14, Logic BIST configuration register E */
#define TRI_LBIST_CTRL_CFGE /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_CFGE*)0xF0068074u)

/** \brief 18, Logic BIST configuration register F */
#define TRI_LBIST_CTRL_CFGF /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_CFGF*)0xF0068078u)

/** \brief 1C, Logic BIST domain selection */
#define TRI_LBIST_CTRL_DOM /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_CTRL_DOM*)0xF006807Cu)

/** \brief 20, Logic BIST status register */
#define TRI_LBIST_STAT_TEST /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_TEST*)0xF0068080u)

/** \brief 24, Logic BIST result 0 register */
#define TRI_LBIST_STAT_RES0_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF0068084u)

/** \brief 28, Logic BIST result 1 register */
#define TRI_LBIST_STAT_RES1_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF0068088u)

/** \brief 2C, Logic BIST result 2 register */
#define TRI_LBIST_STAT_RES2_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF006808Cu)

/** \brief 30, Logic BIST result 3 register */
#define TRI_LBIST_STAT_RES3_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF0068090u)

/** \brief 34, Logic BIST result 4 register */
#define TRI_LBIST_STAT_RES4_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF0068094u)

/** \brief 38, Logic BIST result 5 register */
#define TRI_LBIST_STAT_RES5_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF0068098u)

/** \brief 3C, Logic BIST result 6 register */
#define TRI_LBIST_STAT_RES6_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF006809Cu)

/** \brief 40, Logic BIST result 7 register */
#define TRI_LBIST_STAT_RES7_SIG /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_LBIST_STAT_RES_SIG*)0xF00680A0u)

/** \brief 98, Debug over CAN enabling control */
#define TRI_DXCCTR /*lint --e(923, 9078)*/ (*(volatile Ifx_TRI_DXCCTR*)0xF00680F8u)


/** \}  */

/******************************************************************************/

/******************************************************************************/

#endif /* IFXTRI_REG_H */
