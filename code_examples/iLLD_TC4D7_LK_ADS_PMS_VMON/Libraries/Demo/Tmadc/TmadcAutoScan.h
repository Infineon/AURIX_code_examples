/**
 * \file TmadcAutoScanDemo.h
 * \brief Header file of Tmadc AutoScan Demo
 *
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.

 *
 */

#ifndef TMADCAUTOSCAN_H
#define TMADCAUTOSCAN_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/
#include "Software_Config.h"
#include <Adc/Std/IfxAdc.h>
#include <Adc/Tmadc/IfxAdc_Tmadc.h>

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/
/* we are using 7 groups a 8 channels + 1 group a 16 channels -> 72 complete */
#define USED_GROUPS           8
#define MAX_ANALOG_CHANNELS   72

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-----------------------------Data Structures--------------------------------*/
/******************************************************************************/
typedef struct
{
    IfxAdc_Tmadc vadc[IFXADC_NUM_TMADC]; /* TMADC handle */
    IfxAdc_Tmadc_Group adcGroup[USED_GROUPS];
    IfxAdc_Tmadc_Ch adcChannel[MAX_ANALOG_CHANNELS];
} App_TmadcAutoScan;

/******************************************************************************/
/*------------------------------Global variables------------------------------*/
/******************************************************************************/
#if defined(__DCC__)
    #if CPU_WHICH_SERVICE_TMADC == 0
	#pragma section DATA ".data_cpu0" ".bss_cpu0" far-absolute RW
    #elif ((CPU_WHICH_SERVICE_TMADC == 1) && (CPU_WHICH_SERVICE_TMADC < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu1" ".bss_cpu1" far-absolute RW
    #elif ((CPU_WHICH_SERVICE_TMADC == 2) && (CPU_WHICH_SERVICE_TMADC < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu2" ".bss_cpu2" far-absolute RW
    #elif ((CPU_WHICH_SERVICE_TMADC == 3) && (CPU_WHICH_SERVICE_TMADC < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu3" ".bss_cpu3" far-absolute RW
    #elif ((CPU_WHICH_SERVICE_TMADC == 4) && (CPU_WHICH_SERVICE_TMADC < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu4" ".bss_cpu4" far-absolute RW
    #elif ((CPU_WHICH_SERVICE_TMADC == 5) && (CPU_WHICH_SERVICE_TMADC < IFXCPU_NUM_MODULES))
	#pragma section DATA ".data_cpu5" ".bss_cpu5" far-absolute RW
	#endif
#endif

IFX_EXTERN App_TmadcAutoScan g_TmadcAutoScan;

#if defined(__DCC__)
#pragma section DATA RW
#endif

/******************************************************************************/
/*-------------------------Function Prototypes--------------------------------*/
/******************************************************************************/
#if (((CPU_WHICH_SERVICE_TMADC == 4) || (CPU_WHICH_SERVICE_TMADC == 5)) && defined(__HIGHTEC__) && !defined(__clang__))
#define PREPARAM
#define POSTPARAM __attribute__((longcall))
#elif (((CPU_WHICH_SERVICE_TMADC == 4) || (CPU_WHICH_SERVICE_TMADC == 5)) && defined(__TASKING__))
#define PREPARAM
#define POSTPARAM __attribute__((abs_addr))
#elif (((CPU_WHICH_SERVICE_TMADC == 4) || (CPU_WHICH_SERVICE_TMADC == 5)) && defined(__ghs__))
#define PREPARAM __farcall
#define POSTPARAM
#else
#define PREPARAM
#define POSTPARAM
#endif

IFX_EXTERN PREPARAM void TmadcAutoScan_init(void) POSTPARAM;
IFX_EXTERN PREPARAM void TmadcAutoScan_run(void) POSTPARAM;

#undef POSTPARAM
#undef PREPARAM

#endif
