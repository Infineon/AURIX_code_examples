/**
 * \file TLF4D985.h
 * \brief Header file of TLF4D985 communication and initialization
 *
 * \copyright Copyright (c) 2023 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.

 *
 */

#ifndef TLF4D985_H
#define TLF4D985_H 1

/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/
#include "Software_Config.h"
#include <Cpu/Std/Ifx_Types.h>

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*--------------------------------Enumerations--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-----------------------------Data Structures--------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*------------------------------Global variables------------------------------*/
/******************************************************************************/

/******************************************************************************/
/*-------------------------Function Prototypes--------------------------------*/
/******************************************************************************/
#if (((CPU_WHICH_SERVICE_TLF == 4) || (CPU_WHICH_SERVICE_TLF == 5)) && defined(__HIGHTEC__) && !defined(__clang__))
#define PREPARAM
#define POSTPARAM __attribute__((longcall))
#elif (((CPU_WHICH_SERVICE_TLF == 4) || (CPU_WHICH_SERVICE_TLF == 5)) && defined(__TASKING__))
#define PREPARAM
#define POSTPARAM __attribute__((abs_addr))
#elif (((CPU_WHICH_SERVICE_TLF == 4) || (CPU_WHICH_SERVICE_TLF == 5)) && defined(__ghs__))
#define PREPARAM __farcall
#define POSTPARAM
#else
#define PREPARAM
#define POSTPARAM
#endif

IFX_EXTERN PREPARAM void IfxTLF4D985_init(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_disable_window_watchdog(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_enable_window_watchdog(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_disable_functional_watchdog(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_enable_functional_watchdog(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_disable_err0_pin_monitor(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_enable_err0_pin_monitor(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_disable_err1_pin_monitor(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_enable_err1_pin_monitor(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_disable_err2_pin_monitor(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_enable_err2_pin_monitor(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_goto_normal_state(void) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_goto_standby_sleep_state(void) POSTPARAM;
IFX_EXTERN PREPARAM uint32 IfxTLF4D985_read_write(uint32 send_data) POSTPARAM;
IFX_EXTERN PREPARAM uint32 IfxTLF4D985_read_register(uint16 regAddr) POSTPARAM;
IFX_EXTERN PREPARAM void IfxTLF4D985_write_register(uint8 regAddr, uint16 regValue) POSTPARAM;

#undef POSTPARAM
#undef PREPARAM

#endif  /* TLF4D985_H */
