/**
 * \file Configuration.h
 * \brief Global configuration of the project
 *
 * \copyright Copyright (c) 2022 Infineon Technologies AG. All rights reserved.
 *
 *
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or
 * organization obtaining a copy of the software and accompanying
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.

 *
 */

#ifndef SW_CONFIG_H
#define SW_CONFIG_H
/******************************************************************************/
/*----------------------------------Includes----------------------------------*/
/******************************************************************************/

#include "IfxCan_cfg.h"

/******************************************************************************/
/*-----------------------------------Macros-----------------------------------*/
/******************************************************************************/
/* set the values for systemtimer */
#define IFX_CFG_STM_TICKS_PER_MS (IFX_STM_RESOULTION/1000) /**< \brief Number of STM ticks per millisecond, in case of 400MHz STM frequency */

/* define the CPU which service the selected peripherals */
//#define CPU_WHICH_SERVICE_ETHERNET     0     /**< \brief Define the CPU which service the Ethernet and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_CAN          1     /**< \brief Define the CPU which service the Can and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_MEASUREMENT  2     /**< \brief Define the CPU which service the Measurement and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_PERF_MEAS    3     /**< \brief Define the CPU which service the Performance Measurement and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_TMADC        4     /**< \brief Define the CPU which service the Evadc and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_LIN          5     /**< \brief Define the CPU which service the Lin and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_ERAY         3     /**< \brief Define the CPU which service the Eray and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_TLF          0     /**< \brief Define the CPU which service the Tlf38885 and where functions/variables are located.  */
#define CPU_WHICH_SERVICE_EEPROM       1     /**< \brief Define the CPU which service the Eeprom and where functions/variables are located. */
#define CPU_WHICH_SERVICE_ASC_SHELL    0     /**< \brief Define the CPU which service the Asclin shell and where functions/variables are located.  */

#if (CPU_WHICH_SERVICE_ASC_SHELL != CPU_WHICH_SERVICE_ETHERNET)
#error "Please set CPU_WHICH_SERVICE_ASC_SHELL and CPU_WHICH_SERVICE_ETHERNET to the same CPU otherwise there can be occur problem with printout from Ethernet because there is no multicore handling in iLLD"
#endif

/**
 * \name Interrupt priority configuration for CPU.
 * The interrupt priority range is [1,255]
 * \{
 */

#define ISR_PRIORITY_MEASUREMENT    1  /**< \brief Define the GPT compare match interrupt priority.  */

#define ISR_PRIORITY_CPUSRV0        2  /**< \brief Define the conio periodic interrupt priority must be lower than QSPIx priorities.  */

#define ISR_PRIORITY_ASC_SHELL_RX   4   /**< \brief Define the ASC SHELL receive interrupt priority.  */

#define ISR_PRIORITY_ASC_SHELL_TX   5   /**< \brief Define the ASC SHELL transmit interrupt priority.  */

#define ISR_PRIORITY_ASC_SHELL_EX   6   /**< \brief Define the ASC SHELL error interrupt priority.  */

#define ISR_PRIORITY_VADC_CH0       10  /**< \brief Define the VADC Channel 0 interrupt priority.  */
/* block minimum the next USED_GROUPS numbers for other groups, in our case 2 */

#define ISR_PRIORITY_TLF_QSPI_ER    23  /**< \brief Define the TLF error interrupt priority.  */

#define ISR_PRIORITY_TLF_QSPI_TX    33  /**< \brief Define the TLF transmit interrupt priority.  */

#define ISR_PRIORITY_TLF_QSPI_RX    53  /**< \brief Define the TLF receive interrupt priority.  */

#define ISR_PRIORITY_ERAY_INT0      55  /**< \brief Define the Eray interrupt 0 priority.  */

#define ISR_PRIORITY_ERAY_INT1      56  /**< \brief Define the Eray interrupt 1 priority.  */

#define ISR_PRIORITY_ERAY_NDAT1     57  /**< \brief Define the Eray new data interrupt 1 priority.  */

#define ISR_PRIORITY_CAN00_TX       60  /**< \brief Define the CAN0 node 0  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN00_RX       80  /**< \brief Define the CAN0 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN01_TX       61  /**< \brief Define the CAN0 node 1  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN01_RX       81  /**< \brief Define the CAN0 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN02_TX       62  /**< \brief Define the CAN0 node 2  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN02_RX       82  /**< \brief Define the CAN0 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN03_TX       63  /**< \brief Define the CAN0 node 3  transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN03_RX       83  /**< \brief Define the CAN0 node 3 receive data interrupt priority.  */

/* only used when device has 2 modules */
#if (IFXCAN_NUM_MODULES > 1)
#define ISR_PRIORITY_CAN10_TX       64  /**< \brief Define the CAN1 node 0 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN10_RX       84  /**< \brief Define the CAN1 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN11_TX       65  /**< \brief Define the CAN1 node 1 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN11_RX       85  /**< \brief Define the CAN1 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN12_TX       66  /**< \brief Define the CAN1 node 2 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN12_RX       86  /**< \brief Define the CAN1 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN13_TX       67  /**< \brief Define the CAN1 node 3 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN13_RX       87  /**< \brief Define the CAN1 node 3 receive data interrupt priority.  */
#endif

/* only used when device has 3 modules */
#if (IFXCAN_NUM_MODULES > 2)
#define ISR_PRIORITY_CAN20_TX       68  /**< \brief Define the CAN2 node 0 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN20_RX       88  /**< \brief Define the CAN2 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN21_TX       69  /**< \brief Define the CAN2 node 1 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN21_RX       89  /**< \brief Define the CAN2 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN22_TX       70  /**< \brief Define the CAN2 node 2 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN22_RX       90  /**< \brief Define the CAN2 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN23_TX       71  /**< \brief Define the CAN2 node 3 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN23_RX       91  /**< \brief Define the CAN2 node 3 receive data interrupt priority.  */
#endif

/* only used when device has 4 modules */
#if (IFXCAN_NUM_MODULES > 3)
#define ISR_PRIORITY_CAN30_TX       72  /**< \brief Define the CAN3 node 0 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN30_RX       92  /**< \brief Define the CAN3 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN31_TX       73  /**< \brief Define the CAN3 node 1 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN31_RX       93  /**< \brief Define the CAN3 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN32_TX       74  /**< \brief Define the CAN3 node 2 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN32_RX       94  /**< \brief Define the CAN3 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN33_TX       75  /**< \brief Define the CAN3 node 3 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN33_RX       95  /**< \brief Define the CAN3 node 3 receive data interrupt priority.  */
#endif

/* only used when device has 5 modules */
#if (IFXCAN_NUM_MODULES > 4)
#define ISR_PRIORITY_CAN40_TX       76  /**< \brief Define the CAN3 node 0 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN40_RX       96  /**< \brief Define the CAN3 node 0 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN41_TX       77  /**< \brief Define the CAN3 node 1 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN41_RX       97  /**< \brief Define the CAN3 node 1 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN42_TX       78  /**< \brief Define the CAN3 node 2 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN42_RX       98  /**< \brief Define the CAN3 node 2 receive data interrupt priority.  */
#define ISR_PRIORITY_CAN43_TX       79  /**< \brief Define the CAN3 node 3 transmit data interrupt priority.  */
#define ISR_PRIORITY_CAN43_RX       99  /**< \brief Define the CAN3 node 3 receive data interrupt priority.  */
#endif

#define ISR_PRIORITY_OS_TICK       100  /**< \brief Define the timer interrupt priority.  */

#define ISR_PRIORITY_GETH_TX0      101  /**< \brief Define the Ethernet 0 transmit interrupt priority.  */

#define ISR_PRIORITY_GETH_RX0      111  /**< \brief Define the Ethernet 0 receive interrupt priority.  */

#if (IFXGETH_NUM_PORTS > 1)
#define ISR_PRIORITY_GETH_TX1      102  /**< \brief Define the Ethernet 1 transmit interrupt priority.  */

#define ISR_PRIORITY_GETH_RX1      112  /**< \brief Define the Ethernet 1 receive interrupt priority.  */
#endif

#define ISR_PRIORITY_PERF_MEAS     255  /**< \brief Define the TOMx_x interrupt priority.  */

#define REFRESH_MEASUREMENT 50		// Refresh rate [ms] for temperature and voltage measurement

/* board with can be used with this software */
#define BOARD_TEXT          "TC4D7XP_A-Step_CC_COM (KIT_A3G_TC4D7_LITE)"

#define SW_VERSION_TEXT     "SW V1.0"

/* here we define our Asclin shell values */
/* our TriBoard use P14.0 and P14.1 as ASC via USB */
#define CFG_ASC_SHELL_BAUDRATE      (115200.0)                   /**< \brief Define the Baudrate */
//#define ASC_SHELL_TX_PIN            IfxAsclin0_TX_P14_0_OUT
//#define ASC_SHELL_RX_PIN            IfxAsclin0_RXA_P14_1_IN

#define CFG_ASC_RX_BUFFER_SIZE      (512)                        /**< \brief Define the Rx buffer size in byte. */
#define CFG_ASC_TX_BUFFER_SIZE      (6 * 1024)                   /**< \brief Define the Tx buffer size in byte. */


#endif //SW_CONFIG_H
