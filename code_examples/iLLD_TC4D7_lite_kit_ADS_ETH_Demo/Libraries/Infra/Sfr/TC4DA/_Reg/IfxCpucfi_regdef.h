/**
 * \file IfxCpucfi_regdef.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_CPU/V0.2.1.1.11
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Cpucfi_Registers Cpucfi Registers
 * \ingroup IfxSfr
 * 
 * \defgroup IfxSfr_Cpucfi_Registers_Bitfields Bitfields
 * \ingroup IfxSfr_Cpucfi_Registers
 * 
 * \defgroup IfxSfr_Cpucfi_Registers_union Register unions
 * \ingroup IfxSfr_Cpucfi_Registers
 * 
 * \defgroup IfxSfr_Cpucfi_Registers_struct Memory map
 * \ingroup IfxSfr_Cpucfi_Registers
 */
#ifndef IFXCPUCFI_REGDEF_H
#define IFXCPUCFI_REGDEF_H 1
/******************************************************************************/
#include "Ifx_TypesReg.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/


/** \addtogroup IfxSfr_Cpucfi_Registers_Bitfields
 * \{  */
/** \brief PRS access enable register */
typedef struct _Ifx_CPUCFI_ACCEN_PRS_Bits
{
    __IO Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for PRS q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [15:8] \internal Reserved */
    __IO Ifx_Strict_32Bit WR00:1;          /**< \brief [16:16] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR01:1;          /**< \brief [17:17] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR02:1;          /**< \brief [18:18] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR03:1;          /**< \brief [19:19] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR04:1;          /**< \brief [20:20] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR05:1;          /**< \brief [21:21] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR06:1;          /**< \brief [22:22] Write access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit WR07:1;          /**< \brief [23:23] Write access enable for PRS q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [31:24] \internal Reserved */
} Ifx_CPUCFI_ACCEN_PRS_Bits;

/** \brief PRS access enable register */
typedef struct _Ifx_CPUCFI_ACCEN_PRS_NOWR_Bits
{
    __IO Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for PRS q (rw) */
    __IO Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for PRS q (rw) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_CPUCFI_ACCEN_PRS_NOWR_Bits;

/** \brief Read access enable register A */
typedef struct _Ifx_CPUCFI_ACCEN_RDA_Bits
{
    __IO Ifx_Strict_32Bit EN00:1;          /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN01:1;          /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN02:1;          /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN03:1;          /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN04:1;          /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN05:1;          /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN06:1;          /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN07:1;          /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN08:1;          /**< \brief [8:8] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN09:1;          /**< \brief [9:9] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN10:1;          /**< \brief [10:10] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN11:1;          /**< \brief [11:11] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN12:1;          /**< \brief [12:12] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN13:1;          /**< \brief [13:13] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN14:1;          /**< \brief [14:14] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN15:1;          /**< \brief [15:15] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN16:1;          /**< \brief [16:16] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN17:1;          /**< \brief [17:17] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN18:1;          /**< \brief [18:18] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN19:1;          /**< \brief [19:19] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN20:1;          /**< \brief [20:20] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN21:1;          /**< \brief [21:21] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN22:1;          /**< \brief [22:22] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN23:1;          /**< \brief [23:23] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN24:1;          /**< \brief [24:24] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN25:1;          /**< \brief [25:25] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN26:1;          /**< \brief [26:26] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN27:1;          /**< \brief [27:27] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN28:1;          /**< \brief [28:28] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN29:1;          /**< \brief [29:29] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN30:1;          /**< \brief [30:30] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN31:1;          /**< \brief [31:31] Read access enable for TAG-ID q - ENq (rw) */
} Ifx_CPUCFI_ACCEN_RDA_Bits;

/** \brief Read access enable register B */
typedef struct _Ifx_CPUCFI_ACCEN_RDB_SRI_Bits
{
    __IO Ifx_Strict_32Bit EN32:1;          /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN33:1;          /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN34:1;          /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN35:1;          /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN36:1;          /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN37:1;          /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN38:1;          /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN39:1;          /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN40:1;          /**< \brief [8:8] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN41:1;          /**< \brief [9:9] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN42:1;          /**< \brief [10:10] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN43:1;          /**< \brief [11:11] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN44:1;          /**< \brief [12:12] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN45:1;          /**< \brief [13:13] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN46:1;          /**< \brief [14:14] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN47:1;          /**< \brief [15:15] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN48:1;          /**< \brief [16:16] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN49:1;          /**< \brief [17:17] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN50:1;          /**< \brief [18:18] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN51:1;          /**< \brief [19:19] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN52:1;          /**< \brief [20:20] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN53:1;          /**< \brief [21:21] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN54:1;          /**< \brief [22:22] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN55:1;          /**< \brief [23:23] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN56:1;          /**< \brief [24:24] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN57:1;          /**< \brief [25:25] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN58:1;          /**< \brief [26:26] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN59:1;          /**< \brief [27:27] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN60:1;          /**< \brief [28:28] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN61:1;          /**< \brief [29:29] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN62:1;          /**< \brief [30:30] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN63:1;          /**< \brief [31:31] Read access enable for TAG-ID q - ENq (rw) */
} Ifx_CPUCFI_ACCEN_RDB_SRI_Bits;

/** \brief Region lower address register */
typedef struct _Ifx_CPUCFI_ACCEN_RGNLA16_89_Bits
{
    __I  Ifx_Strict_32Bit :16;             /**< \brief [15:0] \internal Reserved */
    __IO Ifx_Strict_32Bit ADDR:13;         /**< \brief [28:16] Defines bits 28:16 of the lower bound of the access protected region (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [29:29] \internal Reserved */
    __IO Ifx_Strict_32Bit ADDRH:2;         /**< \brief [31:30] Defines bits 31:30 of the lower bound of the access protected region (rw) */
} Ifx_CPUCFI_ACCEN_RGNLA16_89_Bits;

/** \brief Region upper address register */
typedef struct _Ifx_CPUCFI_ACCEN_RGNUA16_89_Bits
{
    __I  Ifx_Strict_32Bit :16;             /**< \brief [15:0] \internal Reserved */
    __IO Ifx_Strict_32Bit ADDR:13;         /**< \brief [28:16] Defines bits 28:16 of the upper bound of the access protected region (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [29:29] \internal Reserved */
    __IO Ifx_Strict_32Bit ADDRH:2;         /**< \brief [31:30] Defines bits 31:30 of the upper bound of the access protected region (rw) */
} Ifx_CPUCFI_ACCEN_RGNUA16_89_Bits;

/** \brief VM access enable register */
typedef struct _Ifx_CPUCFI_ACCEN_VM_Bits
{
    __IO Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for VM ID q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [15:8] \internal Reserved */
    __IO Ifx_Strict_32Bit WR00:1;          /**< \brief [16:16] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR01:1;          /**< \brief [17:17] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR02:1;          /**< \brief [18:18] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR03:1;          /**< \brief [19:19] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR04:1;          /**< \brief [20:20] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR05:1;          /**< \brief [21:21] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR06:1;          /**< \brief [22:22] Write access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit WR07:1;          /**< \brief [23:23] Write access enable for VM ID q (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [31:24] \internal Reserved */
} Ifx_CPUCFI_ACCEN_VM_Bits;

/** \brief VM access enable register */
typedef struct _Ifx_CPUCFI_ACCEN_VM_NOWR_Bits
{
    __IO Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for VM ID q (rw) */
    __IO Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for VM ID q (rw) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_CPUCFI_ACCEN_VM_NOWR_Bits;

/** \brief Write access enable register A */
typedef struct _Ifx_CPUCFI_ACCEN_WRA_Bits
{
    __IO Ifx_Strict_32Bit EN00:1;          /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN01:1;          /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN02:1;          /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN03:1;          /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN04:1;          /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN05:1;          /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN06:1;          /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN07:1;          /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN08:1;          /**< \brief [8:8] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN09:1;          /**< \brief [9:9] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN10:1;          /**< \brief [10:10] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN11:1;          /**< \brief [11:11] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN12:1;          /**< \brief [12:12] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN13:1;          /**< \brief [13:13] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN14:1;          /**< \brief [14:14] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN15:1;          /**< \brief [15:15] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN16:1;          /**< \brief [16:16] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN17:1;          /**< \brief [17:17] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN18:1;          /**< \brief [18:18] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN19:1;          /**< \brief [19:19] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN20:1;          /**< \brief [20:20] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN21:1;          /**< \brief [21:21] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN22:1;          /**< \brief [22:22] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN23:1;          /**< \brief [23:23] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN24:1;          /**< \brief [24:24] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN25:1;          /**< \brief [25:25] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN26:1;          /**< \brief [26:26] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN27:1;          /**< \brief [27:27] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN28:1;          /**< \brief [28:28] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN29:1;          /**< \brief [29:29] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN30:1;          /**< \brief [30:30] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN31:1;          /**< \brief [31:31] Write access enable for TAG-ID q - ENq (rw) */
} Ifx_CPUCFI_ACCEN_WRA_Bits;

/** \brief Write access enable register B */
typedef struct _Ifx_CPUCFI_ACCEN_WRB_SRI_Bits
{
    __IO Ifx_Strict_32Bit EN32:1;          /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN33:1;          /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN34:1;          /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN35:1;          /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN36:1;          /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN37:1;          /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN38:1;          /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN39:1;          /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN40:1;          /**< \brief [8:8] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN41:1;          /**< \brief [9:9] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN42:1;          /**< \brief [10:10] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN43:1;          /**< \brief [11:11] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN44:1;          /**< \brief [12:12] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN45:1;          /**< \brief [13:13] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN46:1;          /**< \brief [14:14] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN47:1;          /**< \brief [15:15] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN48:1;          /**< \brief [16:16] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN49:1;          /**< \brief [17:17] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN50:1;          /**< \brief [18:18] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN51:1;          /**< \brief [19:19] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN52:1;          /**< \brief [20:20] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN53:1;          /**< \brief [21:21] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN54:1;          /**< \brief [22:22] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN55:1;          /**< \brief [23:23] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN56:1;          /**< \brief [24:24] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN57:1;          /**< \brief [25:25] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN58:1;          /**< \brief [26:26] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN59:1;          /**< \brief [27:27] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN60:1;          /**< \brief [28:28] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN61:1;          /**< \brief [29:29] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN62:1;          /**< \brief [30:30] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_Strict_32Bit EN63:1;          /**< \brief [31:31] Write access enable for TAG-ID q - ENq (rw) */
} Ifx_CPUCFI_ACCEN_WRB_SRI_Bits;

/** \brief CPUx CFI error register */
typedef struct _Ifx_CPUCFI_CFIERR_Bits
{
    __IO Ifx_Strict_32Bit ED:1;            /**< \brief [0:0] Error detected - ED (rwh) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [3:1] \internal Reserved */
    __I  Ifx_Strict_32Bit E_IE:1;          /**< \brief [4:4] Integrity error - E_IE (rh) */
    __I  Ifx_Strict_32Bit E_TAG:6;         /**< \brief [10:5] Captured master TAG ID - E_TAG (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [11:11] \internal Reserved */
    __I  Ifx_Strict_32Bit E_SP:1;          /**< \brief [12:12] PROT APU protection error detected - E_SP (rh) */
    __I  Ifx_Strict_32Bit E_SOTA:1;        /**< \brief [13:13] SOTA configuration error detected - E_SOTA (rh) */
    __I  Ifx_Strict_32Bit E_WS:1;          /**< \brief [14:14] PFI wait state ECC error detected - E_WS (rh) */
    __I  Ifx_Strict_32Bit E_REG:1;         /**< \brief [15:15] Register access write error detected - E_REG (rh) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [19:16] \internal Reserved */
    __I  Ifx_Strict_32Bit E_PRS:3;         /**< \brief [22:20] Captured PRS - E_PRS (rh) */
    __I  Ifx_Strict_32Bit E_PRS_EN:1;      /**< \brief [23:23] Captured PRS_EN - E_PRS_EN (rh) */
    __I  Ifx_Strict_32Bit E_VMN:3;         /**< \brief [26:24] Captured VMN - E_VMN (rh) */
    __I  Ifx_Strict_32Bit E_VMN_EN:1;      /**< \brief [27:27] Captured VMN_EN - E_VMN_EN (rh) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [31:28] \internal Reserved */
} Ifx_CPUCFI_CFIERR_Bits;

/** \brief CPUx CFI error address register */
typedef struct _Ifx_CPUCFI_CFIERRAR_Bits
{
    __I  Ifx_Strict_32Bit TA:32;           /**< \brief [31:0] Transaction address - TA (rh) */
} Ifx_CPUCFI_CFIERRAR_Bits;

/** \brief  */
typedef struct _Ifx_CPUCFI_CFILCLTEST_Bits
{
    __O  Ifx_Strict_32Bit LCLT:1;          /**< \brief [0:0] LCL lockstep test - LCLT (w) */
    __I  Ifx_Strict_32Bit :31;             /**< \brief [31:1] \internal Reserved */
} Ifx_CPUCFI_CFILCLTEST_Bits;

/** \brief  */
typedef struct _Ifx_CPUCFI_LCLCON_RO_Bits
{
    __I  Ifx_Strict_32Bit LS:1;            /**< \brief [0:0] Lockstep mode status - LS (r) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [14:1] \internal Reserved */
    __I  Ifx_Strict_32Bit LSEN:1;          /**< \brief [15:15] Lockstep enable - LSEN (r) */
    __I  Ifx_Strict_32Bit :16;             /**< \brief [31:16] \internal Reserved */
} Ifx_CPUCFI_LCLCON_RO_Bits;

/** \brief CPUx NVM interface 0 configuration register 0 */
typedef struct _Ifx_CPUCFI_PFI_FLASHCON0_Bits
{
    __IO Ifx_Strict_32Bit TAG1:6;          /**< \brief [5:0] NVM prefetch buffer 1 configuration (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [7:6] \internal Reserved */
    __IO Ifx_Strict_32Bit TAG2:6;          /**< \brief [13:8] NVM prefetch buffer 2 configuration (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [15:14] \internal Reserved */
    __IO Ifx_Strict_32Bit TAG3:6;          /**< \brief [21:16] NVM prefetch buffer 3 configuration (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [23:22] \internal Reserved */
    __IO Ifx_Strict_32Bit TAG4:6;          /**< \brief [29:24] NVM prefetch buffer 4 configuration (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [31:30] \internal Reserved */
} Ifx_CPUCFI_PFI_FLASHCON0_Bits;

/** \brief CPUx NVM interface 0 configuration register 1 */
typedef struct _Ifx_CPUCFI_PFI_FLASHCON1_Bits
{
    __IO Ifx_Strict_32Bit STALL:1;         /**< \brief [0:0] Stall Bus Request (rw) */
    __I  Ifx_Strict_32Bit :31;             /**< \brief [31:1] \internal Reserved */
} Ifx_CPUCFI_PFI_FLASHCON1_Bits;

/** \brief Resource Protection Register */
typedef struct _Ifx_CPUCFI_PROT_Bits
{
    __IO Ifx_Strict_32Bit STATE:3;         /**< \brief [2:0] Resource protection state (rwh) */
    __O  Ifx_Strict_32Bit SWEN:1;          /**< \brief [3:3] State write enable (w) */
    __I  Ifx_Strict_32Bit :12;             /**< \brief [15:4] \internal Reserved */
    __IO Ifx_Strict_32Bit VM:3;            /**< \brief [18:16] Virtual machine definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit VMEN:1;          /**< \brief [19:19] Virtual machine definition enable for PROT owner (rw) */
    __IO Ifx_Strict_32Bit PRS:3;           /**< \brief [22:20] Protection set definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit PRSEN:1;         /**< \brief [23:23] Protection set definition enable for PROT owner (rw) */
    __IO Ifx_Strict_32Bit TAGID:6;         /**< \brief [29:24] TAG ID definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit ODEF:1;          /**< \brief [30:30] Enable for PROT owner definition (rw) */
    __O  Ifx_Strict_32Bit OWEN:1;          /**< \brief [31:31] Owner write enable (w) */
} Ifx_CPUCFI_PROT_Bits;

/** \brief Resource Protection Register */
typedef struct _Ifx_CPUCFI_PROT_SEL8_Bits
{
    __IO Ifx_Strict_32Bit STATE:3;         /**< \brief [2:0] Resource protection state (rwh) */
    __O  Ifx_Strict_32Bit SWEN:1;          /**< \brief [3:3] State write enable (w) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [7:4] \internal Reserved */
    __IO Ifx_Strict_32Bit SEL:3;           /**< \brief [10:8] Range selection (rw) */
    __I  Ifx_Strict_32Bit :5;              /**< \brief [15:11] \internal Reserved */
    __IO Ifx_Strict_32Bit VM:3;            /**< \brief [18:16] Virtual machine definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit VMEN:1;          /**< \brief [19:19] Virtual machine definition enable for PROT owner (rw) */
    __IO Ifx_Strict_32Bit PRS:3;           /**< \brief [22:20] Protection set definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit PRSEN:1;         /**< \brief [23:23] Protection set definition enable for PROT owner (rw) */
    __IO Ifx_Strict_32Bit TAGID:6;         /**< \brief [29:24] TAG ID definition for PROT owner (rw) */
    __IO Ifx_Strict_32Bit ODEF:1;          /**< \brief [30:30] Enable for PROT owner definition (rw) */
    __O  Ifx_Strict_32Bit OWEN:1;          /**< \brief [31:31] Owner write enable (w) */
} Ifx_CPUCFI_PROT_SEL8_Bits;

/** \brief PRS access enable register */
typedef struct _Ifx_CPUCFI_RO_ACCEN_PRS_Bits
{
    __I  Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [15:8] \internal Reserved */
    __I  Ifx_Strict_32Bit WR00:1;          /**< \brief [16:16] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit WR01:1;          /**< \brief [17:17] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit WR02:1;          /**< \brief [18:18] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit WR03:1;          /**< \brief [19:19] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit WR04:1;          /**< \brief [20:20] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit WR05:1;          /**< \brief [21:21] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit WR06:1;          /**< \brief [22:22] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit WR07:1;          /**< \brief [23:23] Write access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [31:24] \internal Reserved */
} Ifx_CPUCFI_RO_ACCEN_PRS_Bits;

/** \brief PRS access enable register */
typedef struct _Ifx_CPUCFI_RO_ACCEN_PRS_NOWR_Bits
{
    __I  Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for PRS q (rh) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_CPUCFI_RO_ACCEN_PRS_NOWR_Bits;

/** \brief Read access enable register A */
typedef struct _Ifx_CPUCFI_RO_ACCEN_RDA_Bits
{
    __I  Ifx_Strict_32Bit EN00:1;          /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN01:1;          /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN02:1;          /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN03:1;          /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN04:1;          /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN05:1;          /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN06:1;          /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN07:1;          /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN08:1;          /**< \brief [8:8] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN09:1;          /**< \brief [9:9] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN10:1;          /**< \brief [10:10] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN11:1;          /**< \brief [11:11] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN12:1;          /**< \brief [12:12] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN13:1;          /**< \brief [13:13] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN14:1;          /**< \brief [14:14] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN15:1;          /**< \brief [15:15] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN16:1;          /**< \brief [16:16] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN17:1;          /**< \brief [17:17] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN18:1;          /**< \brief [18:18] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN19:1;          /**< \brief [19:19] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN20:1;          /**< \brief [20:20] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN21:1;          /**< \brief [21:21] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN22:1;          /**< \brief [22:22] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN23:1;          /**< \brief [23:23] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN24:1;          /**< \brief [24:24] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN25:1;          /**< \brief [25:25] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN26:1;          /**< \brief [26:26] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN27:1;          /**< \brief [27:27] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN28:1;          /**< \brief [28:28] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN29:1;          /**< \brief [29:29] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN30:1;          /**< \brief [30:30] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN31:1;          /**< \brief [31:31] Read access enable for TAG-ID q - ENq (rh) */
} Ifx_CPUCFI_RO_ACCEN_RDA_Bits;

/** \brief Read access enable register B */
typedef struct _Ifx_CPUCFI_RO_ACCEN_RDB_SRI_Bits
{
    __I  Ifx_Strict_32Bit EN32:1;          /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN33:1;          /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN34:1;          /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN35:1;          /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN36:1;          /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN37:1;          /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN38:1;          /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN39:1;          /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN40:1;          /**< \brief [8:8] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN41:1;          /**< \brief [9:9] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN42:1;          /**< \brief [10:10] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN43:1;          /**< \brief [11:11] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN44:1;          /**< \brief [12:12] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN45:1;          /**< \brief [13:13] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN46:1;          /**< \brief [14:14] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN47:1;          /**< \brief [15:15] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN48:1;          /**< \brief [16:16] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN49:1;          /**< \brief [17:17] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN50:1;          /**< \brief [18:18] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN51:1;          /**< \brief [19:19] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN52:1;          /**< \brief [20:20] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN53:1;          /**< \brief [21:21] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN54:1;          /**< \brief [22:22] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN55:1;          /**< \brief [23:23] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN56:1;          /**< \brief [24:24] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN57:1;          /**< \brief [25:25] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN58:1;          /**< \brief [26:26] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN59:1;          /**< \brief [27:27] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN60:1;          /**< \brief [28:28] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN61:1;          /**< \brief [29:29] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN62:1;          /**< \brief [30:30] Read access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN63:1;          /**< \brief [31:31] Read access enable for TAG-ID q - ENq (rh) */
} Ifx_CPUCFI_RO_ACCEN_RDB_SRI_Bits;

/** \brief Region lower address register */
typedef struct _Ifx_CPUCFI_RO_ACCEN_RGNLA16_89_Bits
{
    __I  Ifx_Strict_32Bit :16;             /**< \brief [15:0] \internal Reserved */
    __I  Ifx_Strict_32Bit ADDR:13;         /**< \brief [28:16] Defines bits 28:16 of the lower bound of the access protected region (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [29:29] \internal Reserved */
    __I  Ifx_Strict_32Bit ADDRH:2;         /**< \brief [31:30] Defines bits 31:30 of the lower bound of the access protected region (rh) */
} Ifx_CPUCFI_RO_ACCEN_RGNLA16_89_Bits;

/** \brief Region upper address register */
typedef struct _Ifx_CPUCFI_RO_ACCEN_RGNUA16_89_Bits
{
    __I  Ifx_Strict_32Bit :16;             /**< \brief [15:0] \internal Reserved */
    __I  Ifx_Strict_32Bit ADDR:13;         /**< \brief [28:16] Defines bits 28:16 of the upper bound of the access protected region (rh) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [29:29] \internal Reserved */
    __I  Ifx_Strict_32Bit ADDRH:2;         /**< \brief [31:30] Defines bits 31:30 of the upper bound of the access protected region (rh) */
} Ifx_CPUCFI_RO_ACCEN_RGNUA16_89_Bits;

/** \brief VM access enable register */
typedef struct _Ifx_CPUCFI_RO_ACCEN_VM_Bits
{
    __I  Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [15:8] \internal Reserved */
    __I  Ifx_Strict_32Bit WR00:1;          /**< \brief [16:16] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit WR01:1;          /**< \brief [17:17] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit WR02:1;          /**< \brief [18:18] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit WR03:1;          /**< \brief [19:19] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit WR04:1;          /**< \brief [20:20] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit WR05:1;          /**< \brief [21:21] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit WR06:1;          /**< \brief [22:22] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit WR07:1;          /**< \brief [23:23] Write access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [31:24] \internal Reserved */
} Ifx_CPUCFI_RO_ACCEN_VM_Bits;

/** \brief VM access enable register */
typedef struct _Ifx_CPUCFI_RO_ACCEN_VM_NOWR_Bits
{
    __I  Ifx_Strict_32Bit RD00:1;          /**< \brief [0:0] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD01:1;          /**< \brief [1:1] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD02:1;          /**< \brief [2:2] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD03:1;          /**< \brief [3:3] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD04:1;          /**< \brief [4:4] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD05:1;          /**< \brief [5:5] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD06:1;          /**< \brief [6:6] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit RD07:1;          /**< \brief [7:7] Read access enable for VM ID q (rh) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_CPUCFI_RO_ACCEN_VM_NOWR_Bits;

/** \brief Write access enable register A */
typedef struct _Ifx_CPUCFI_RO_ACCEN_WRA_Bits
{
    __I  Ifx_Strict_32Bit EN00:1;          /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN01:1;          /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN02:1;          /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN03:1;          /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN04:1;          /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN05:1;          /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN06:1;          /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN07:1;          /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN08:1;          /**< \brief [8:8] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN09:1;          /**< \brief [9:9] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN10:1;          /**< \brief [10:10] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN11:1;          /**< \brief [11:11] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN12:1;          /**< \brief [12:12] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN13:1;          /**< \brief [13:13] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN14:1;          /**< \brief [14:14] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN15:1;          /**< \brief [15:15] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN16:1;          /**< \brief [16:16] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN17:1;          /**< \brief [17:17] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN18:1;          /**< \brief [18:18] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN19:1;          /**< \brief [19:19] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN20:1;          /**< \brief [20:20] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN21:1;          /**< \brief [21:21] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN22:1;          /**< \brief [22:22] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN23:1;          /**< \brief [23:23] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN24:1;          /**< \brief [24:24] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN25:1;          /**< \brief [25:25] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN26:1;          /**< \brief [26:26] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN27:1;          /**< \brief [27:27] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN28:1;          /**< \brief [28:28] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN29:1;          /**< \brief [29:29] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN30:1;          /**< \brief [30:30] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN31:1;          /**< \brief [31:31] Write access enable for TAG-ID q - ENq (rh) */
} Ifx_CPUCFI_RO_ACCEN_WRA_Bits;

/** \brief Write access enable register B */
typedef struct _Ifx_CPUCFI_RO_ACCEN_WRB_SRI_Bits
{
    __I  Ifx_Strict_32Bit EN32:1;          /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN33:1;          /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN34:1;          /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN35:1;          /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN36:1;          /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN37:1;          /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN38:1;          /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN39:1;          /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN40:1;          /**< \brief [8:8] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN41:1;          /**< \brief [9:9] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN42:1;          /**< \brief [10:10] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN43:1;          /**< \brief [11:11] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN44:1;          /**< \brief [12:12] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN45:1;          /**< \brief [13:13] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN46:1;          /**< \brief [14:14] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN47:1;          /**< \brief [15:15] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN48:1;          /**< \brief [16:16] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN49:1;          /**< \brief [17:17] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN50:1;          /**< \brief [18:18] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN51:1;          /**< \brief [19:19] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN52:1;          /**< \brief [20:20] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN53:1;          /**< \brief [21:21] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN54:1;          /**< \brief [22:22] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN55:1;          /**< \brief [23:23] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN56:1;          /**< \brief [24:24] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN57:1;          /**< \brief [25:25] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN58:1;          /**< \brief [26:26] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN59:1;          /**< \brief [27:27] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN60:1;          /**< \brief [28:28] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN61:1;          /**< \brief [29:29] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN62:1;          /**< \brief [30:30] Write access enable for TAG-ID q - ENq (rh) */
    __I  Ifx_Strict_32Bit EN63:1;          /**< \brief [31:31] Write access enable for TAG-ID q - ENq (rh) */
} Ifx_CPUCFI_RO_ACCEN_WRB_SRI_Bits;

/** \brief  */
typedef struct _Ifx_CPUCFI_TS16P_NVM_CTRL0_Bits
{
    __IO Ifx_Strict_32Bit TGS:2;           /**< \brief [1:0] Trigger set for OTGB0/1 (rw) */
    __IO Ifx_Strict_32Bit TGB:1;           /**< \brief [2:2] OTGB0/1 bus select (rw) */
    __I  Ifx_Strict_32Bit :13;             /**< \brief [15:3] \internal Reserved */
    __IO Ifx_Strict_32Bit VM0:3;           /**< \brief [18:16] Virtual machine definition for TAG0 (rw) */
    __IO Ifx_Strict_32Bit VMEN0:1;         /**< \brief [19:19] Enable for TAG0 virtual machine definition (rw) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [23:20] \internal Reserved */
    __IO Ifx_Strict_32Bit TAGID0:6;        /**< \brief [29:24] TAG-ID definition for TAG0 (rw) */
    __IO Ifx_Strict_32Bit TAGEN0:1;        /**< \brief [30:30] Enable for TAG0 TAG-ID definition (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [31:31] \internal Reserved */
} Ifx_CPUCFI_TS16P_NVM_CTRL0_Bits;

/** \brief NVM performance counter control register 1 */
typedef struct _Ifx_CPUCFI_TS16P_NVM_CTRL1_Bits
{
    __IO Ifx_Strict_32Bit VM1:3;           /**< \brief [2:0] Virtual machine definition for TAG1 (rw) */
    __IO Ifx_Strict_32Bit VMEN1:1;         /**< \brief [3:3] Enable for TAG1 virtual machine definition (rw) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [7:4] \internal Reserved */
    __IO Ifx_Strict_32Bit TAGID1:6;        /**< \brief [13:8] TAG-ID definition for TAG1 (rw) */
    __IO Ifx_Strict_32Bit TAGEN1:1;        /**< \brief [14:14] Enable for TAG1 TAG-ID definition (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [15:15] \internal Reserved */
    __IO Ifx_Strict_32Bit VM2:3;           /**< \brief [18:16] Virtual machine definition for TAG2 (rw) */
    __IO Ifx_Strict_32Bit VMEN2:1;         /**< \brief [19:19] Enable for TAG2 virtual machine definition (rw) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [23:20] \internal Reserved */
    __IO Ifx_Strict_32Bit TAGID2:6;        /**< \brief [29:24] TAG-ID definition for TAG2 (rw) */
    __IO Ifx_Strict_32Bit TAGEN2:1;        /**< \brief [30:30] Enable for TAG2 TAG-ID definition (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [31:31] \internal Reserved */
} Ifx_CPUCFI_TS16P_NVM_CTRL1_Bits;

/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_cpucfi_Registers_union
 * \{   */
/** \brief PRS access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_PRS_Bits B;           /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_PRS;

/** \brief PRS access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_PRS_NOWR_Bits B;      /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_PRS_NOWR;

/** \brief Read access enable register A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_RDA_Bits B;           /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_RDA;

/** \brief Read access enable register B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_RDB_SRI_Bits B;       /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_RDB_SRI;

/** \brief Region lower address register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_RGNLA16_89_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_RGNLA16_89;

/** \brief Region upper address register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_RGNUA16_89_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_RGNUA16_89;

/** \brief VM access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_VM_Bits B;            /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_VM;

/** \brief VM access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_VM_NOWR_Bits B;       /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_VM_NOWR;

/** \brief Write access enable register A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_WRA_Bits B;           /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_WRA;

/** \brief Write access enable register B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_ACCEN_WRB_SRI_Bits B;       /**< \brief Bitfield access */
} Ifx_CPUCFI_ACCEN_WRB_SRI;

/** \brief CPUx CFI error register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_CFIERR_Bits B;              /**< \brief Bitfield access */
} Ifx_CPUCFI_CFIERR;

/** \brief CPUx CFI error address register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_CFIERRAR_Bits B;            /**< \brief Bitfield access */
} Ifx_CPUCFI_CFIERRAR;

/** \brief    */
typedef union
{
    __O  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __O  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_CFILCLTEST_Bits B;          /**< \brief Bitfield access */
} Ifx_CPUCFI_CFILCLTEST;

/** \brief    */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_LCLCON_RO_Bits B;           /**< \brief Bitfield access */
} Ifx_CPUCFI_LCLCON_RO;

/** \brief CPUx NVM interface 0 configuration register 0   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_PFI_FLASHCON0_Bits B;       /**< \brief Bitfield access */
} Ifx_CPUCFI_PFI_FLASHCON0;

/** \brief CPUx NVM interface 0 configuration register 1   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_PFI_FLASHCON1_Bits B;       /**< \brief Bitfield access */
} Ifx_CPUCFI_PFI_FLASHCON1;

/** \brief Resource Protection Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_PROT_Bits B;                /**< \brief Bitfield access */
} Ifx_CPUCFI_PROT;

/** \brief Resource Protection Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_PROT_SEL8_Bits B;           /**< \brief Bitfield access */
} Ifx_CPUCFI_PROT_SEL8;

/** \brief PRS access enable register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_PRS_Bits B;        /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_PRS;

/** \brief PRS access enable register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_PRS_NOWR_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_PRS_NOWR;

/** \brief Read access enable register A   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_RDA_Bits B;        /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_RDA;

/** \brief Read access enable register B   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_RDB_SRI_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_RDB_SRI;

/** \brief Region lower address register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_RGNLA16_89_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_RGNLA16_89;

/** \brief Region upper address register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_RGNUA16_89_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_RGNUA16_89;

/** \brief VM access enable register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_VM_Bits B;         /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_VM;

/** \brief VM access enable register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_VM_NOWR_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_VM_NOWR;

/** \brief Write access enable register A   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_WRA_Bits B;        /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_WRA;

/** \brief Write access enable register B   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_RO_ACCEN_WRB_SRI_Bits B;    /**< \brief Bitfield access */
} Ifx_CPUCFI_RO_ACCEN_WRB_SRI;

/** \brief    */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_TS16P_NVM_CTRL0_Bits B;     /**< \brief Bitfield access */
} Ifx_CPUCFI_TS16P_NVM_CTRL0;

/** \brief NVM performance counter control register 1   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_CPUCFI_TS16P_NVM_CTRL1_Bits B;     /**< \brief Bitfield access */
} Ifx_CPUCFI_TS16P_NVM_CTRL1;

/** \}  */

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpucfi_ACCENPFSFRCFG_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ACCENPFSFRCFG object */
typedef volatile struct _Ifx_CPUCFI_ACCENPFSFRCFG
{
       __IO Ifx_CPUCFI_ACCEN_WRA                WRA;                    /**< \brief 0, CPUx shadow NVM SFR write access enable register A*/
       __IO Ifx_CPUCFI_ACCEN_WRB_SRI            WRB;                    /**< \brief 4, CPUx shadow NVM SFR write access enable register B*/
       __IO Ifx_CPUCFI_ACCEN_RDA                RDA;                    /**< \brief 8, CPUx shadow NVM SFR read access enable register A*/
       __IO Ifx_CPUCFI_ACCEN_RDB_SRI            RDB;                    /**< \brief C, CPUx shadow NVM SFR read access enable register B*/
       __IO Ifx_CPUCFI_ACCEN_VM                 VM;                     /**< \brief 10, CPUx shadow NVM SFR VM access enable register*/
       __IO Ifx_CPUCFI_ACCEN_PRS                PRS;                    /**< \brief 14, CPUx shadow NVM SFR PRS access enable register*/
       __I  Ifx_UReg_8Bit                       reserved_18[8];         /**< \brief 18, \internal Reserved */
} Ifx_CPUCFI_ACCENPFSFRCFG;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpucfi_ACCENPFCFG_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ACCENPFCFG object */
typedef volatile struct _Ifx_CPUCFI_ACCENPFCFG
{
       __I  Ifx_UReg_8Bit                       reserved_0[8];          /**< \brief 0, \internal Reserved */
       __IO Ifx_CPUCFI_ACCEN_RDA                RDA;                    /**< \brief 8, CPUx shadow NVM read access enable register A*/
       __IO Ifx_CPUCFI_ACCEN_RDB_SRI            RDB;                    /**< \brief C, CPUx shadow NVM read access enable register B*/
       __IO Ifx_CPUCFI_ACCEN_VM_NOWR            VM;                     /**< \brief 10, CPUx shadow NVM VM access enable register*/
       __IO Ifx_CPUCFI_ACCEN_PRS_NOWR           PRS;                    /**< \brief 14, CPUx shadow NVM PRS access enable register*/
       __IO Ifx_CPUCFI_ACCEN_RGNLA16_89         RGNLA;                  /**< \brief 18, CPUx shadow NVM region lower address register*/
       __IO Ifx_CPUCFI_ACCEN_RGNUA16_89         RGNUA;                  /**< \brief 1C, CPUx shadow NVM region upper address register*/
} Ifx_CPUCFI_ACCENPFCFG;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpucfi_ACCENPFSFR_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ACCENPFSFR object */
typedef volatile struct _Ifx_CPUCFI_ACCENPFSFR
{
       __I  Ifx_CPUCFI_RO_ACCEN_WRA             WRA;                    /**< \brief 0, CPUx NVM SFR write access enable register A*/
       __I  Ifx_CPUCFI_RO_ACCEN_WRB_SRI         WRB;                    /**< \brief 4, CPUx NVM SFR write access enable register B*/
       __I  Ifx_CPUCFI_RO_ACCEN_RDA             RDA;                    /**< \brief 8, CPUx NVM SFR read access enable register A*/
       __I  Ifx_CPUCFI_RO_ACCEN_RDB_SRI         RDB;                    /**< \brief C, CPUx NVM SFR read access enable register B*/
       __I  Ifx_CPUCFI_RO_ACCEN_VM              VM;                     /**< \brief 10, CPUx NVM SFR VM access enable register*/
       __I  Ifx_CPUCFI_RO_ACCEN_PRS             PRS;                    /**< \brief 14, CPUx NVM SFR PRS access enable register*/
       __I  Ifx_UReg_8Bit                       reserved_18[8];         /**< \brief 18, \internal Reserved */
} Ifx_CPUCFI_ACCENPFSFR;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpucfi_ACCENPF_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief ACCENPF object */
typedef volatile struct _Ifx_CPUCFI_ACCENPF
{
       __I  Ifx_UReg_8Bit                       reserved_0[8];          /**< \brief 0, \internal Reserved */
       __I  Ifx_CPUCFI_RO_ACCEN_RDA             RDA;                    /**< \brief 8, CPUx NVM range 0 read access enable register A*/
       __I  Ifx_CPUCFI_RO_ACCEN_RDB_SRI         RDB;                    /**< \brief C, CPUx NVM range 0 read access enable register B*/
       __I  Ifx_CPUCFI_RO_ACCEN_VM_NOWR         VM;                     /**< \brief 10, CPUx NVM range 0 VM access enable register*/
       __I  Ifx_CPUCFI_RO_ACCEN_PRS_NOWR        PRS;                    /**< \brief 14, CPUx NVM range 0 PRS access enable register*/
       __I  Ifx_CPUCFI_RO_ACCEN_RGNLA16_89      RGNLA;                  /**< \brief 18, CPUx NVM range 0 region lower address register*/
       __I  Ifx_CPUCFI_RO_ACCEN_RGNUA16_89      RGNUA;                  /**< \brief 1C, CPUx NVM range 0 region upper address register*/
} Ifx_CPUCFI_ACCENPF;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpucfi_PFI_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief PFI object */
typedef volatile struct _Ifx_CPUCFI_PFI
{
       __IO Ifx_CPUCFI_PFI_FLASHCON0            FLASHCON0;              /**< \brief 0, CPUx NVM interface 0 configuration register 0*/
       __IO Ifx_CPUCFI_PFI_FLASHCON1            FLASHCON1;              /**< \brief 4, CPUx NVM interface 0 configuration register 1*/
} Ifx_CPUCFI_PFI;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Cpucfi_TS16PNVM_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief TS16PNVM object */
typedef volatile struct _Ifx_CPUCFI_TS16PNVM
{
       __IO Ifx_CPUCFI_TS16P_NVM_CTRL0          CTRL0;                  /**< \brief 0, CPUx NVM interface 0 MCDS performance counter control register 0*/
       __IO Ifx_CPUCFI_TS16P_NVM_CTRL1          CTRL1;                  /**< \brief 4, CPUx NVM interface 0 MCDS performance counter control register 1*/
} Ifx_CPUCFI_TS16PNVM;

/******************************************************************************/
/** \addtogroup IfxSfr_Cpucfi_Registers_struct
 * \{  */
/******************************************************************************/
/** \name Object L0
 * \{  */

/** \brief CPUCFI object */
typedef volatile struct _Ifx_CPUCFI
{
       __IO Ifx_CPUCFI_PROT                     PROTPFSFRE;             /**< \brief 0, CPUx PROTPFSFR register endinit*/
       __I  Ifx_UReg_8Bit                       reserved_4[4];          /**< \brief 4, \internal Reserved */
       __IO Ifx_CPUCFI_PROT                     PROTPFSFRSE;            /**< \brief 8, CPUx PROTPFSFR register safe endinit*/
       __I  Ifx_UReg_8Bit                       reserved_C[20];         /**< \brief C, \internal Reserved */
       __IO Ifx_CPUCFI_ACCENPFSFRCFG            ACCENPFSFRCFG;          /**< \brief 20, */
       __I  Ifx_UReg_8Bit                       reserved_40[8];         /**< \brief 40, \internal Reserved */
       __IO Ifx_CPUCFI_PROT_SEL8                PROTPFSE;               /**< \brief 48, CPUx PROTPF register safe endinit*/
       __I  Ifx_UReg_8Bit                       reserved_4C[20];        /**< \brief 4C, \internal Reserved */
       __IO Ifx_CPUCFI_ACCENPFCFG               ACCENPFCFG;             /**< \brief 60, CPUx shadow NVM region upper address register*/
       __IO Ifx_CPUCFI_ACCENPFSFR               ACCENPFSFR;             /**< \brief 80, */
       __I  Ifx_UReg_8Bit                       reserved_A0[96];        /**< \brief A0, \internal Reserved */
       __IO Ifx_CPUCFI_ACCENPF                  ACCENPF[8];             /**< \brief 100, CPUx NVM range 0 region upper address register*/
       __IO Ifx_CPUCFI_PFI                      PFI[2];                 /**< \brief 200, CPUx NVM interface 0 configuration register 1*/
       __IO Ifx_CPUCFI_TS16PNVM                 TS16PNVM[2];            /**< \brief 210, CPUx NVM interface 0 MCDS performance counter control register 1*/
       __I  Ifx_UReg_8Bit                       reserved_220[32];       /**< \brief 220, \internal Reserved */
       __I  Ifx_CPUCFI_LCLCON_RO                CFILCLCON;              /**< \brief 240, CPUx NVM interface lockstep control register*/
       __O  Ifx_CPUCFI_CFILCLTEST               CFILCLTEST;             /**< \brief 244, CPUx NVM interface lockstep test register*/
       __I  Ifx_UReg_8Bit                       reserved_248[8];        /**< \brief 248, \internal Reserved */
       __IO Ifx_CPUCFI_CFIERR                   CFIERR;                 /**< \brief 250, CPUx CFI error register*/
       __I  Ifx_CPUCFI_CFIERRAR                 CFIERRAR;               /**< \brief 254, CPUx CFI error address register*/
       __I  Ifx_UReg_8Bit                       reserved_258[64936];    /**< \brief 258, \internal Reserved */
} Ifx_CPUCFI;

/** \}  */
/******************************************************************************/
/** \}  */


/******************************************************************************/

/******************************************************************************/

#endif /* IFXCPUCFI_REGDEF_H */
