/**
 * \file IfxSmu_regdef.h
 * \brief
 * \copyright Copyright (c) 2024 Infineon Technologies AG. All rights reserved.
 *
 *
 * Version: MC_ACE_A3G_HSI_SMU/V0.2.2.1.0
 * Specification: latest @ 2024-03-02 instance sheet @ MC_A3G_HWDDSOC_FUNCTIONAL_INSTANCE_SHEET/V13.2.1.1.0
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 *
 * Use of this file is subject to the terms of use agreed between (i) you or 
 * the company in which ordinary course of business you are acting and (ii) 
 * Infineon Technologies AG or its licensees. If and as long as no such 
 * terms of use are agreed, use of this file is subject to following:


 * Boost Software License - Version 1.0 - August 17th, 2003

 * Permission is hereby granted, free of charge, to any person or 
 * organization obtaining a copy of the software and accompanying 
 * documentation covered by this license (the "Software") to use, reproduce,
 * display, distribute, execute, and transmit the Software, and to prepare
 * derivative works of the Software, and to permit third-parties to whom the 
 * Software is furnished to do so, all subject to the following:

 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE 
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxSfr_Smu_Registers Smu Registers
 * \ingroup IfxSfr
 * 
 * \defgroup IfxSfr_Smu_Registers_Bitfields Bitfields
 * \ingroup IfxSfr_Smu_Registers
 * 
 * \defgroup IfxSfr_Smu_Registers_union Register unions
 * \ingroup IfxSfr_Smu_Registers
 * 
 * \defgroup IfxSfr_Smu_Registers_struct Memory map
 * \ingroup IfxSfr_Smu_Registers
 */
#ifndef IFXSMU_REGDEF_H
#define IFXSMU_REGDEF_H 1
/******************************************************************************/
#include "Ifx_TypesReg.h"
/******************************************************************************/

/******************************************************************************/

/******************************************************************************/


/** \addtogroup IfxSfr_Smu_Registers_Bitfields
 * \{  */
/** \brief PRS access enable register */
typedef struct _Ifx_SMU_ACCEN_PRS_Bits
{
    __IO Ifx_UReg_32Bit RD00:1;            /**< \brief [0:0] Read access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit RD01:1;            /**< \brief [1:1] Read access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit RD02:1;            /**< \brief [2:2] Read access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit RD03:1;            /**< \brief [3:3] Read access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit RD04:1;            /**< \brief [4:4] Read access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit RD05:1;            /**< \brief [5:5] Read access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit RD06:1;            /**< \brief [6:6] Read access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit RD07:1;            /**< \brief [7:7] Read access enable for PRS q (rw) */
    __I  Ifx_UReg_32Bit :8;                /**< \brief [15:8] \internal Reserved */
    __IO Ifx_UReg_32Bit WR00:1;            /**< \brief [16:16] Write access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit WR01:1;            /**< \brief [17:17] Write access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit WR02:1;            /**< \brief [18:18] Write access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit WR03:1;            /**< \brief [19:19] Write access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit WR04:1;            /**< \brief [20:20] Write access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit WR05:1;            /**< \brief [21:21] Write access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit WR06:1;            /**< \brief [22:22] Write access enable for PRS q (rw) */
    __IO Ifx_UReg_32Bit WR07:1;            /**< \brief [23:23] Write access enable for PRS q (rw) */
    __I  Ifx_UReg_32Bit :8;                /**< \brief [31:24] \internal Reserved */
} Ifx_SMU_ACCEN_PRS_Bits;

/** \brief Read access enable register A */
typedef struct _Ifx_SMU_ACCEN_RDA_Bits
{
    __IO Ifx_UReg_32Bit EN00:1;            /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN01:1;            /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN02:1;            /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN03:1;            /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN04:1;            /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN05:1;            /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN06:1;            /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN07:1;            /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN08:1;            /**< \brief [8:8] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN09:1;            /**< \brief [9:9] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN10:1;            /**< \brief [10:10] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN11:1;            /**< \brief [11:11] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN12:1;            /**< \brief [12:12] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN13:1;            /**< \brief [13:13] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN14:1;            /**< \brief [14:14] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN15:1;            /**< \brief [15:15] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN16:1;            /**< \brief [16:16] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN17:1;            /**< \brief [17:17] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN18:1;            /**< \brief [18:18] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN19:1;            /**< \brief [19:19] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN20:1;            /**< \brief [20:20] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN21:1;            /**< \brief [21:21] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN22:1;            /**< \brief [22:22] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN23:1;            /**< \brief [23:23] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN24:1;            /**< \brief [24:24] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN25:1;            /**< \brief [25:25] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN26:1;            /**< \brief [26:26] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN27:1;            /**< \brief [27:27] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN28:1;            /**< \brief [28:28] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN29:1;            /**< \brief [29:29] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN30:1;            /**< \brief [30:30] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN31:1;            /**< \brief [31:31] Read access enable for TAG-ID q - ENq (rw) */
} Ifx_SMU_ACCEN_RDA_Bits;

/** \brief Read access enable register B */
typedef struct _Ifx_SMU_ACCEN_RDB_FPI_Bits
{
    __IO Ifx_UReg_32Bit EN32:1;            /**< \brief [0:0] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN33:1;            /**< \brief [1:1] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN34:1;            /**< \brief [2:2] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN35:1;            /**< \brief [3:3] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN36:1;            /**< \brief [4:4] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN37:1;            /**< \brief [5:5] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN38:1;            /**< \brief [6:6] Read access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN39:1;            /**< \brief [7:7] Read access enable for TAG-ID q - ENq (rw) */
    __I  Ifx_UReg_32Bit :24;               /**< \brief [31:8] \internal Reserved */
} Ifx_SMU_ACCEN_RDB_FPI_Bits;

/** \brief VM access enable register */
typedef struct _Ifx_SMU_ACCEN_VM_Bits
{
    __IO Ifx_UReg_32Bit RD00:1;            /**< \brief [0:0] Read access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit RD01:1;            /**< \brief [1:1] Read access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit RD02:1;            /**< \brief [2:2] Read access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit RD03:1;            /**< \brief [3:3] Read access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit RD04:1;            /**< \brief [4:4] Read access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit RD05:1;            /**< \brief [5:5] Read access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit RD06:1;            /**< \brief [6:6] Read access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit RD07:1;            /**< \brief [7:7] Read access enable for VM ID q (rw) */
    __I  Ifx_UReg_32Bit :8;                /**< \brief [15:8] \internal Reserved */
    __IO Ifx_UReg_32Bit WR00:1;            /**< \brief [16:16] Write access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit WR01:1;            /**< \brief [17:17] Write access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit WR02:1;            /**< \brief [18:18] Write access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit WR03:1;            /**< \brief [19:19] Write access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit WR04:1;            /**< \brief [20:20] Write access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit WR05:1;            /**< \brief [21:21] Write access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit WR06:1;            /**< \brief [22:22] Write access enable for VM ID q (rw) */
    __IO Ifx_UReg_32Bit WR07:1;            /**< \brief [23:23] Write access enable for VM ID q (rw) */
    __I  Ifx_UReg_32Bit :8;                /**< \brief [31:24] \internal Reserved */
} Ifx_SMU_ACCEN_VM_Bits;

/** \brief Write access enable register A */
typedef struct _Ifx_SMU_ACCEN_WRA_Bits
{
    __IO Ifx_UReg_32Bit EN00:1;            /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN01:1;            /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN02:1;            /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN03:1;            /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN04:1;            /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN05:1;            /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN06:1;            /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN07:1;            /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN08:1;            /**< \brief [8:8] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN09:1;            /**< \brief [9:9] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN10:1;            /**< \brief [10:10] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN11:1;            /**< \brief [11:11] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN12:1;            /**< \brief [12:12] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN13:1;            /**< \brief [13:13] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN14:1;            /**< \brief [14:14] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN15:1;            /**< \brief [15:15] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN16:1;            /**< \brief [16:16] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN17:1;            /**< \brief [17:17] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN18:1;            /**< \brief [18:18] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN19:1;            /**< \brief [19:19] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN20:1;            /**< \brief [20:20] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN21:1;            /**< \brief [21:21] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN22:1;            /**< \brief [22:22] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN23:1;            /**< \brief [23:23] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN24:1;            /**< \brief [24:24] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN25:1;            /**< \brief [25:25] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN26:1;            /**< \brief [26:26] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN27:1;            /**< \brief [27:27] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN28:1;            /**< \brief [28:28] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN29:1;            /**< \brief [29:29] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN30:1;            /**< \brief [30:30] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN31:1;            /**< \brief [31:31] Write access enable for TAG-ID q - ENq (rw) */
} Ifx_SMU_ACCEN_WRA_Bits;

/** \brief Write access enable register B */
typedef struct _Ifx_SMU_ACCEN_WRB_FPI_Bits
{
    __IO Ifx_UReg_32Bit EN32:1;            /**< \brief [0:0] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN33:1;            /**< \brief [1:1] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN34:1;            /**< \brief [2:2] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN35:1;            /**< \brief [3:3] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN36:1;            /**< \brief [4:4] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN37:1;            /**< \brief [5:5] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN38:1;            /**< \brief [6:6] Write access enable for TAG-ID q - ENq (rw) */
    __IO Ifx_UReg_32Bit EN39:1;            /**< \brief [7:7] Write access enable for TAG-ID q - ENq (rw) */
    __I  Ifx_UReg_32Bit :24;               /**< \brief [31:8] \internal Reserved */
} Ifx_SMU_ACCEN_WRB_FPI_Bits;

/** \brief SMU_CS Alarm Executed Status Register */
typedef struct _Ifx_SMU_CS_AEX_Bits
{
    __I  Ifx_UReg_32Bit IRQ0STS:1;         /**< \brief [0:0] CSIRQ Request Status - IRQ0STS (rh) */
    __I  Ifx_UReg_32Bit :8;                /**< \brief [8:1] \internal Reserved */
    __I  Ifx_UReg_32Bit NMISTS:1;          /**< \brief [9:9] CS_NMI Request Status - NMISTS (rh) */
    __I  Ifx_UReg_32Bit RSTSTS:1;          /**< \brief [10:10] CS_RESET Request Status - RSTSTS (rh) */
    __I  Ifx_UReg_32Bit :3;                /**< \brief [13:11] \internal Reserved */
    __I  Ifx_UReg_32Bit LDKSTS:1;          /**< \brief [14:14] LOCK_DBG_PROT_KEYS Request Status - LDKSTS (rh) */
    __I  Ifx_UReg_32Bit LKSTS:1;           /**< \brief [15:15] LOCK_ALL_KEYS Request Status - LKSTS (rh) */
    __I  Ifx_UReg_32Bit IRQ0AEM:1;         /**< \brief [16:16] CSIRQ AEM - IRQ0AEM (rh) */
    __I  Ifx_UReg_32Bit :8;                /**< \brief [24:17] \internal Reserved */
    __I  Ifx_UReg_32Bit NMIAEM:1;          /**< \brief [25:25] CS_NMI AEM - NMIAEM (rh) */
    __I  Ifx_UReg_32Bit :4;                /**< \brief [29:26] \internal Reserved */
    __I  Ifx_UReg_32Bit LDKAEM:1;          /**< \brief [30:30] LOCK_DBG_PROT_KEYS AEM - LDKAEM (rh) */
    __I  Ifx_UReg_32Bit LKAEM:1;           /**< \brief [31:31] LOCK_ALL_KEYS AEM - LKAEM (rh) */
} Ifx_SMU_CS_AEX_Bits;

/** \brief SMU_CS Alarm Executed Status Clear Register */
typedef struct _Ifx_SMU_CS_AEXCLR_Bits
{
    __O  Ifx_Strict_32Bit IRQ0C:1;         /**< \brief [0:0] IRQ0STS Clear - IRQ0C (w) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [8:1] \internal Reserved */
    __O  Ifx_Strict_32Bit NMIC:1;          /**< \brief [9:9] NMISTS Clear - NMIC (w) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [13:10] \internal Reserved */
    __O  Ifx_Strict_32Bit LDKC:1;          /**< \brief [14:14] LOCK_DBG_PROT_KEYS Request Status Clear - LDKC (w) */
    __O  Ifx_Strict_32Bit LKC:1;           /**< \brief [15:15] LOCK_ALL_KEYS Request Status Clear - LKC (w) */
    __O  Ifx_Strict_32Bit IRQ0AEMC:1;      /**< \brief [16:16] IRQ0AEM Clear - IRQ0AEMC (w) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [24:17] \internal Reserved */
    __O  Ifx_Strict_32Bit NMIAEMC:1;       /**< \brief [25:25] NMIAEM Clear - NMIAEMC (w) */
    __I  Ifx_Strict_32Bit :4;              /**< \brief [29:26] \internal Reserved */
    __O  Ifx_Strict_32Bit LDKAEMC:1;       /**< \brief [30:30] LDKAEM Clear - LDKAEMC (w) */
    __O  Ifx_Strict_32Bit LKAEMC:1;        /**< \brief [31:31] LKAEM Clear - LKAEMC (w) */
} Ifx_SMU_CS_AEXCLR_Bits;

/** \brief SMU_CS Alarm and Fault Counter */
typedef struct _Ifx_SMU_CS_AFCNT_Bits
{
    __I  Ifx_UReg_32Bit :4;                /**< \brief [3:0] \internal Reserved */
    __I  Ifx_UReg_32Bit ACNT:12;           /**< \brief [15:4] Alarm Counter. - ACNT (rh) */
    __I  Ifx_UReg_32Bit :15;               /**< \brief [30:16] \internal Reserved */
    __I  Ifx_UReg_32Bit ACO:1;             /**< \brief [31:31] Alarm Counter Overflow. - ACO (rh) */
} Ifx_SMU_CS_AFCNT_Bits;

/** \brief SMU_CS Critical Alarm Selection Flag */
typedef struct _Ifx_SMU_CS_AGCS_CAS_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Critical Alarm Selection flag for alarm 0 in alarm group AGCSi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Critical Alarm Selection flag for alarm 1 in alarm group AGCSi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Critical Alarm Selection flag for alarm 2 in alarm group AGCSi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Critical Alarm Selection flag for alarm 3 in alarm group AGCSi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Critical Alarm Selection flag for alarm 4 in alarm group AGCSi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Critical Alarm Selection flag for alarm 5 in alarm group AGCSi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Critical Alarm Selection flag for alarm 6 in alarm group AGCSi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Critical Alarm Selection flag for alarm 7 in alarm group AGCSi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Critical Alarm Selection flag for alarm 8 in alarm group AGCSi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Critical Alarm Selection flag for alarm 9 in alarm group AGCSi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Critical Alarm Selection flag for alarm 10 in alarm group AGCSi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Critical Alarm Selection flag for alarm 11 in alarm group AGCSi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Critical Alarm Selection flag for alarm 12 in alarm group AGCSi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Critical Alarm Selection flag for alarm 13 in alarm group AGCSi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Critical Alarm Selection flag for alarm 14 in alarm group AGCSi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Critical Alarm Selection flag for alarm 15 in alarm group AGCSi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Critical Alarm Selection flag for alarm 16 in alarm group AGCSi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Critical Alarm Selection flag for alarm 17 in alarm group AGCSi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Critical Alarm Selection flag for alarm 18 in alarm group AGCSi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Critical Alarm Selection flag for alarm 19 in alarm group AGCSi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Critical Alarm Selection flag for alarm 20 in alarm group AGCSi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Critical Alarm Selection flag for alarm 21 in alarm group AGCSi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Critical Alarm Selection flag for alarm 22 in alarm group AGCSi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Critical Alarm Selection flag for alarm 23 in alarm group AGCSi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Critical Alarm Selection flag for alarm 24 in alarm group AGCSi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Critical Alarm Selection flag for alarm 25 in alarm group AGCSi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Critical Alarm Selection flag for alarm 26 in alarm group AGCSi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Critical Alarm Selection flag for alarm 27 in alarm group AGCSi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Critical Alarm Selection flag for alarm 28 in alarm group AGCSi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Critical Alarm Selection flag for alarm 29 in alarm group AGCSi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Critical Alarm Selection flag for alarm 30 in alarm group AGCSi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Critical Alarm Selection flag for alarm 31 in alarm group AGCSi. - CF31 (rw) */
} Ifx_SMU_CS_AGCS_CAS_Bits;

/** \brief SMU_CS Alarm Configuration Register */
typedef struct _Ifx_SMU_CS_AGCS_CON_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Configuration flag j (j=0-2) for alarm 0 in alarm group AGCSi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Configuration flag j (j=0-2) for alarm 1 in alarm group AGCSi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Configuration flag j (j=0-2) for alarm 2 in alarm group AGCSi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Configuration flag j (j=0-2) for alarm 3 in alarm group AGCSi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Configuration flag j (j=0-2) for alarm 4 in alarm group AGCSi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Configuration flag j (j=0-2) for alarm 5 in alarm group AGCSi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Configuration flag j (j=0-2) for alarm 6 in alarm group AGCSi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Configuration flag j (j=0-2) for alarm 7 in alarm group AGCSi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Configuration flag j (j=0-2) for alarm 8 in alarm group AGCSi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Configuration flag j (j=0-2) for alarm 9 in alarm group AGCSi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Configuration flag j (j=0-2) for alarm 10 in alarm group AGCSi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Configuration flag j (j=0-2) for alarm 11 in alarm group AGCSi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Configuration flag j (j=0-2) for alarm 12 in alarm group AGCSi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Configuration flag j (j=0-2) for alarm 13 in alarm group AGCSi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Configuration flag j (j=0-2) for alarm 14 in alarm group AGCSi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Configuration flag j (j=0-2) for alarm 15 in alarm group AGCSi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Configuration flag j (j=0-2) for alarm 16 in alarm group AGCSi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Configuration flag j (j=0-2) for alarm 17 in alarm group AGCSi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Configuration flag j (j=0-2) for alarm 18 in alarm group AGCSi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Configuration flag j (j=0-2) for alarm 19 in alarm group AGCSi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Configuration flag j (j=0-2) for alarm 20 in alarm group AGCSi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Configuration flag j (j=0-2) for alarm 21 in alarm group AGCSi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Configuration flag j (j=0-2) for alarm 22 in alarm group AGCSi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Configuration flag j (j=0-2) for alarm 23 in alarm group AGCSi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Configuration flag j (j=0-2) for alarm 24 in alarm group AGCSi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Configuration flag j (j=0-2) for alarm 25 in alarm group AGCSi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Configuration flag j (j=0-2) for alarm 26 in alarm group AGCSi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Configuration flag j (j=0-2) for alarm 27 in alarm group AGCSi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Configuration flag j (j=0-2) for alarm 28 in alarm group AGCSi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Configuration flag j (j=0-2) for alarm 29 in alarm group AGCSi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Configuration flag j (j=0-2) for alarm 30 in alarm group AGCSi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Configuration flag j (j=0-2) for alarm 31 in alarm group AGCSi. - CF31 (rw) */
} Ifx_SMU_CS_AGCS_CON_Bits;

/** \brief SMU_CS Alarm Debug Register */
typedef struct _Ifx_SMU_CS_AGCS_DBG_Bits
{
    __I  Ifx_UReg_32Bit DF0:1;             /**< \brief [0:0] Diagnosis flag for alarm 0 in alarm group AGCSi. - DF0 (rh) */
    __I  Ifx_UReg_32Bit DF1:1;             /**< \brief [1:1] Diagnosis flag for alarm 1 in alarm group AGCSi. - DF1 (rh) */
    __I  Ifx_UReg_32Bit DF2:1;             /**< \brief [2:2] Diagnosis flag for alarm 2 in alarm group AGCSi. - DF2 (rh) */
    __I  Ifx_UReg_32Bit DF3:1;             /**< \brief [3:3] Diagnosis flag for alarm 3 in alarm group AGCSi. - DF3 (rh) */
    __I  Ifx_UReg_32Bit DF4:1;             /**< \brief [4:4] Diagnosis flag for alarm 4 in alarm group AGCSi. - DF4 (rh) */
    __I  Ifx_UReg_32Bit DF5:1;             /**< \brief [5:5] Diagnosis flag for alarm 5 in alarm group AGCSi. - DF5 (rh) */
    __I  Ifx_UReg_32Bit DF6:1;             /**< \brief [6:6] Diagnosis flag for alarm 6 in alarm group AGCSi. - DF6 (rh) */
    __I  Ifx_UReg_32Bit DF7:1;             /**< \brief [7:7] Diagnosis flag for alarm 7 in alarm group AGCSi. - DF7 (rh) */
    __I  Ifx_UReg_32Bit DF8:1;             /**< \brief [8:8] Diagnosis flag for alarm 8 in alarm group AGCSi. - DF8 (rh) */
    __I  Ifx_UReg_32Bit DF9:1;             /**< \brief [9:9] Diagnosis flag for alarm 9 in alarm group AGCSi. - DF9 (rh) */
    __I  Ifx_UReg_32Bit DF10:1;            /**< \brief [10:10] Diagnosis flag for alarm 10 in alarm group AGCSi. - DF10 (rh) */
    __I  Ifx_UReg_32Bit DF11:1;            /**< \brief [11:11] Diagnosis flag for alarm 11 in alarm group AGCSi. - DF11 (rh) */
    __I  Ifx_UReg_32Bit DF12:1;            /**< \brief [12:12] Diagnosis flag for alarm 12 in alarm group AGCSi. - DF12 (rh) */
    __I  Ifx_UReg_32Bit DF13:1;            /**< \brief [13:13] Diagnosis flag for alarm 13 in alarm group AGCSi. - DF13 (rh) */
    __I  Ifx_UReg_32Bit DF14:1;            /**< \brief [14:14] Diagnosis flag for alarm 14 in alarm group AGCSi. - DF14 (rh) */
    __I  Ifx_UReg_32Bit DF15:1;            /**< \brief [15:15] Diagnosis flag for alarm 15 in alarm group AGCSi. - DF15 (rh) */
    __I  Ifx_UReg_32Bit DF16:1;            /**< \brief [16:16] Diagnosis flag for alarm 16 in alarm group AGCSi. - DF16 (rh) */
    __I  Ifx_UReg_32Bit DF17:1;            /**< \brief [17:17] Diagnosis flag for alarm 17 in alarm group AGCSi. - DF17 (rh) */
    __I  Ifx_UReg_32Bit DF18:1;            /**< \brief [18:18] Diagnosis flag for alarm 18 in alarm group AGCSi. - DF18 (rh) */
    __I  Ifx_UReg_32Bit DF19:1;            /**< \brief [19:19] Diagnosis flag for alarm 19 in alarm group AGCSi. - DF19 (rh) */
    __I  Ifx_UReg_32Bit DF20:1;            /**< \brief [20:20] Diagnosis flag for alarm 20 in alarm group AGCSi. - DF20 (rh) */
    __I  Ifx_UReg_32Bit DF21:1;            /**< \brief [21:21] Diagnosis flag for alarm 21 in alarm group AGCSi. - DF21 (rh) */
    __I  Ifx_UReg_32Bit DF22:1;            /**< \brief [22:22] Diagnosis flag for alarm 22 in alarm group AGCSi. - DF22 (rh) */
    __I  Ifx_UReg_32Bit DF23:1;            /**< \brief [23:23] Diagnosis flag for alarm 23 in alarm group AGCSi. - DF23 (rh) */
    __I  Ifx_UReg_32Bit DF24:1;            /**< \brief [24:24] Diagnosis flag for alarm 24 in alarm group AGCSi. - DF24 (rh) */
    __I  Ifx_UReg_32Bit DF25:1;            /**< \brief [25:25] Diagnosis flag for alarm 25 in alarm group AGCSi. - DF25 (rh) */
    __I  Ifx_UReg_32Bit DF26:1;            /**< \brief [26:26] Diagnosis flag for alarm 26 in alarm group AGCSi. - DF26 (rh) */
    __I  Ifx_UReg_32Bit DF27:1;            /**< \brief [27:27] Diagnosis flag for alarm 27 in alarm group AGCSi. - DF27 (rh) */
    __I  Ifx_UReg_32Bit DF28:1;            /**< \brief [28:28] Diagnosis flag for alarm 28 in alarm group AGCSi. - DF28 (rh) */
    __I  Ifx_UReg_32Bit DF29:1;            /**< \brief [29:29] Diagnosis flag for alarm 29 in alarm group AGCSi. - DF29 (rh) */
    __I  Ifx_UReg_32Bit DF30:1;            /**< \brief [30:30] Diagnosis flag for alarm 30 in alarm group AGCSi. - DF30 (rh) */
    __I  Ifx_UReg_32Bit DF31:1;            /**< \brief [31:31] Diagnosis flag for alarm 31 in alarm group AGCSi. - DF31 (rh) */
} Ifx_SMU_CS_AGCS_DBG_Bits;

/** \brief SMU_CS Alarm Status Register */
typedef struct _Ifx_SMU_CS_AGCS_STS_Bits
{
    __IO Ifx_Strict_32Bit SF0:1;           /**< \brief [0:0] Status flag for alarm 0 in alarm group AGCSi. - SF0 (rwh) */
    __IO Ifx_Strict_32Bit SF1:1;           /**< \brief [1:1] Status flag for alarm 1 in alarm group AGCSi. - SF1 (rwh) */
    __IO Ifx_Strict_32Bit SF2:1;           /**< \brief [2:2] Status flag for alarm 2 in alarm group AGCSi. - SF2 (rwh) */
    __IO Ifx_Strict_32Bit SF3:1;           /**< \brief [3:3] Status flag for alarm 3 in alarm group AGCSi. - SF3 (rwh) */
    __IO Ifx_Strict_32Bit SF4:1;           /**< \brief [4:4] Status flag for alarm 4 in alarm group AGCSi. - SF4 (rwh) */
    __IO Ifx_Strict_32Bit SF5:1;           /**< \brief [5:5] Status flag for alarm 5 in alarm group AGCSi. - SF5 (rwh) */
    __IO Ifx_Strict_32Bit SF6:1;           /**< \brief [6:6] Status flag for alarm 6 in alarm group AGCSi. - SF6 (rwh) */
    __IO Ifx_Strict_32Bit SF7:1;           /**< \brief [7:7] Status flag for alarm 7 in alarm group AGCSi. - SF7 (rwh) */
    __IO Ifx_Strict_32Bit SF8:1;           /**< \brief [8:8] Status flag for alarm 8 in alarm group AGCSi. - SF8 (rwh) */
    __IO Ifx_Strict_32Bit SF9:1;           /**< \brief [9:9] Status flag for alarm 9 in alarm group AGCSi. - SF9 (rwh) */
    __IO Ifx_Strict_32Bit SF10:1;          /**< \brief [10:10] Status flag for alarm 10 in alarm group AGCSi. - SF10 (rwh) */
    __IO Ifx_Strict_32Bit SF11:1;          /**< \brief [11:11] Status flag for alarm 11 in alarm group AGCSi. - SF11 (rwh) */
    __IO Ifx_Strict_32Bit SF12:1;          /**< \brief [12:12] Status flag for alarm 12 in alarm group AGCSi. - SF12 (rwh) */
    __IO Ifx_Strict_32Bit SF13:1;          /**< \brief [13:13] Status flag for alarm 13 in alarm group AGCSi. - SF13 (rwh) */
    __IO Ifx_Strict_32Bit SF14:1;          /**< \brief [14:14] Status flag for alarm 14 in alarm group AGCSi. - SF14 (rwh) */
    __IO Ifx_Strict_32Bit SF15:1;          /**< \brief [15:15] Status flag for alarm 15 in alarm group AGCSi. - SF15 (rwh) */
    __IO Ifx_Strict_32Bit SF16:1;          /**< \brief [16:16] Status flag for alarm 16 in alarm group AGCSi. - SF16 (rwh) */
    __IO Ifx_Strict_32Bit SF17:1;          /**< \brief [17:17] Status flag for alarm 17 in alarm group AGCSi. - SF17 (rwh) */
    __IO Ifx_Strict_32Bit SF18:1;          /**< \brief [18:18] Status flag for alarm 18 in alarm group AGCSi. - SF18 (rwh) */
    __IO Ifx_Strict_32Bit SF19:1;          /**< \brief [19:19] Status flag for alarm 19 in alarm group AGCSi. - SF19 (rwh) */
    __IO Ifx_Strict_32Bit SF20:1;          /**< \brief [20:20] Status flag for alarm 20 in alarm group AGCSi. - SF20 (rwh) */
    __IO Ifx_Strict_32Bit SF21:1;          /**< \brief [21:21] Status flag for alarm 21 in alarm group AGCSi. - SF21 (rwh) */
    __IO Ifx_Strict_32Bit SF22:1;          /**< \brief [22:22] Status flag for alarm 22 in alarm group AGCSi. - SF22 (rwh) */
    __IO Ifx_Strict_32Bit SF23:1;          /**< \brief [23:23] Status flag for alarm 23 in alarm group AGCSi. - SF23 (rwh) */
    __IO Ifx_Strict_32Bit SF24:1;          /**< \brief [24:24] Status flag for alarm 24 in alarm group AGCSi. - SF24 (rwh) */
    __IO Ifx_Strict_32Bit SF25:1;          /**< \brief [25:25] Status flag for alarm 25 in alarm group AGCSi. - SF25 (rwh) */
    __IO Ifx_Strict_32Bit SF26:1;          /**< \brief [26:26] Status flag for alarm 26 in alarm group AGCSi. - SF26 (rwh) */
    __IO Ifx_Strict_32Bit SF27:1;          /**< \brief [27:27] Status flag for alarm 27 in alarm group AGCSi. - SF27 (rwh) */
    __IO Ifx_Strict_32Bit SF28:1;          /**< \brief [28:28] Status flag for alarm 28 in alarm group AGCSi. - SF28 (rwh) */
    __IO Ifx_Strict_32Bit SF29:1;          /**< \brief [29:29] Status flag for alarm 29 in alarm group AGCSi. - SF29 (rwh) */
    __IO Ifx_Strict_32Bit SF30:1;          /**< \brief [30:30] Status flag for alarm 30 in alarm group AGCSi. - SF30 (rwh) */
    __IO Ifx_Strict_32Bit SF31:1;          /**< \brief [31:31] Status flag for alarm 31 in alarm group AGCSi. - SF31 (rwh) */
} Ifx_SMU_CS_AGCS_STS_Bits;

/** \brief SMU_CS Critical Shared Alarm Selection Flag */
typedef struct _Ifx_SMU_CS_AGSH_CAS_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Critical Alarm Selection flag for alarm 0 in alarm group AGSHi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Critical Alarm Selection flag for alarm 1 in alarm group AGSHi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Critical Alarm Selection flag for alarm 2 in alarm group AGSHi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Critical Alarm Selection flag for alarm 3 in alarm group AGSHi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Critical Alarm Selection flag for alarm 4 in alarm group AGSHi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Critical Alarm Selection flag for alarm 5 in alarm group AGSHi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Critical Alarm Selection flag for alarm 6 in alarm group AGSHi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Critical Alarm Selection flag for alarm 7 in alarm group AGSHi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Critical Alarm Selection flag for alarm 8 in alarm group AGSHi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Critical Alarm Selection flag for alarm 9 in alarm group AGSHi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Critical Alarm Selection flag for alarm 10 in alarm group AGSHi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Critical Alarm Selection flag for alarm 11 in alarm group AGSHi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Critical Alarm Selection flag for alarm 12 in alarm group AGSHi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Critical Alarm Selection flag for alarm 13 in alarm group AGSHi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Critical Alarm Selection flag for alarm 14 in alarm group AGSHi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Critical Alarm Selection flag for alarm 15 in alarm group AGSHi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Critical Alarm Selection flag for alarm 16 in alarm group AGSHi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Critical Alarm Selection flag for alarm 17 in alarm group AGSHi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Critical Alarm Selection flag for alarm 18 in alarm group AGSHi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Critical Alarm Selection flag for alarm 19 in alarm group AGSHi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Critical Alarm Selection flag for alarm 20 in alarm group AGSHi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Critical Alarm Selection flag for alarm 21 in alarm group AGSHi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Critical Alarm Selection flag for alarm 22 in alarm group AGSHi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Critical Alarm Selection flag for alarm 23 in alarm group AGSHi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Critical Alarm Selection flag for alarm 24 in alarm group AGSHi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Critical Alarm Selection flag for alarm 25 in alarm group AGSHi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Critical Alarm Selection flag for alarm 26 in alarm group AGSHi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Critical Alarm Selection flag for alarm 27 in alarm group AGSHi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Critical Alarm Selection flag for alarm 28 in alarm group AGSHi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Critical Alarm Selection flag for alarm 29 in alarm group AGSHi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Critical Alarm Selection flag for alarm 30 in alarm group AGSHi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Critical Alarm Selection flag for alarm 31 in alarm group AGSHi. - CF31 (rw) */
} Ifx_SMU_CS_AGSH_CAS_Bits;

/** \brief SMU_CS Shared Alarm Configuration Register */
typedef struct _Ifx_SMU_CS_AGSH_CON_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Configuration flag j (j=0-2) for alarm 0 in alarm group AGSHi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Configuration flag j (j=0-2) for alarm 1 in alarm group AGSHi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Configuration flag j (j=0-2) for alarm 2 in alarm group AGSHi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Configuration flag j (j=0-2) for alarm 3 in alarm group AGSHi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Configuration flag j (j=0-2) for alarm 4 in alarm group AGSHi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Configuration flag j (j=0-2) for alarm 5 in alarm group AGSHi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Configuration flag j (j=0-2) for alarm 6 in alarm group AGSHi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Configuration flag j (j=0-2) for alarm 7 in alarm group AGSHi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Configuration flag j (j=0-2) for alarm 8 in alarm group AGSHi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Configuration flag j (j=0-2) for alarm 9 in alarm group AGSHi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Configuration flag j (j=0-2) for alarm 10 in alarm group AGSHi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Configuration flag j (j=0-2) for alarm 11 in alarm group AGSHi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Configuration flag j (j=0-2) for alarm 12 in alarm group AGSHi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Configuration flag j (j=0-2) for alarm 13 in alarm group AGSHi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Configuration flag j (j=0-2) for alarm 14 in alarm group AGSHi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Configuration flag j (j=0-2) for alarm 15 in alarm group AGSHi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Configuration flag j (j=0-2) for alarm 16 in alarm group AGSHi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Configuration flag j (j=0-2) for alarm 17 in alarm group AGSHi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Configuration flag j (j=0-2) for alarm 18 in alarm group AGSHi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Configuration flag j (j=0-2) for alarm 19 in alarm group AGSHi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Configuration flag j (j=0-2) for alarm 20 in alarm group AGSHi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Configuration flag j (j=0-2) for alarm 21 in alarm group AGSHi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Configuration flag j (j=0-2) for alarm 22 in alarm group AGSHi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Configuration flag j (j=0-2) for alarm 23 in alarm group AGSHi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Configuration flag j (j=0-2) for alarm 24 in alarm group AGSHi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Configuration flag j (j=0-2) for alarm 25 in alarm group AGSHi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Configuration flag j (j=0-2) for alarm 26 in alarm group AGSHi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Configuration flag j (j=0-2) for alarm 27 in alarm group AGSHi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Configuration flag j (j=0-2) for alarm 28 in alarm group AGSHi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Configuration flag j (j=0-2) for alarm 29 in alarm group AGSHi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Configuration flag j (j=0-2) for alarm 30 in alarm group AGSHi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Configuration flag j (j=0-2) for alarm 31 in alarm group AGSHi. - CF31 (rw) */
} Ifx_SMU_CS_AGSH_CON_Bits;

/** \brief SMU_CS Shared Alarm Debug Register */
typedef struct _Ifx_SMU_CS_AGSH_DBG_Bits
{
    __I  Ifx_UReg_32Bit DF0:1;             /**< \brief [0:0] Diagnosis flag for alarm 0 in alarm group AGSHi. - DF0 (rh) */
    __I  Ifx_UReg_32Bit DF1:1;             /**< \brief [1:1] Diagnosis flag for alarm 1 in alarm group AGSHi. - DF1 (rh) */
    __I  Ifx_UReg_32Bit DF2:1;             /**< \brief [2:2] Diagnosis flag for alarm 2 in alarm group AGSHi. - DF2 (rh) */
    __I  Ifx_UReg_32Bit DF3:1;             /**< \brief [3:3] Diagnosis flag for alarm 3 in alarm group AGSHi. - DF3 (rh) */
    __I  Ifx_UReg_32Bit DF4:1;             /**< \brief [4:4] Diagnosis flag for alarm 4 in alarm group AGSHi. - DF4 (rh) */
    __I  Ifx_UReg_32Bit DF5:1;             /**< \brief [5:5] Diagnosis flag for alarm 5 in alarm group AGSHi. - DF5 (rh) */
    __I  Ifx_UReg_32Bit DF6:1;             /**< \brief [6:6] Diagnosis flag for alarm 6 in alarm group AGSHi. - DF6 (rh) */
    __I  Ifx_UReg_32Bit DF7:1;             /**< \brief [7:7] Diagnosis flag for alarm 7 in alarm group AGSHi. - DF7 (rh) */
    __I  Ifx_UReg_32Bit DF8:1;             /**< \brief [8:8] Diagnosis flag for alarm 8 in alarm group AGSHi. - DF8 (rh) */
    __I  Ifx_UReg_32Bit DF9:1;             /**< \brief [9:9] Diagnosis flag for alarm 9 in alarm group AGSHi. - DF9 (rh) */
    __I  Ifx_UReg_32Bit DF10:1;            /**< \brief [10:10] Diagnosis flag for alarm 10 in alarm group AGSHi. - DF10 (rh) */
    __I  Ifx_UReg_32Bit DF11:1;            /**< \brief [11:11] Diagnosis flag for alarm 11 in alarm group AGSHi. - DF11 (rh) */
    __I  Ifx_UReg_32Bit DF12:1;            /**< \brief [12:12] Diagnosis flag for alarm 12 in alarm group AGSHi. - DF12 (rh) */
    __I  Ifx_UReg_32Bit DF13:1;            /**< \brief [13:13] Diagnosis flag for alarm 13 in alarm group AGSHi. - DF13 (rh) */
    __I  Ifx_UReg_32Bit DF14:1;            /**< \brief [14:14] Diagnosis flag for alarm 14 in alarm group AGSHi. - DF14 (rh) */
    __I  Ifx_UReg_32Bit DF15:1;            /**< \brief [15:15] Diagnosis flag for alarm 15 in alarm group AGSHi. - DF15 (rh) */
    __I  Ifx_UReg_32Bit DF16:1;            /**< \brief [16:16] Diagnosis flag for alarm 16 in alarm group AGSHi. - DF16 (rh) */
    __I  Ifx_UReg_32Bit DF17:1;            /**< \brief [17:17] Diagnosis flag for alarm 17 in alarm group AGSHi. - DF17 (rh) */
    __I  Ifx_UReg_32Bit DF18:1;            /**< \brief [18:18] Diagnosis flag for alarm 18 in alarm group AGSHi. - DF18 (rh) */
    __I  Ifx_UReg_32Bit DF19:1;            /**< \brief [19:19] Diagnosis flag for alarm 19 in alarm group AGSHi. - DF19 (rh) */
    __I  Ifx_UReg_32Bit DF20:1;            /**< \brief [20:20] Diagnosis flag for alarm 20 in alarm group AGSHi. - DF20 (rh) */
    __I  Ifx_UReg_32Bit DF21:1;            /**< \brief [21:21] Diagnosis flag for alarm 21 in alarm group AGSHi. - DF21 (rh) */
    __I  Ifx_UReg_32Bit DF22:1;            /**< \brief [22:22] Diagnosis flag for alarm 22 in alarm group AGSHi. - DF22 (rh) */
    __I  Ifx_UReg_32Bit DF23:1;            /**< \brief [23:23] Diagnosis flag for alarm 23 in alarm group AGSHi. - DF23 (rh) */
    __I  Ifx_UReg_32Bit DF24:1;            /**< \brief [24:24] Diagnosis flag for alarm 24 in alarm group AGSHi. - DF24 (rh) */
    __I  Ifx_UReg_32Bit DF25:1;            /**< \brief [25:25] Diagnosis flag for alarm 25 in alarm group AGSHi. - DF25 (rh) */
    __I  Ifx_UReg_32Bit DF26:1;            /**< \brief [26:26] Diagnosis flag for alarm 26 in alarm group AGSHi. - DF26 (rh) */
    __I  Ifx_UReg_32Bit DF27:1;            /**< \brief [27:27] Diagnosis flag for alarm 27 in alarm group AGSHi. - DF27 (rh) */
    __I  Ifx_UReg_32Bit DF28:1;            /**< \brief [28:28] Diagnosis flag for alarm 28 in alarm group AGSHi. - DF28 (rh) */
    __I  Ifx_UReg_32Bit DF29:1;            /**< \brief [29:29] Diagnosis flag for alarm 29 in alarm group AGSHi. - DF29 (rh) */
    __I  Ifx_UReg_32Bit DF30:1;            /**< \brief [30:30] Diagnosis flag for alarm 30 in alarm group AGSHi. - DF30 (rh) */
    __I  Ifx_UReg_32Bit DF31:1;            /**< \brief [31:31] Diagnosis flag for alarm 31 in alarm group AGSHi. - DF31 (rh) */
} Ifx_SMU_CS_AGSH_DBG_Bits;

/** \brief SMU_CS Shared Alarm Group Selection Register */
typedef struct _Ifx_SMU_CS_AGSH_SEL_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF31 (rw) */
} Ifx_SMU_CS_AGSH_SEL_Bits;

/** \brief SMU_CS Shared Alarm Group Selection Status */
typedef struct _Ifx_SMU_CS_AGSH_SS_Bits
{
    __I  Ifx_UReg_32Bit SF0:1;             /**< \brief [0:0] Shared Alarm Group status flag for Alarm Group AGSHi. - CF0 (rh) */
    __I  Ifx_UReg_32Bit SF1:1;             /**< \brief [1:1] Shared Alarm Group status flag for Alarm Group AGSHi. - CF1 (rh) */
    __I  Ifx_UReg_32Bit SF2:1;             /**< \brief [2:2] Shared Alarm Group status flag for Alarm Group AGSHi. - CF2 (rh) */
    __I  Ifx_UReg_32Bit SF3:1;             /**< \brief [3:3] Shared Alarm Group status flag for Alarm Group AGSHi. - CF3 (rh) */
    __I  Ifx_UReg_32Bit SF4:1;             /**< \brief [4:4] Shared Alarm Group status flag for Alarm Group AGSHi. - CF4 (rh) */
    __I  Ifx_UReg_32Bit SF5:1;             /**< \brief [5:5] Shared Alarm Group status flag for Alarm Group AGSHi. - CF5 (rh) */
    __I  Ifx_UReg_32Bit SF6:1;             /**< \brief [6:6] Shared Alarm Group status flag for Alarm Group AGSHi. - CF6 (rh) */
    __I  Ifx_UReg_32Bit SF7:1;             /**< \brief [7:7] Shared Alarm Group status flag for Alarm Group AGSHi. - CF7 (rh) */
    __I  Ifx_UReg_32Bit SF8:1;             /**< \brief [8:8] Shared Alarm Group status flag for Alarm Group AGSHi. - CF8 (rh) */
    __I  Ifx_UReg_32Bit SF9:1;             /**< \brief [9:9] Shared Alarm Group status flag for Alarm Group AGSHi. - CF9 (rh) */
    __I  Ifx_UReg_32Bit SF10:1;            /**< \brief [10:10] Shared Alarm Group status flag for Alarm Group AGSHi. - CF10 (rh) */
    __I  Ifx_UReg_32Bit SF11:1;            /**< \brief [11:11] Shared Alarm Group status flag for Alarm Group AGSHi. - CF11 (rh) */
    __I  Ifx_UReg_32Bit SF12:1;            /**< \brief [12:12] Shared Alarm Group status flag for Alarm Group AGSHi. - CF12 (rh) */
    __I  Ifx_UReg_32Bit SF13:1;            /**< \brief [13:13] Shared Alarm Group status flag for Alarm Group AGSHi. - CF13 (rh) */
    __I  Ifx_UReg_32Bit SF14:1;            /**< \brief [14:14] Shared Alarm Group status flag for Alarm Group AGSHi. - CF14 (rh) */
    __I  Ifx_UReg_32Bit SF15:1;            /**< \brief [15:15] Shared Alarm Group status flag for Alarm Group AGSHi. - CF15 (rh) */
    __I  Ifx_UReg_32Bit SF16:1;            /**< \brief [16:16] Shared Alarm Group status flag for Alarm Group AGSHi. - CF16 (rh) */
    __I  Ifx_UReg_32Bit SF17:1;            /**< \brief [17:17] Shared Alarm Group status flag for Alarm Group AGSHi. - CF17 (rh) */
    __I  Ifx_UReg_32Bit SF18:1;            /**< \brief [18:18] Shared Alarm Group status flag for Alarm Group AGSHi. - CF18 (rh) */
    __I  Ifx_UReg_32Bit SF19:1;            /**< \brief [19:19] Shared Alarm Group status flag for Alarm Group AGSHi. - CF19 (rh) */
    __I  Ifx_UReg_32Bit SF20:1;            /**< \brief [20:20] Shared Alarm Group status flag for Alarm Group AGSHi. - CF20 (rh) */
    __I  Ifx_UReg_32Bit SF21:1;            /**< \brief [21:21] Shared Alarm Group status flag for Alarm Group AGSHi. - CF21 (rh) */
    __I  Ifx_UReg_32Bit SF22:1;            /**< \brief [22:22] Shared Alarm Group status flag for Alarm Group AGSHi. - CF22 (rh) */
    __I  Ifx_UReg_32Bit SF23:1;            /**< \brief [23:23] Shared Alarm Group status flag for Alarm Group AGSHi. - CF23 (rh) */
    __I  Ifx_UReg_32Bit SF24:1;            /**< \brief [24:24] Shared Alarm Group status flag for Alarm Group AGSHi. - CF24 (rh) */
    __I  Ifx_UReg_32Bit SF25:1;            /**< \brief [25:25] Shared Alarm Group status flag for Alarm Group AGSHi. - CF25 (rh) */
    __I  Ifx_UReg_32Bit SF26:1;            /**< \brief [26:26] Shared Alarm Group status flag for Alarm Group AGSHi. - CF26 (rh) */
    __I  Ifx_UReg_32Bit SF27:1;            /**< \brief [27:27] Shared Alarm Group status flag for Alarm Group AGSHi. - CF27 (rh) */
    __I  Ifx_UReg_32Bit SF28:1;            /**< \brief [28:28] Shared Alarm Group status flag for Alarm Group AGSHi. - CF28 (rh) */
    __I  Ifx_UReg_32Bit SF29:1;            /**< \brief [29:29] Shared Alarm Group status flag for Alarm Group AGSHi. - CF29 (rh) */
    __I  Ifx_UReg_32Bit SF30:1;            /**< \brief [30:30] Shared Alarm Group status flag for Alarm Group AGSHi. - CF30 (rh) */
    __I  Ifx_UReg_32Bit SF31:1;            /**< \brief [31:31] Shared Alarm Group status flag for Alarm Group AGSHi. - CF31 (rh) */
} Ifx_SMU_CS_AGSH_SS_Bits;

/** \brief SMU_CS Shared Alarm Status Register */
typedef struct _Ifx_SMU_CS_AGSH_STS_Bits
{
    __IO Ifx_Strict_32Bit SF0:1;           /**< \brief [0:0] Status flag for alarm 0 in alarm group AGSHi. - SF0 (rwh) */
    __IO Ifx_Strict_32Bit SF1:1;           /**< \brief [1:1] Status flag for alarm 1 in alarm group AGSHi. - SF1 (rwh) */
    __IO Ifx_Strict_32Bit SF2:1;           /**< \brief [2:2] Status flag for alarm 2 in alarm group AGSHi. - SF2 (rwh) */
    __IO Ifx_Strict_32Bit SF3:1;           /**< \brief [3:3] Status flag for alarm 3 in alarm group AGSHi. - SF3 (rwh) */
    __IO Ifx_Strict_32Bit SF4:1;           /**< \brief [4:4] Status flag for alarm 4 in alarm group AGSHi. - SF4 (rwh) */
    __IO Ifx_Strict_32Bit SF5:1;           /**< \brief [5:5] Status flag for alarm 5 in alarm group AGSHi. - SF5 (rwh) */
    __IO Ifx_Strict_32Bit SF6:1;           /**< \brief [6:6] Status flag for alarm 6 in alarm group AGSHi. - SF6 (rwh) */
    __IO Ifx_Strict_32Bit SF7:1;           /**< \brief [7:7] Status flag for alarm 7 in alarm group AGSHi. - SF7 (rwh) */
    __IO Ifx_Strict_32Bit SF8:1;           /**< \brief [8:8] Status flag for alarm 8 in alarm group AGSHi. - SF8 (rwh) */
    __IO Ifx_Strict_32Bit SF9:1;           /**< \brief [9:9] Status flag for alarm 9 in alarm group AGSHi. - SF9 (rwh) */
    __IO Ifx_Strict_32Bit SF10:1;          /**< \brief [10:10] Status flag for alarm 10 in alarm group AGSHi. - SF10 (rwh) */
    __IO Ifx_Strict_32Bit SF11:1;          /**< \brief [11:11] Status flag for alarm 11 in alarm group AGSHi. - SF11 (rwh) */
    __IO Ifx_Strict_32Bit SF12:1;          /**< \brief [12:12] Status flag for alarm 12 in alarm group AGSHi. - SF12 (rwh) */
    __IO Ifx_Strict_32Bit SF13:1;          /**< \brief [13:13] Status flag for alarm 13 in alarm group AGSHi. - SF13 (rwh) */
    __IO Ifx_Strict_32Bit SF14:1;          /**< \brief [14:14] Status flag for alarm 14 in alarm group AGSHi. - SF14 (rwh) */
    __IO Ifx_Strict_32Bit SF15:1;          /**< \brief [15:15] Status flag for alarm 15 in alarm group AGSHi. - SF15 (rwh) */
    __IO Ifx_Strict_32Bit SF16:1;          /**< \brief [16:16] Status flag for alarm 16 in alarm group AGSHi. - SF16 (rwh) */
    __IO Ifx_Strict_32Bit SF17:1;          /**< \brief [17:17] Status flag for alarm 17 in alarm group AGSHi. - SF17 (rwh) */
    __IO Ifx_Strict_32Bit SF18:1;          /**< \brief [18:18] Status flag for alarm 18 in alarm group AGSHi. - SF18 (rwh) */
    __IO Ifx_Strict_32Bit SF19:1;          /**< \brief [19:19] Status flag for alarm 19 in alarm group AGSHi. - SF19 (rwh) */
    __IO Ifx_Strict_32Bit SF20:1;          /**< \brief [20:20] Status flag for alarm 20 in alarm group AGSHi. - SF20 (rwh) */
    __IO Ifx_Strict_32Bit SF21:1;          /**< \brief [21:21] Status flag for alarm 21 in alarm group AGSHi. - SF21 (rwh) */
    __IO Ifx_Strict_32Bit SF22:1;          /**< \brief [22:22] Status flag for alarm 22 in alarm group AGSHi. - SF22 (rwh) */
    __IO Ifx_Strict_32Bit SF23:1;          /**< \brief [23:23] Status flag for alarm 23 in alarm group AGSHi. - SF23 (rwh) */
    __IO Ifx_Strict_32Bit SF24:1;          /**< \brief [24:24] Status flag for alarm 24 in alarm group AGSHi. - SF24 (rwh) */
    __IO Ifx_Strict_32Bit SF25:1;          /**< \brief [25:25] Status flag for alarm 25 in alarm group AGSHi. - SF25 (rwh) */
    __IO Ifx_Strict_32Bit SF26:1;          /**< \brief [26:26] Status flag for alarm 26 in alarm group AGSHi. - SF26 (rwh) */
    __IO Ifx_Strict_32Bit SF27:1;          /**< \brief [27:27] Status flag for alarm 27 in alarm group AGSHi. - SF27 (rwh) */
    __IO Ifx_Strict_32Bit SF28:1;          /**< \brief [28:28] Status flag for alarm 28 in alarm group AGSHi. - SF28 (rwh) */
    __IO Ifx_Strict_32Bit SF29:1;          /**< \brief [29:29] Status flag for alarm 29 in alarm group AGSHi. - SF29 (rwh) */
    __IO Ifx_Strict_32Bit SF30:1;          /**< \brief [30:30] Status flag for alarm 30 in alarm group AGSHi. - SF30 (rwh) */
    __IO Ifx_Strict_32Bit SF31:1;          /**< \brief [31:31] Status flag for alarm 31 in alarm group AGSHi. - SF31 (rwh) */
} Ifx_SMU_CS_AGSH_STS_Bits;

/** \brief Alarm Signal Test Register */
typedef struct _Ifx_SMU_CS_ALMTST_Bits
{
    __IO Ifx_UReg_32Bit TE:1;              /**< \brief [0:0] Alarm Signal Test Enable - TE (rw) */
    __I  Ifx_UReg_32Bit :31;               /**< \brief [31:1] \internal Reserved */
} Ifx_SMU_CS_ALMTST_Bits;

/** \brief SMU_CS Command Register */
typedef struct _Ifx_SMU_CS_CMD_Bits
{
    __O  Ifx_Strict_32Bit CMD:4;           /**< \brief [3:0] Implements the SMU_CS Command Interface. - CMD (w) */
    __O  Ifx_Strict_32Bit ARG:4;           /**< \brief [7:4] Implements the SMU_CS Command Interface. - ARG (w) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_SMU_CS_CMD_Bits;

/** \brief SMU_CS Debug Register */
typedef struct _Ifx_SMU_CS_DBG_Bits
{
    __I  Ifx_UReg_32Bit SSM:1;             /**< \brief [0:0] Running state of the SMU_CS state machine - SSM (rh) */
    __I  Ifx_UReg_32Bit :31;               /**< \brief [31:1] \internal Reserved */
} Ifx_SMU_CS_DBG_Bits;

/** \brief SMU_CS Key Register */
typedef struct _Ifx_SMU_CS_KEYS_Bits
{
    __IO Ifx_Strict_32Bit CFGLCK:8;        /**< \brief [7:0] Configuration Lock - CFGLCK (rw) */
    __IO Ifx_Strict_32Bit PERLCK:8;        /**< \brief [15:8] Permanent Lock - PERLCK (rw) */
    __I  Ifx_Strict_32Bit :16;             /**< \brief [31:16] \internal Reserved */
} Ifx_SMU_CS_KEYS_Bits;

/** \brief CS_RESET Request Triggering Alarm Information Register */
typedef struct _Ifx_SMU_CS_RST_Bits
{
    __I  Ifx_UReg_32Bit ALMGRP:3;          /**< \brief [2:0] Alarm Group - ALMGRP (rh) */
    __I  Ifx_UReg_32Bit :5;                /**< \brief [7:3] \internal Reserved */
    __I  Ifx_UReg_32Bit ALMID:5;           /**< \brief [12:8] Alarm Index - ALMID (rh) */
    __I  Ifx_UReg_32Bit :19;               /**< \brief [31:13] \internal Reserved */
} Ifx_SMU_CS_RST_Bits;

/** \brief SMU_CS Recovery Timer 0 Alarm Configuration A */
typedef struct _Ifx_SMU_CS_RT0ACA_Bits
{
    __IO Ifx_Strict_32Bit GID0:3;          /**< \brief [2:0] Group Index 0. - GID0 (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [4:3] \internal Reserved */
    __IO Ifx_Strict_32Bit ALID0:5;         /**< \brief [9:5] Alarm Identifier 0. - ALID0 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit GID1:3;          /**< \brief [18:16] Group Index 1. - GID1 (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [20:19] \internal Reserved */
    __IO Ifx_Strict_32Bit ALID1:5;         /**< \brief [25:21] Alarm Identifier 1. - ALID1 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_SMU_CS_RT0ACA_Bits;

/** \brief SMU_CS Recovery Timer 0 Alarm Configuration B */
typedef struct _Ifx_SMU_CS_RT0ACB_Bits
{
    __IO Ifx_Strict_32Bit GID2:3;          /**< \brief [2:0] Group Index 2. - GID2 (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [4:3] \internal Reserved */
    __IO Ifx_Strict_32Bit ALID2:5;         /**< \brief [9:5] Alarm Identifier 0. - ALID2 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit GID3:3;          /**< \brief [18:16] Group Index 3. - GID3 (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [20:19] \internal Reserved */
    __IO Ifx_Strict_32Bit ALID3:5;         /**< \brief [25:21] Alarm Identifier 1. - ALID3 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_SMU_CS_RT0ACB_Bits;

/** \brief SMU_CS Recovery Timer Configuration */
typedef struct _Ifx_SMU_CS_RTC_Bits
{
    __IO Ifx_Strict_32Bit RT0E:1;          /**< \brief [0:0] RT0 Enable Bit - RT0E (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [1:1] \internal Reserved */
    __IO Ifx_Strict_32Bit PRE:3;           /**< \brief [4:2] Prescaler For Recovery Timer Clock - PRE (rw) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [7:5] \internal Reserved */
    __IO Ifx_Strict_32Bit RTD:24;          /**< \brief [31:8] Recovery Timer Duration - RTD (rw) */
} Ifx_SMU_CS_RTC_Bits;

/** \brief SMU_CS Status Register */
typedef struct _Ifx_SMU_CS_STS_Bits
{
    __IO Ifx_Strict_32Bit CMD:4;           /**< \brief [3:0] Last command received - CMD (rw0ch) */
    __IO Ifx_Strict_32Bit ARG:4;           /**< \brief [7:4] Last command argument received - ARG (rw0ch) */
    __IO Ifx_Strict_32Bit RES:1;           /**< \brief [8:8] Result of last received command - RES (rw0ch) */
    __IO Ifx_Strict_32Bit ASCE:1;          /**< \brief [9:9] Alarm Status Clear Enable - ASCE (rw0ch) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit RTS0:1;          /**< \brief [16:16] Recovery Timer 0 Status - RTS0 (rw0ch) */
    __IO Ifx_Strict_32Bit RTME0:1;         /**< \brief [17:17] Recovery Timer 0 Missed Event - RTME0 (rw0ch) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [31:18] \internal Reserved */
} Ifx_SMU_CS_STS_Bits;

/** \brief SMU_GCC Shared Alarm Group Selection Register */
typedef struct _Ifx_SMU_GCC_AGSH_SEL_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Shared Alarm Group configuration flag for Alarm Group AGSHi. - CF31 (rw) */
} Ifx_SMU_GCC_AGSH_SEL_Bits;

/** \brief SMU_GCC Shared Alarm Group Selection Status */
typedef struct _Ifx_SMU_GCC_AGSH_SS_Bits
{
    __I  Ifx_UReg_32Bit SF0:1;             /**< \brief [0:0] Shared Alarm Group status flag for Alarm Group 30. - CF0 (rh) */
    __I  Ifx_UReg_32Bit SF1:1;             /**< \brief [1:1] Shared Alarm Group status flag for Alarm Group 30. - CF1 (rh) */
    __I  Ifx_UReg_32Bit SF2:1;             /**< \brief [2:2] Shared Alarm Group status flag for Alarm Group 30. - CF2 (rh) */
    __I  Ifx_UReg_32Bit SF3:1;             /**< \brief [3:3] Shared Alarm Group status flag for Alarm Group 30. - CF3 (rh) */
    __I  Ifx_UReg_32Bit SF4:1;             /**< \brief [4:4] Shared Alarm Group status flag for Alarm Group 30. - CF4 (rh) */
    __I  Ifx_UReg_32Bit SF5:1;             /**< \brief [5:5] Shared Alarm Group status flag for Alarm Group 30. - CF5 (rh) */
    __I  Ifx_UReg_32Bit SF6:1;             /**< \brief [6:6] Shared Alarm Group status flag for Alarm Group 30. - CF6 (rh) */
    __I  Ifx_UReg_32Bit SF7:1;             /**< \brief [7:7] Shared Alarm Group status flag for Alarm Group 30. - CF7 (rh) */
    __I  Ifx_UReg_32Bit SF8:1;             /**< \brief [8:8] Shared Alarm Group status flag for Alarm Group 30. - CF8 (rh) */
    __I  Ifx_UReg_32Bit SF9:1;             /**< \brief [9:9] Shared Alarm Group status flag for Alarm Group 30. - CF9 (rh) */
    __I  Ifx_UReg_32Bit SF10:1;            /**< \brief [10:10] Shared Alarm Group status flag for Alarm Group 30. - CF10 (rh) */
    __I  Ifx_UReg_32Bit SF11:1;            /**< \brief [11:11] Shared Alarm Group status flag for Alarm Group 30. - CF11 (rh) */
    __I  Ifx_UReg_32Bit SF12:1;            /**< \brief [12:12] Shared Alarm Group status flag for Alarm Group 30. - CF12 (rh) */
    __I  Ifx_UReg_32Bit SF13:1;            /**< \brief [13:13] Shared Alarm Group status flag for Alarm Group 30. - CF13 (rh) */
    __I  Ifx_UReg_32Bit SF14:1;            /**< \brief [14:14] Shared Alarm Group status flag for Alarm Group 30. - CF14 (rh) */
    __I  Ifx_UReg_32Bit SF15:1;            /**< \brief [15:15] Shared Alarm Group status flag for Alarm Group 30. - CF15 (rh) */
    __I  Ifx_UReg_32Bit SF16:1;            /**< \brief [16:16] Shared Alarm Group status flag for Alarm Group 30. - CF16 (rh) */
    __I  Ifx_UReg_32Bit SF17:1;            /**< \brief [17:17] Shared Alarm Group status flag for Alarm Group 30. - CF17 (rh) */
    __I  Ifx_UReg_32Bit SF18:1;            /**< \brief [18:18] Shared Alarm Group status flag for Alarm Group 30. - CF18 (rh) */
    __I  Ifx_UReg_32Bit SF19:1;            /**< \brief [19:19] Shared Alarm Group status flag for Alarm Group 30. - CF19 (rh) */
    __I  Ifx_UReg_32Bit SF20:1;            /**< \brief [20:20] Shared Alarm Group status flag for Alarm Group 30. - CF20 (rh) */
    __I  Ifx_UReg_32Bit SF21:1;            /**< \brief [21:21] Shared Alarm Group status flag for Alarm Group 30. - CF21 (rh) */
    __I  Ifx_UReg_32Bit SF22:1;            /**< \brief [22:22] Shared Alarm Group status flag for Alarm Group 30. - CF22 (rh) */
    __I  Ifx_UReg_32Bit SF23:1;            /**< \brief [23:23] Shared Alarm Group status flag for Alarm Group 30. - CF23 (rh) */
    __I  Ifx_UReg_32Bit SF24:1;            /**< \brief [24:24] Shared Alarm Group status flag for Alarm Group 30. - CF24 (rh) */
    __I  Ifx_UReg_32Bit SF25:1;            /**< \brief [25:25] Shared Alarm Group status flag for Alarm Group 30. - CF25 (rh) */
    __I  Ifx_UReg_32Bit SF26:1;            /**< \brief [26:26] Shared Alarm Group status flag for Alarm Group 30. - CF26 (rh) */
    __I  Ifx_UReg_32Bit SF27:1;            /**< \brief [27:27] Shared Alarm Group status flag for Alarm Group 30. - CF27 (rh) */
    __I  Ifx_UReg_32Bit SF28:1;            /**< \brief [28:28] Shared Alarm Group status flag for Alarm Group 30. - CF28 (rh) */
    __I  Ifx_UReg_32Bit SF29:1;            /**< \brief [29:29] Shared Alarm Group status flag for Alarm Group 30. - CF29 (rh) */
    __I  Ifx_UReg_32Bit SF30:1;            /**< \brief [30:30] Shared Alarm Group status flag for Alarm Group 30. - CF30 (rh) */
    __I  Ifx_UReg_32Bit SF31:1;            /**< \brief [31:31] Shared Alarm Group status flag for Alarm Group 30. - CF31 (rh) */
} Ifx_SMU_GCC_AGSH_SS_Bits;

/** \brief Alarm Signal Test Register */
typedef struct _Ifx_SMU_GCC_ALMTST_Bits
{
    __IO Ifx_UReg_32Bit TE:1;              /**< \brief [0:0] Alarm Signal Test Enable - TE (rw) */
    __I  Ifx_UReg_32Bit :31;               /**< \brief [31:1] \internal Reserved */
} Ifx_SMU_GCC_ALMTST_Bits;

/** \brief Emergency Stop Register */
typedef struct _Ifx_SMU_GCC_EMSR_Bits
{
    __IO Ifx_UReg_32Bit POL:1;             /**< \brief [0:0] Input Polarity - POL (rw) */
    __IO Ifx_UReg_32Bit MODE:1;            /**< \brief [1:1] Mode Selection - MODE (rw) */
    __IO Ifx_UReg_32Bit ENON:1;            /**< \brief [2:2] Enable ON - ENON (rw) */
    __IO Ifx_UReg_32Bit PSEL:1;            /**< \brief [3:3] PORT Select - PSEL (rw) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [4:4] \internal Reserved */
    __IO Ifx_UReg_32Bit GFEN:1;            /**< \brief [5:5] Glitch Filter for PORT B (21.2) to register GCC_EMSSW.EMSPORTB enable - GFEN (rw) */
    __I  Ifx_UReg_32Bit :10;               /**< \brief [15:6] \internal Reserved */
    __I  Ifx_UReg_32Bit EMSF:1;            /**< \brief [16:16] Emergency Stop Flag - EMSF (rh) */
    __I  Ifx_UReg_32Bit SEMSF:1;           /**< \brief [17:17] SMU Emergency Stop Flag - SEMSF (rh) */
    __I  Ifx_UReg_32Bit EMSPORTB:1;        /**< \brief [18:18] Emergency Stop External Request Port B (21.2) status - EMSPORTB (rh) */
    __I  Ifx_UReg_32Bit :13;               /**< \brief [31:19] \internal Reserved */
} Ifx_SMU_GCC_EMSR_Bits;

/** \brief Emergency Stop Software set and clear register */
typedef struct _Ifx_SMU_GCC_EMSSW_Bits
{
    __I  Ifx_UReg_32Bit :24;               /**< \brief [23:0] \internal Reserved */
    __O  Ifx_UReg_32Bit EMSFM:2;           /**< \brief [25:24] Emergency Stop Flag Modification - EMSFM (w) */
    __O  Ifx_UReg_32Bit SEMSFM:2;          /**< \brief [27:26] SMU Emergency Stop Flag Modification - SEMSFM (w) */
    __I  Ifx_UReg_32Bit :4;                /**< \brief [31:28] \internal Reserved */
} Ifx_SMU_GCC_EMSSW_Bits;

/** \brief SMU_GCC Key Register */
typedef struct _Ifx_SMU_GCC_KEYS_Bits
{
    __IO Ifx_Strict_32Bit CFGLCK:8;        /**< \brief [7:0] Configuration Lock - CFGLCK (rw) */
    __IO Ifx_Strict_32Bit PERLCK:8;        /**< \brief [15:8] Permanent Lock - PERLCK (rw) */
    __I  Ifx_Strict_32Bit :16;             /**< \brief [31:16] \internal Reserved */
} Ifx_SMU_GCC_KEYS_Bits;

/** \brief Register Monitor Control */
typedef struct _Ifx_SMU_GCC_RM_CTL_Bits
{
    __IO Ifx_Strict_32Bit TE0:1;           /**< \brief [0:0] Test Enable - TE0 (rw) */
    __IO Ifx_Strict_32Bit TE1:1;           /**< \brief [1:1] Test Enable - TE1 (rw) */
    __IO Ifx_Strict_32Bit TE2:1;           /**< \brief [2:2] Test Enable - TE2 (rw) */
    __IO Ifx_Strict_32Bit TE3:1;           /**< \brief [3:3] Test Enable - TE3 (rw) */
    __IO Ifx_Strict_32Bit TE4:1;           /**< \brief [4:4] Test Enable - TE4 (rw) */
    __IO Ifx_Strict_32Bit TE5:1;           /**< \brief [5:5] Test Enable - TE5 (rw) */
    __IO Ifx_Strict_32Bit TE6:1;           /**< \brief [6:6] Test Enable - TE6 (rw) */
    __IO Ifx_Strict_32Bit TE7:1;           /**< \brief [7:7] Test Enable - TE7 (rw) */
    __IO Ifx_Strict_32Bit TE8:1;           /**< \brief [8:8] Test Enable - TE8 (rw) */
    __IO Ifx_Strict_32Bit TE9:1;           /**< \brief [9:9] Test Enable - TE9 (rw) */
    __IO Ifx_Strict_32Bit TE10:1;          /**< \brief [10:10] Test Enable - TE10 (rw) */
    __IO Ifx_Strict_32Bit TE11:1;          /**< \brief [11:11] Test Enable - TE11 (rw) */
    __IO Ifx_Strict_32Bit TE12:1;          /**< \brief [12:12] Test Enable - TE12 (rw) */
    __IO Ifx_Strict_32Bit TE13:1;          /**< \brief [13:13] Test Enable - TE13 (rw) */
    __IO Ifx_Strict_32Bit TE14:1;          /**< \brief [14:14] Test Enable - TE14 (rw) */
    __IO Ifx_Strict_32Bit TE15:1;          /**< \brief [15:15] Test Enable - TE15 (rw) */
    __IO Ifx_Strict_32Bit TE16:1;          /**< \brief [16:16] Test Enable - TE16 (rw) */
    __IO Ifx_Strict_32Bit TE17:1;          /**< \brief [17:17] Test Enable - TE17 (rw) */
    __IO Ifx_Strict_32Bit TE18:1;          /**< \brief [18:18] Test Enable - TE18 (rw) */
    __IO Ifx_Strict_32Bit TE19:1;          /**< \brief [19:19] Test Enable - TE19 (rw) */
    __IO Ifx_Strict_32Bit TE20:1;          /**< \brief [20:20] Test Enable - TE20 (rw) */
    __IO Ifx_Strict_32Bit TE21:1;          /**< \brief [21:21] Test Enable - TE21 (rw) */
    __IO Ifx_Strict_32Bit TE22:1;          /**< \brief [22:22] Test Enable - TE22 (rw) */
    __IO Ifx_Strict_32Bit TE23:1;          /**< \brief [23:23] Test Enable - TE23 (rw) */
    __IO Ifx_Strict_32Bit TE24:1;          /**< \brief [24:24] Test Enable - TE24 (rw) */
    __IO Ifx_Strict_32Bit TE25:1;          /**< \brief [25:25] Test Enable - TE25 (rw) */
    __IO Ifx_Strict_32Bit TE26:1;          /**< \brief [26:26] Test Enable - TE26 (rw) */
    __IO Ifx_Strict_32Bit TE27:1;          /**< \brief [27:27] Test Enable - TE27 (rw) */
    __IO Ifx_Strict_32Bit TE28:1;          /**< \brief [28:28] Test Enable - TE28 (rw) */
    __IO Ifx_Strict_32Bit TE29:1;          /**< \brief [29:29] Test Enable - TE29 (rw) */
    __IO Ifx_Strict_32Bit TE30:1;          /**< \brief [30:30] Test Enable - TE30 (rw) */
    __IO Ifx_Strict_32Bit TE31:1;          /**< \brief [31:31] Test Enable - TE31 (rw) */
} Ifx_SMU_GCC_RM_CTL_Bits;

/** \brief Register Monitor Error Flags */
typedef struct _Ifx_SMU_GCC_RM_EF_Bits
{
    __IO Ifx_Strict_32Bit EF0:1;           /**< \brief [0:0] Error flag - EF0 (rw0ch) */
    __IO Ifx_Strict_32Bit EF1:1;           /**< \brief [1:1] Error flag - EF1 (rw0ch) */
    __IO Ifx_Strict_32Bit EF2:1;           /**< \brief [2:2] Error flag - EF2 (rw0ch) */
    __IO Ifx_Strict_32Bit EF3:1;           /**< \brief [3:3] Error flag - EF3 (rw0ch) */
    __IO Ifx_Strict_32Bit EF4:1;           /**< \brief [4:4] Error flag - EF4 (rw0ch) */
    __IO Ifx_Strict_32Bit EF5:1;           /**< \brief [5:5] Error flag - EF5 (rw0ch) */
    __IO Ifx_Strict_32Bit EF6:1;           /**< \brief [6:6] Error flag - EF6 (rw0ch) */
    __IO Ifx_Strict_32Bit EF7:1;           /**< \brief [7:7] Error flag - EF7 (rw0ch) */
    __IO Ifx_Strict_32Bit EF8:1;           /**< \brief [8:8] Error flag - EF8 (rw0ch) */
    __IO Ifx_Strict_32Bit EF9:1;           /**< \brief [9:9] Error flag - EF9 (rw0ch) */
    __IO Ifx_Strict_32Bit EF10:1;          /**< \brief [10:10] Error flag - EF10 (rw0ch) */
    __IO Ifx_Strict_32Bit EF11:1;          /**< \brief [11:11] Error flag - EF11 (rw0ch) */
    __IO Ifx_Strict_32Bit EF12:1;          /**< \brief [12:12] Error flag - EF12 (rw0ch) */
    __IO Ifx_Strict_32Bit EF13:1;          /**< \brief [13:13] Error flag - EF13 (rw0ch) */
    __IO Ifx_Strict_32Bit EF14:1;          /**< \brief [14:14] Error flag - EF14 (rw0ch) */
    __IO Ifx_Strict_32Bit EF15:1;          /**< \brief [15:15] Error flag - EF15 (rw0ch) */
    __IO Ifx_Strict_32Bit EF16:1;          /**< \brief [16:16] Error flag - EF16 (rw0ch) */
    __IO Ifx_Strict_32Bit EF17:1;          /**< \brief [17:17] Error flag - EF17 (rw0ch) */
    __IO Ifx_Strict_32Bit EF18:1;          /**< \brief [18:18] Error flag - EF18 (rw0ch) */
    __IO Ifx_Strict_32Bit EF19:1;          /**< \brief [19:19] Error flag - EF19 (rw0ch) */
    __IO Ifx_Strict_32Bit EF20:1;          /**< \brief [20:20] Error flag - EF20 (rw0ch) */
    __IO Ifx_Strict_32Bit EF21:1;          /**< \brief [21:21] Error flag - EF21 (rw0ch) */
    __IO Ifx_Strict_32Bit EF22:1;          /**< \brief [22:22] Error flag - EF22 (rw0ch) */
    __IO Ifx_Strict_32Bit EF23:1;          /**< \brief [23:23] Error flag - EF23 (rw0ch) */
    __IO Ifx_Strict_32Bit EF24:1;          /**< \brief [24:24] Error flag - EF24 (rw0ch) */
    __IO Ifx_Strict_32Bit EF25:1;          /**< \brief [25:25] Error flag - EF25 (rw0ch) */
    __IO Ifx_Strict_32Bit EF26:1;          /**< \brief [26:26] Error flag - EF26 (rw0ch) */
    __IO Ifx_Strict_32Bit EF27:1;          /**< \brief [27:27] Error flag - EF27 (rw0ch) */
    __IO Ifx_Strict_32Bit EF28:1;          /**< \brief [28:28] Error flag - EF28 (rw0ch) */
    __IO Ifx_Strict_32Bit EF29:1;          /**< \brief [29:29] Error flag - EF29 (rw0ch) */
    __IO Ifx_Strict_32Bit EF30:1;          /**< \brief [30:30] Error flag - EF30 (rw0ch) */
    __IO Ifx_Strict_32Bit EF31:1;          /**< \brief [31:31] Error flag - EF31 (rw0ch) */
} Ifx_SMU_GCC_RM_EF_Bits;

/** \brief Register Monitor Self Test Status */
typedef struct _Ifx_SMU_GCC_RM_STS_Bits
{
    __IO Ifx_Strict_32Bit STS0:1;          /**< \brief [0:0] Status flag - STS0 (rw0ch) */
    __IO Ifx_Strict_32Bit STS1:1;          /**< \brief [1:1] Status flag - STS1 (rw0ch) */
    __IO Ifx_Strict_32Bit STS2:1;          /**< \brief [2:2] Status flag - STS2 (rw0ch) */
    __IO Ifx_Strict_32Bit STS3:1;          /**< \brief [3:3] Status flag - STS3 (rw0ch) */
    __IO Ifx_Strict_32Bit STS4:1;          /**< \brief [4:4] Status flag - STS4 (rw0ch) */
    __IO Ifx_Strict_32Bit STS5:1;          /**< \brief [5:5] Status flag - STS5 (rw0ch) */
    __IO Ifx_Strict_32Bit STS6:1;          /**< \brief [6:6] Status flag - STS6 (rw0ch) */
    __IO Ifx_Strict_32Bit STS7:1;          /**< \brief [7:7] Status flag - STS7 (rw0ch) */
    __IO Ifx_Strict_32Bit STS8:1;          /**< \brief [8:8] Status flag - STS8 (rw0ch) */
    __IO Ifx_Strict_32Bit STS9:1;          /**< \brief [9:9] Status flag - STS9 (rw0ch) */
    __IO Ifx_Strict_32Bit STS10:1;         /**< \brief [10:10] Status flag - STS10 (rw0ch) */
    __IO Ifx_Strict_32Bit STS11:1;         /**< \brief [11:11] Status flag - STS11 (rw0ch) */
    __IO Ifx_Strict_32Bit STS12:1;         /**< \brief [12:12] Status flag - STS12 (rw0ch) */
    __IO Ifx_Strict_32Bit STS13:1;         /**< \brief [13:13] Status flag - STS13 (rw0ch) */
    __IO Ifx_Strict_32Bit STS14:1;         /**< \brief [14:14] Status flag - STS14 (rw0ch) */
    __IO Ifx_Strict_32Bit STS15:1;         /**< \brief [15:15] Status flag - STS15 (rw0ch) */
    __IO Ifx_Strict_32Bit STS16:1;         /**< \brief [16:16] Status flag - STS16 (rw0ch) */
    __IO Ifx_Strict_32Bit STS17:1;         /**< \brief [17:17] Status flag - STS17 (rw0ch) */
    __IO Ifx_Strict_32Bit STS18:1;         /**< \brief [18:18] Status flag - STS18 (rw0ch) */
    __IO Ifx_Strict_32Bit STS19:1;         /**< \brief [19:19] Status flag - STS19 (rw0ch) */
    __IO Ifx_Strict_32Bit STS20:1;         /**< \brief [20:20] Status flag - STS20 (rw0ch) */
    __IO Ifx_Strict_32Bit STS21:1;         /**< \brief [21:21] Status flag - STS21 (rw0ch) */
    __IO Ifx_Strict_32Bit STS22:1;         /**< \brief [22:22] Status flag - STS22 (rw0ch) */
    __IO Ifx_Strict_32Bit STS23:1;         /**< \brief [23:23] Status flag - STS23 (rw0ch) */
    __IO Ifx_Strict_32Bit STS24:1;         /**< \brief [24:24] Status flag - STS24 (rw0ch) */
    __IO Ifx_Strict_32Bit STS25:1;         /**< \brief [25:25] Status flag - STS25 (rw0ch) */
    __IO Ifx_Strict_32Bit STS26:1;         /**< \brief [26:26] Status flag - STS26 (rw0ch) */
    __IO Ifx_Strict_32Bit STS27:1;         /**< \brief [27:27] Status flag - STS27 (rw0ch) */
    __IO Ifx_Strict_32Bit STS28:1;         /**< \brief [28:28] Status flag - STS28 (rw0ch) */
    __IO Ifx_Strict_32Bit STS29:1;         /**< \brief [29:29] Status flag - STS29 (rw0ch) */
    __IO Ifx_Strict_32Bit STS30:1;         /**< \brief [30:30] Status flag - STS30 (rw0ch) */
    __IO Ifx_Strict_32Bit STS31:1;         /**< \brief [31:31] Status flag - STS31 (rw0ch) */
} Ifx_SMU_GCC_RM_STS_Bits;

/** \brief Module Identification Register */
typedef struct _Ifx_SMU_ID_Bits
{
    __I  Ifx_UReg_32Bit MOD_REV:8;         /**< \brief [7:0] Module Revision - MOD_REV (r) */
    __I  Ifx_UReg_32Bit MOD_TYPE:8;        /**< \brief [15:8] Module Type - MOD_TYPE (r) */
    __I  Ifx_UReg_32Bit MOD_NUM:16;        /**< \brief [31:16] Module Number Value - MOD_NUMBER (r) */
} Ifx_SMU_ID_Bits;

/** \brief OCDS Control and Status */
typedef struct _Ifx_SMU_OCS_Bits
{
    __IO Ifx_UReg_32Bit TGS:2;             /**< \brief [1:0] Trigger Set for OTGB0/1 - TGS (rw) */
    __IO Ifx_UReg_32Bit TGB:1;             /**< \brief [2:2] OTGB0/1 Bus Select - TGB (rw) */
    __O  Ifx_UReg_32Bit TG_P:1;            /**< \brief [3:3] TGS, TGB Write Protection - TG_P (w) */
    __I  Ifx_UReg_32Bit :20;               /**< \brief [23:4] \internal Reserved */
    __IO Ifx_UReg_32Bit SUS:4;             /**< \brief [27:24] OCDS Suspend Control - SUS (rw) */
    __O  Ifx_UReg_32Bit SUS_P:1;           /**< \brief [28:28] SUS Write Protection - SUS_P (w) */
    __I  Ifx_UReg_32Bit SUSSTA:1;          /**< \brief [29:29] Suspend State - SUSSTA (rh) */
    __I  Ifx_UReg_32Bit :2;                /**< \brief [31:30] \internal Reserved */
} Ifx_SMU_OCS_Bits;

/** \brief Resource Protection Register */
typedef struct _Ifx_SMU_PROT_Bits
{
    __IO Ifx_UReg_32Bit STATE:3;           /**< \brief [2:0] Resource protection state (rwh) */
    __O  Ifx_UReg_32Bit SWEN:1;            /**< \brief [3:3] State write enable (w) */
    __I  Ifx_UReg_32Bit :12;               /**< \brief [15:4] \internal Reserved */
    __IO Ifx_UReg_32Bit VM:3;              /**< \brief [18:16] Virtual Machine definition for PROT owner (rw) */
    __IO Ifx_UReg_32Bit VMEN:1;            /**< \brief [19:19] Virtual Machine definition Enable for PROT owner (rw) */
    __IO Ifx_UReg_32Bit PRS:3;             /**< \brief [22:20] Protection Set definition for PROT owner (rw) */
    __IO Ifx_UReg_32Bit PRSEN:1;           /**< \brief [23:23] Protection Set definition Enable for PROT owner (rw) */
    __IO Ifx_UReg_32Bit TAGID:6;           /**< \brief [29:24] TAG ID definition for PROT owner (rw) */
    __IO Ifx_UReg_32Bit ODEF:1;            /**< \brief [30:30] Enable for PROT owner definition (rw) */
    __O  Ifx_UReg_32Bit OWEN:1;            /**< \brief [31:31] Owner write enable (w) */
} Ifx_SMU_PROT_Bits;

/** \brief SMU_SAFE Alarm Executed Status Register */
typedef struct _Ifx_SMU_SAFE_AEX_Bits
{
    __I  Ifx_UReg_32Bit IRQ0STS:1;         /**< \brief [0:0] IRQ0 Request Status - IRQ0STS (rh) */
    __I  Ifx_UReg_32Bit IRQ1STS:1;         /**< \brief [1:1] IRQ1 Request Status - IRQ1STS (rh) */
    __I  Ifx_UReg_32Bit IRQ2STS:1;         /**< \brief [2:2] IRQ2 Request Status - IRQ2STS (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [3:3] \internal Reserved */
    __I  Ifx_UReg_32Bit C1RSTSTS:1;        /**< \brief [4:4] CPU1 RESET Request Status - C1RSTSTS (rh) */
    __I  Ifx_UReg_32Bit C2RSTSTS:1;        /**< \brief [5:5] CPU2 RESET Request Status - C2RSTSTS (rh) */
    __I  Ifx_UReg_32Bit C3RSTSTS:1;        /**< \brief [6:6] CPU3 RESET Request Status - C3RSTSTS (rh) */
    __I  Ifx_UReg_32Bit C4RSTSTS:1;        /**< \brief [7:7] CPU4 RESET Request Status - C4RSTSTS (rh) */
    __I  Ifx_UReg_32Bit C5RSTSTS:1;        /**< \brief [8:8] CPU5 RESET Request Status - C5RSTSTS (rh) */
    __I  Ifx_UReg_32Bit NMI0STS:1;         /**< \brief [9:9] NMI0 Request Status - NMI0STS (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [10:10] \internal Reserved */
    __I  Ifx_UReg_32Bit EMSSTS:1;          /**< \brief [11:11] EMS Request Status - EMSSTS (rh) */
    __I  Ifx_UReg_32Bit NMI1STS:1;         /**< \brief [12:12] NMI1 Request Status - NMI1STS (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [13:13] \internal Reserved */
    __I  Ifx_UReg_32Bit PRSTSTS:1;         /**< \brief [14:14] PPU RESET Request Status - PRSTSTS (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [15:15] \internal Reserved */
    __I  Ifx_UReg_32Bit IRQ0AEM:1;         /**< \brief [16:16] IRQ0 AEM - IRQ0AEM (rh) */
    __I  Ifx_UReg_32Bit IRQ1AEM:1;         /**< \brief [17:17] IRQ1 AEM - IRQ1AEM (rh) */
    __I  Ifx_UReg_32Bit IRQ2AEM:1;         /**< \brief [18:18] IRQ2 AEM - IRQ2AEM (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [19:19] \internal Reserved */
    __I  Ifx_UReg_32Bit C1RSTAEM:1;        /**< \brief [20:20] C1RST AEM - C1RSTAEM (rh) */
    __I  Ifx_UReg_32Bit C2RSTAEM:1;        /**< \brief [21:21] C2RST AEM - C2RSTAEM (rh) */
    __I  Ifx_UReg_32Bit C3RSTAEM:1;        /**< \brief [22:22] C3RST AEM - C3RSTAEM (rh) */
    __I  Ifx_UReg_32Bit C4RSTAEM:1;        /**< \brief [23:23] C4RST AEM - C4RSTAEM (rh) */
    __I  Ifx_UReg_32Bit C5RSTAEM:1;        /**< \brief [24:24] C5RST AEM - C5RSTAEM (rh) */
    __I  Ifx_UReg_32Bit NMI0AEM:1;         /**< \brief [25:25] NMI0 AEM - NMI0AEM (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [26:26] \internal Reserved */
    __I  Ifx_UReg_32Bit EMSAEM:1;          /**< \brief [27:27] EMS AEM - EMSAEM (rh) */
    __I  Ifx_UReg_32Bit NMI1AEM:1;         /**< \brief [28:28] NMI1 AEM - NMI1AEM (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [29:29] \internal Reserved */
    __I  Ifx_UReg_32Bit PRSTAEM:1;         /**< \brief [30:30] PRST AEM - PRSTAEM (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [31:31] \internal Reserved */
} Ifx_SMU_SAFE_AEX_Bits;

/** \brief SMU_SAFE Alarm Executed Status Clear Register */
typedef struct _Ifx_SMU_SAFE_AEXCLR_Bits
{
    __O  Ifx_Strict_32Bit IRQ0C:1;         /**< \brief [0:0] IRQ0STS Clear - IRQ0C (w) */
    __O  Ifx_Strict_32Bit IRQ1C:1;         /**< \brief [1:1] IRQ1STS Clear - IRQ1C (w) */
    __O  Ifx_Strict_32Bit IRQ2C:1;         /**< \brief [2:2] IRQ2STS Clear - IRQ2C (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [3:3] \internal Reserved */
    __O  Ifx_Strict_32Bit C1RSTC:1;        /**< \brief [4:4] C1RSTSTS Clear - C1RSTC (w) */
    __O  Ifx_Strict_32Bit C2RSTC:1;        /**< \brief [5:5] C2RSTSTS Clear - C2RSTC (w) */
    __O  Ifx_Strict_32Bit C3RSTC:1;        /**< \brief [6:6] C3RSTSTS Clear - C3RSTC (w) */
    __O  Ifx_Strict_32Bit C4RSTC:1;        /**< \brief [7:7] C4RSTSTS Clear - C4RSTC (w) */
    __O  Ifx_Strict_32Bit C5RSTC:1;        /**< \brief [8:8] C5RSTSTS Clear - C5RSTC (w) */
    __O  Ifx_Strict_32Bit NMI0C:1;         /**< \brief [9:9] NMI0STS Clear - NMI0C (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [10:10] \internal Reserved */
    __O  Ifx_Strict_32Bit EMSC:1;          /**< \brief [11:11] EMSSTS Clear - EMSC (w) */
    __O  Ifx_Strict_32Bit NMI1C:1;         /**< \brief [12:12] NMI1STS Clear - NMI1C (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [13:13] \internal Reserved */
    __O  Ifx_Strict_32Bit PRSTC:1;         /**< \brief [14:14] PRSTSTS Clear - PRSTC (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [15:15] \internal Reserved */
    __O  Ifx_Strict_32Bit IRQ0AEMC:1;      /**< \brief [16:16] IRQ0AEM Clear - IRQ0AEMC (w) */
    __O  Ifx_Strict_32Bit IRQ1AEMC:1;      /**< \brief [17:17] IRQ1AEM Clear - IRQ1AEMC (w) */
    __O  Ifx_Strict_32Bit IRQ2AEMC:1;      /**< \brief [18:18] IRQ2AEM Clear - IRQ2AEMC (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [19:19] \internal Reserved */
    __O  Ifx_Strict_32Bit C1RSTAEMC:1;     /**< \brief [20:20] C1RSTAEM Clear - C1RSTAEMC (w) */
    __O  Ifx_Strict_32Bit C2RSTAEMC:1;     /**< \brief [21:21] C2RSTAEM Clear - C2RSTAEMC (w) */
    __O  Ifx_Strict_32Bit C3RSTAEMC:1;     /**< \brief [22:22] C3RSTAEM Clear - C3RSTAEMC (w) */
    __O  Ifx_Strict_32Bit C4RSTAEMC:1;     /**< \brief [23:23] C4RSTAEM Clear - C4RSTAEMC (w) */
    __O  Ifx_Strict_32Bit C5RSTAEMC:1;     /**< \brief [24:24] C5RSTAEM Clear - C5RSTAEMC (w) */
    __O  Ifx_Strict_32Bit NMI0AEMC:1;      /**< \brief [25:25] NMI0AEM Clear - NMI0AEMC (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [26:26] \internal Reserved */
    __O  Ifx_Strict_32Bit EMSAEMC:1;       /**< \brief [27:27] EMSAEM Clear - EMSAEMC (w) */
    __O  Ifx_Strict_32Bit NMI1AEMC:1;      /**< \brief [28:28] NMI1AEM Clear - NMI1AEMC (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [29:29] \internal Reserved */
    __O  Ifx_Strict_32Bit PRSTAEMC:1;      /**< \brief [30:30] PRSTAEM Clear - PRSTAEMC (w) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [31:31] \internal Reserved */
} Ifx_SMU_SAFE_AEXCLR_Bits;

/** \brief SMU_SAFE Alarm and Fault Counter */
typedef struct _Ifx_SMU_SAFE_AFCNT_Bits
{
    __I  Ifx_UReg_32Bit F0CNT:4;           /**< \brief [3:0] Fault Counter - FCNT (rh) */
    __I  Ifx_UReg_32Bit ACNT:12;           /**< \brief [15:4] Alarm Counter - ACNT (rh) */
    __I  Ifx_UReg_32Bit :8;                /**< \brief [23:16] \internal Reserved */
    __I  Ifx_UReg_32Bit F1CNT:4;           /**< \brief [27:24] Fault Counter - F1CNT (rh) */
    __I  Ifx_UReg_32Bit F1CO:1;            /**< \brief [28:28] Fault Counter Overflow - F1CO (rh) */
    __I  Ifx_UReg_32Bit :1;                /**< \brief [29:29] \internal Reserved */
    __I  Ifx_UReg_32Bit F0CO:1;            /**< \brief [30:30] Fault Counter Overflow - F0CO (rh) */
    __I  Ifx_UReg_32Bit ACO:1;             /**< \brief [31:31] Alarm Counter Overflow - ACO (rh) */
} Ifx_SMU_SAFE_AFCNT_Bits;

/** \brief SMU_SAFE Alarm Global Configuration */
typedef struct _Ifx_SMU_SAFE_AGC_Bits
{
    __IO Ifx_Strict_32Bit IGCS0:3;         /**< \brief [2:0] Interrupt Generation Configuration Set 0 - IGCS0 (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [3:3] \internal Reserved */
    __IO Ifx_Strict_32Bit IGCS1:3;         /**< \brief [6:4] Interrupt Generation Configuration Set 1 - IGCS1 (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [7:7] \internal Reserved */
    __IO Ifx_Strict_32Bit IGCS2:3;         /**< \brief [10:8] Interrupt Generation Configuration Set 2 - IGCS2 (rw) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [12:11] \internal Reserved */
    __IO Ifx_Strict_32Bit RCS0:5;          /**< \brief [17:13] CPU Reset Configuration Set 0 - RCS0 (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [18:18] \internal Reserved */
    __IO Ifx_Strict_32Bit RCS1:5;          /**< \brief [23:19] CPU Reset Configuration Set 1 - RCS1 (rw) */
    __I  Ifx_Strict_32Bit :5;              /**< \brief [28:24] \internal Reserved */
    __IO Ifx_Strict_32Bit EFRST0:1;        /**< \brief [29:29] Enable FAULT to RUN State Transition in SSM0 - EFRST0 (rw) */
    __IO Ifx_Strict_32Bit EFRST1:1;        /**< \brief [30:30] Enable FAULT to RUN State Transition in SSM1 - EFRST1 (rw) */
    __IO Ifx_Strict_32Bit ESSM1:1;         /**< \brief [31:31] Enable START to RUN State Transition in SSM1 - ESSM1 (rw) */
} Ifx_SMU_SAFE_AGC_Bits;

/** \brief SMU_SAFE Critical Alarm Selection Flag */
typedef struct _Ifx_SMU_SAFE_AGSF_CAS_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Critical Alarm Selection flag for alarm 0 in alarm group AGSFi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Critical Alarm Selection flag for alarm 1 in alarm group AGSFi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Critical Alarm Selection flag for alarm 2 in alarm group AGSFi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Critical Alarm Selection flag for alarm 3 in alarm group AGSFi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Critical Alarm Selection flag for alarm 4 in alarm group AGSFi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Critical Alarm Selection flag for alarm 5 in alarm group AGSFi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Critical Alarm Selection flag for alarm 6 in alarm group AGSFi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Critical Alarm Selection flag for alarm 7 in alarm group AGSFi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Critical Alarm Selection flag for alarm 8 in alarm group AGSFi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Critical Alarm Selection flag for alarm 9 in alarm group AGSFi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Critical Alarm Selection flag for alarm 10 in alarm group AGSFi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Critical Alarm Selection flag for alarm 11 in alarm group AGSFi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Critical Alarm Selection flag for alarm 12 in alarm group AGSFi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Critical Alarm Selection flag for alarm 13 in alarm group AGSFi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Critical Alarm Selection flag for alarm 14 in alarm group AGSFi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Critical Alarm Selection flag for alarm 15 in alarm group AGSFi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Critical Alarm Selection flag for alarm 16 in alarm group AGSFi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Critical Alarm Selection flag for alarm 17 in alarm group AGSFi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Critical Alarm Selection flag for alarm 18 in alarm group AGSFi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Critical Alarm Selection flag for alarm 19 in alarm group AGSFi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Critical Alarm Selection flag for alarm 20 in alarm group AGSFi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Critical Alarm Selection flag for alarm 21 in alarm group AGSFi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Critical Alarm Selection flag for alarm 22 in alarm group AGSFi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Critical Alarm Selection flag for alarm 23 in alarm group AGSFi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Critical Alarm Selection flag for alarm 24 in alarm group AGSFi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Critical Alarm Selection flag for alarm 25 in alarm group AGSFi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Critical Alarm Selection flag for alarm 26 in alarm group AGSFi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Critical Alarm Selection flag for alarm 27 in alarm group AGSFi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Critical Alarm Selection flag for alarm 28 in alarm group AGSFi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Critical Alarm Selection flag for alarm 29 in alarm group AGSFi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Critical Alarm Selection flag for alarm 30 in alarm group AGSFi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Critical Alarm Selection flag for alarm 31 in alarm group AGSFi. - CF31 (rw) */
} Ifx_SMU_SAFE_AGSF_CAS_Bits;

/** \brief SMU_SAFE Alarm Configuration Register */
typedef struct _Ifx_SMU_SAFE_AGSF_CON_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Configuration flag j (j=0-3) for alarm 0 in alarm group AGSFi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Configuration flag j (j=0-3) for alarm 1 in alarm group AGSFi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Configuration flag j (j=0-3) for alarm 2 in alarm group AGSFi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Configuration flag j (j=0-3) for alarm 3 in alarm group AGSFi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Configuration flag j (j=0-3) for alarm 4 in alarm group AGSFi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Configuration flag j (j=0-3) for alarm 5 in alarm group AGSFi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Configuration flag j (j=0-3) for alarm 6 in alarm group AGSFi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Configuration flag j (j=0-3) for alarm 7 in alarm group AGSFi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Configuration flag j (j=0-3) for alarm 8 in alarm group AGSFi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Configuration flag j (j=0-3) for alarm 9 in alarm group AGSFi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Configuration flag j (j=0-3) for alarm 10 in alarm group AGSFi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Configuration flag j (j=0-3) for alarm 11 in alarm group AGSFi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Configuration flag j (j=0-3) for alarm 12 in alarm group AGSFi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Configuration flag j (j=0-3) for alarm 13 in alarm group AGSFi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Configuration flag j (j=0-3) for alarm 14 in alarm group AGSFi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Configuration flag j (j=0-3) for alarm 15 in alarm group AGSFi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Configuration flag j (j=0-3) for alarm 16 in alarm group AGSFi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Configuration flag j (j=0-3) for alarm 17 in alarm group AGSFi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Configuration flag j (j=0-3) for alarm 18 in alarm group AGSFi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Configuration flag j (j=0-3) for alarm 19 in alarm group AGSFi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Configuration flag j (j=0-3) for alarm 20 in alarm group AGSFi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Configuration flag j (j=0-3) for alarm 21 in alarm group AGSFi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Configuration flag j (j=0-3) for alarm 22 in alarm group AGSFi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Configuration flag j (j=0-3) for alarm 23 in alarm group AGSFi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Configuration flag j (j=0-3) for alarm 24 in alarm group AGSFi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Configuration flag j (j=0-3) for alarm 25 in alarm group AGSFi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Configuration flag j (j=0-3) for alarm 26 in alarm group AGSFi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Configuration flag j (j=0-3) for alarm 27 in alarm group AGSFi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Configuration flag j (j=0-3) for alarm 28 in alarm group AGSFi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Configuration flag j (j=0-3) for alarm 29 in alarm group AGSFi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Configuration flag j (j=0-3) for alarm 30 in alarm group AGSFi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Configuration flag j (j=0-3) for alarm 31 in alarm group AGSFi. - CF31 (rw) */
} Ifx_SMU_SAFE_AGSF_CON_Bits;

/** \brief SMU_SAFE Alarm Debug Register */
typedef struct _Ifx_SMU_SAFE_AGSF_DBG_Bits
{
    __I  Ifx_UReg_32Bit DF0:1;             /**< \brief [0:0] Diagnosis flag for alarm 0 in alarm group AGSFi. - DF0 (rh) */
    __I  Ifx_UReg_32Bit DF1:1;             /**< \brief [1:1] Diagnosis flag for alarm 1 in alarm group AGSFi. - DF1 (rh) */
    __I  Ifx_UReg_32Bit DF2:1;             /**< \brief [2:2] Diagnosis flag for alarm 2 in alarm group AGSFi. - DF2 (rh) */
    __I  Ifx_UReg_32Bit DF3:1;             /**< \brief [3:3] Diagnosis flag for alarm 3 in alarm group AGSFi. - DF3 (rh) */
    __I  Ifx_UReg_32Bit DF4:1;             /**< \brief [4:4] Diagnosis flag for alarm 4 in alarm group AGSFi. - DF4 (rh) */
    __I  Ifx_UReg_32Bit DF5:1;             /**< \brief [5:5] Diagnosis flag for alarm 5 in alarm group AGSFi. - DF5 (rh) */
    __I  Ifx_UReg_32Bit DF6:1;             /**< \brief [6:6] Diagnosis flag for alarm 6 in alarm group AGSFi. - DF6 (rh) */
    __I  Ifx_UReg_32Bit DF7:1;             /**< \brief [7:7] Diagnosis flag for alarm 7 in alarm group AGSFi. - DF7 (rh) */
    __I  Ifx_UReg_32Bit DF8:1;             /**< \brief [8:8] Diagnosis flag for alarm 8 in alarm group AGSFi. - DF8 (rh) */
    __I  Ifx_UReg_32Bit DF9:1;             /**< \brief [9:9] Diagnosis flag for alarm 9 in alarm group AGSFi. - DF9 (rh) */
    __I  Ifx_UReg_32Bit DF10:1;            /**< \brief [10:10] Diagnosis flag for alarm 10 in alarm group AGSFi. - DF10 (rh) */
    __I  Ifx_UReg_32Bit DF11:1;            /**< \brief [11:11] Diagnosis flag for alarm 11 in alarm group AGSFi. - DF11 (rh) */
    __I  Ifx_UReg_32Bit DF12:1;            /**< \brief [12:12] Diagnosis flag for alarm 12 in alarm group AGSFi. - DF12 (rh) */
    __I  Ifx_UReg_32Bit DF13:1;            /**< \brief [13:13] Diagnosis flag for alarm 13 in alarm group AGSFi. - DF13 (rh) */
    __I  Ifx_UReg_32Bit DF14:1;            /**< \brief [14:14] Diagnosis flag for alarm 14 in alarm group AGSFi. - DF14 (rh) */
    __I  Ifx_UReg_32Bit DF15:1;            /**< \brief [15:15] Diagnosis flag for alarm 15 in alarm group AGSFi. - DF15 (rh) */
    __I  Ifx_UReg_32Bit DF16:1;            /**< \brief [16:16] Diagnosis flag for alarm 16 in alarm group AGSFi. - DF16 (rh) */
    __I  Ifx_UReg_32Bit DF17:1;            /**< \brief [17:17] Diagnosis flag for alarm 17 in alarm group AGSFi. - DF17 (rh) */
    __I  Ifx_UReg_32Bit DF18:1;            /**< \brief [18:18] Diagnosis flag for alarm 18 in alarm group AGSFi. - DF18 (rh) */
    __I  Ifx_UReg_32Bit DF19:1;            /**< \brief [19:19] Diagnosis flag for alarm 19 in alarm group AGSFi. - DF19 (rh) */
    __I  Ifx_UReg_32Bit DF20:1;            /**< \brief [20:20] Diagnosis flag for alarm 20 in alarm group AGSFi. - DF20 (rh) */
    __I  Ifx_UReg_32Bit DF21:1;            /**< \brief [21:21] Diagnosis flag for alarm 21 in alarm group AGSFi. - DF21 (rh) */
    __I  Ifx_UReg_32Bit DF22:1;            /**< \brief [22:22] Diagnosis flag for alarm 22 in alarm group AGSFi. - DF22 (rh) */
    __I  Ifx_UReg_32Bit DF23:1;            /**< \brief [23:23] Diagnosis flag for alarm 23 in alarm group AGSFi. - DF23 (rh) */
    __I  Ifx_UReg_32Bit DF24:1;            /**< \brief [24:24] Diagnosis flag for alarm 24 in alarm group AGSFi. - DF24 (rh) */
    __I  Ifx_UReg_32Bit DF25:1;            /**< \brief [25:25] Diagnosis flag for alarm 25 in alarm group AGSFi. - DF25 (rh) */
    __I  Ifx_UReg_32Bit DF26:1;            /**< \brief [26:26] Diagnosis flag for alarm 26 in alarm group AGSFi. - DF26 (rh) */
    __I  Ifx_UReg_32Bit DF27:1;            /**< \brief [27:27] Diagnosis flag for alarm 27 in alarm group AGSFi. - DF27 (rh) */
    __I  Ifx_UReg_32Bit DF28:1;            /**< \brief [28:28] Diagnosis flag for alarm 28 in alarm group AGSFi. - DF28 (rh) */
    __I  Ifx_UReg_32Bit DF29:1;            /**< \brief [29:29] Diagnosis flag for alarm 29 in alarm group AGSFi. - DF29 (rh) */
    __I  Ifx_UReg_32Bit DF30:1;            /**< \brief [30:30] Diagnosis flag for alarm 30 in alarm group AGSFi. - DF30 (rh) */
    __I  Ifx_UReg_32Bit DF31:1;            /**< \brief [31:31] Diagnosis flag for alarm 31 in alarm group AGSFi. - DF31 (rh) */
} Ifx_SMU_SAFE_AGSF_DBG_Bits;

/** \brief FSP Alarm Configuration Register */
typedef struct _Ifx_SMU_SAFE_AGSF_FSP_Bits
{
    __IO Ifx_Strict_32Bit FE0:1;           /**< \brief [0:0] FSP configuration flag j (j=0-1) for alarm 0 in alarm group AGSFi - FE0 (rw) */
    __IO Ifx_Strict_32Bit FE1:1;           /**< \brief [1:1] FSP configuration flag j (j=0-1) for alarm 1 in alarm group AGSFi - FE1 (rw) */
    __IO Ifx_Strict_32Bit FE2:1;           /**< \brief [2:2] FSP configuration flag j (j=0-1) for alarm 2 in alarm group AGSFi - FE2 (rw) */
    __IO Ifx_Strict_32Bit FE3:1;           /**< \brief [3:3] FSP configuration flag j (j=0-1) for alarm 3 in alarm group AGSFi - FE3 (rw) */
    __IO Ifx_Strict_32Bit FE4:1;           /**< \brief [4:4] FSP configuration flag j (j=0-1) for alarm 4 in alarm group AGSFi - FE4 (rw) */
    __IO Ifx_Strict_32Bit FE5:1;           /**< \brief [5:5] FSP configuration flag j (j=0-1) for alarm 5 in alarm group AGSFi - FE5 (rw) */
    __IO Ifx_Strict_32Bit FE6:1;           /**< \brief [6:6] FSP configuration flag j (j=0-1) for alarm 6 in alarm group AGSFi - FE6 (rw) */
    __IO Ifx_Strict_32Bit FE7:1;           /**< \brief [7:7] FSP configuration flag j (j=0-1) for alarm 7 in alarm group AGSFi - FE7 (rw) */
    __IO Ifx_Strict_32Bit FE8:1;           /**< \brief [8:8] FSP configuration flag j (j=0-1) for alarm 8 in alarm group AGSFi - FE8 (rw) */
    __IO Ifx_Strict_32Bit FE9:1;           /**< \brief [9:9] FSP configuration flag j (j=0-1) for alarm 9 in alarm group AGSFi - FE9 (rw) */
    __IO Ifx_Strict_32Bit FE10:1;          /**< \brief [10:10] FSP configuration flag j (j=0-1) for alarm 10 in alarm group AGSFi - FE10 (rw) */
    __IO Ifx_Strict_32Bit FE11:1;          /**< \brief [11:11] FSP configuration flag j (j=0-1) for alarm 11 in alarm group AGSFi - FE11 (rw) */
    __IO Ifx_Strict_32Bit FE12:1;          /**< \brief [12:12] FSP configuration flag j (j=0-1) for alarm 12 in alarm group AGSFi - FE12 (rw) */
    __IO Ifx_Strict_32Bit FE13:1;          /**< \brief [13:13] FSP configuration flag j (j=0-1) for alarm 13 in alarm group AGSFi - FE13 (rw) */
    __IO Ifx_Strict_32Bit FE14:1;          /**< \brief [14:14] FSP configuration flag j (j=0-1) for alarm 14 in alarm group AGSFi - FE14 (rw) */
    __IO Ifx_Strict_32Bit FE15:1;          /**< \brief [15:15] FSP configuration flag j (j=0-1) for alarm 15 in alarm group AGSFi - FE15 (rw) */
    __IO Ifx_Strict_32Bit FE16:1;          /**< \brief [16:16] FSP configuration flag j (j=0-1) for alarm 16 in alarm group AGSFi - FE16 (rw) */
    __IO Ifx_Strict_32Bit FE17:1;          /**< \brief [17:17] FSP configuration flag j (j=0-1) for alarm 17 in alarm group AGSFi - FE17 (rw) */
    __IO Ifx_Strict_32Bit FE18:1;          /**< \brief [18:18] FSP configuration flag j (j=0-1) for alarm 18 in alarm group AGSFi - FE18 (rw) */
    __IO Ifx_Strict_32Bit FE19:1;          /**< \brief [19:19] FSP configuration flag j (j=0-1) for alarm 19 in alarm group AGSFi - FE19 (rw) */
    __IO Ifx_Strict_32Bit FE20:1;          /**< \brief [20:20] FSP configuration flag j (j=0-1) for alarm 20 in alarm group AGSFi - FE20 (rw) */
    __IO Ifx_Strict_32Bit FE21:1;          /**< \brief [21:21] FSP configuration flag j (j=0-1) for alarm 21 in alarm group AGSFi - FE21 (rw) */
    __IO Ifx_Strict_32Bit FE22:1;          /**< \brief [22:22] FSP configuration flag j (j=0-1) for alarm 22 in alarm group AGSFi - FE22 (rw) */
    __IO Ifx_Strict_32Bit FE23:1;          /**< \brief [23:23] FSP configuration flag j (j=0-1) for alarm 23 in alarm group AGSFi - FE23 (rw) */
    __IO Ifx_Strict_32Bit FE24:1;          /**< \brief [24:24] FSP configuration flag j (j=0-1) for alarm 24 in alarm group AGSFi - FE24 (rw) */
    __IO Ifx_Strict_32Bit FE25:1;          /**< \brief [25:25] FSP configuration flag j (j=0-1) for alarm 25 in alarm group AGSFi - FE25 (rw) */
    __IO Ifx_Strict_32Bit FE26:1;          /**< \brief [26:26] FSP configuration flag j (j=0-1) for alarm 26 in alarm group AGSFi - FE26 (rw) */
    __IO Ifx_Strict_32Bit FE27:1;          /**< \brief [27:27] FSP configuration flag j (j=0-1) for alarm 27 in alarm group AGSFi - FE27 (rw) */
    __IO Ifx_Strict_32Bit FE28:1;          /**< \brief [28:28] FSP configuration flag j (j=0-1) for alarm 28 in alarm group AGSFi - FE28 (rw) */
    __IO Ifx_Strict_32Bit FE29:1;          /**< \brief [29:29] FSP configuration flag j (j=0-1) for alarm 29 in alarm group AGSFi - FE29 (rw) */
    __IO Ifx_Strict_32Bit FE30:1;          /**< \brief [30:30] FSP configuration flag j (j=0-1) for alarm 30 in alarm group AGSFi - FE30 (rw) */
    __IO Ifx_Strict_32Bit FE31:1;          /**< \brief [31:31] FSP configuration flag j (j=0-1) for alarm 31 in alarm group AGSFi - FE31 (rw) */
} Ifx_SMU_SAFE_AGSF_FSP_Bits;

/** \brief SMU_SAFE Alarm Status Register */
typedef struct _Ifx_SMU_SAFE_AGSF_STS_Bits
{
    __IO Ifx_Strict_32Bit SF0:1;           /**< \brief [0:0] Status flag for alarm 0 in alarm group AGSFi. - SF0 (rwh) */
    __IO Ifx_Strict_32Bit SF1:1;           /**< \brief [1:1] Status flag for alarm 1 in alarm group AGSFi. - SF1 (rwh) */
    __IO Ifx_Strict_32Bit SF2:1;           /**< \brief [2:2] Status flag for alarm 2 in alarm group AGSFi. - SF2 (rwh) */
    __IO Ifx_Strict_32Bit SF3:1;           /**< \brief [3:3] Status flag for alarm 3 in alarm group AGSFi. - SF3 (rwh) */
    __IO Ifx_Strict_32Bit SF4:1;           /**< \brief [4:4] Status flag for alarm 4 in alarm group AGSFi. - SF4 (rwh) */
    __IO Ifx_Strict_32Bit SF5:1;           /**< \brief [5:5] Status flag for alarm 5 in alarm group AGSFi. - SF5 (rwh) */
    __IO Ifx_Strict_32Bit SF6:1;           /**< \brief [6:6] Status flag for alarm 6 in alarm group AGSFi. - SF6 (rwh) */
    __IO Ifx_Strict_32Bit SF7:1;           /**< \brief [7:7] Status flag for alarm 7 in alarm group AGSFi. - SF7 (rwh) */
    __IO Ifx_Strict_32Bit SF8:1;           /**< \brief [8:8] Status flag for alarm 8 in alarm group AGSFi. - SF8 (rwh) */
    __IO Ifx_Strict_32Bit SF9:1;           /**< \brief [9:9] Status flag for alarm 9 in alarm group AGSFi. - SF9 (rwh) */
    __IO Ifx_Strict_32Bit SF10:1;          /**< \brief [10:10] Status flag for alarm 10 in alarm group AGSFi. - SF10 (rwh) */
    __IO Ifx_Strict_32Bit SF11:1;          /**< \brief [11:11] Status flag for alarm 11 in alarm group AGSFi. - SF11 (rwh) */
    __IO Ifx_Strict_32Bit SF12:1;          /**< \brief [12:12] Status flag for alarm 12 in alarm group AGSFi. - SF12 (rwh) */
    __IO Ifx_Strict_32Bit SF13:1;          /**< \brief [13:13] Status flag for alarm 13 in alarm group AGSFi. - SF13 (rwh) */
    __IO Ifx_Strict_32Bit SF14:1;          /**< \brief [14:14] Status flag for alarm 14 in alarm group AGSFi. - SF14 (rwh) */
    __IO Ifx_Strict_32Bit SF15:1;          /**< \brief [15:15] Status flag for alarm 15 in alarm group AGSFi. - SF15 (rwh) */
    __IO Ifx_Strict_32Bit SF16:1;          /**< \brief [16:16] Status flag for alarm 16 in alarm group AGSFi. - SF16 (rwh) */
    __IO Ifx_Strict_32Bit SF17:1;          /**< \brief [17:17] Status flag for alarm 17 in alarm group AGSFi. - SF17 (rwh) */
    __IO Ifx_Strict_32Bit SF18:1;          /**< \brief [18:18] Status flag for alarm 18 in alarm group AGSFi. - SF18 (rwh) */
    __IO Ifx_Strict_32Bit SF19:1;          /**< \brief [19:19] Status flag for alarm 19 in alarm group AGSFi. - SF19 (rwh) */
    __IO Ifx_Strict_32Bit SF20:1;          /**< \brief [20:20] Status flag for alarm 20 in alarm group AGSFi. - SF20 (rwh) */
    __IO Ifx_Strict_32Bit SF21:1;          /**< \brief [21:21] Status flag for alarm 21 in alarm group AGSFi. - SF21 (rwh) */
    __IO Ifx_Strict_32Bit SF22:1;          /**< \brief [22:22] Status flag for alarm 22 in alarm group AGSFi. - SF22 (rwh) */
    __IO Ifx_Strict_32Bit SF23:1;          /**< \brief [23:23] Status flag for alarm 23 in alarm group AGSFi. - SF23 (rwh) */
    __IO Ifx_Strict_32Bit SF24:1;          /**< \brief [24:24] Status flag for alarm 24 in alarm group AGSFi. - SF24 (rwh) */
    __IO Ifx_Strict_32Bit SF25:1;          /**< \brief [25:25] Status flag for alarm 25 in alarm group AGSFi. - SF25 (rwh) */
    __IO Ifx_Strict_32Bit SF26:1;          /**< \brief [26:26] Status flag for alarm 26 in alarm group AGSFi. - SF26 (rwh) */
    __IO Ifx_Strict_32Bit SF27:1;          /**< \brief [27:27] Status flag for alarm 27 in alarm group AGSFi. - SF27 (rwh) */
    __IO Ifx_Strict_32Bit SF28:1;          /**< \brief [28:28] Status flag for alarm 28 in alarm group AGSFi. - SF28 (rwh) */
    __IO Ifx_Strict_32Bit SF29:1;          /**< \brief [29:29] Status flag for alarm 29 in alarm group AGSFi. - SF29 (rwh) */
    __IO Ifx_Strict_32Bit SF30:1;          /**< \brief [30:30] Status flag for alarm 30 in alarm group AGSFi. - SF30 (rwh) */
    __IO Ifx_Strict_32Bit SF31:1;          /**< \brief [31:31] Status flag for alarm 31 in alarm group AGSFi. - SF31 (rwh) */
} Ifx_SMU_SAFE_AGSF_STS_Bits;

/** \brief SMU_SAFE Critical Shared Alarm Selection Flag */
typedef struct _Ifx_SMU_SAFE_AGSH_CAS_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Critical Alarm Selection flag for alarm 0 in alarm group AGSHi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Critical Alarm Selection flag for alarm 1 in alarm group AGSHi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Critical Alarm Selection flag for alarm 2 in alarm group AGSHi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Critical Alarm Selection flag for alarm 3 in alarm group AGSHi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Critical Alarm Selection flag for alarm 4 in alarm group AGSHi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Critical Alarm Selection flag for alarm 5 in alarm group AGSHi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Critical Alarm Selection flag for alarm 6 in alarm group AGSHi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Critical Alarm Selection flag for alarm 7 in alarm group AGSHi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Critical Alarm Selection flag for alarm 8 in alarm group AGSHi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Critical Alarm Selection flag for alarm 9 in alarm group AGSHi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Critical Alarm Selection flag for alarm 10 in alarm group AGSHi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Critical Alarm Selection flag for alarm 11 in alarm group AGSHi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Critical Alarm Selection flag for alarm 12 in alarm group AGSHi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Critical Alarm Selection flag for alarm 13 in alarm group AGSHi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Critical Alarm Selection flag for alarm 14 in alarm group AGSHi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Critical Alarm Selection flag for alarm 15 in alarm group AGSHi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Critical Alarm Selection flag for alarm 16 in alarm group AGSHi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Critical Alarm Selection flag for alarm 17 in alarm group AGSHi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Critical Alarm Selection flag for alarm 18 in alarm group AGSHi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Critical Alarm Selection flag for alarm 19 in alarm group AGSHi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Critical Alarm Selection flag for alarm 20 in alarm group AGSHi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Critical Alarm Selection flag for alarm 21 in alarm group AGSHi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Critical Alarm Selection flag for alarm 22 in alarm group AGSHi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Critical Alarm Selection flag for alarm 23 in alarm group AGSHi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Critical Alarm Selection flag for alarm 24 in alarm group AGSHi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Critical Alarm Selection flag for alarm 25 in alarm group AGSHi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Critical Alarm Selection flag for alarm 26 in alarm group AGSHi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Critical Alarm Selection flag for alarm 27 in alarm group AGSHi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Critical Alarm Selection flag for alarm 28 in alarm group AGSHi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Critical Alarm Selection flag for alarm 29 in alarm group AGSHi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Critical Alarm Selection flag for alarm 30 in alarm group AGSHi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Critical Alarm Selection flag for alarm 31 in alarm group AGSHi. - CF31 (rw) */
} Ifx_SMU_SAFE_AGSH_CAS_Bits;

/** \brief SMU_SAFE Shared Alarm Configuration Register */
typedef struct _Ifx_SMU_SAFE_AGSH_CON_Bits
{
    __IO Ifx_Strict_32Bit CF0:1;           /**< \brief [0:0] Configuration flag j (j=0-3) for alarm 0 in alarm group AGSHi. - CF0 (rw) */
    __IO Ifx_Strict_32Bit CF1:1;           /**< \brief [1:1] Configuration flag j (j=0-3) for alarm 1 in alarm group AGSHi. - CF1 (rw) */
    __IO Ifx_Strict_32Bit CF2:1;           /**< \brief [2:2] Configuration flag j (j=0-3) for alarm 2 in alarm group AGSHi. - CF2 (rw) */
    __IO Ifx_Strict_32Bit CF3:1;           /**< \brief [3:3] Configuration flag j (j=0-3) for alarm 3 in alarm group AGSHi. - CF3 (rw) */
    __IO Ifx_Strict_32Bit CF4:1;           /**< \brief [4:4] Configuration flag j (j=0-3) for alarm 4 in alarm group AGSHi. - CF4 (rw) */
    __IO Ifx_Strict_32Bit CF5:1;           /**< \brief [5:5] Configuration flag j (j=0-3) for alarm 5 in alarm group AGSHi. - CF5 (rw) */
    __IO Ifx_Strict_32Bit CF6:1;           /**< \brief [6:6] Configuration flag j (j=0-3) for alarm 6 in alarm group AGSHi. - CF6 (rw) */
    __IO Ifx_Strict_32Bit CF7:1;           /**< \brief [7:7] Configuration flag j (j=0-3) for alarm 7 in alarm group AGSHi. - CF7 (rw) */
    __IO Ifx_Strict_32Bit CF8:1;           /**< \brief [8:8] Configuration flag j (j=0-3) for alarm 8 in alarm group AGSHi. - CF8 (rw) */
    __IO Ifx_Strict_32Bit CF9:1;           /**< \brief [9:9] Configuration flag j (j=0-3) for alarm 9 in alarm group AGSHi. - CF9 (rw) */
    __IO Ifx_Strict_32Bit CF10:1;          /**< \brief [10:10] Configuration flag j (j=0-3) for alarm 10 in alarm group AGSHi. - CF10 (rw) */
    __IO Ifx_Strict_32Bit CF11:1;          /**< \brief [11:11] Configuration flag j (j=0-3) for alarm 11 in alarm group AGSHi. - CF11 (rw) */
    __IO Ifx_Strict_32Bit CF12:1;          /**< \brief [12:12] Configuration flag j (j=0-3) for alarm 12 in alarm group AGSHi. - CF12 (rw) */
    __IO Ifx_Strict_32Bit CF13:1;          /**< \brief [13:13] Configuration flag j (j=0-3) for alarm 13 in alarm group AGSHi. - CF13 (rw) */
    __IO Ifx_Strict_32Bit CF14:1;          /**< \brief [14:14] Configuration flag j (j=0-3) for alarm 14 in alarm group AGSHi. - CF14 (rw) */
    __IO Ifx_Strict_32Bit CF15:1;          /**< \brief [15:15] Configuration flag j (j=0-3) for alarm 15 in alarm group AGSHi. - CF15 (rw) */
    __IO Ifx_Strict_32Bit CF16:1;          /**< \brief [16:16] Configuration flag j (j=0-3) for alarm 16 in alarm group AGSHi. - CF16 (rw) */
    __IO Ifx_Strict_32Bit CF17:1;          /**< \brief [17:17] Configuration flag j (j=0-3) for alarm 17 in alarm group AGSHi. - CF17 (rw) */
    __IO Ifx_Strict_32Bit CF18:1;          /**< \brief [18:18] Configuration flag j (j=0-3) for alarm 18 in alarm group AGSHi. - CF18 (rw) */
    __IO Ifx_Strict_32Bit CF19:1;          /**< \brief [19:19] Configuration flag j (j=0-3) for alarm 19 in alarm group AGSHi. - CF19 (rw) */
    __IO Ifx_Strict_32Bit CF20:1;          /**< \brief [20:20] Configuration flag j (j=0-3) for alarm 20 in alarm group AGSHi. - CF20 (rw) */
    __IO Ifx_Strict_32Bit CF21:1;          /**< \brief [21:21] Configuration flag j (j=0-3) for alarm 21 in alarm group AGSHi. - CF21 (rw) */
    __IO Ifx_Strict_32Bit CF22:1;          /**< \brief [22:22] Configuration flag j (j=0-3) for alarm 22 in alarm group AGSHi. - CF22 (rw) */
    __IO Ifx_Strict_32Bit CF23:1;          /**< \brief [23:23] Configuration flag j (j=0-3) for alarm 23 in alarm group AGSHi. - CF23 (rw) */
    __IO Ifx_Strict_32Bit CF24:1;          /**< \brief [24:24] Configuration flag j (j=0-3) for alarm 24 in alarm group AGSHi. - CF24 (rw) */
    __IO Ifx_Strict_32Bit CF25:1;          /**< \brief [25:25] Configuration flag j (j=0-3) for alarm 25 in alarm group AGSHi. - CF25 (rw) */
    __IO Ifx_Strict_32Bit CF26:1;          /**< \brief [26:26] Configuration flag j (j=0-3) for alarm 26 in alarm group AGSHi. - CF26 (rw) */
    __IO Ifx_Strict_32Bit CF27:1;          /**< \brief [27:27] Configuration flag j (j=0-3) for alarm 27 in alarm group AGSHi. - CF27 (rw) */
    __IO Ifx_Strict_32Bit CF28:1;          /**< \brief [28:28] Configuration flag j (j=0-3) for alarm 28 in alarm group AGSHi. - CF28 (rw) */
    __IO Ifx_Strict_32Bit CF29:1;          /**< \brief [29:29] Configuration flag j (j=0-3) for alarm 29 in alarm group AGSHi. - CF29 (rw) */
    __IO Ifx_Strict_32Bit CF30:1;          /**< \brief [30:30] Configuration flag j (j=0-3) for alarm 30 in alarm group AGSHi. - CF30 (rw) */
    __IO Ifx_Strict_32Bit CF31:1;          /**< \brief [31:31] Configuration flag j (j=0-3) for alarm 31 in alarm group AGSHi. - CF31 (rw) */
} Ifx_SMU_SAFE_AGSH_CON_Bits;

/** \brief SMU_SAFE Shared Alarm Debug Register */
typedef struct _Ifx_SMU_SAFE_AGSH_DBG_Bits
{
    __I  Ifx_UReg_32Bit DF0:1;             /**< \brief [0:0] Diagnosis flag for alarm 0 in alarm group AGSHi. - DF0 (rh) */
    __I  Ifx_UReg_32Bit DF1:1;             /**< \brief [1:1] Diagnosis flag for alarm 1 in alarm group AGSHi. - DF1 (rh) */
    __I  Ifx_UReg_32Bit DF2:1;             /**< \brief [2:2] Diagnosis flag for alarm 2 in alarm group AGSHi. - DF2 (rh) */
    __I  Ifx_UReg_32Bit DF3:1;             /**< \brief [3:3] Diagnosis flag for alarm 3 in alarm group AGSHi. - DF3 (rh) */
    __I  Ifx_UReg_32Bit DF4:1;             /**< \brief [4:4] Diagnosis flag for alarm 4 in alarm group AGSHi. - DF4 (rh) */
    __I  Ifx_UReg_32Bit DF5:1;             /**< \brief [5:5] Diagnosis flag for alarm 5 in alarm group AGSHi. - DF5 (rh) */
    __I  Ifx_UReg_32Bit DF6:1;             /**< \brief [6:6] Diagnosis flag for alarm 6 in alarm group AGSHi. - DF6 (rh) */
    __I  Ifx_UReg_32Bit DF7:1;             /**< \brief [7:7] Diagnosis flag for alarm 7 in alarm group AGSHi. - DF7 (rh) */
    __I  Ifx_UReg_32Bit DF8:1;             /**< \brief [8:8] Diagnosis flag for alarm 8 in alarm group AGSHi. - DF8 (rh) */
    __I  Ifx_UReg_32Bit DF9:1;             /**< \brief [9:9] Diagnosis flag for alarm 9 in alarm group AGSHi. - DF9 (rh) */
    __I  Ifx_UReg_32Bit DF10:1;            /**< \brief [10:10] Diagnosis flag for alarm 10 in alarm group AGSHi. - DF10 (rh) */
    __I  Ifx_UReg_32Bit DF11:1;            /**< \brief [11:11] Diagnosis flag for alarm 11 in alarm group AGSHi. - DF11 (rh) */
    __I  Ifx_UReg_32Bit DF12:1;            /**< \brief [12:12] Diagnosis flag for alarm 12 in alarm group AGSHi. - DF12 (rh) */
    __I  Ifx_UReg_32Bit DF13:1;            /**< \brief [13:13] Diagnosis flag for alarm 13 in alarm group AGSHi. - DF13 (rh) */
    __I  Ifx_UReg_32Bit DF14:1;            /**< \brief [14:14] Diagnosis flag for alarm 14 in alarm group AGSHi. - DF14 (rh) */
    __I  Ifx_UReg_32Bit DF15:1;            /**< \brief [15:15] Diagnosis flag for alarm 15 in alarm group AGSHi. - DF15 (rh) */
    __I  Ifx_UReg_32Bit DF16:1;            /**< \brief [16:16] Diagnosis flag for alarm 16 in alarm group AGSHi. - DF16 (rh) */
    __I  Ifx_UReg_32Bit DF17:1;            /**< \brief [17:17] Diagnosis flag for alarm 17 in alarm group AGSHi. - DF17 (rh) */
    __I  Ifx_UReg_32Bit DF18:1;            /**< \brief [18:18] Diagnosis flag for alarm 18 in alarm group AGSHi. - DF18 (rh) */
    __I  Ifx_UReg_32Bit DF19:1;            /**< \brief [19:19] Diagnosis flag for alarm 19 in alarm group AGSHi. - DF19 (rh) */
    __I  Ifx_UReg_32Bit DF20:1;            /**< \brief [20:20] Diagnosis flag for alarm 20 in alarm group AGSHi. - DF20 (rh) */
    __I  Ifx_UReg_32Bit DF21:1;            /**< \brief [21:21] Diagnosis flag for alarm 21 in alarm group AGSHi. - DF21 (rh) */
    __I  Ifx_UReg_32Bit DF22:1;            /**< \brief [22:22] Diagnosis flag for alarm 22 in alarm group AGSHi. - DF22 (rh) */
    __I  Ifx_UReg_32Bit DF23:1;            /**< \brief [23:23] Diagnosis flag for alarm 23 in alarm group AGSHi. - DF23 (rh) */
    __I  Ifx_UReg_32Bit DF24:1;            /**< \brief [24:24] Diagnosis flag for alarm 24 in alarm group AGSHi. - DF24 (rh) */
    __I  Ifx_UReg_32Bit DF25:1;            /**< \brief [25:25] Diagnosis flag for alarm 25 in alarm group AGSHi. - DF25 (rh) */
    __I  Ifx_UReg_32Bit DF26:1;            /**< \brief [26:26] Diagnosis flag for alarm 26 in alarm group AGSHi. - DF26 (rh) */
    __I  Ifx_UReg_32Bit DF27:1;            /**< \brief [27:27] Diagnosis flag for alarm 27 in alarm group AGSHi. - DF27 (rh) */
    __I  Ifx_UReg_32Bit DF28:1;            /**< \brief [28:28] Diagnosis flag for alarm 28 in alarm group AGSHi. - DF28 (rh) */
    __I  Ifx_UReg_32Bit DF29:1;            /**< \brief [29:29] Diagnosis flag for alarm 29 in alarm group AGSHi. - DF29 (rh) */
    __I  Ifx_UReg_32Bit DF30:1;            /**< \brief [30:30] Diagnosis flag for alarm 30 in alarm group AGSHi. - DF30 (rh) */
    __I  Ifx_UReg_32Bit DF31:1;            /**< \brief [31:31] Diagnosis flag for alarm 31 in alarm group AGSHi. - DF31 (rh) */
} Ifx_SMU_SAFE_AGSH_DBG_Bits;

/** \brief FSP Shared Alarm Configuration Register */
typedef struct _Ifx_SMU_SAFE_AGSH_FSP_Bits
{
    __IO Ifx_Strict_32Bit FE0:1;           /**< \brief [0:0] FSP configuration flag for alarm 0 in alarm group AGSHi. - FE0 (rw) */
    __IO Ifx_Strict_32Bit FE1:1;           /**< \brief [1:1] FSP configuration flag for alarm 1 in alarm group AGSHi. - FE1 (rw) */
    __IO Ifx_Strict_32Bit FE2:1;           /**< \brief [2:2] FSP configuration flag for alarm 2 in alarm group AGSHi. - FE2 (rw) */
    __IO Ifx_Strict_32Bit FE3:1;           /**< \brief [3:3] FSP configuration flag for alarm 3 in alarm group AGSHi. - FE3 (rw) */
    __IO Ifx_Strict_32Bit FE4:1;           /**< \brief [4:4] FSP configuration flag for alarm 4 in alarm group AGSHi. - FE4 (rw) */
    __IO Ifx_Strict_32Bit FE5:1;           /**< \brief [5:5] FSP configuration flag for alarm 5 in alarm group AGSHi. - FE5 (rw) */
    __IO Ifx_Strict_32Bit FE6:1;           /**< \brief [6:6] FSP configuration flag for alarm 6 in alarm group AGSHi. - FE6 (rw) */
    __IO Ifx_Strict_32Bit FE7:1;           /**< \brief [7:7] FSP configuration flag for alarm 7 in alarm group AGSHi. - FE7 (rw) */
    __IO Ifx_Strict_32Bit FE8:1;           /**< \brief [8:8] FSP configuration flag for alarm 8 in alarm group AGSHi. - FE8 (rw) */
    __IO Ifx_Strict_32Bit FE9:1;           /**< \brief [9:9] FSP configuration flag for alarm 9 in alarm group AGSHi. - FE9 (rw) */
    __IO Ifx_Strict_32Bit FE10:1;          /**< \brief [10:10] FSP configuration flag for alarm 10 in alarm group AGSHi. - FE10 (rw) */
    __IO Ifx_Strict_32Bit FE11:1;          /**< \brief [11:11] FSP configuration flag for alarm 11 in alarm group AGSHi. - FE11 (rw) */
    __IO Ifx_Strict_32Bit FE12:1;          /**< \brief [12:12] FSP configuration flag for alarm 12 in alarm group AGSHi. - FE12 (rw) */
    __IO Ifx_Strict_32Bit FE13:1;          /**< \brief [13:13] FSP configuration flag for alarm 13 in alarm group AGSHi. - FE13 (rw) */
    __IO Ifx_Strict_32Bit FE14:1;          /**< \brief [14:14] FSP configuration flag for alarm 14 in alarm group AGSHi. - FE14 (rw) */
    __IO Ifx_Strict_32Bit FE15:1;          /**< \brief [15:15] FSP configuration flag for alarm 15 in alarm group AGSHi. - FE15 (rw) */
    __IO Ifx_Strict_32Bit FE16:1;          /**< \brief [16:16] FSP configuration flag for alarm 16 in alarm group AGSHi. - FE16 (rw) */
    __IO Ifx_Strict_32Bit FE17:1;          /**< \brief [17:17] FSP configuration flag for alarm 17 in alarm group AGSHi. - FE17 (rw) */
    __IO Ifx_Strict_32Bit FE18:1;          /**< \brief [18:18] FSP configuration flag for alarm 18 in alarm group AGSHi. - FE18 (rw) */
    __IO Ifx_Strict_32Bit FE19:1;          /**< \brief [19:19] FSP configuration flag for alarm 19 in alarm group AGSHi. - FE19 (rw) */
    __IO Ifx_Strict_32Bit FE20:1;          /**< \brief [20:20] FSP configuration flag for alarm 20 in alarm group AGSHi. - FE20 (rw) */
    __IO Ifx_Strict_32Bit FE21:1;          /**< \brief [21:21] FSP configuration flag for alarm 21 in alarm group AGSHi. - FE21 (rw) */
    __IO Ifx_Strict_32Bit FE22:1;          /**< \brief [22:22] FSP configuration flag for alarm 22 in alarm group AGSHi. - FE22 (rw) */
    __IO Ifx_Strict_32Bit FE23:1;          /**< \brief [23:23] FSP configuration flag for alarm 23 in alarm group AGSHi. - FE23 (rw) */
    __IO Ifx_Strict_32Bit FE24:1;          /**< \brief [24:24] FSP configuration flag for alarm 24 in alarm group AGSHi. - FE24 (rw) */
    __IO Ifx_Strict_32Bit FE25:1;          /**< \brief [25:25] FSP configuration flag for alarm 25 in alarm group AGSHi. - FE25 (rw) */
    __IO Ifx_Strict_32Bit FE26:1;          /**< \brief [26:26] FSP configuration flag for alarm 26 in alarm group AGSHi. - FE26 (rw) */
    __IO Ifx_Strict_32Bit FE27:1;          /**< \brief [27:27] FSP configuration flag for alarm 27 in alarm group AGSHi. - FE27 (rw) */
    __IO Ifx_Strict_32Bit FE28:1;          /**< \brief [28:28] FSP configuration flag for alarm 28 in alarm group AGSHi. - FE28 (rw) */
    __IO Ifx_Strict_32Bit FE29:1;          /**< \brief [29:29] FSP configuration flag for alarm 29 in alarm group AGSHi. - FE29 (rw) */
    __IO Ifx_Strict_32Bit FE30:1;          /**< \brief [30:30] FSP configuration flag for alarm 30 in alarm group AGSHi. - FE30 (rw) */
    __IO Ifx_Strict_32Bit FE31:1;          /**< \brief [31:31] FSP configuration flag for alarm 31 in alarm group AGSHi. - FE31 (rw) */
} Ifx_SMU_SAFE_AGSH_FSP_Bits;

/** \brief SMU_SAFE Shared Alarm Group Selection Status */
typedef struct _Ifx_SMU_SAFE_AGSH_SS_Bits
{
    __I  Ifx_UReg_32Bit SF0:1;             /**< \brief [0:0] Shared Alarm Group status flag for Alarm Group AGSHi. - CF0 (rh) */
    __I  Ifx_UReg_32Bit SF1:1;             /**< \brief [1:1] Shared Alarm Group status flag for Alarm Group AGSHi. - CF1 (rh) */
    __I  Ifx_UReg_32Bit SF2:1;             /**< \brief [2:2] Shared Alarm Group status flag for Alarm Group AGSHi. - CF2 (rh) */
    __I  Ifx_UReg_32Bit SF3:1;             /**< \brief [3:3] Shared Alarm Group status flag for Alarm Group AGSHi. - CF3 (rh) */
    __I  Ifx_UReg_32Bit SF4:1;             /**< \brief [4:4] Shared Alarm Group status flag for Alarm Group AGSHi. - CF4 (rh) */
    __I  Ifx_UReg_32Bit SF5:1;             /**< \brief [5:5] Shared Alarm Group status flag for Alarm Group AGSHi. - CF5 (rh) */
    __I  Ifx_UReg_32Bit SF6:1;             /**< \brief [6:6] Shared Alarm Group status flag for Alarm Group AGSHi. - CF6 (rh) */
    __I  Ifx_UReg_32Bit SF7:1;             /**< \brief [7:7] Shared Alarm Group status flag for Alarm Group AGSHi. - CF7 (rh) */
    __I  Ifx_UReg_32Bit SF8:1;             /**< \brief [8:8] Shared Alarm Group status flag for Alarm Group AGSHi. - CF8 (rh) */
    __I  Ifx_UReg_32Bit SF9:1;             /**< \brief [9:9] Shared Alarm Group status flag for Alarm Group AGSHi. - CF9 (rh) */
    __I  Ifx_UReg_32Bit SF10:1;            /**< \brief [10:10] Shared Alarm Group status flag for Alarm Group AGSHi. - CF10 (rh) */
    __I  Ifx_UReg_32Bit SF11:1;            /**< \brief [11:11] Shared Alarm Group status flag for Alarm Group AGSHi. - CF11 (rh) */
    __I  Ifx_UReg_32Bit SF12:1;            /**< \brief [12:12] Shared Alarm Group status flag for Alarm Group AGSHi. - CF12 (rh) */
    __I  Ifx_UReg_32Bit SF13:1;            /**< \brief [13:13] Shared Alarm Group status flag for Alarm Group AGSHi. - CF13 (rh) */
    __I  Ifx_UReg_32Bit SF14:1;            /**< \brief [14:14] Shared Alarm Group status flag for Alarm Group AGSHi. - CF14 (rh) */
    __I  Ifx_UReg_32Bit SF15:1;            /**< \brief [15:15] Shared Alarm Group status flag for Alarm Group AGSHi. - CF15 (rh) */
    __I  Ifx_UReg_32Bit SF16:1;            /**< \brief [16:16] Shared Alarm Group status flag for Alarm Group AGSHi. - CF16 (rh) */
    __I  Ifx_UReg_32Bit SF17:1;            /**< \brief [17:17] Shared Alarm Group status flag for Alarm Group AGSHi. - CF17 (rh) */
    __I  Ifx_UReg_32Bit SF18:1;            /**< \brief [18:18] Shared Alarm Group status flag for Alarm Group AGSHi. - CF18 (rh) */
    __I  Ifx_UReg_32Bit SF19:1;            /**< \brief [19:19] Shared Alarm Group status flag for Alarm Group AGSHi. - CF19 (rh) */
    __I  Ifx_UReg_32Bit SF20:1;            /**< \brief [20:20] Shared Alarm Group status flag for Alarm Group AGSHi. - CF20 (rh) */
    __I  Ifx_UReg_32Bit SF21:1;            /**< \brief [21:21] Shared Alarm Group status flag for Alarm Group AGSHi. - CF21 (rh) */
    __I  Ifx_UReg_32Bit SF22:1;            /**< \brief [22:22] Shared Alarm Group status flag for Alarm Group AGSHi. - CF22 (rh) */
    __I  Ifx_UReg_32Bit SF23:1;            /**< \brief [23:23] Shared Alarm Group status flag for Alarm Group AGSHi. - CF23 (rh) */
    __I  Ifx_UReg_32Bit SF24:1;            /**< \brief [24:24] Shared Alarm Group status flag for Alarm Group AGSHi. - CF24 (rh) */
    __I  Ifx_UReg_32Bit SF25:1;            /**< \brief [25:25] Shared Alarm Group status flag for Alarm Group AGSHi. - CF25 (rh) */
    __I  Ifx_UReg_32Bit SF26:1;            /**< \brief [26:26] Shared Alarm Group status flag for Alarm Group AGSHi. - CF26 (rh) */
    __I  Ifx_UReg_32Bit SF27:1;            /**< \brief [27:27] Shared Alarm Group status flag for Alarm Group AGSHi. - CF27 (rh) */
    __I  Ifx_UReg_32Bit SF28:1;            /**< \brief [28:28] Shared Alarm Group status flag for Alarm Group AGSHi. - CF28 (rh) */
    __I  Ifx_UReg_32Bit SF29:1;            /**< \brief [29:29] Shared Alarm Group status flag for Alarm Group AGSHi. - CF29 (rh) */
    __I  Ifx_UReg_32Bit SF30:1;            /**< \brief [30:30] Shared Alarm Group status flag for Alarm Group AGSHi. - CF30 (rh) */
    __I  Ifx_UReg_32Bit SF31:1;            /**< \brief [31:31] Shared Alarm Group status flag for Alarm Group AGSHi. - CF31 (rh) */
} Ifx_SMU_SAFE_AGSH_SS_Bits;

/** \brief SMU_SAFE Shared Alarm Status Register */
typedef struct _Ifx_SMU_SAFE_AGSH_STS_Bits
{
    __IO Ifx_Strict_32Bit SF0:1;           /**< \brief [0:0] Status flag for alarm 0 in alarm group AGSHi. - SF0 (rwh) */
    __IO Ifx_Strict_32Bit SF1:1;           /**< \brief [1:1] Status flag for alarm 1 in alarm group AGSHi. - SF1 (rwh) */
    __IO Ifx_Strict_32Bit SF2:1;           /**< \brief [2:2] Status flag for alarm 2 in alarm group AGSHi. - SF2 (rwh) */
    __IO Ifx_Strict_32Bit SF3:1;           /**< \brief [3:3] Status flag for alarm 3 in alarm group AGSHi. - SF3 (rwh) */
    __IO Ifx_Strict_32Bit SF4:1;           /**< \brief [4:4] Status flag for alarm 4 in alarm group AGSHi. - SF4 (rwh) */
    __IO Ifx_Strict_32Bit SF5:1;           /**< \brief [5:5] Status flag for alarm 5 in alarm group AGSHi. - SF5 (rwh) */
    __IO Ifx_Strict_32Bit SF6:1;           /**< \brief [6:6] Status flag for alarm 6 in alarm group AGSHi. - SF6 (rwh) */
    __IO Ifx_Strict_32Bit SF7:1;           /**< \brief [7:7] Status flag for alarm 7 in alarm group AGSHi. - SF7 (rwh) */
    __IO Ifx_Strict_32Bit SF8:1;           /**< \brief [8:8] Status flag for alarm 8 in alarm group AGSHi. - SF8 (rwh) */
    __IO Ifx_Strict_32Bit SF9:1;           /**< \brief [9:9] Status flag for alarm 9 in alarm group AGSHi. - SF9 (rwh) */
    __IO Ifx_Strict_32Bit SF10:1;          /**< \brief [10:10] Status flag for alarm 10 in alarm group AGSHi. - SF10 (rwh) */
    __IO Ifx_Strict_32Bit SF11:1;          /**< \brief [11:11] Status flag for alarm 11 in alarm group AGSHi. - SF11 (rwh) */
    __IO Ifx_Strict_32Bit SF12:1;          /**< \brief [12:12] Status flag for alarm 12 in alarm group AGSHi. - SF12 (rwh) */
    __IO Ifx_Strict_32Bit SF13:1;          /**< \brief [13:13] Status flag for alarm 13 in alarm group AGSHi. - SF13 (rwh) */
    __IO Ifx_Strict_32Bit SF14:1;          /**< \brief [14:14] Status flag for alarm 14 in alarm group AGSHi. - SF14 (rwh) */
    __IO Ifx_Strict_32Bit SF15:1;          /**< \brief [15:15] Status flag for alarm 15 in alarm group AGSHi. - SF15 (rwh) */
    __IO Ifx_Strict_32Bit SF16:1;          /**< \brief [16:16] Status flag for alarm 16 in alarm group AGSHi. - SF16 (rwh) */
    __IO Ifx_Strict_32Bit SF17:1;          /**< \brief [17:17] Status flag for alarm 17 in alarm group AGSHi. - SF17 (rwh) */
    __IO Ifx_Strict_32Bit SF18:1;          /**< \brief [18:18] Status flag for alarm 18 in alarm group AGSHi. - SF18 (rwh) */
    __IO Ifx_Strict_32Bit SF19:1;          /**< \brief [19:19] Status flag for alarm 19 in alarm group AGSHi. - SF19 (rwh) */
    __IO Ifx_Strict_32Bit SF20:1;          /**< \brief [20:20] Status flag for alarm 20 in alarm group AGSHi. - SF20 (rwh) */
    __IO Ifx_Strict_32Bit SF21:1;          /**< \brief [21:21] Status flag for alarm 21 in alarm group AGSHi. - SF21 (rwh) */
    __IO Ifx_Strict_32Bit SF22:1;          /**< \brief [22:22] Status flag for alarm 22 in alarm group AGSHi. - SF22 (rwh) */
    __IO Ifx_Strict_32Bit SF23:1;          /**< \brief [23:23] Status flag for alarm 23 in alarm group AGSHi. - SF23 (rwh) */
    __IO Ifx_Strict_32Bit SF24:1;          /**< \brief [24:24] Status flag for alarm 24 in alarm group AGSHi. - SF24 (rwh) */
    __IO Ifx_Strict_32Bit SF25:1;          /**< \brief [25:25] Status flag for alarm 25 in alarm group AGSHi. - SF25 (rwh) */
    __IO Ifx_Strict_32Bit SF26:1;          /**< \brief [26:26] Status flag for alarm 26 in alarm group AGSHi. - SF26 (rwh) */
    __IO Ifx_Strict_32Bit SF27:1;          /**< \brief [27:27] Status flag for alarm 27 in alarm group AGSHi. - SF27 (rwh) */
    __IO Ifx_Strict_32Bit SF28:1;          /**< \brief [28:28] Status flag for alarm 28 in alarm group AGSHi. - SF28 (rwh) */
    __IO Ifx_Strict_32Bit SF29:1;          /**< \brief [29:29] Status flag for alarm 29 in alarm group AGSHi. - SF29 (rwh) */
    __IO Ifx_Strict_32Bit SF30:1;          /**< \brief [30:30] Status flag for alarm 30 in alarm group AGSHi. - SF30 (rwh) */
    __IO Ifx_Strict_32Bit SF31:1;          /**< \brief [31:31] Status flag for alarm 31 in alarm group AGSHi. - SF31 (rwh) */
} Ifx_SMU_SAFE_AGSH_STS_Bits;

/** \brief SMU_SAFE Command Register */
typedef struct _Ifx_SMU_SAFE_CMD_Bits
{
    __O  Ifx_Strict_32Bit CMD:4;           /**< \brief [3:0] Implements the SMU_SAFE Command Interface. - CMD (w) */
    __O  Ifx_Strict_32Bit ARG:4;           /**< \brief [7:4] Implements the SMU_SAFE Command Interface. - ARG (w) */
    __I  Ifx_Strict_32Bit :24;             /**< \brief [31:8] \internal Reserved */
} Ifx_SMU_SAFE_CMD_Bits;

/** \brief SMU_SAFE Debug Register */
typedef struct _Ifx_SMU_SAFE_DBG_Bits
{
    __I  Ifx_UReg_32Bit SSM0:2;            /**< \brief [1:0] Running state of the SMU_SAFE state machine 0 - SSM0 (rh) */
    __I  Ifx_UReg_32Bit SSM1:2;            /**< \brief [3:2] Running state of the SMU_SAFE state machine 1 - SSM1 (rh) */
    __I  Ifx_UReg_32Bit :28;               /**< \brief [31:4] \internal Reserved */
} Ifx_SMU_SAFE_DBG_Bits;

/** \brief SMU_SAFE Fault Signaling Protocol Driver Timing Register */
typedef struct _Ifx_SMU_SAFE_FSP_CON_Bits
{
    __IO Ifx_Strict_32Bit PRE1:3;          /**< \brief [2:0] Prescaler1 - PRE1 (rw) */
    __IO Ifx_Strict_32Bit PRE2:3;          /**< \brief [5:3] Prescaler2 - PRE2 (rw) */
    __IO Ifx_Strict_32Bit MODE:2;          /**< \brief [7:6] Fault Signaling Protocol configuration - MODE (rw) */
    __I  Ifx_Strict_32Bit TFSP_LOW:14;     /**< \brief [21:8] Specifies the FSP Fault State duration - TFSP_LOW (r) */
    __IO Ifx_Strict_32Bit TFSP_HIGH:10;    /**< \brief [31:22] Specifies the FSP Fault State duration - TFSP_HIGH (rw) */
} Ifx_SMU_SAFE_FSP_CON_Bits;

/** \brief SMU_SAFE Key Register */
typedef struct _Ifx_SMU_SAFE_KEYS_Bits
{
    __IO Ifx_Strict_32Bit CFGLCK:8;        /**< \brief [7:0] Configuration Lock - CFGLCK (rw) */
    __IO Ifx_Strict_32Bit PERLCK:8;        /**< \brief [15:8] Permanent Lock - PERLCK (rw) */
    __I  Ifx_Strict_32Bit :16;             /**< \brief [31:16] \internal Reserved */
} Ifx_SMU_SAFE_KEYS_Bits;

/** \brief SMU_SAFE Port Control */
typedef struct _Ifx_SMU_SAFE_PCTL_Bits
{
    __IO Ifx_Strict_32Bit HWDIR0:1;        /**< \brief [0:0] Port Direction for FSP[0] or FSP[2] - HWDIR0 (rw) */
    __IO Ifx_Strict_32Bit HWEN0:1;         /**< \brief [1:1] Port Enable for FSP[0] or FSP[2]- HWEN (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [2:2] \internal Reserved */
    __IO Ifx_Strict_32Bit GFSTS0_EN:1;     /**< \brief [3:3] Glitch Filter for ErrorPin FSP[0] or FSP[2] to SAFEx_STS.FSP0 enable - GFSTS_EN (rw) */
    __I  Ifx_Strict_32Bit :12;             /**< \brief [15:4] \internal Reserved */
    __IO Ifx_Strict_32Bit HWDIR1:1;        /**< \brief [16:16] Port Direction for FSP[1] or FSP[3] - HWDIR1 (rw) */
    __IO Ifx_Strict_32Bit HWEN1:1;         /**< \brief [17:17] Port Enable for FSP[1] or FSP[3]- HWEN (rw) */
    __I  Ifx_Strict_32Bit :1;              /**< \brief [18:18] \internal Reserved */
    __IO Ifx_Strict_32Bit GFSTS1_EN:1;     /**< \brief [19:19] Glitch Filter for ErrorPin FSP[1] or FSP[3] to SAFEx_STS.FSP0 enable - GFSTS_EN (rw) */
    __I  Ifx_Strict_32Bit :12;             /**< \brief [31:20] \internal Reserved */
} Ifx_SMU_SAFE_PCTL_Bits;

/** \brief SMU_SAFE Port Emergency Stop Enable Register */
typedef struct _Ifx_SMU_SAFE_PES_Bits
{
    __IO Ifx_Strict_32Bit IGCS0:1;         /**< \brief [0:0] Enable IGCS0_REQ to trigger port emergency stop  - IGCS0 (rw) */
    __IO Ifx_Strict_32Bit IGCS1:1;         /**< \brief [1:1] Enable IGCS1_REQ to trigger port emergency stop  - IGCS1 (rw) */
    __IO Ifx_Strict_32Bit IGCS2:1;         /**< \brief [2:2] Enable IGCS2_REQ to trigger port emergency stop  - IGCS2 (rw) */
    __IO Ifx_Strict_32Bit NMI0:1;          /**< \brief [3:3] Enable NMI0_REQ to trigger port emergency stop  - NMI0 (rw) */
    __IO Ifx_Strict_32Bit CPURST0:1;       /**< \brief [4:4] Enable CPU_RESET0_REQ to trigger port emergency stop  - CPURST0 (rw) */
    __IO Ifx_Strict_32Bit PPURST0:1;       /**< \brief [5:5] Enable PPU_RESET to trigger port emergency stop  - PPURST0 (rw) */
    __IO Ifx_Strict_32Bit NMI1:1;          /**< \brief [6:6] Enable NMI1_REQ to trigger port emergency stop  - NMI1 (rw) */
    __IO Ifx_Strict_32Bit CPURST1:1;       /**< \brief [7:7] Enable CPU_RESET1_REQ to trigger port emergency stop  - CPURST1 (rw) */
    __I  Ifx_Strict_32Bit :8;              /**< \brief [15:8] \internal Reserved */
    __IO Ifx_Strict_32Bit FSP0:1;          /**< \brief [16:16] Enable FSP0_REQ to trigger port emergency stop  - FSP0 (rw) */
    __IO Ifx_Strict_32Bit FSP1:1;          /**< \brief [17:17] Enable FSP1_REQ to trigger port emergency stop  - FSP1 (rw) */
    __I  Ifx_Strict_32Bit :14;             /**< \brief [31:18] \internal Reserved */
} Ifx_SMU_SAFE_PES_Bits;

/** \brief SMU_SAFE RESET0/1 Request Triggering Alarm Information Register */
typedef struct _Ifx_SMU_SAFE_RST_Bits
{
    __I  Ifx_UReg_32Bit ALMGRP0:5;         /**< \brief [4:0] Alarm Group 0 - ALMGRP0 (rh) */
    __I  Ifx_UReg_32Bit :3;                /**< \brief [7:5] \internal Reserved */
    __I  Ifx_UReg_32Bit ALMID0:5;          /**< \brief [12:8] Alarm Index 0 - ALMID0 (rh) */
    __I  Ifx_UReg_32Bit :3;                /**< \brief [15:13] \internal Reserved */
    __I  Ifx_UReg_32Bit ALMGRP1:5;         /**< \brief [20:16] Alarm Group 1 - ALMGRP1 (rh) */
    __I  Ifx_UReg_32Bit :3;                /**< \brief [23:21] \internal Reserved */
    __I  Ifx_UReg_32Bit ALMID1:5;          /**< \brief [28:24] Alarm Index 1 - ALMID1 (rh) */
    __I  Ifx_UReg_32Bit :3;                /**< \brief [31:29] \internal Reserved */
} Ifx_SMU_SAFE_RST_Bits;

/** \brief SMU_SAFE Recovery Timer 0 Alarm Configuration A */
typedef struct _Ifx_SMU_SAFE_RT0ACA_Bits
{
    __IO Ifx_Strict_32Bit GID0:5;          /**< \brief [4:0] Group Index 0 - GID0 (rw) */
    __IO Ifx_Strict_32Bit ALID0:5;         /**< \brief [9:5] Alarm Identifier 0 - ALID0 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit GID1:5;          /**< \brief [20:16] Group Index 1 - GID1 (rw) */
    __IO Ifx_Strict_32Bit ALID1:5;         /**< \brief [25:21] Alarm Identifier 1 - ALID1 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_SMU_SAFE_RT0ACA_Bits;

/** \brief SMU_SAFE Recovery Timer 0 Alarm Configuration B */
typedef struct _Ifx_SMU_SAFE_RT0ACB_Bits
{
    __IO Ifx_Strict_32Bit GID2:5;          /**< \brief [4:0] Group Index 2 - GID2 (rw) */
    __IO Ifx_Strict_32Bit ALID2:5;         /**< \brief [9:5] Alarm Identifier 2 - ALID2 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit GID3:5;          /**< \brief [20:16] Group Index 3 - GID3 (rw) */
    __IO Ifx_Strict_32Bit ALID3:5;         /**< \brief [25:21] Alarm Identifier 3 - ALID3 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_SMU_SAFE_RT0ACB_Bits;

/** \brief SMU_SAFE Recovery Timer 1 Alarm Configuration A */
typedef struct _Ifx_SMU_SAFE_RT1ACA_Bits
{
    __IO Ifx_Strict_32Bit GID0:5;          /**< \brief [4:0] Group Index 0. - GID0 (rw) */
    __IO Ifx_Strict_32Bit ALID0:5;         /**< \brief [9:5] Alarm Identifier 0. - ALID0 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit GID1:5;          /**< \brief [20:16] Group Index 1. - GID1 (rw) */
    __IO Ifx_Strict_32Bit ALID1:5;         /**< \brief [25:21] Alarm Identifier 1. - ALID1 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_SMU_SAFE_RT1ACA_Bits;

/** \brief SMU_SAFE Recovery Timer 1 Alarm Configuration B */
typedef struct _Ifx_SMU_SAFE_RT1ACB_Bits
{
    __IO Ifx_Strict_32Bit GID2:5;          /**< \brief [4:0] Group Index 2. - GID2 (rw) */
    __IO Ifx_Strict_32Bit ALID2:5;         /**< \brief [9:5] Alarm Identifier 2. - ALID2 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [15:10] \internal Reserved */
    __IO Ifx_Strict_32Bit GID3:5;          /**< \brief [20:16] Group Index 3. - GID3 (rw) */
    __IO Ifx_Strict_32Bit ALID3:5;         /**< \brief [25:21] Alarm Identifier 3. - ALID3 (rw) */
    __I  Ifx_Strict_32Bit :6;              /**< \brief [31:26] \internal Reserved */
} Ifx_SMU_SAFE_RT1ACB_Bits;

/** \brief SMU_SAFE Recovery Timer Configuration */
typedef struct _Ifx_SMU_SAFE_RTC_Bits
{
    __IO Ifx_Strict_32Bit RT0E:1;          /**< \brief [0:0] RT0 Enable Bit - RT0E (rw) */
    __IO Ifx_Strict_32Bit RT1E:1;          /**< \brief [1:1] RT1 Enable Bit - RT1E (rw) */
    __IO Ifx_Strict_32Bit PRE:3;           /**< \brief [4:2] Prescaler For Recovery Timer Clock - PRE (rw) */
    __I  Ifx_Strict_32Bit :3;              /**< \brief [7:5] \internal Reserved */
    __IO Ifx_Strict_32Bit RTD:24;          /**< \brief [31:8] Recovery Timer Duration - RTD (rw) */
} Ifx_SMU_SAFE_RTC_Bits;

/** \brief SMU_SAFE Status Register */
typedef struct _Ifx_SMU_SAFE_STS_Bits
{
    __IO Ifx_Strict_32Bit CMD:4;           /**< \brief [3:0] Last command received - CMD (rw0ch) */
    __IO Ifx_Strict_32Bit ARG:4;           /**< \brief [7:4] Last command argument received - ARG (rw0ch) */
    __IO Ifx_Strict_32Bit RES:1;           /**< \brief [8:8] Result of last received command - RES (rw0ch) */
    __IO Ifx_Strict_32Bit ASCE:1;          /**< \brief [9:9] Alarm Status Clear Enable - ASCE (rw0ch) */
    __I  Ifx_Strict_32Bit FSP0:1;          /**< \brief [10:10] Fault Signaling Protocol status - FSP0 (rh) */
    __I  Ifx_Strict_32Bit FSP1:1;          /**< \brief [11:11] Fault Signaling Protocol status - FSP1 (rh) */
    __IO Ifx_Strict_32Bit F0STS:1;         /**< \brief [12:12] Fault State Timing Status 0 - F0STS (rw0ch) */
    __IO Ifx_Strict_32Bit F1STS:1;         /**< \brief [13:13] Fault State Timing Status 1 - F1STS (rw0ch) */
    __I  Ifx_Strict_32Bit :2;              /**< \brief [15:14] \internal Reserved */
    __IO Ifx_Strict_32Bit RTS0:1;          /**< \brief [16:16] Recovery Timer 0 Status - RTS0 (rw0ch) */
    __IO Ifx_Strict_32Bit RTME0:1;         /**< \brief [17:17] Recovery Timer 0 Missed Event - RTME0 (rw0ch) */
    __IO Ifx_Strict_32Bit RTS1:1;          /**< \brief [18:18] Recovery Timer 1 Status - RTS1 (rw0ch) */
    __IO Ifx_Strict_32Bit RTME1:1;         /**< \brief [19:19] Recovery Timer 1 Missed Event - RTME1 (rw0ch) */
    __I  Ifx_Strict_32Bit :12;             /**< \brief [31:20] \internal Reserved */
} Ifx_SMU_SAFE_STS_Bits;

/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_smu_Registers_union
 * \{   */
/** \brief PRS access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_ACCEN_PRS_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_ACCEN_PRS;

/** \brief Read access enable register A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_ACCEN_RDA_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_ACCEN_RDA;

/** \brief Read access enable register B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_ACCEN_RDB_FPI_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_ACCEN_RDB_FPI;

/** \brief VM access enable register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_ACCEN_VM_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_ACCEN_VM;

/** \brief Write access enable register A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_ACCEN_WRA_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_ACCEN_WRA;

/** \brief Write access enable register B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_ACCEN_WRB_FPI_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_ACCEN_WRB_FPI;

/** \brief SMU_CS Alarm Executed Status Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AEX_Bits B;                 /**< \brief Bitfield access */
} Ifx_SMU_CS_AEX;

/** \brief SMU_CS Alarm Executed Status Clear Register   */
typedef union
{
    __O  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __O  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AEXCLR_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_CS_AEXCLR;

/** \brief SMU_CS Alarm and Fault Counter   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AFCNT_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_CS_AFCNT;

/** \brief SMU_CS Critical Alarm Selection Flag   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGCS_CAS_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGCS_CAS;

/** \brief SMU_CS Alarm Configuration Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGCS_CON_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGCS_CON;

/** \brief SMU_CS Alarm Debug Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGCS_DBG_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGCS_DBG;

/** \brief SMU_CS Alarm Status Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGCS_STS_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGCS_STS;

/** \brief SMU_CS Critical Shared Alarm Selection Flag   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGSH_CAS_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGSH_CAS;

/** \brief SMU_CS Shared Alarm Configuration Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGSH_CON_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGSH_CON;

/** \brief SMU_CS Shared Alarm Debug Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGSH_DBG_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGSH_DBG;

/** \brief SMU_CS Shared Alarm Group Selection Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGSH_SEL_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGSH_SEL;

/** \brief SMU_CS Shared Alarm Group Selection Status   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGSH_SS_Bits B;             /**< \brief Bitfield access */
} Ifx_SMU_CS_AGSH_SS;

/** \brief SMU_CS Shared Alarm Status Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_AGSH_STS_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_CS_AGSH_STS;

/** \brief Alarm Signal Test Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_ALMTST_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_CS_ALMTST;

/** \brief SMU_CS Command Register   */
typedef union
{
    __O  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __O  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_CMD_Bits B;                 /**< \brief Bitfield access */
} Ifx_SMU_CS_CMD;

/** \brief SMU_CS Debug Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_DBG_Bits B;                 /**< \brief Bitfield access */
} Ifx_SMU_CS_DBG;

/** \brief SMU_CS Key Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_KEYS_Bits B;                /**< \brief Bitfield access */
} Ifx_SMU_CS_KEYS;

/** \brief CS_RESET Request Triggering Alarm Information Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_RST_Bits B;                 /**< \brief Bitfield access */
} Ifx_SMU_CS_RST;

/** \brief SMU_CS Recovery Timer 0 Alarm Configuration A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_RT0ACA_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_CS_RT0ACA;

/** \brief SMU_CS Recovery Timer 0 Alarm Configuration B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_RT0ACB_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_CS_RT0ACB;

/** \brief SMU_CS Recovery Timer Configuration   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_RTC_Bits B;                 /**< \brief Bitfield access */
} Ifx_SMU_CS_RTC;

/** \brief SMU_CS Status Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_CS_STS_Bits B;                 /**< \brief Bitfield access */
} Ifx_SMU_CS_STS;

/** \brief SMU_GCC Shared Alarm Group Selection Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_AGSH_SEL_Bits B;           /**< \brief Bitfield access */
} Ifx_SMU_GCC_AGSH_SEL;

/** \brief SMU_GCC Shared Alarm Group Selection Status   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_AGSH_SS_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_GCC_AGSH_SS;

/** \brief Alarm Signal Test Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_ALMTST_Bits B;             /**< \brief Bitfield access */
} Ifx_SMU_GCC_ALMTST;

/** \brief Emergency Stop Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_EMSR_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_GCC_EMSR;

/** \brief Emergency Stop Software set and clear register   */
typedef union
{
    __O  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __O  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_EMSSW_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_GCC_EMSSW;

/** \brief SMU_GCC Key Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_KEYS_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_GCC_KEYS;

/** \brief Register Monitor Control   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_RM_CTL_Bits B;             /**< \brief Bitfield access */
} Ifx_SMU_GCC_RM_CTL;

/** \brief Register Monitor Error Flags   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_RM_EF_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_GCC_RM_EF;

/** \brief Register Monitor Self Test Status   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_GCC_RM_STS_Bits B;             /**< \brief Bitfield access */
} Ifx_SMU_GCC_RM_STS;

/** \brief Module Identification Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_ID_Bits B;                     /**< \brief Bitfield access */
} Ifx_SMU_ID;

/** \brief OCDS Control and Status   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_OCS_Bits B;                    /**< \brief Bitfield access */
} Ifx_SMU_OCS;

/** \brief Resource Protection Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_PROT_Bits B;                   /**< \brief Bitfield access */
} Ifx_SMU_PROT;

/** \brief SMU_SAFE Alarm Executed Status Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AEX_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AEX;

/** \brief SMU_SAFE Alarm Executed Status Clear Register   */
typedef union
{
    __O  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __O  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AEXCLR_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AEXCLR;

/** \brief SMU_SAFE Alarm and Fault Counter   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AFCNT_Bits B;             /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AFCNT;

/** \brief SMU_SAFE Alarm Global Configuration   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGC_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGC;

/** \brief SMU_SAFE Critical Alarm Selection Flag   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSF_CAS_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSF_CAS;

/** \brief SMU_SAFE Alarm Configuration Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSF_CON_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSF_CON;

/** \brief SMU_SAFE Alarm Debug Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSF_DBG_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSF_DBG;

/** \brief FSP Alarm Configuration Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSF_FSP_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSF_FSP;

/** \brief SMU_SAFE Alarm Status Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSF_STS_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSF_STS;

/** \brief SMU_SAFE Critical Shared Alarm Selection Flag   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSH_CAS_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSH_CAS;

/** \brief SMU_SAFE Shared Alarm Configuration Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSH_CON_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSH_CON;

/** \brief SMU_SAFE Shared Alarm Debug Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSH_DBG_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSH_DBG;

/** \brief FSP Shared Alarm Configuration Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSH_FSP_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSH_FSP;

/** \brief SMU_SAFE Shared Alarm Group Selection Status   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSH_SS_Bits B;           /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSH_SS;

/** \brief SMU_SAFE Shared Alarm Status Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_AGSH_STS_Bits B;          /**< \brief Bitfield access */
} Ifx_SMU_SAFE_AGSH_STS;

/** \brief SMU_SAFE Command Register   */
typedef union
{
    __O  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __O  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_CMD_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_CMD;

/** \brief SMU_SAFE Debug Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_DBG_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_DBG;

/** \brief SMU_SAFE Fault Signaling Protocol Driver Timing Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_FSP_CON_Bits B;           /**< \brief Bitfield access */
} Ifx_SMU_SAFE_FSP_CON;

/** \brief SMU_SAFE Key Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_KEYS_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_SAFE_KEYS;

/** \brief SMU_SAFE Port Control   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_PCTL_Bits B;              /**< \brief Bitfield access */
} Ifx_SMU_SAFE_PCTL;

/** \brief SMU_SAFE Port Emergency Stop Enable Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_PES_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_PES;

/** \brief SMU_SAFE RESET0/1 Request Triggering Alarm Information Register   */
typedef union
{
    __I  Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __I  Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_RST_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_RST;

/** \brief SMU_SAFE Recovery Timer 0 Alarm Configuration A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_RT0ACA_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_SAFE_RT0ACA;

/** \brief SMU_SAFE Recovery Timer 0 Alarm Configuration B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_RT0ACB_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_SAFE_RT0ACB;

/** \brief SMU_SAFE Recovery Timer 1 Alarm Configuration A   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_RT1ACA_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_SAFE_RT1ACA;

/** \brief SMU_SAFE Recovery Timer 1 Alarm Configuration B   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_RT1ACB_Bits B;            /**< \brief Bitfield access */
} Ifx_SMU_SAFE_RT1ACB;

/** \brief SMU_SAFE Recovery Timer Configuration   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_RTC_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_RTC;

/** \brief SMU_SAFE Status Register   */
typedef union
{
    __IO Ifx_UReg_32Bit U;                 /**< \brief Unsigned access */
    __IO Ifx_SReg_32Bit I;                 /**< \brief Signed access */
    Ifx_SMU_SAFE_STS_Bits B;               /**< \brief Bitfield access */
} Ifx_SMU_SAFE_STS;

/** \}  */

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_GCC_RM_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief RM object */
typedef volatile struct _Ifx_SMU_GCC_RM
{
       __IO Ifx_SMU_GCC_RM_CTL                  CTL;                    /**< \brief 0, Register Monitor Control*/
       __IO Ifx_SMU_GCC_RM_EF                   EF;                     /**< \brief 4, Register Monitor Error Flags*/
       __IO Ifx_SMU_GCC_RM_STS                  STS;                    /**< \brief 8, Register Monitor Self Test Status*/
} Ifx_SMU_GCC_RM;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_GCC_AGSH_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief AGSH object */
typedef volatile struct _Ifx_SMU_GCC_AGSH
{
       __IO Ifx_SMU_GCC_AGSH_SEL                SEL;                    /**< \brief 0, SMU_GCC Shared Alarm Group Selection Register*/
       __I  Ifx_SMU_GCC_AGSH_SS                 SS;                     /**< \brief 4, SMU_GCC Shared Alarm Group Selection Status*/
} Ifx_SMU_GCC_AGSH;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_GCC_ACCEN_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief ACCEN object */
typedef volatile struct _Ifx_SMU_GCC_ACCEN
{
       __IO Ifx_SMU_ACCEN_WRA                   WRA;                    /**< \brief 0, SMU_GCC Write access enable register A*/
       __IO Ifx_SMU_ACCEN_WRB_FPI               WRB;                    /**< \brief 4, SMU_GCC Write access enable register B*/
       __IO Ifx_SMU_ACCEN_RDA                   RDA;                    /**< \brief 8, SMU_GCC Read access enable register A*/
       __IO Ifx_SMU_ACCEN_RDB_FPI               RDB;                    /**< \brief C, SMU_GCC Read access enable register B*/
       __IO Ifx_SMU_ACCEN_VM                    VM;                     /**< \brief 10, SMU_GCC VM access enable register*/
       __IO Ifx_SMU_ACCEN_PRS                   PRS;                    /**< \brief 14, SMU_GCC PRS access enable register*/
       __I  Ifx_UReg_8Bit                       reserved_18[8];         /**< \brief 18, \internal Reserved */
} Ifx_SMU_GCC_ACCEN;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_GCC_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief GCC object */
typedef volatile struct _Ifx_SMU_GCC
{
       __IO Ifx_SMU_GCC_KEYS                    KEYS;                   /**< \brief 0, SMU_GCC Key Register*/
       __IO Ifx_SMU_GCC_EMSR                    EMSR;                   /**< \brief 4, Emergency Stop Register*/
       __O  Ifx_SMU_GCC_EMSSW                   EMSSW;                  /**< \brief 8, Emergency Stop Software set and clear register*/
       __IO Ifx_SMU_GCC_RM                      RM[2];                  /**< \brief C, */
       __I  Ifx_UReg_8Bit                       reserved_24[40];        /**< \brief 24, \internal Reserved */
       __IO Ifx_SMU_GCC_ALMTST                  ALMTST;                 /**< \brief 4C, Alarm Signal Test Register*/
       __IO Ifx_SMU_GCC_AGSH                    AGSH[3];                /**< \brief 50, */
       __I  Ifx_UReg_8Bit                       reserved_68[4];         /**< \brief 68, \internal Reserved */
       __IO Ifx_SMU_PROT                        PROTGE;                 /**< \brief 6C, SMU_GCC PROT Register Endinit*/
       __IO Ifx_SMU_PROT                        PROTGSE;                /**< \brief 70, SMU_GCC PROT Register Safe Endinit*/
       __IO Ifx_SMU_GCC_ACCEN                   ACCEN;                  /**< \brief 74, */
} Ifx_SMU_GCC;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_CS_AGCS_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief AGCS object */
typedef volatile struct _Ifx_SMU_CS_AGCS
{
       __IO Ifx_SMU_CS_AGCS_CON                 CON[3];                 /**< \brief 0, SMU_CS Alarm Configuration Register*/
       __IO Ifx_SMU_CS_AGCS_STS                 STS;                    /**< \brief C, SMU_CS Alarm Status Register*/
       __I  Ifx_SMU_CS_AGCS_DBG                 DBG;                    /**< \brief 10, SMU_CS Alarm Debug Register*/
       __IO Ifx_SMU_CS_AGCS_CAS                 CAS;                    /**< \brief 14, SMU_CS Critical Alarm Selection Flag*/
} Ifx_SMU_CS_AGCS;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_CS_AGSH_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief AGSH object */
typedef volatile struct _Ifx_SMU_CS_AGSH
{
       __IO Ifx_SMU_CS_AGSH_CON                 CON[3];                 /**< \brief 0, SMU_CS Shared Alarm Configuration Register*/
       __IO Ifx_SMU_CS_AGSH_STS                 STS;                    /**< \brief C, SMU_CS Shared Alarm Status Register*/
       __I  Ifx_SMU_CS_AGSH_DBG                 DBG;                    /**< \brief 10, SMU_CS Shared Alarm Debug Register*/
       __IO Ifx_SMU_CS_AGSH_CAS                 CAS;                    /**< \brief 14, SMU_CS Critical Shared Alarm Selection Flag*/
       __IO Ifx_SMU_CS_AGSH_SEL                 SEL;                    /**< \brief 18, SMU_CS Shared Alarm Group Selection Register*/
       __I  Ifx_SMU_CS_AGSH_SS                  SS;                     /**< \brief 1C, SMU_CS Shared Alarm Group Selection Status*/
} Ifx_SMU_CS_AGSH;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_CS_ACCEN_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief ACCEN object */
typedef volatile struct _Ifx_SMU_CS_ACCEN
{
       __IO Ifx_SMU_ACCEN_WRA                   WRA;                    /**< \brief 0, SMU_CS Write access enable register A*/
       __IO Ifx_SMU_ACCEN_WRB_FPI               WRB;                    /**< \brief 4, SMU_CS Write access enable register B*/
       __IO Ifx_SMU_ACCEN_RDA                   RDA;                    /**< \brief 8, SMU_CS Read access enable register A*/
       __IO Ifx_SMU_ACCEN_RDB_FPI               RDB;                    /**< \brief C, SMU_CS Read access enable register B*/
       __IO Ifx_SMU_ACCEN_VM                    VM;                     /**< \brief 10, SMU_CS VM access enable register*/
       __IO Ifx_SMU_ACCEN_PRS                   PRS;                    /**< \brief 14, SMU_CS PRS access enable register*/
       __I  Ifx_UReg_8Bit                       reserved_18[8];         /**< \brief 18, \internal Reserved */
} Ifx_SMU_CS_ACCEN;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_CS_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief CS object */
typedef volatile struct _Ifx_SMU_CS
{
       __O  Ifx_SMU_CS_CMD                      CMD;                    /**< \brief 0, SMU_CS Command Register*/
       __IO Ifx_SMU_CS_STS                      STS;                    /**< \brief 4, SMU_CS Status Register*/
       __IO Ifx_SMU_CS_RTC                      RTC;                    /**< \brief 8, SMU_CS Recovery Timer Configuration*/
       __IO Ifx_SMU_CS_KEYS                     KEYS;                   /**< \brief C, SMU_CS Key Register*/
       __I  Ifx_SMU_CS_DBG                      DBG;                    /**< \brief 10, SMU_CS Debug Register*/
       __I  Ifx_SMU_CS_AFCNT                    AFCNT;                  /**< \brief 14, SMU_CS Alarm and Fault Counter*/
       __IO Ifx_SMU_CS_RT0ACA                   RT0ACA;                 /**< \brief 18, SMU_CS Recovery Timer 0 Alarm Configuration A*/
       __IO Ifx_SMU_CS_RT0ACB                   RT0ACB;                 /**< \brief 1C, SMU_CS Recovery Timer 0 Alarm Configuration B*/
       __I  Ifx_SMU_CS_AEX                      AEX;                    /**< \brief 20, SMU_CS Alarm Executed Status Register*/
       __O  Ifx_SMU_CS_AEXCLR                   AEXCLR;                 /**< \brief 24, SMU_CS Alarm Executed Status Clear Register*/
       __I  Ifx_SMU_CS_RST                      RST;                    /**< \brief 28, CS_RESET Request Triggering Alarm Information Register*/
       __IO Ifx_SMU_CS_AGCS                     AGCS[2];                /**< \brief 2C, */
       __I  Ifx_UReg_8Bit                       reserved_5C[164];       /**< \brief 5C, \internal Reserved */
       __IO Ifx_SMU_CS_AGSH                     AGSH[3];                /**< \brief 100, */
       __I  Ifx_UReg_8Bit                       reserved_160[152];      /**< \brief 160, \internal Reserved */
       __IO Ifx_SMU_CS_ALMTST                   ALMTST;                 /**< \brief 1F8, Alarm Signal Test Register*/
       __IO Ifx_SMU_PROT                        PROTCE;                 /**< \brief 1FC, SMU_CS PROT Register Endinit*/
       __IO Ifx_SMU_PROT                        PROTCSE;                /**< \brief 200, SMU_CS PROT Register Safe Endinit*/
       __IO Ifx_SMU_CS_ACCEN                    ACCEN;                  /**< \brief 204, */
} Ifx_SMU_CS;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_SAFE_FSP_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief FSP object */
typedef volatile struct _Ifx_SMU_SAFE_FSP
{
       __IO Ifx_SMU_SAFE_FSP_CON                CON;                    /**< \brief 0, SMU_SAFE Fault Signaling Protocol Driver Timing Register*/
} Ifx_SMU_SAFE_FSP;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_SAFE_AGSF_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief AGSF object */
typedef volatile struct _Ifx_SMU_SAFE_AGSF
{
       __IO Ifx_SMU_SAFE_AGSF_CON               CON[4];                 /**< \brief 0, SMU_SAFE Alarm Configuration Register*/
       __IO Ifx_SMU_SAFE_AGSF_FSP               FSP[2];                 /**< \brief 10, FSP Alarm Configuration Register*/
       __IO Ifx_SMU_SAFE_AGSF_STS               STS;                    /**< \brief 18, SMU_SAFE Alarm Status Register*/
       __I  Ifx_SMU_SAFE_AGSF_DBG               DBG;                    /**< \brief 1C, SMU_SAFE Alarm Debug Register*/
       __IO Ifx_SMU_SAFE_AGSF_CAS               CAS;                    /**< \brief 20, SMU_SAFE Critical Alarm Selection Flag*/
} Ifx_SMU_SAFE_AGSF;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_SAFE_AGSH_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief AGSH object */
typedef volatile struct _Ifx_SMU_SAFE_AGSH
{
       __IO Ifx_SMU_SAFE_AGSH_CON               CON[4];                 /**< \brief 0, SMU_SAFE Shared Alarm Configuration Register*/
       __IO Ifx_SMU_SAFE_AGSH_FSP               FSP[2];                 /**< \brief 10, FSP Shared Alarm Configuration Register*/
       __IO Ifx_SMU_SAFE_AGSH_STS               STS;                    /**< \brief 18, SMU_SAFE Shared Alarm Status Register*/
       __I  Ifx_SMU_SAFE_AGSH_DBG               DBG;                    /**< \brief 1C, SMU_SAFE Shared Alarm Debug Register*/
       __IO Ifx_SMU_SAFE_AGSH_CAS               CAS;                    /**< \brief 20, SMU_SAFE Critical Shared Alarm Selection Flag*/
       __I  Ifx_SMU_SAFE_AGSH_SS                SS;                     /**< \brief 24, SMU_SAFE Shared Alarm Group Selection Status*/
} Ifx_SMU_SAFE_AGSH;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_SAFE_ACCEN_struct
 * \{  */
/******************************************************************************/
/** \name Object L2
 * \{  */
/** \brief ACCEN object */
typedef volatile struct _Ifx_SMU_SAFE_ACCEN
{
       __IO Ifx_SMU_ACCEN_WRA                   WRA;                    /**< \brief 0, SMU_SAFE Write access enable register A*/
       __IO Ifx_SMU_ACCEN_WRB_FPI               WRB;                    /**< \brief 4, SMU_SAFE Write access enable register B*/
       __IO Ifx_SMU_ACCEN_RDA                   RDA;                    /**< \brief 8, SMU_SAFE Read access enable register A*/
       __IO Ifx_SMU_ACCEN_RDB_FPI               RDB;                    /**< \brief C, SMU_SAFE Read access enable register B*/
       __IO Ifx_SMU_ACCEN_VM                    VM;                     /**< \brief 10, SMU_SAFE VM access enable register*/
       __IO Ifx_SMU_ACCEN_PRS                   PRS;                    /**< \brief 14, SMU_SAFE PRS access enable register*/
       __I  Ifx_UReg_8Bit                       reserved_18[8];         /**< \brief 18, \internal Reserved */
} Ifx_SMU_SAFE_ACCEN;

/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxSfr_Smu_SAFE_struct
 * \{  */
/******************************************************************************/
/** \name Object L1
 * \{  */
/** \brief SAFE object */
typedef volatile struct _Ifx_SMU_SAFE
{
       __O  Ifx_SMU_SAFE_CMD                    CMD;                    /**< \brief 0, SMU_SAFE Command Register*/
       __IO Ifx_SMU_SAFE_STS                    STS;                    /**< \brief 4, SMU_SAFE Status Register*/
       __IO Ifx_SMU_SAFE_FSP                    FSP[2];                 /**< \brief 8, */
       __IO Ifx_SMU_SAFE_PES                    PES;                    /**< \brief 10, SMU_SAFE Port Emergency Stop Enable Register*/
       __IO Ifx_SMU_SAFE_AGC                    AGC;                    /**< \brief 14, SMU_SAFE Alarm Global Configuration*/
       __IO Ifx_SMU_SAFE_RTC                    RTC;                    /**< \brief 18, SMU_SAFE Recovery Timer Configuration*/
       __IO Ifx_SMU_SAFE_KEYS                   KEYS;                   /**< \brief 1C, SMU_SAFE Key Register*/
       __I  Ifx_SMU_SAFE_DBG                    DBG;                    /**< \brief 20, SMU_SAFE Debug Register*/
       __IO Ifx_SMU_SAFE_PCTL                   PCTL;                   /**< \brief 24, SMU_SAFE Port Control*/
       __I  Ifx_SMU_SAFE_AFCNT                  AFCNT;                  /**< \brief 28, SMU_SAFE Alarm and Fault Counter*/
       __I  Ifx_UReg_8Bit                       reserved_2C[4];         /**< \brief 2C, \internal Reserved */
       __IO Ifx_SMU_SAFE_RT0ACA                 RT0ACA;                 /**< \brief 30, SMU_SAFE Recovery Timer 0 Alarm Configuration A*/
       __IO Ifx_SMU_SAFE_RT0ACB                 RT0ACB;                 /**< \brief 34, SMU_SAFE Recovery Timer 0 Alarm Configuration B*/
       __IO Ifx_SMU_SAFE_RT1ACA                 RT1ACA;                 /**< \brief 38, SMU_SAFE Recovery Timer 1 Alarm Configuration A*/
       __IO Ifx_SMU_SAFE_RT1ACB                 RT1ACB;                 /**< \brief 3C, SMU_SAFE Recovery Timer 1 Alarm Configuration B*/
       __I  Ifx_UReg_8Bit                       reserved_40[16];        /**< \brief 40, \internal Reserved */
       __I  Ifx_SMU_SAFE_AEX                    AEX;                    /**< \brief 50, SMU_SAFE Alarm Executed Status Register*/
       __O  Ifx_SMU_SAFE_AEXCLR                 AEXCLR;                 /**< \brief 54, SMU_SAFE Alarm Executed Status Clear Register*/
       __I  Ifx_SMU_SAFE_RST                    RST;                    /**< \brief 58, SMU_SAFE RESET0/1 Request Triggering Alarm Information Register*/
       __I  Ifx_UReg_8Bit                       reserved_5C[36];        /**< \brief 5C, \internal Reserved */
       __IO Ifx_SMU_SAFE_AGSF                   AGSF[17];               /**< \brief 80, */
       __I  Ifx_UReg_8Bit                       reserved_2E4[28];       /**< \brief 2E4, \internal Reserved */
       __IO Ifx_SMU_SAFE_AGSH                   AGSH[3];                /**< \brief 300, */
       __I  Ifx_UReg_8Bit                       reserved_378[132];      /**< \brief 378, \internal Reserved */
       __IO Ifx_SMU_PROT                        PROTSE;                 /**< \brief 3FC, SMU_SAFE PROT Register Endinit*/
       __IO Ifx_SMU_PROT                        PROTSSE;                /**< \brief 400, SMU_SAFE PROT Register Safe Endinit*/
       __IO Ifx_SMU_SAFE_ACCEN                  ACCEN;                  /**< \brief 404, */
       __I  Ifx_UReg_8Bit                       reserved_424[220];      /**< \brief 424, \internal Reserved */
} Ifx_SMU_SAFE;

/******************************************************************************/
/** \addtogroup IfxSfr_Smu_Registers_struct
 * \{  */
/******************************************************************************/
/** \name Object L0
 * \{  */

/** \brief SMU object */
typedef volatile struct _Ifx_SMU
{
       __I  Ifx_UReg_8Bit                       reserved_0[4];          /**< \brief 0, \internal Reserved */
       __IO Ifx_SMU_OCS                         OCS;                    /**< \brief 4, OCDS Control and Status*/
       __I  Ifx_SMU_ID                          ID;                     /**< \brief 8, Module Identification Register*/
       __IO Ifx_SMU_GCC                         GCC;                    /**< \brief C, */
       __I  Ifx_UReg_8Bit                       reserved_A0[352];       /**< \brief A0, \internal Reserved */
       __IO Ifx_SMU_CS                          CS;                     /**< \brief 200, */
       __I  Ifx_UReg_8Bit                       reserved_424[3036];     /**< \brief 424, \internal Reserved */
       __IO Ifx_SMU_SAFE                        SAFE[2];                /**< \brief 1000, */
       __I  Ifx_UReg_8Bit                       reserved_1A00[1536];    /**< \brief 1A00, \internal Reserved */
} Ifx_SMU;

/** \}  */
/******************************************************************************/
/** \}  */


/******************************************************************************/

/******************************************************************************/

#endif /* IFXSMU_REGDEF_H */
