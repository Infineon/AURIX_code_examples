/**********************************************************************************************************************
 * \file scr_scu_sdcc.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef SCR_SCU_SDCC_H_
#define SCR_SCU_SDCC_H_ 1

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "scr_generic_defs.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define SCR_SET_SCU_PAGE(p)         SCR_SCU_PAGE = ((uint8)(p & MOD_PAGE_MASK))

#define SCR_SET_SCU_PAGE_STNR0(p)   SCR_SCU_PAGE = ((uint8)(MOD_OP_SAVE | MOD_STNR_0 | (p & MOD_PAGE_MASK)))
#define SCR_SET_SCU_PAGE_STNR1(p)   SCR_SCU_PAGE = ((uint8)(MOD_OP_SAVE | MOD_STNR_1 | (p & MOD_PAGE_MASK)))
#define SCR_SET_SCU_PAGE_STNR2(p)   SCR_SCU_PAGE = ((uint8)(MOD_OP_SAVE | MOD_STNR_2 | (p & MOD_PAGE_MASK)))
#define SCR_SET_SCU_PAGE_STNR3(p)   SCR_SCU_PAGE = ((uint8)(MOD_OP_SAVE | MOD_STNR_3 | (p & MOD_PAGE_MASK)))

#define SCR_RESTORE_SCU_PAGE_STNR0()    SCR_SCU_PAGE = ((uint8)(MOD_OP_RESTORE | MOD_STNR_0))
#define SCR_RESTORE_SCU_PAGE_STNR1()    SCR_SCU_PAGE = ((uint8)(MOD_OP_RESTORE | MOD_STNR_1))
#define SCR_RESTORE_SCU_PAGE_STNR2()    SCR_SCU_PAGE = ((uint8)(MOD_OP_RESTORE | MOD_STNR_2))
#define SCR_RESTORE_SCU_PAGE_STNR3()    SCR_SCU_PAGE = ((uint8)(MOD_OP_RESTORE | MOD_STNR_3))

#define DIV_MASK                            (0x0F)
#define OSCWAKE_MASK                        (0x10)
#define OSCPD_MASK                          (0x20)

#define WDTSUSP_MASK                        (0x01)
#define RTCSUSP_MASK                        (0x02)
#define T2SUSP_MASK                         (0x04)
#define CCTSUSP_MASK                        (0x08)

#define ECCRST_MASK                         (0x01)
#define WDTRST_MASK                         (0x02)
#define SOFTRST_MASK                        (0x04)

#define SMURST_MASK                         (0x01)
#define RST_MASK                            (0x02)

#define ECCRSTEN_MASK                       (0x01)
#define WDTRSTEN_MASK                       (0x02)
#define SWRQ_MASK                           (0x80)

#define SCRWKP_MASK                         (0x01)
#define RTCWKSEL_MASK                       (0x02)
#define WCANWKSEL_MASK                      (0x04)
#define WDTWKSEL_MASK                       (0x08)
#define ECCWKSEL_MASK                       (0x10)

#define STBY_MASK                           (0x08)

#define SSC_DIS_MASK                        (0x01)
#define T2CCU_DIS_MASK                      (0x02)
#define RTC_DIS_MASK                        (0x04)
#define WCAN_DIS_MASK                       (0x08)
#define WDT_DIS_MASK                        (0x10)
#define LIN_DIS_MASK                        (0x20)
#define OCDS_DIS_MASK                       (0x40)

/*********************************************************************************************************************/
/*--------------------------------------------Page Register for SCU SFRs--------------------------------------------*/
/*********************************************************************************************************************/
__sfr __at(ADDR_SCR_SCU_PAGE)               SCR_SCU_PAGE;

/*********************************************************************************************************************/
/*---------------------------------------------------SCU Registers---------------------------------------------------*/
/*********************************************************************************************************************/
__sfr __at(ADDR_SCR_SCU_CMCON)              SCR_SCU_CMCON;
__sfr __at(ADDR_SCR_SCU_DBG_MODSUSP)        SCR_SCU_DBG_MODSUSP;
__sfr __at(ADDR_SCR_SCU_RSTST)              SCR_SCU_RSTST;
__sfr __at(ADDR_SCR_SCU_MRSTST)             SCR_SCU_MRSTST;             /* bit-addressable SFR */
__sbit __at(ADDR_SCR_SCU_MRSTST+0)          SCR_SCU_MRSTST_SMURST;      /* SMU Reset Status Bit */
__sbit __at(ADDR_SCR_SCU_MRSTST+1)          SCR_SCU_MRSTST_RST;         /* Application Reset Status Bit */
__sfr __at(ADDR_SCR_SCU_RSTCON)             SCR_SCU_RSTCON;
__sfr __at(ADDR_SCR_SCU_STDBYWKP)           SCR_SCU_STDBYWKP;
__sfr __at(ADDR_SCR_SCU_SR)                 SCR_SCU_SR;
__sfr __at(ADDR_SCR_SCU_PMCON1)             SCR_SCU_PMCON1;

/*********************************************************************************************************************/
/*--------------------------------------------------Data Structures--------------------------------------------------*/
/*********************************************************************************************************************/

/** \addtogroup Scr_SCU_Registers_Bitfields
 * \{  */

/** \brief Page Register for SFRs */
typedef struct
{
    Scr_UReg_8Bit PAGE:3;           /**< \brief [2:0] Page Bits (rw) */
    Scr_UReg_8Bit reserved_0:1;     /**< \brief [3:3] \internal Reserved */
    Scr_UReg_8Bit STNR:2;           /**< \brief [5:4] Storage Number (w) */
    Scr_UReg_8Bit OP:2;             /**< \brief [7:6] Operation (w) */
} Scr_SCU_PAGE_Bits;

/** \brief Clock Control Register */
typedef struct
{
    Scr_UReg_8Bit DIV:4;            /**< \brief [3:0] Clock Divider (rw) */
    Scr_UReg_8Bit OSCWAKE:1;        /**< \brief [4:4] Oscillator Wake-Up (rw) */
    Scr_UReg_8Bit OSCPD:1;          /**< \brief [5:5] 100 MHz Oscillator Power Down Control in Standby Mode (rw) */
    Scr_UReg_8Bit reserved_0:2;     /**< \brief [7:6] \internal Reserved */
} Scr_SCU_CMCON_Bits;

/** \brief Module Suspend Control Register */
typedef struct
{
    Scr_UReg_8Bit WDTSUSP:1;        /**< \brief [0:0] SCU Watchdog Timer Debug Suspend Bit (rw) */
    Scr_UReg_8Bit RTCSUSP:1;        /**< \brief [1:1] Real-Time Clock Debug Suspend Bit (rw) */
    Scr_UReg_8Bit T2SUSP:1;         /**< \brief [2:2] Timer 2 Debug Suspend Bit (rw) */
    Scr_UReg_8Bit CCTSUSP:1;        /**< \brief [3:3] Compare/Capture Timer (CCT) Debug Suspend Bit (rw) */
    Scr_UReg_8Bit reserved_0:4;     /**< \brief [7:4] \internal Reserved */
} Scr_SCU_DBG_MODSUSP_Bits;

/** \brief SCR Reset Status Register */
typedef struct
{
    Scr_UReg_8Bit ECCRST:1;         /**< \brief [0:0] Double Bit ECC Reset Indication Bit (rwh) */
    Scr_UReg_8Bit WDTRST:1;         /**< \brief [1:1] Watchdog Timer Reset Indication Bit (rwh) */
    Scr_UReg_8Bit SOFTRST:1;        /**< \brief [2:2] Soft Reset Indication Bit (rwh) */
    Scr_UReg_8Bit reserved_0:5;     /**< \brief [7:3] \internal Reserved */
} Scr_SCU_RSTST_Bits;

/** \brief Main Reset Status Register */
typedef struct
{
    Scr_UReg_8Bit SMURST:1;         /**< \brief [0:0] SMU Reset Status Bit (rwh) */
    Scr_UReg_8Bit RST:1;            /**< \brief [1:1] Application Reset Status Bit (rwh) */
    Scr_UReg_8Bit reserved_0:6;     /**< \brief [7:2] \internal Reserved */
} Scr_SCU_MRSTST_Bits;

/** \brief Reset Control Register */
typedef struct
{
    Scr_UReg_8Bit ECCRSTEN:1;       /**< \brief [0:0] Double Bit ECC Reset Enable Bit (rw) */
    Scr_UReg_8Bit WDTRSTEN:1;       /**< \brief [1:1] Watchdog Reset Enable Bit (rw) */
    Scr_UReg_8Bit reserved_0:5;     /**< \brief [6:2] \internal Reserved */
    Scr_UReg_8Bit SWRQ:1;           /**< \brief [7:7] Soft Reset Request (rwh) */
} Scr_SCU_RSTCON_Bits;

/** \brief Standby Mode Wake-Up Register */
typedef struct
{
    Scr_UReg_8Bit SCRWKP:1;         /**< \brief [0:0] Software Wake-Up from Standby Mode (rwh) */
    Scr_UReg_8Bit RTCWKSEL:1;       /**< \brief [1:1] RTC Wake-Up Select from Standby Mode (rw) */
    Scr_UReg_8Bit WCANWKSEL:1;      /**< \brief [2:2] WCAN Interrupt Wake-Up Select from Standby Mode (rw) */
    Scr_UReg_8Bit WDTWKSEL:1;       /**< \brief [3:3] WDT Wake-Up Select from Standby Mode (rw) */
    Scr_UReg_8Bit ECCWKSEL:1;       /**< \brief [4:4] RAM ECC Wake-Up Select from Standby Mode (rw) */
    Scr_UReg_8Bit reserved_0:3;     /**< \brief [7:5] \internal Reserved */
} Scr_SCU_STDBYWKP_Bits;

/** \brief SCU Status Register */
typedef struct
{
    Scr_UReg_8Bit reserved_0:3;     /**< \brief [3:0] \internal Reserved */
    Scr_UReg_8Bit STBY:1;           /**< \brief [4:4] Standby Mode Status (rh) */
    Scr_UReg_8Bit reserved_1:4;     /**< \brief [7:5] \internal Reserved */
} Scr_SCU_SR_Bits;

/** \brief Peripheral Management Control Register 1 */
typedef struct
{
    Scr_UReg_8Bit SSC_DIS:1;        /**< \brief [0:0] SSC Disable Request (active high) (rw) */
    Scr_UReg_8Bit T2CCU_DIS:1;      /**< \brief [1:1] T2CCU Disable Request (active high) (rw) */
    Scr_UReg_8Bit RTC_DIS:1;        /**< \brief [2:2] RTC Disable Request (active high) (rw) */
    Scr_UReg_8Bit WCAN_DIS:1;       /**< \brief [3:3] WCAN Disable Request (active high) (rw) */
    Scr_UReg_8Bit WDT_DIS:1;        /**< \brief [4:4] Watchdog Disable Request (active high) (rw) */
    Scr_UReg_8Bit LIN_DIS:1;        /**< \brief [5:5] LIN Disable Request (active high) (rw) */
    Scr_UReg_8Bit OCDS_DIS:1;       /**< \brief [6:6] OCDS Disable Request (active high) (rw) */
    Scr_UReg_8Bit reserved_0:1;     /**< \brief [7:7] \internal Reserved */
} Scr_SCU_PMCON1_Bits;

/** \}  */

/** \addtogroup Scr_SCU_Registers_union
 * \{   */

/** \brief Page Register for SFRs */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_PAGE_Bits B;            /**< \brief Bitfield access */
} Scr_SCU_PAGE;

/** \brief Clock Control Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_CMCON_Bits B;           /**< \brief Bitfield access */
} Scr_SCU_CMCON;

/** \brief Module Suspend Control Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_DBG_MODSUSP_Bits B;     /**< \brief Bitfield access */
} Scr_SCU_DBG_MODSUSP;

/** \brief SCR Reset Status Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_RSTST_Bits B;           /**< \brief Bitfield access */
} Scr_SCU_RSTST;

/** \brief Main Reset Status Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_MRSTST_Bits B;          /**< \brief Bitfield access */
} Scr_SCU_MRSTST;

/** \brief Reset Control Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_RSTCON_Bits B;          /**< \brief Bitfield access */
} Scr_SCU_RSTCON;

/** \brief Standby Mode Wake-Up Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_STDBYWKP_Bits B;        /**< \brief Bitfield access */
} Scr_SCU_STDBYWKP;

/** \brief SCU Status Register */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_SR_Bits B;              /**< \brief Bitfield access */
} Scr_SCU_SR;

/** \brief Peripheral Management Control Register 1 */
typedef union
{
    Scr_UReg_8Bit U;                /**< \brief Unsigned access */
    Scr_SReg_8Bit I;                /**< \brief Signed access */
    Scr_SCU_PMCON1_Bits B;          /**< \brief Bitfield access */
} Scr_SCU_PMCON1;

/** \}  */

/*********************************************************************************************************************/
/*-------------------------------------------------Inline Functions--------------------------------------------------*/
/*********************************************************************************************************************/

#endif /* SCR_SCU_SDCC_H_ */
