/**********************************************************************************************************************
 * \file AppKit_Main.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/


#ifndef APPKIT_MAIN_H_
#define APPKIT_MAIN_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxCpu.h"
#include "IfxScuWdt.h"
#include "AppKit_Cfg.h"

#include "IfxStm.h"
#include "Configuration.h"
#include "ConfigurationIsr.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/


/*********************************************************************************************************************/
/*-------------------------------------------------Type Definitions--------------------------------------------------*/
/*********************************************************************************************************************/
typedef struct
{
    float32 sysFreq;                /**< \brief Actual SPB frequency */
    float32 cpuFreq;                /**< \brief Actual CPU frequency */
    float32 pllFreq;                /**< \brief Actual PLL frequency */
    float32 stmFreq;                /**< \brief Actual STM frequency */
} AppInfo;

/* Application information */
typedef struct
{
    AppInfo info;                   /**< \brief Info object */
    uint32 TickCount_1ms;           /**< \brief TickCount 1ms */
} App_Cpu;

#if RUN_PERF_MEAS
/* Structure for counters for the performance measurement */
typedef struct
{
    uint32 cpu_uiCnt;
    uint32 cpu_ccnt_actual;
    uint32 cpu_ccnt_last;
    uint32 cpu_ccnt_diff;
    uint32 cpu_idle_counter;
    uint32 cpu_ccnt_diff_min;
} CpuCcnt;
#endif /* RUN_PERF_MEAS */

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
#if USE_ETH
IFX_EXTERN volatile uint32 Ethernet_Phy_Id1;
IFX_EXTERN volatile uint32 Ethernet_Phy_Id2;
IFX_EXTERN volatile boolean Phy_IdRed;
#endif /* USE_ETH */
IFX_EXTERN App_Cpu g_AppCpu0;

#if RUN_PERF_MEAS
IFX_EXTERN CpuCcnt cpu0_ccnt;
IFX_EXTERN CpuCcnt cpu1_ccnt;
IFX_EXTERN CpuCcnt cpu2_ccnt;
IFX_EXTERN CpuCcnt cpu3_ccnt;
IFX_EXTERN CpuCcnt cpu4_ccnt;
IFX_EXTERN CpuCcnt cpu5_ccnt;
#endif /* RUN_PERF_MEAS */

#if (IFXCPU_NUM_MODULES > 1)
#if defined(__DCC__)
#pragma section DATA ".data_cpu1" ".bss_cpu1" far-absolute RW
#endif
IFX_EXTERN App_Cpu g_AppCpu1;
#endif

#if (IFXCPU_NUM_MODULES > 2)
#if defined(__DCC__)
#pragma section DATA ".data_cpu2" ".bss_cpu2" far-absolute RW
#endif
IFX_EXTERN App_Cpu g_AppCpu2;
#endif

#if (IFXCPU_NUM_MODULES > 3)
#if defined(__DCC__)
#pragma section DATA ".data_cpu3" ".bss_cpu3" far-absolute RW
#endif
IFX_EXTERN App_Cpu g_AppCpu3;
#endif

#if (IFXCPU_NUM_MODULES > 4)
#if defined(__DCC__)
#pragma section DATA ".data_cpu4" ".bss_cpu4" far-absolute RW
#endif
IFX_EXTERN App_Cpu g_AppCpu4;
#endif

#if (IFXCPU_NUM_MODULES > 5)
#if defined(__DCC__)
#pragma section DATA ".data_cpu5" ".bss_cpu5" far-absolute RW
#endif
IFX_EXTERN App_Cpu g_AppCpu5;
#endif

#if defined(__DCC__)
#pragma section DATA RW
#endif

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void initAppState(App_Cpu *lcl_AppCpu, IfxCpu_ResourceCpu cpuIndex);
void initPins(void);
void initAppKit(IfxCpu_ResourceCpu cpuIndex);
void runAppKitEndlessLoop(IfxCpu_ResourceCpu cpuIndex);
void runAppKitStmIsr(App_Cpu *lcl_AppCpu, IfxCpu_ResourceCpu cpuIndex);


#endif /* APPKIT_MAIN_H_ */
