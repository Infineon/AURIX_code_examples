/**********************************************************************************************************************
 * \file conio_cfg.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef CONIO_CFG_H
#define CONIO_CFG_H

#include "Ifx_Types.h"
#include "IfxCpu.h"
typedef enum
{
    DIALOGOFF=0,                  /*!< \brief No extra dialog open (show menu if display selected) */
    KEYBOARDON,                   /*!< \brief Show keyboard */
    SWITCHOFFON,                  /*!< \brief Show switch off dialog */
    SHOWALARMON,                  /*!< \brief Show alarm (activ) dialog */
    SETTIMEON,                    /*!< \brief Show set time dialog */
    SETALARMTIME,                 /*!< \brief Show set alarm time dialog */
    SLIDESHOW,                    /*!< \brief Show fotos from sdcard, conio off */
    SHOWSMUALARM                  /*!< \brief Show smu alarm pop up window */
} TDIALOGMODE;

typedef struct CONIO_DLG_ENTRY
{
    TDIALOGMODE dialogMode;
    void        (*function) (sint16 x, sint16 y);
} TCONIODLGENTRY, *pTCONIODLGENTRY;

#define CONIO_DLG_ENTRIES 6

extern const TCONIODLGENTRY conio_dialog_list[CONIO_DLG_ENTRIES];

/*!< \enum DisplayModes
 * Define the amount of possible Displays
 * More Displays needs more ram memory
 */
typedef enum
{
    DISPLAYBAR=0,                 //!< DISPLAYBAR is the bottom character line of the TFT, always needed and must be 0
    DISPLAYMENU=1,                //!< DISPLAYMENU is the menu view to make selections and change parameters
    DISPLAYSTDOUT0=2,             //!< DISPLAYSTDOUT0 is a standard text output window
    DISPLAYSTDOUT1=3,             //!< DISPLAYSTDOUT1 is a standard text output window
    DISPLAYGRAPHICS0=4            //!< DISPLAYGRAPHICS0 first graphics window
} TDISPLAYMODE;

/*!< \enum Mode of TFT */
/*!< \brief Define the Mode of the Output Window */
typedef enum
{
    RAWMODE=0,                    //!< Raw Mode
    TEXTMODE=1,                   //!< Text Mode
    GRAPHICMODE_2COLOR=2,         //!< Graphics with 2 Colors
    GRAPHICMODE_4COLOR=3,         //!< Graphics with 4 Colors
    GRAPHICMODE_16COLOR=4,        //!< Graphics with 16 Colors
    GRAPHICMODE_256COLOR=5        //!< Graphics with 256 Colors
} TMODE;                          //!< Mode of TFT

//the general display structure
typedef struct DISPLAY_INFO
{
    uint8 *pdisplay;            //all functions are related to this pointer
    uint8 *pdisplaycolor;       //all functions are related to this pointer
    TMODE mode;                 // 0 is text, 1.. is graphic
    uint8 color;
    sint32 maxx;                //xsize of the display
    sint32 maxy;                //ysize of the display
    sint32 x;                   //needed to remember where we are for text display scroll, remember x=0,y=0 is upper left
    sint32 y;                   //needed to remember where we are for text display scroll, remember x=0,y=0 is upper left
} TDISPLAY_INFO;

#define CONIO_MAXDISPLAYS 5

typedef struct CONIO_DISPLAYMODE_ENTRY
{
    TDISPLAYMODE   displayMode;
    TDISPLAY_INFO  display;
} TCONIODMENTRY, *pTCONIODMENTRY;

#endif /* CONIO_CFG_H */
