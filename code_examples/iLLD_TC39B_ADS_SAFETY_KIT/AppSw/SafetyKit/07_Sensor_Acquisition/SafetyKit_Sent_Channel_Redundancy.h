/**********************************************************************************************************************
 * \file    SafetyKit_Sent_Channel_Redundancy.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 *********************************************************************************************************************/


#ifndef SAFETYKIT_SENT_CHANNEL_REDUNDANCY_H_
#define SAFETYKIT_SENT_CHANNEL_REDUNDANCY_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include "IfxSent_Sent.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*--------------------------------------------------Data Structures--------------------------------------------------*/
/*********************************************************************************************************************/
/* SENT error counter variables */
typedef struct
{
    uint32 RBI;             /* Receive Buffer Overflow */
    uint32 TBI;             /* Transmit Buffer Underflow */
    uint32 FRI;             /* Frequency Range Error */
    uint32 FDI;             /* Frequency Drift Error */
    uint32 NNI;             /* Wrong Number of Nibbles */
    uint32 NVI;             /* Nibbles Value out of Range */
    uint32 CRCI;            /* CRC Error */
    uint32 WSI;             /* Wrong Status and Communication Nibble Error */
    uint32 SCRI;            /* Serial Data CRC Error */
    uint32 WDI;             /* Watch Dog Error */
} ErrorCountersSENT;

/* data nibbles in bit field access */
typedef struct
{
    uint8 nibble0:4;
    uint8 nibble1:4;
    uint8 nibble2:4;
    uint8 nibble3:4;
    uint8 nibble4:4;
    uint8 nibble5:4;
    uint8 nibble6:4;
    uint8 nibble7:4;
} Nibbles;

/* data nibbles */
typedef union
{
    Nibbles B;              /**< \brief Bitfield access */
    uint32 U;                 /**< \brief Unsigned access */
} DataNibble;

/* SENT module data for TLE5012 sensor i.e. dual die */
typedef struct
{
    IfxSent_Sent         sent_module;
    IfxSent_Sent_Channel sentChannel[2];
    volatile uint32      interruptCounter;
    volatile uint32      interruptCounterChannel[2];
    DataNibble           sentRawData[2];
    volatile uint8       sentStatus[2];
    volatile float32     sentAngle[2];
    volatile uint16      sentTempSensorData[2];
    volatile uint8       sentCrcReceived[2];
    volatile uint8       sentCrcCalculated[2];
    volatile uint32      errors;
} AppSENT;

IFX_EXTERN AppSENT g_AppSENT;

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void initTLE5012Modules(void);
void checkRedundancySENT(void);

#endif /* APPSW_SAFETYKIT_07_SENSOR_ACQUISITION_SAFETYKIT_SENT_CHANNEL_REDUNDANCY_H_ */
