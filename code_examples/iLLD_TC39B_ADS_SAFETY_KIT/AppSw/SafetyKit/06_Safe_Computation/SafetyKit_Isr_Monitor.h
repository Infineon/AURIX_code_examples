/**********************************************************************************************************************
 * \file SafetyKit_Isr_Monitor.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/


#ifndef APPSW_SAFETYKIT_06_SAFE_COMPUTATION_SAFETYKIT_ISR_MONITOR_H_
#define APPSW_SAFETYKIT_06_SAFE_COMPUTATION_SAFETYKIT_ISR_MONITOR_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
 /* 16.4.1.3 Protection of the SRC Registers
 * SRC[31:16] is write protected by ACCEN_TOSx (x = SRC.TOS)
 * SRC[15:0 ] is write protected by ACCEN_CONFIG
 * The split of the SRC write protection into different write protection registers for SRC[31:16] and SRC[15:0] allows
 * to define a different protection configuration for the configuration of all the Service Request Nodes (that is
 * normally static during runtime) and the Service Request Nodes control registers that might be used during
 * runtime by the related SW task as part of normal application (e.g. software interrupt).
 */
typedef enum
{
    IfxBus_TagId_dmarp0 = 0,
    IfxBus_TagId_cpu0 = 1,
    IfxBus_TagId_cpu0s = 2,
    IfxBus_TagId_hsm = 3,
    IfxBus_TagId_dmarp1 = 4,
    IfxBus_TagId_cpu1 = 5,
    IfxBus_TagId_cpu1s = 6,
    IfxBus_TagId_sdmmc = 7,
    IfxBus_TagId_dmarp2 = 8,
    IfxBus_TagId_cpu2 = 9,
    IfxBus_TagId_cpu2s = 10,
    IfxBus_TagId_hssl0 = 11,
    IfxBus_TagId_dmarp3 = 12,
    IfxBus_TagId_cpu3 = 13,
    IfxBus_TagId_cpu3s = 14,
    IfxBus_TagId_hssl1 = 15,
    IfxBus_TagId_reserved16,
    IfxBus_TagId_cpu4 = 17,
    IfxBus_TagId_cpu4s = 18,
    IfxBus_TagId_cif1 = 19,
    IfxBus_TagId_reserved20,
    IfxBus_TagId_cpu5 = 21,
    IfxBus_TagId_cpu5s = 22,
    IfxBus_TagId_reserved23,
    IfxBus_TagId_reserved24,
    IfxBus_TagId_reserved25,
    IfxBus_TagId_reserved26,
    IfxBus_TagId_reserved27,
    IfxBus_TagId_cerberus = 28,
    IfxBus_TagId_ioc32p = 29,
    IfxBus_TagId_reserved30 = 30,
    IfxBus_TagId_ioc32e = 31,
    IfxBus_TagId_cpu0pmi = 32,
    IfxBus_TagId_cpu1pmi = 33,
    IfxBus_TagId_cpu2pmi = 34,
    IfxBus_TagId_cpu3pmi = 35,
    IfxBus_TagId_cpu4pmi = 36,
    IfxBus_TagId_cpu5pmi = 37,
    IfxBus_TagId_reserved38,
    IfxBus_TagId_reserved39,
    IfxBus_TagId_gethdma0 = 40,
    IfxBus_TagId_gethdma1 = 41,
    IfxBus_TagId_gethdma2 = 42,
    IfxBus_TagId_gethdma3 = 43,
    IfxBus_TagId_geth1dma0 = 44,
    IfxBus_TagId_geth1dma1 = 45,
    IfxBus_TagId_geth1dma2 = 46,
    IfxBus_TagId_geth1dma3 = 47,
    IfxBus_TagId_dam0 = 48,
    IfxBus_TagId_dam1 = 49,
    IfxBus_TagId_reserved50,
    IfxBus_TagId_reserved51,
    IfxBus_TagId_reserved52,
    IfxBus_TagId_reserved53,
    IfxBus_TagId_reserved54,
    IfxBus_TagId_reserved55,
    IfxBus_TagId_reserved56,
    IfxBus_TagId_reserved57,
    IfxBus_TagId_reserved58,
    IfxBus_TagId_reserved59,
    IfxBus_TagId_reserved60,
    IfxBus_TagId_reserved61,
    IfxBus_TagId_reserved62,
    IfxBus_TagId_reserved63
} IfxBus_TagId;

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-----------------------------------------------Function Prototypes-------------------------------------------------*/
/*********************************************************************************************************************/
void interruptHandlerGtmAtom(void);     /* Interrupt Service Routine of the ATOM */
void initGTMATOM(void);                 /* This function initializes the ATOM    */
void isrMonitor(void);
void initFFIControl(void);
void attemptToWrite(void);

#endif /* APPSW_SAFETYKIT_06_SAFE_COMPUTATION_SAFETYKIT_ISR_MONITOR_H_ */
